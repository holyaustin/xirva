[{"id": "1002.1167", "submitter": "Vishal Goyal", "authors": "A. K. Ojha, A. K. Das", "title": "Geometric Programming Problem with Co-Efficients and Exponents\n  Associated with Binary Numbers", "comments": "International Journal of Computer Science Issues, IJCSI, Vol. 7,\n  Issue 1, No. 2, January 2010,\n  http://ijcsi.org/articles/Geometric-Programming-Problem-with-Co-Efficients-and-Exponents-Associated-with-Binary-Numbers.php", "journal-ref": "International Journal of Computer Science Issues, IJCSI, Vol. 7,\n  Issue 1, No. 2, January 2010,\n  http://ijcsi.org/articles/Geometric-Programming-Problem-with-Co-Efficients-and-Exponents-Associated-with-Binary-Numbers.php", "doi": null, "report-no": null, "categories": "cs.NA", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Geometric programming (GP) provides a power tool for solving a variety of\noptimization problems. In the real world, many applications of geometric\nprogramming (GP) are engineering design problems in which some of the problem\nparameters are estimating of actual values. This paper develops a solution\nprocedure to solve nonlinear programming problems using GP technique by\nsplitting the cost coefficients, constraint coefficients and exponents with the\nhelp of binary numbers. The equivalent mathematical programming problems are\nformulated to find their corresponding value of the objective function based on\nthe duality theorem. The ability of calculating the cost coefficients,\nconstraint coefficients and exponents developed in this paper might help lead\nto more realistic modeling efforts in engineering design areas. Standard\nnonlinear programming software has been used to solve the proposed optimization\nproblem. Two numerical examples are presented to illustrate the method.\n", "versions": [{"version": "v1", "created": "Fri, 5 Feb 2010 09:29:23 GMT"}], "update_date": "2010-02-08", "authors_parsed": [["Ojha", "A. K.", ""], ["Das", "A. K.", ""]]}, {"id": "1002.1422", "submitter": "M. H. van Emden", "authors": "M.H. van Emden", "title": "Integrating Interval Constraints into Logic Programming", "comments": "21 pages, 2 tables, no figures", "journal-ref": null, "doi": null, "report-no": "DCS-133-IR", "categories": "cs.PL cs.LO cs.NA", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The CLP scheme uses Horn clauses and SLD resolution to generate multiple\nconstraint satisfaction problems (CSPs). The possible CSPs include rational\ntrees (giving Prolog) and numerical algorithms for solving linear equations and\nlinear programs (giving CLP(R)). In this paper we develop a form of CSP for\ninterval constraints. In this way one obtains a logic semantics for the\nefficient floating-point hardware that is available on most computers.\n  The need for the method arises because in the practice of scheduling and\nengineering design it is not enough to solve a single CSP. Ideally one should\nbe able to consider thousands of CSPs and efficiently solve them or show them\nto be unsolvable. This is what CLP/NCSP, the new subscheme of CLP described in\nthis paper is designed to do.\n", "versions": [{"version": "v1", "created": "Sun, 7 Feb 2010 00:03:40 GMT"}], "update_date": "2010-02-09", "authors_parsed": [["van Emden", "M. H.", ""]]}, {"id": "1002.2236", "submitter": "Khalil Ghorbal", "authors": "Khalil Ghorbal, Eric Goubault, Sylvie Putot", "title": "A Logical Product Approach to Zonotope Intersection", "comments": null, "journal-ref": null, "doi": "10.1007/978-3-642-14295-6_22", "report-no": null, "categories": "cs.LO cs.NA", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We define and study a new abstract domain which is a fine-grained combination\nof zonotopes with polyhedric domains such as the interval, octagon, linear\ntemplates or polyhedron domain. While abstract transfer functions are still\nrather inexpensive and accurate even for interpreting non-linear computations,\nwe are able to also interpret tests (i.e. intersections) efficiently. This\nfixes a known drawback of zonotopic methods, as used for reachability analysis\nfor hybrid sys- tems as well as for invariant generation in abstract\ninterpretation: intersection of zonotopes are not always zonotopes, and there\nis not even a best zonotopic over-approximation of the intersection. We\ndescribe some examples and an im- plementation of our method in the APRON\nlibrary, and discuss some further in- teresting combinations of zonotopes with\nnon-linear or non-convex domains such as quadratic templates and maxplus\npolyhedra.\n", "versions": [{"version": "v1", "created": "Wed, 10 Feb 2010 23:08:49 GMT"}, {"version": "v2", "created": "Thu, 25 Mar 2010 13:08:41 GMT"}, {"version": "v3", "created": "Fri, 26 Mar 2010 10:02:17 GMT"}], "update_date": "2014-02-14", "authors_parsed": [["Ghorbal", "Khalil", ""], ["Goubault", "Eric", ""], ["Putot", "Sylvie", ""]]}, {"id": "1002.4002", "submitter": "William Jackson", "authors": "A. K. Ojha, A.K. Das", "title": "Multi-Objective Geometric Programming Problem Being Cost Coefficients as\n  Continous Function with Weighted Mean Method", "comments": null, "journal-ref": "Journal of Computing, Volume 2, Issue 2, February 2010,\n  https://sites.google.com/site/journalofcomputing/", "doi": null, "report-no": null, "categories": "cs.DS cs.NA", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Geometric programming problems occur frequently in engineering design and\nmanagement. In multiobjective optimization, the trade-off information between\ndifferent objective functions is probably the most important piece of\ninformation in a solution process to reach the most preferred solution. In this\npaper we have discussed the basic concepts and principles of multiple objective\noptimization problems and developed a solution procedure to solve this\noptimization problem where the cost coefficients are continuous functions using\nweighted method to obtain the non-inferior solutions.\n", "versions": [{"version": "v1", "created": "Sun, 21 Feb 2010 19:36:55 GMT"}], "update_date": "2010-03-25", "authors_parsed": [["Ojha", "A. K.", ""], ["Das", "A. K.", ""]]}, {"id": "1002.4057", "submitter": "Julien Langou", "authors": "Emmanuel Agullo, Henricus Bouwmeester, Jack Dongarra, Jakub Kurzak,\n  Julien Langou, and Lee Rosenberg", "title": "Towards an Efficient Tile Matrix Inversion of Symmetric Positive\n  Definite Matrices on Multicore Architectures", "comments": "8 pages, extended abstract submitted to VecPar10 on 12/11/09,\n  notification of acceptance received on 02/05/10. See:\n  http://vecpar.fe.up.pt/2010/", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.MS cs.NA", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The algorithms in the current sequential numerical linear algebra libraries\n(e.g. LAPACK) do not parallelize well on multicore architectures. A new family\nof algorithms, the tile algorithms, has recently been introduced. Previous\nresearch has shown that it is possible to write efficient and scalable tile\nalgorithms for performing a Cholesky factorization, a (pseudo) LU\nfactorization, and a QR factorization. In this extended abstract, we attack the\nproblem of the computation of the inverse of a symmetric positive definite\nmatrix. We observe that, using a dynamic task scheduler, it is relatively\npainless to translate existing LAPACK code to obtain a ready-to-be-executed\ntile algorithm. However we demonstrate that non trivial compiler techniques\n(array renaming, loop reversal and pipelining) need then to be applied to\nfurther increase the parallelism of our application. We present preliminary\nexperimental results.\n", "versions": [{"version": "v1", "created": "Mon, 22 Feb 2010 06:11:41 GMT"}], "update_date": "2010-02-23", "authors_parsed": [["Agullo", "Emmanuel", ""], ["Bouwmeester", "Henricus", ""], ["Dongarra", "Jack", ""], ["Kurzak", "Jakub", ""], ["Langou", "Julien", ""], ["Rosenberg", "Lee", ""]]}]