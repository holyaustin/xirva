[{"id": "0902.0271", "submitter": "Jarek Duda", "authors": "Jarek Duda", "title": "Asymmetric numeral systems", "comments": "47 pages, 6 figures", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.IT cs.CR math.GM math.IT", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In this paper will be presented new approach to entropy coding: family of\ngeneralizations of standard numeral systems which are optimal for encoding\nsequence of equiprobable symbols, into asymmetric numeral systems - optimal for\nfreely chosen probability distributions of symbols. It has some similarities to\nRange Coding but instead of encoding symbol in choosing a range, we spread\nthese ranges uniformly over the whole interval. This leads to simpler encoder -\ninstead of using two states to define range, we need only one. This approach is\nvery universal - we can obtain from extremely precise encoding (ABS) to\nextremely fast with possibility to additionally encrypt the data (ANS). This\nencryption uses the key to initialize random number generator, which is used to\ncalculate the coding tables. Such preinitialized encryption has additional\nadvantage: is resistant to brute force attack - to check a key we have to make\nwhole initialization. There will be also presented application for new approach\nto error correction: after an error in each step we have chosen probability to\nobserve that something was wrong. There will be also presented application for\nnew approach to error correction: after an error in each step we have chosen\nprobability to observe that something was wrong. We can get near Shannon's\nlimit for any noise level this way with expected linear time of correction.\n", "versions": [{"version": "v1", "created": "Mon, 2 Feb 2009 16:07:06 GMT"}, {"version": "v2", "created": "Wed, 25 Feb 2009 18:18:17 GMT"}, {"version": "v3", "created": "Wed, 11 Mar 2009 14:09:40 GMT"}, {"version": "v4", "created": "Fri, 3 Apr 2009 19:59:53 GMT"}, {"version": "v5", "created": "Thu, 21 May 2009 20:18:13 GMT"}], "update_date": "2009-05-21", "authors_parsed": [["Duda", "Jarek", ""]]}, {"id": "0902.0322", "submitter": "Gregoire Jacob M.", "authors": "Gregoire Jacob, Herve Debar and Eric Filiol", "title": "Malware Detection using Attribute-Automata to parse Abstract Behavioral\n  Descriptions", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.CR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Most behavioral detectors of malware remain specific to a given language and\nplatform, mostly PE executables for Windows. The objective of this paper is to\ndefine a generic approach for behavioral detection based on two layers\nrespectively responsible for abstraction and detection. The first abstraction\nlayer remains specific to a platform and a language. This first layer\ninterprets the collected instructions, API calls and arguments and classifies\nthese operations as well as the involved objects according to their purpose in\nthe malware lifecycle. The second detection layer remains generic and is\ntotally interoperable between the different abstraction components. This layer\nrelies on parallel automata parsing attribute-grammars where semantic rules are\nused for object typing (object classification) and object binding (data-flow).\nTo feed detection and to experiment with our approach we have developed two\ndifferent abstraction components: one processing system call traces from native\ncode and one processing the VBScript interpreted language. The different\nexperimentations have provided promising detection rates, in particular for\nscript files (89%), with almost none false positives. In the case of process\ntraces, the detection rate remains significant (51%) but could be increased by\nmore sophisticated collection tools.\n", "versions": [{"version": "v1", "created": "Mon, 2 Feb 2009 17:36:48 GMT"}], "update_date": "2009-02-03", "authors_parsed": [["Jacob", "Gregoire", ""], ["Debar", "Herve", ""], ["Filiol", "Eric", ""]]}, {"id": "0902.0458", "submitter": "Keith Martin", "authors": "Keith M. Martin", "title": "On the Applicability of Combinatorial Designs to Key Predistribution for\n  Wireless Sensor Networks", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.CR cs.DM", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The constraints of lightweight distributed computing environments such as\nwireless sensor networks lend themselves to the use of symmetric cryptography\nto provide security services. The lack of central infrastructure after\ndeployment of such networks requires the necessary symmetric keys to be\npredistributed to participating nodes. The rich mathematical structure of\ncombinatorial designs has resulted in the proposal of several key\npredistribution schemes for wireless sensor networks based on designs. We\nreview and examine the appropriateness of combinatorial designs as a tool for\nbuilding key predistribution schemes suitable for such environments.\n", "versions": [{"version": "v1", "created": "Tue, 3 Feb 2009 09:54:41 GMT"}], "update_date": "2009-02-04", "authors_parsed": [["Martin", "Keith M.", ""]]}, {"id": "0902.0469", "submitter": "Gregoire Jacob M.", "authors": "Gregoire Jacob, Eric Filiol and Herve Debar", "title": "Formalization of malware through process calculi", "comments": "Corrected version from CSF reviews Shorter version submitted to\n  ESORICS", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.CR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Since the seminal work from F. Cohen in the eighties, abstract virology has\nseen the apparition of successive viral models, all based on Turing-equivalent\nformalisms. But considering recent malware such as rootkits or k-ary codes,\nthese viral models only partially cover these evolved threats. The problem is\nthat Turing-equivalent models do not support interactive computations. New\nmodels have thus appeared, offering support for these evolved malware, but\nloosing the unified approach in the way. This article provides a basis for a\nunified malware model founded on process algebras and in particular the\nJoin-Calculus. In terms of expressiveness, the new model supports the\nfundamental definitions based on self-replication and adds support for\ninteractions, concurrency and non-termination allows the definition of more\ncomplex behaviors. Evolved malware such as rootkits can now be thoroughly\nmodeled. In terms of detection and prevention, the fundamental results of\nundecidability and isolation still hold. However the process-based model has\npermitted to establish new results: identification of fragments from the\nJoin-Calculus where malware detection becomes decidable, formal definition of\nthe non-infection property, approximate solutions to restrict malware\npropagation.\n", "versions": [{"version": "v1", "created": "Tue, 3 Feb 2009 10:40:36 GMT"}, {"version": "v2", "created": "Mon, 20 Apr 2009 09:08:26 GMT"}], "update_date": "2009-04-20", "authors_parsed": [["Jacob", "Gregoire", ""], ["Filiol", "Eric", ""], ["Debar", "Herve", ""]]}, {"id": "0902.0822", "submitter": "Ye Wang", "authors": "Ye Wang and Prakash Ishwar", "title": "Bootstrapped Oblivious Transfer and Secure Two-Party Function\n  Computation", "comments": "5 pages, 2 figures. Submitted to 2009 IEEE International Symposium on\n  Information Theory, Seoul, South Korea", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.CR cs.IT math.IT", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We propose an information theoretic framework for the secure two-party\nfunction computation (SFC) problem and introduce the notion of SFC capacity. We\nstudy and extend string oblivious transfer (OT) to sample-wise OT. We propose\nan efficient, perfectly private OT protocol utilizing the binary erasure\nchannel or source. We also propose the bootstrap string OT protocol which\nprovides disjoint (weakened) privacy while achieving a multiplicative increase\nin rate, thus trading off security for rate. Finally, leveraging our OT\nprotocol, we construct a protocol for SFC and establish a general lower bound\non SFC capacity of the binary erasure channel and source.\n", "versions": [{"version": "v1", "created": "Wed, 4 Feb 2009 23:47:37 GMT"}], "update_date": "2009-02-06", "authors_parsed": [["Wang", "Ye", ""], ["Ishwar", "Prakash", ""]]}, {"id": "0902.1891", "submitter": "Nitin Vats", "authors": "Nitin Vats", "title": "NNRU, a noncommutative analogue of NTRU", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.CR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  NTRU public key cryptosystem is well studied lattice-based Cryptosystem along\nwith Ajtai-Dwork and GGH systems. Underlying\n  NTRU is a hard mathematical problem of finding short vectors in a certain\nlattice. (Shamir 1997) presented a lattice-based attack by which he could find\nthe original secret key or alternate key. Shamir concluded if one designs a\nvariant of NTRU where the calculations involved during encryption and\ndecryption are non-commutative then the system will be secure against Lattice\nbased attack.This paper presents a new cryptosystem with above property and we\nhave proved that it is completely secure against Lattice based attack. It\noperates in the non-commutative ring M=M_k Z[X]/(X^n - I_{k*k}, where M is a\nmatrix ring of k*k matrices of polynomials in R={Z}[X]/(X^n-1). Moreover We\nhave got speed improvement by a factor of O(k^{1.624) over NTRU for the same\nbit of information.\n", "versions": [{"version": "v1", "created": "Wed, 11 Feb 2009 13:48:04 GMT"}], "update_date": "2009-02-12", "authors_parsed": [["Vats", "Nitin", ""]]}, {"id": "0902.2487", "submitter": "Abhishek Parakh", "authors": "Abhishek Parakh and Subhash Kak", "title": "A Recursive Threshold Visual Cryptography Scheme", "comments": "8 pages", "journal-ref": null, "doi": null, "report-no": "Cryptology ePrint Archive, Report 2008/535", "categories": "cs.CR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This paper presents a recursive hiding scheme for 2 out of 3 secret sharing.\nIn recursive hiding of secrets, the user encodes additional information about\nsmaller secrets in the shares of a larger secret without an expansion in the\nsize of the latter, thereby increasing the efficiency of secret sharing. We\npresent applications of our proposed protocol to images as well as text.\n", "versions": [{"version": "v1", "created": "Sat, 14 Feb 2009 20:39:12 GMT"}], "update_date": "2009-02-17", "authors_parsed": [["Parakh", "Abhishek", ""], ["Kak", "Subhash", ""]]}]