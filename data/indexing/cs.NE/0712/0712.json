[{"id": "0712.0932", "submitter": "Kumar Eswaran Dr.", "authors": "Dasika Ratna Deepthi, Sujeet Kuchibhotla and K.Eswaran", "title": "Dimensionality Reduction and Reconstruction using Mirroring Neural\n  Networks and Object Recognition based on Reduced Dimension Characteristic\n  Vector", "comments": "Presented in IEEE International Conference on Advances in Computer\n  Vision and Information Technology (ACVIT-07), Nov. 28-30 2007", "journal-ref": "IEEE International Conference On Advances in Computer Vision and\n  Information Tech. (IEEE, ACVIT-07), pp. 348 - 353 (2007)", "doi": null, "report-no": null, "categories": "cs.CV cs.AI cs.NE", "license": null, "abstract": "  In this paper, we present a Mirroring Neural Network architecture to perform\nnon-linear dimensionality reduction and Object Recognition using a reduced\nlowdimensional characteristic vector. In addition to dimensionality reduction,\nthe network also reconstructs (mirrors) the original high-dimensional input\nvector from the reduced low-dimensional data. The Mirroring Neural Network\narchitecture has more number of processing elements (adalines) in the outer\nlayers and the least number of elements in the central layer to form a\nconverging-diverging shape in its configuration. Since this network is able to\nreconstruct the original image from the output of the innermost layer (which\ncontains all the information about the input pattern), these outputs can be\nused as object signature to classify patterns. The network is trained to\nminimize the discrepancy between actual output and the input by back\npropagating the mean squared error from the output layer to the input layer.\nAfter successfully training the network, it can reduce the dimension of input\nvectors and mirror the patterns fed to it. The Mirroring Neural Network\narchitecture gave very good results on various test patterns.\n", "versions": [{"version": "v1", "created": "Thu, 6 Dec 2007 14:11:07 GMT"}], "update_date": "2008-12-13", "authors_parsed": [["Deepthi", "Dasika Ratna", ""], ["Kuchibhotla", "Sujeet", ""], ["Eswaran", "K.", ""]]}, {"id": "0712.0938", "submitter": "Kumar Eswaran Dr.", "authors": "Dasika Ratna Deepthi, G.R.Aditya Krishna and K. Eswaran", "title": "Automatic Pattern Classification by Unsupervised Learning Using\n  Dimensionality Reduction of Data with Mirroring Neural Networks", "comments": "Presented in IEEE International Conference on Advances in Computer\n  Vision and Information Technology (ACVIT-07), Nov. 28-30 2007", "journal-ref": "IEEE International Conference on Advances in Computer Vision and\n  Information Tech. (IEEE, ACVIT-07), pp. 354 - 360 (2007)", "doi": null, "report-no": null, "categories": "cs.LG cs.AI cs.NE", "license": null, "abstract": "  This paper proposes an unsupervised learning technique by using Multi-layer\nMirroring Neural Network and Forgy's clustering algorithm. Multi-layer\nMirroring Neural Network is a neural network that can be trained with\ngeneralized data inputs (different categories of image patterns) to perform\nnon-linear dimensionality reduction and the resultant low-dimensional code is\nused for unsupervised pattern classification using Forgy's algorithm. By\nadapting the non-linear activation function (modified sigmoidal function) and\ninitializing the weights and bias terms to small random values, mirroring of\nthe input pattern is initiated. In training, the weights and bias terms are\nchanged in such a way that the input presented is reproduced at the output by\nback propagating the error. The mirroring neural network is capable of reducing\nthe input vector to a great degree (approximately 1/30th the original size) and\nalso able to reconstruct the input pattern at the output layer from this\nreduced code units. The feature set (output of central hidden layer) extracted\nfrom this network is fed to Forgy's algorithm, which classify input data\npatterns into distinguishable classes. In the implementation of Forgy's\nalgorithm, initial seed points are selected in such a way that they are distant\nenough to be perfectly grouped into different categories. Thus a new method of\nunsupervised learning is formulated and demonstrated in this paper. This method\ngave impressive results when applied to classification of different image\npatterns.\n", "versions": [{"version": "v1", "created": "Thu, 6 Dec 2007 13:52:04 GMT"}], "update_date": "2008-12-15", "authors_parsed": [["Deepthi", "Dasika Ratna", ""], ["Krishna", "G. R. Aditya", ""], ["Eswaran", "K.", ""]]}, {"id": "0712.1863", "submitter": "Weng-Long Chang", "authors": "Weng-Long Chang, Michael (Shan-Hui) Ho, and Minyi Guo", "title": "Constructing Bio-molecular Databases on a DNA-based Computer", "comments": "The article includes 35 pages, several tables and figures", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.NE cs.DB q-bio.OT", "license": null, "abstract": "  Codd [Codd 1970] wrote the first paper in which the model of a relational\ndatabase was proposed. Adleman [Adleman 1994] wrote the first paper in which\nDNA strands in a test tube were used to solve an instance of the Hamiltonian\npath problem. From [Adleman 1994], it is obviously indicated that for storing\ninformation in molecules of DNA allows for an information density of\napproximately 1 bit per cubic nm (nanometer) and a dramatic improvement over\nexisting storage media such as video tape which store information at a density\nof approximately 1 bit per 1012 cubic nanometers. This paper demonstrates that\nbiological operations can be applied to construct bio-molecular databases where\ndata records in relational tables are encoded as DNA strands. In order to\nachieve the goal, DNA algorithms are proposed to perform eight operations of\nrelational algebra (calculus) on bio-molecular relational databases, which\ninclude Cartesian product, union, set difference, selection, projection,\nintersection, join and division. Furthermore, this work presents clear evidence\nof the ability of molecular computing to perform data retrieval operations on\nbio-molecular relational databases.\n", "versions": [{"version": "v1", "created": "Wed, 12 Dec 2007 03:58:01 GMT"}], "update_date": "2007-12-13", "authors_parsed": [["Chang", "Weng-Long", "", "Shan-Hui"], ["Michael", "", "", "Shan-Hui"], ["Ho", "", ""], ["Guo", "Minyi", ""]]}, {"id": "0712.2630", "submitter": "Juan J. Merelo Pr.", "authors": "Nestor Zorzano, Daniel Merino, J.L.J. Laredo, J.P. Sevilla, Pablo\n  Garcia, J.J. Merelo", "title": "Evolving XSLT stylesheets", "comments": "First draft, preparing for WCCI 2008", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.NE cs.PL", "license": null, "abstract": "  This paper introduces a procedure based on genetic programming to evolve XSLT\nprograms (usually called stylesheets or logicsheets). XSLT is a general\npurpose, document-oriented functional language, generally used to transform XML\ndocuments (or, in general, solve any problem that can be coded as an XML\ndocument). The proposed solution uses a tree representation for the stylesheets\nas well as diverse specific operators in order to obtain, in the studied cases\nand a reasonable time, a XSLT stylesheet that performs the transformation.\nSeveral types of representation have been compared, resulting in different\nperformance and degree of success.\n", "versions": [{"version": "v1", "created": "Mon, 17 Dec 2007 19:59:42 GMT"}], "update_date": "2007-12-18", "authors_parsed": [["Zorzano", "Nestor", ""], ["Merino", "Daniel", ""], ["Laredo", "J. L. J.", ""], ["Sevilla", "J. P.", ""], ["Garcia", "Pablo", ""], ["Merelo", "J. J.", ""]]}, {"id": "0712.3654", "submitter": "Alejandro Chinea Manrique De Lara", "authors": "Alejandro Chinea Manrique De Lara, Juan Manuel Moreno, Arostegui Jordi\n  Madrenas, Joan Cabestany", "title": "Improving the Performance of PieceWise Linear Separation Incremental\n  Algorithms for Practical Hardware Implementations", "comments": "10 pages, 1 figure, 3 tables", "journal-ref": "Biological and Artificial Computation: From Neuroscience to\n  Technology, J.Mira, R.Moreno-Diaz, J.Cabestany (eds.), pp. 607-616,\n  Springer-Verlag, 1997", "doi": null, "report-no": null, "categories": "cs.NE cs.AI cs.LG", "license": null, "abstract": "  In this paper we shall review the common problems associated with Piecewise\nLinear Separation incremental algorithms. This kind of neural models yield poor\nperformances when dealing with some classification problems, due to the\nevolving schemes used to construct the resulting networks. So as to avoid this\nundesirable behavior we shall propose a modification criterion. It is based\nupon the definition of a function which will provide information about the\nquality of the network growth process during the learning phase. This function\nis evaluated periodically as the network structure evolves, and will permit, as\nwe shall show through exhaustive benchmarks, to considerably improve the\nperformance(measured in terms of network complexity and generalization\ncapabilities) offered by the networks generated by these incremental models.\n", "versions": [{"version": "v1", "created": "Fri, 21 Dec 2007 10:05:52 GMT"}], "update_date": "2007-12-24", "authors_parsed": [["De Lara", "Alejandro Chinea Manrique", ""], ["Moreno", "Juan Manuel", ""], ["Madrenas", "Arostegui Jordi", ""], ["Cabestany", "Joan", ""]]}, {"id": "0712.3973", "submitter": "Marc Schoenauer", "authors": "Pierre Collet (LIL), Marc Schoenauer (INRIA Rocquencourt)", "title": "GUIDE: Unifying Evolutionary Engines through a Graphical User Interface", "comments": null, "journal-ref": "Dans Evolution Artificielle 2936 (2003) 203-215", "doi": null, "report-no": null, "categories": "cs.NE", "license": null, "abstract": "  Many kinds of Evolutionary Algorithms (EAs) have been described in the\nliterature since the last 30 years. However, though most of them share a common\nstructure, no existing software package allows the user to actually shift from\none model to another by simply changing a few parameters, e.g. in a single\nwindow of a Graphical User Interface. This paper presents GUIDE, a Graphical\nUser Interface for DREAM Experiments that, among other user-friendly features,\nunifies all kinds of EAs into a single panel, as far as evolution parameters\nare concerned. Such a window can be used either to ask for one of the well\nknown ready-to-use algorithms, or to very easily explore new combinations that\nhave not yet been studied. Another advantage of grouping all necessary elements\nto describe virtually all kinds of EAs is that it creates a fantastic pedagogic\ntool to teach EAs to students and newcomers to the field.\n", "versions": [{"version": "v1", "created": "Mon, 24 Dec 2007 07:31:58 GMT"}], "update_date": "2011-11-10", "authors_parsed": [["Collet", "Pierre", "", "LIL"], ["Schoenauer", "Marc", "", "INRIA Rocquencourt"]]}, {"id": "0712.4099", "submitter": "Gerard Briscoe Mr", "authors": "G. Briscoe, P. De Wilde", "title": "Digital Ecosystems: Optimisation by a Distributed Intelligence", "comments": "12 pages, 14 figures, conference", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.NE", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Can intelligence optimise Digital Ecosystems? How could a distributed\nintelligence interact with the ecosystem dynamics? Can the software components\nthat are part of genetic selection be intelligent in themselves, as in an\nadaptive technology? We consider the effect of a distributed intelligence\nmechanism on the evolutionary and ecological dynamics of our Digital Ecosystem,\nwhich is the digital counterpart of a biological ecosystem for evolving\nsoftware services in a distributed network. We investigate Neural Networks and\nSupport Vector Machine for the learning based pattern recognition functionality\nof our distributed intelligence. Simulation results imply that the Digital\nEcosystem performs better with the application of a distributed intelligence,\nmarginally more effectively when powered by Support Vector Machine than Neural\nNetworks, and suggest that it can contribute to optimising the operation of our\nDigital Ecosystem.\n", "versions": [{"version": "v1", "created": "Wed, 26 Dec 2007 04:13:20 GMT"}, {"version": "v2", "created": "Sat, 21 Feb 2009 13:38:04 GMT"}, {"version": "v3", "created": "Mon, 21 Sep 2009 00:39:27 GMT"}], "update_date": "2009-09-21", "authors_parsed": [["Briscoe", "G.", ""], ["De Wilde", "P.", ""]]}, {"id": "0712.4101", "submitter": "Gerard Briscoe Mr", "authors": "P. De Wilde, G. Briscoe", "title": "Digital Ecosystems: Stability of Evolving Agent Populations", "comments": "8 pages, 6 figures, ACM Management of Emergent Digital EcoSystems\n  (MEDES) 2009", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.NE", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Stability is perhaps one of the most desirable features of any engineered\nsystem, given the importance of being able to predict its response to various\nenvironmental conditions prior to actual deployment. Engineered systems are\nbecoming ever more complex, approaching the same levels of biological\necosystems, and so their stability becomes ever more important, but taking on\nmore and more differential dynamics can make stability an ever more elusive\nproperty. The Chli-DeWilde definition of stability views a Multi-Agent System\nas a discrete time Markov chain with potentially unknown transition\nprobabilities. With a Multi-Agent System being considered stable when its\nstate, a stochastic process, has converged to an equilibrium distribution,\nbecause stability of a system can be understood intuitively as exhibiting\nbounded behaviour. We investigate an extension to include Multi-Agent Systems\nwith evolutionary dynamics, focusing on the evolving agent populations of our\nDigital Ecosystem. We then built upon this to construct an entropy-based\ndefinition for the degree of instability (entropy of the limit probabilities),\nwhich was later used to perform a stability analysis. The Digital Ecosystem is\nconsidered to investigate the stability of an evolving agent population through\nsimulations, for which the results were consistent with the original\nChli-DeWilde definition.\n", "versions": [{"version": "v1", "created": "Wed, 26 Dec 2007 04:40:16 GMT"}, {"version": "v2", "created": "Tue, 28 Oct 2008 10:38:12 GMT"}, {"version": "v3", "created": "Thu, 19 Feb 2009 18:33:26 GMT"}, {"version": "v4", "created": "Fri, 20 Feb 2009 02:43:08 GMT"}, {"version": "v5", "created": "Mon, 5 Oct 2009 00:31:13 GMT"}], "update_date": "2009-10-05", "authors_parsed": [["De Wilde", "P.", ""], ["Briscoe", "G.", ""]]}, {"id": "0712.4102", "submitter": "Gerard Briscoe Mr", "authors": "G. Briscoe, P. De Wilde", "title": "Digital Ecosystems: Evolving Service-Oriented Architectures", "comments": "7 pages, 4 figures, conference", "journal-ref": "In IEEE First International Conference on Bio Inspired mOdels of\n  NETwork, Information and Computing Systems (BIONETICS) (2006)", "doi": null, "report-no": null, "categories": "cs.NE", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We view Digital Ecosystems to be the digital counterparts of biological\necosystems, exploiting the self-organising properties of biological ecosystems,\nwhich are considered to be robust, self-organising and scalable architectures\nthat can automatically solve complex, dynamic problems. Digital Ecosystems are\na novel optimisation technique where the optimisation works at two levels: a\nfirst optimisation, migration of agents (representing services) which are\ndistributed in a decentralised peer-to-peer network, operating continuously in\ntime; this process feeds a second optimisation based on evolutionary computing\nthat operates locally on single peers and is aimed at finding solutions to\nsatisfy locally relevant constraints. We created an Ecosystem-Oriented\nArchitecture of Digital Ecosystems by extending Service-Oriented Architectures\nwith distributed evolutionary computing, allowing services to recombine and\nevolve over time, constantly seeking to improve their effectiveness for the\nuser base. Individuals within our Digital Ecosystem will be applications\n(groups of services), created in response to user requests by using\nevolutionary optimisation to aggregate the services. These individuals will\nmigrate through the Digital Ecosystem and adapt to find niches where they are\nuseful in fulfilling other user requests for applications. Simulation results\nimply that the Digital Ecosystem performs better at large scales than a\ncomparable Service-Oriented Architecture, suggesting that incorporating ideas\nfrom theoretical ecology can contribute to useful self-organising properties in\ndigital ecosystems.\n", "versions": [{"version": "v1", "created": "Wed, 26 Dec 2007 05:44:31 GMT"}, {"version": "v2", "created": "Tue, 28 Oct 2008 08:39:15 GMT"}, {"version": "v3", "created": "Fri, 12 Dec 2008 08:59:13 GMT"}, {"version": "v4", "created": "Fri, 13 Mar 2009 02:21:31 GMT"}, {"version": "v5", "created": "Thu, 26 Mar 2009 08:32:17 GMT"}, {"version": "v6", "created": "Mon, 5 Oct 2009 01:55:06 GMT"}], "update_date": "2009-10-05", "authors_parsed": [["Briscoe", "G.", ""], ["De Wilde", "P.", ""]]}, {"id": "0712.4126", "submitter": "Chandan Reddy", "authors": "Chandan K. Reddy", "title": "TRUST-TECH based Methods for Optimization and Learning", "comments": "PHD Thesis", "journal-ref": "Chandan K. Reddy, TRUST-TECH based Methods for Optimization and\n  Learning, PHD Thesis, Cornell University, February 2007", "doi": null, "report-no": null, "categories": "cs.AI cs.CE cs.MS cs.NA cs.NE", "license": null, "abstract": "  Many problems that arise in machine learning domain deal with nonlinearity\nand quite often demand users to obtain global optimal solutions rather than\nlocal optimal ones. Optimization problems are inherent in machine learning\nalgorithms and hence many methods in machine learning were inherited from the\noptimization literature. Popularly known as the initialization problem, the\nideal set of parameters required will significantly depend on the given\ninitialization values. The recently developed TRUST-TECH (TRansformation Under\nSTability-reTaining Equilibria CHaracterization) methodology systematically\nexplores the subspace of the parameters to obtain a complete set of local\noptimal solutions. In this thesis work, we propose TRUST-TECH based methods for\nsolving several optimization and machine learning problems. Two stages namely,\nthe local stage and the neighborhood-search stage, are repeated alternatively\nin the solution space to achieve improvements in the quality of the solutions.\nOur methods were tested on both synthetic and real datasets and the advantages\nof using this novel framework are clearly manifested. This framework not only\nreduces the sensitivity to initialization, but also allows the flexibility for\nthe practitioners to use various global and local methods that work well for a\nparticular problem of interest. Other hierarchical stochastic algorithms like\nevolutionary algorithms and smoothing algorithms are also studied and\nframeworks for combining these methods with TRUST-TECH have been proposed and\nevaluated on several test systems.\n", "versions": [{"version": "v1", "created": "Tue, 25 Dec 2007 03:14:32 GMT"}], "update_date": "2007-12-27", "authors_parsed": [["Reddy", "Chandan K.", ""]]}, {"id": "0712.4153", "submitter": "Gerard Briscoe Mr", "authors": "G. Briscoe, S. Sadedin, G. Paperin", "title": "Biology of Applied Digital Ecosystems", "comments": "9 pages, 4 figure, conference", "journal-ref": "In IEEE First International Conference on Digital Ecosystems and\n  Technologies, 2007", "doi": "10.1109/DEST.2007.372015", "report-no": null, "categories": "cs.NE cs.MA", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  A primary motivation for our research in Digital Ecosystems is the desire to\nexploit the self-organising properties of biological ecosystems. Ecosystems are\nthought to be robust, scalable architectures that can automatically solve\ncomplex, dynamic problems. However, the biological processes that contribute to\nthese properties have not been made explicit in Digital Ecosystems research.\nHere, we discuss how biological properties contribute to the self-organising\nfeatures of biological ecosystems, including population dynamics, evolution, a\ncomplex dynamic environment, and spatial distributions for generating local\ninteractions. The potential for exploiting these properties in artificial\nsystems is then considered. We suggest that several key features of biological\necosystems have not been fully explored in existing digital ecosystems, and\ndiscuss how mimicking these features may assist in developing robust, scalable\nself-organising architectures. An example architecture, the Digital Ecosystem,\nis considered in detail. The Digital Ecosystem is then measured experimentally\nthrough simulations, with measures originating from theoretical ecology, to\nconfirm its likeness to a biological ecosystem. Including the responsiveness to\nrequests for applications from the user base, as a measure of the 'ecological\nsuccession' (development).\n", "versions": [{"version": "v1", "created": "Wed, 26 Dec 2007 21:56:52 GMT"}, {"version": "v2", "created": "Tue, 28 Oct 2008 09:19:00 GMT"}], "update_date": "2016-11-18", "authors_parsed": [["Briscoe", "G.", ""], ["Sadedin", "S.", ""], ["Paperin", "G.", ""]]}, {"id": "0712.4159", "submitter": "Gerard Briscoe Dr", "authors": "G Briscoe", "title": "Creating a Digital Ecosystem: Service-Oriented Architectures with\n  Distributed Evolutionary Computing", "comments": "This has been withdrawn by the author due to an error in using\n  presentation notes in submission", "journal-ref": "In JavaOne Conference, 2006, BOF-0759", "doi": null, "report-no": null, "categories": "cs.NE", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We start with a discussion of the relevant literature, including Nature\nInspired Computing as a framework in which to understand this work, and the\nprocess of biomimicry to be used in mimicking the necessary biological\nprocesses to create Digital Ecosystems. We then consider the relevant\ntheoretical ecology in creating the digital counterpart of a biological\necosystem, including the topological structure of ecosystems, and evolutionary\nprocesses within distributed environments. This leads to a discussion of the\nrelevant fields from computer science for the creation of Digital Ecosystems,\nincluding evolutionary computing, Multi-Agent Systems, and Service-Oriented\nArchitectures. We then define Ecosystem-Oriented Architectures for the creation\nof Digital Ecosystems, imbibed with the properties of self-organisation and\nscalability from biological ecosystems, including a novel form of distributed\nevolutionary computing.\n", "versions": [{"version": "v1", "created": "Wed, 26 Dec 2007 23:32:10 GMT"}, {"version": "v2", "created": "Tue, 28 Oct 2008 08:56:59 GMT"}, {"version": "v3", "created": "Mon, 5 Oct 2009 00:41:53 GMT"}, {"version": "v4", "created": "Sat, 24 Nov 2012 01:18:27 GMT"}, {"version": "v5", "created": "Tue, 27 Nov 2012 15:39:35 GMT"}], "update_date": "2012-11-28", "authors_parsed": [["Briscoe", "G", ""]]}]