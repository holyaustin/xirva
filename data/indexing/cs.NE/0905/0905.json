[{"id": "0905.0677", "submitter": "Ivan Yu. Tyukin", "authors": "Ivan Tyukin and Danil Prokhorov", "title": "Feasibility of random basis function approximators for modeling and\n  control", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.NE cs.AI", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We discuss the role of random basis function approximators in modeling and\ncontrol. We analyze the published work on random basis function approximators\nand demonstrate that their favorable error rate of convergence O(1/n) is\nguaranteed only with very substantial computational resources. We also discuss\nimplications of our analysis for applications of neural networks in modeling\nand control.\n", "versions": [{"version": "v1", "created": "Tue, 5 May 2009 19:45:13 GMT"}], "update_date": "2009-05-06", "authors_parsed": [["Tyukin", "Ivan", ""], ["Prokhorov", "Danil", ""]]}, {"id": "0905.1235", "submitter": "Serguei Mokhov", "authors": "Serguei A. Mokhov, Stephen Sinclair, Ian Cl\\'ement, Dimitrios\n  Nicolacopoulos (for the MARF R&D Group)", "title": "The Modular Audio Recognition Framework (MARF) and its Applications:\n  Scientific and Software Engineering Notes", "comments": "v2: add missing .ind file for index; 224 pages, 40 figures, 19\n  tables; index. A comprehensive description of AI and PR algorithms and data\n  structures, software engineering design and implementation, and experiments.\n  Source revision is maintained in the CVS at http://marf.sf.net", "journal-ref": null, "doi": "10.1007/978-1-4020-8741-7_84 10.1007/978-3-540-68825-9_21\n  10.1145/1370256.1370262", "report-no": null, "categories": "cs.SD cs.CL cs.CV cs.MM cs.NE", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  MARF is an open-source research platform and a collection of\nvoice/sound/speech/text and natural language processing (NLP) algorithms\nwritten in Java and arranged into a modular and extensible framework\nfacilitating addition of new algorithms. MARF can run distributively over the\nnetwork and may act as a library in applications or be used as a source for\nlearning and extension. A few example applications are provided to show how to\nuse the framework. There is an API reference in the Javadoc format as well as\nthis set of accompanying notes with the detailed description of the\narchitectural design, algorithms, and applications. MARF and its applications\nare released under a BSD-style license and is hosted at SourceForge.net. This\ndocument provides the details and the insight on the internals of MARF and some\nof the mentioned applications.\n", "versions": [{"version": "v1", "created": "Fri, 8 May 2009 14:42:03 GMT"}, {"version": "v2", "created": "Sat, 25 Jul 2009 04:13:29 GMT"}], "update_date": "2019-08-14", "authors_parsed": [["Mokhov", "Serguei A.", "", "for the MARF R&D Group"], ["Sinclair", "Stephen", "", "for the MARF R&D Group"], ["Cl\u00e9ment", "Ian", "", "for the MARF R&D Group"], ["Nicolacopoulos", "Dimitrios", "", "for the MARF R&D Group"]]}, {"id": "0905.1751", "submitter": "Chao-Yang Pang", "authors": "Chao-Yang Pang, Chong-Bao Wang and Ben-Qiong Hu", "title": "Experiment Study of Entropy Convergence of Ant Colony Optimization", "comments": "21 papges, 8 figures", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.NE cs.AI", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Ant colony optimization (ACO) has been applied to the field of combinatorial\noptimization widely. But the study of convergence theory of ACO is rare under\ngeneral condition. In this paper, the authors try to find the evidence to prove\nthat entropy is related to the convergence of ACO, especially to the estimation\nof the minimum iteration number of convergence. Entropy is a new view point\npossibly to studying the ACO convergence under general condition. Key Words:\nAnt Colony Optimization, Convergence of ACO, Entropy\n", "versions": [{"version": "v1", "created": "Tue, 12 May 2009 12:38:57 GMT"}, {"version": "v2", "created": "Mon, 22 Jun 2009 14:50:03 GMT"}, {"version": "v3", "created": "Fri, 24 Jul 2009 08:11:20 GMT"}, {"version": "v4", "created": "Sun, 25 Oct 2009 03:08:14 GMT"}], "update_date": "2009-10-25", "authors_parsed": [["Pang", "Chao-Yang", ""], ["Wang", "Chong-Bao", ""], ["Hu", "Ben-Qiong", ""]]}, {"id": "0905.2459", "submitter": "Serguei Mokhov", "authors": "Serguei A. Mokhov", "title": "On Design and Implementation of the Distributed Modular Audio\n  Recognition Framework: Requirements and Specification Design Document", "comments": "53 pages, 8 figures, 2 tables. A 2006 report on software design and\n  implementation of Distributed MARF, which is a distributed extension of\n  classical MARF documented at arXiv:0905.1235 . Parts are to appear at the\n  CISSE'08 conference (Springer). The content of the document and code are\n  open-source and released at http://marf.sf.net ; v2 adds missing .ind file", "journal-ref": null, "doi": "10.1007/978-90-481-3662-9_72", "report-no": null, "categories": "cs.CV cs.DC cs.MM cs.NE cs.SD", "license": "http://creativecommons.org/licenses/by/3.0/", "abstract": "  We present the requirements and design specification of the open-source\nDistributed Modular Audio Recognition Framework (DMARF), a distributed\nextension of MARF. The distributed version aggregates a number of distributed\ntechnologies (e.g. Java RMI, CORBA, Web Services) in a pluggable and modular\nmodel along with the provision of advanced distributed systems algorithms. We\noutline the associated challenges incurred during the design and implementation\nas well as overall specification of the project and its advantages and\nlimitations.\n", "versions": [{"version": "v1", "created": "Fri, 15 May 2009 02:52:28 GMT"}, {"version": "v2", "created": "Sun, 26 Jul 2009 23:16:29 GMT"}], "update_date": "2010-01-31", "authors_parsed": [["Mokhov", "Serguei A.", ""]]}, {"id": "0905.2473", "submitter": "Keki Burjorjee", "authors": "Keki M. Burjorjee", "title": "On the Workings of Genetic Algorithms: The Genoclique Fixing Hypothesis", "comments": "25 pages, 7 figures", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.NE cs.AI", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We recently reported that the simple genetic algorithm (SGA) is capable of\nperforming a remarkable form of sublinear computation which has a\nstraightforward connection with the general problem of interacting attributes\nin data-mining. In this paper we explain how the SGA can leverage this\ncomputational proficiency to perform efficient adaptation on a broad class of\nfitness functions. Based on the relative ease with which a practical fitness\nfunction might belong to this broad class, we submit a new hypothesis about the\nworkings of genetic algorithms. We explain why our hypothesis is superior to\nthe building block hypothesis, and, by way of empirical validation, we present\nthe results of an experiment in which the use of a simple mechanism called\nclamping dramatically improved the performance of an SGA with uniform crossover\non large, randomly generated instances of the MAX 3-SAT problem.\n", "versions": [{"version": "v1", "created": "Fri, 15 May 2009 07:17:31 GMT"}], "update_date": "2009-05-18", "authors_parsed": [["Burjorjee", "Keki M.", ""]]}, {"id": "0905.2649", "submitter": "Soumya Banerjee", "authors": "Soumya Banerjee", "title": "An Immune System Inspired Approach to Automated Program Verification", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.NE", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  An immune system inspired Artificial Immune System (AIS) algorithm is\npresented, and is used for the purposes of automated program verification.\nRelevant immunological concepts are discussed and the field of AIS is briefly\nreviewed. It is proposed to use this AIS algorithm for a specific automated\nprogram verification task: that of predicting shape of program invariants. It\nis shown that the algorithm correctly predicts program invariant shape for a\nvariety of benchmarked programs.\n", "versions": [{"version": "v1", "created": "Sat, 16 May 2009 02:34:32 GMT"}], "update_date": "2009-05-19", "authors_parsed": [["Banerjee", "Soumya", ""]]}, {"id": "0905.2882", "submitter": "Maroun Bercachi", "authors": "Maroun Bercachi (I3S), Philippe Collard (I3S), Manuel Clergue (I3S),\n  Sebastien Verel (I3S)", "title": "Do not Choose Representation just Change: An Experimental Study in\n  States based EA", "comments": null, "journal-ref": "Genetic and Evolutionary Computation Conference 2009, Montr\\'eal :\n  Canada (2009)", "doi": null, "report-no": null, "categories": "cs.NE cs.AI", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Our aim in this paper is to analyse the phenotypic effects (evolvability) of\ndiverse coding conversion operators in an instance of the states based\nevolutionary algorithm (SEA). Since the representation of solutions or the\nselection of the best encoding during the optimization process has been proved\nto be very important for the efficiency of evolutionary algorithms (EAs), we\nwill discuss a strategy of coupling more than one representation and different\nprocedures of conversion from one coding to another during the search.\nElsewhere, some EAs try to use multiple representations (SM-GA, SEA, etc.) in\nintention to benefit from the characteristics of each of them. In spite of\nthose results, this paper shows that the change of the representation is also a\ncrucial approach to take into consideration while attempting to increase the\nperformances of such EAs. As a demonstrative example, we use a two states SEA\n(2-SEA) which has two identical search spaces but different coding conversion\noperators. The results show that the way of changing from one coding to another\nand not only the choice of the best representation nor the representation\nitself is very advantageous and must be taken into account in order to\nwell-desing and improve EAs execution.\n", "versions": [{"version": "v1", "created": "Mon, 18 May 2009 13:35:14 GMT"}], "update_date": "2009-05-19", "authors_parsed": [["Bercachi", "Maroun", "", "I3S"], ["Collard", "Philippe", "", "I3S"], ["Clergue", "Manuel", "", "I3S"], ["Verel", "Sebastien", "", "I3S"]]}, {"id": "0905.3771", "submitter": "Subhash Kak", "authors": "Subhash Kak", "title": "Memory Retrieved from Single Neurons", "comments": "12 pages", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.NE q-bio.NC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The paper examines the problem of accessing a vector memory from a single\nneuron in a Hebbian neural network. It begins with the review of the author's\nearlier method, which is different from the Hopfield model in that it recruits\nneighboring neurons by spreading activity, making it possible for single or\ngroup of neurons to become associated with vector memories. Some open issues\nassociated with this approach are identified. It is suggested that fragments\nthat generate stored memories could be associated with single neurons through\nlocal spreading activity.\n", "versions": [{"version": "v1", "created": "Fri, 22 May 2009 22:09:59 GMT"}], "update_date": "2009-05-26", "authors_parsed": [["Kak", "Subhash", ""]]}, {"id": "0905.4570", "submitter": "Zhi-Hua Zhou", "authors": "Yang Yu, Zhi-Hua Zhou", "title": "Weak Evolvability Equals Strong Evolvability", "comments": "This paper has been withdrawn by the authors", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.AI cs.NE", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  An updated version will be uploaded later.\n", "versions": [{"version": "v1", "created": "Thu, 28 May 2009 08:09:46 GMT"}, {"version": "v2", "created": "Wed, 17 Feb 2010 04:26:06 GMT"}], "update_date": "2010-02-17", "authors_parsed": [["Yu", "Yang", ""], ["Zhou", "Zhi-Hua", ""]]}]