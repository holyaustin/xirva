[{"id": "1809.00121", "submitter": "Behnam Dezfouli", "authors": "Behnam Dezfouli, Vahid Esmaeelzadeh, Jaykumar Sheth, and Marjan Radi", "title": "A Review of Software-Defined WLANs: Architectures and Central Control\n  Mechanisms", "comments": null, "journal-ref": null, "doi": null, "report-no": "SIOTLAB-COMST-SDWLAN-JULY18", "categories": "cs.NI cs.OS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The significant growth in the number of WiFi-enabled devices as well as the\nincrease in the traffic conveyed through wireless local area networks (WLANs)\nnecessitate the adoption of new network control mechanisms. Specifically, dense\ndeployment of access points, client mobility, and emerging QoS demands bring\nabout challenges that cannot be effectively addressed by distributed\nmechanisms. Recent studies show that software-defined WLANs (SDWLANs) simplify\nnetwork control, improve QoS provisioning, and lower the deployment cost of new\nnetwork control mechanisms. In this paper, we present an overview of SDWLAN\narchitectures and provide a qualitative comparison in terms of features such as\nprogrammability and virtualization. In addition, we classify and investigate\nthe two important classes of centralized network control mechanisms: (i)\nassociation control (AsC) and (ii) channel assignment (ChA). We study the basic\nideas employed by these mechanisms, and in particular, we focus on the metrics\nutilized and the problem formulation techniques proposed. We present a\ncomparison of these mechanisms and identify open research problems.\n", "versions": [{"version": "v1", "created": "Sat, 1 Sep 2018 06:07:39 GMT"}], "update_date": "2018-09-05", "authors_parsed": [["Dezfouli", "Behnam", ""], ["Esmaeelzadeh", "Vahid", ""], ["Sheth", "Jaykumar", ""], ["Radi", "Marjan", ""]]}, {"id": "1809.02892", "submitter": "Jian-Jia Chen", "authors": "Jian-Jia Chen and Georg von der Br\\\"uggen and Junjie Shi and Niklas\n  Uete", "title": "Dependency Graph Approach for Multiprocessor Real-Time Synchronization", "comments": "accepted and to appear in IEEE Real-Time System Symposium (RTSS) 2018", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.OS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Over the years, many multiprocessor locking protocols have been designed and\nanalyzed. However, the performance of these protocols highly depends on how the\ntasks are partitioned and prioritized and how the resources are shared locally\nand globally. This paper answers a few fundamental questions when real-time\ntasks share resources in multiprocessor systems. We explore the fundamental\ndifficulty of the multiprocessor synchronization problem and show that a very\nsimplified version of this problem is ${\\mathcal NP}$-hard in the strong sense\nregardless of the number of processors and the underlying scheduling paradigm.\nTherefore, the allowance of preemption or migration does not reduce the\ncomputational complexity. For the positive side, we develop a dependency-graph\napproach, that is specifically useful for frame-based real-time tasks, in which\nall tasks have the same period and release their jobs always at the same time.\nWe present a series of algorithms with speedup factors between $2$ and $3$\nunder semi-partitioned scheduling. We further explore methodologies and\ntradeoffs of preemptive against non-preemptive scheduling algorithms and\npartitioned against semi-partitioned scheduling algorithms. The approach is\nextended to periodic tasks under certain conditions.\n", "versions": [{"version": "v1", "created": "Sat, 8 Sep 2018 22:53:27 GMT"}], "update_date": "2018-09-11", "authors_parsed": [["Chen", "Jian-Jia", ""], ["von der Br\u00fcggen", "Georg", ""], ["Shi", "Junjie", ""], ["Uete", "Niklas", ""]]}, {"id": "1809.07701", "submitter": "Pier Luigi Ventre", "authors": "Pier Luigi Ventre, Paolo Lungaroni, Giuseppe Siracusano, Claudio Pisa,\n  Florian Schmidt, Francesco Lombardo and Stefano Salsano", "title": "On the Fly Orchestration of Unikernels: Tuning and Performance\n  Evaluation of Virtual Infrastructure Managers", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DC cs.NI cs.OS cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Network operators are facing significant challenges meeting the demand for\nmore bandwidth, agile infrastructures, innovative services, while keeping costs\nlow. Network Functions Virtualization (NFV) and Cloud Computing are emerging as\nkey trends of 5G network architectures, providing flexibility, fast\ninstantiation times, support of Commercial Off The Shelf hardware and\nsignificant cost savings. NFV leverages Cloud Computing principles to move the\ndata-plane network functions from expensive, closed and proprietary hardware to\nthe so-called Virtual Network Functions (VNFs). In this paper we deal with the\nmanagement of virtual computing resources (Unikernels) for the execution of\nVNFs. This functionality is performed by the Virtual Infrastructure Manager\n(VIM) in the NFV MANagement and Orchestration (MANO) reference architecture. We\ndiscuss the instantiation process of virtual resources and propose a generic\nreference model, starting from the analysis of three open source VIMs, namely\nOpenStack, Nomad and OpenVIM. We improve the aforementioned VIMs introducing\nthe support for special-purpose Unikernels and aiming at reducing the duration\nof the instantiation process. We evaluate some performance aspects of the VIMs,\nconsidering both stock and tuned versions. The VIM extensions and performance\nevaluation tools are available under a liberal open source licence.\n", "versions": [{"version": "v1", "created": "Mon, 17 Sep 2018 12:17:01 GMT"}], "update_date": "2018-09-21", "authors_parsed": [["Ventre", "Pier Luigi", ""], ["Lungaroni", "Paolo", ""], ["Siracusano", "Giuseppe", ""], ["Pisa", "Claudio", ""], ["Schmidt", "Florian", ""], ["Lombardo", "Francesco", ""], ["Salsano", "Stefano", ""]]}]