[{"id": "1011.1735", "submitter": "Tshilidzi Marwala", "authors": "George Anderson, Tshilidzi Marwala, and Fulufhelo V. Nelwamondo", "title": "Use of Data Mining in Scheduler Optimization", "comments": "10 pages", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.OS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The operating system's role in a computer system is to manage the various\nresources. One of these resources is the Central Processing Unit. It is managed\nby a component of the operating system called the CPU scheduler. Schedulers are\noptimized for typical workloads expected to run on the platform. However, a\nsingle scheduler may not be appropriate for all workloads. That is, a scheduler\nmay schedule a workload such that the completion time is minimized, but when\nanother type of workload is run on the platform, scheduling and therefore\ncompletion time will not be optimal; a different scheduling algorithm, or a\ndifferent set of parameters, may work better. Several approaches to solving\nthis problem have been proposed. The objective of this survey is to summarize\nthe approaches based on data mining, which are available in the literature. In\naddition to solutions that can be directly utilized for solving this problem,\nwe are interested in data mining research in related areas that have potential\nfor use in operating system scheduling. We also explain general technical\nissues involved in scheduling in modern computers, including parallel\nscheduling issues related to multi-core CPUs. We propose a taxonomy that\nclassifies the scheduling approaches we discuss into different categories.\n", "versions": [{"version": "v1", "created": "Mon, 8 Nov 2010 09:07:54 GMT"}], "update_date": "2010-11-09", "authors_parsed": [["Anderson", "George", ""], ["Marwala", "Tshilidzi", ""], ["Nelwamondo", "Fulufhelo V.", ""]]}, {"id": "1011.3087", "submitter": "Feng Xia", "authors": "Hongtao Huang, Feng Xia, Jijie Wang, Siyu Lei, Guowei Wu", "title": "Leakage-Aware Reallocation for Periodic Real-Time Tasks on Multicore\n  Processors", "comments": "The 5th International Conference on Frontier of Computer Science and\n  Technology (FCST), IEEE, Changchun, China, August 2010", "journal-ref": null, "doi": "10.1109/FCST.2010.105", "report-no": null, "categories": "cs.DC cs.OS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  It is an increasingly important issue to reduce the energy consumption of\ncomputing systems. In this paper, we consider partition based energy-aware\nscheduling of periodic real-time tasks on multicore processors. The scheduling\nexploits dynamic voltage scaling (DVS) and core sleep scheduling to reduce both\ndynamic and leakage energy consumption. If the overhead of core state switching\nis non-negligible, however, the performance of this scheduling strategy in\nterms of energy efficiency might degrade. To achieve further energy saving, we\nextend the static task scheduling with run-time task reallocation. The basic\nidea is to aggregate idle time among cores so that as many cores as possible\ncould be put into sleep in a way that the overall energy consumption is\nreduced. Simulation results show that the proposed approach results in up to\n20% energy saving over traditional leakage-aware DVS.\n", "versions": [{"version": "v1", "created": "Sat, 13 Nov 2010 02:17:29 GMT"}], "update_date": "2016-11-17", "authors_parsed": [["Huang", "Hongtao", ""], ["Xia", "Feng", ""], ["Wang", "Jijie", ""], ["Lei", "Siyu", ""], ["Wu", "Guowei", ""]]}]