[{"id": "1012.2831", "submitter": "Lin Zhong", "authors": "Mian Dong and Lin Zhong", "title": "Sesame: Self-Constructive System Energy Modeling for Battery-Powered\n  Mobile Systems", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.OS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  System energy models are important for energy optimization and management in\nmobile systems. However, existing system energy models are built in lab with\nthe help from a second computer. Not only are they labor-intensive; but also\nthey will not adequately account for the great diversity in the hardware and\nusage of mobile systems. Moreover, existing system energy models are intended\nfor energy estimation for time intervals of one second or longer; they do not\nprovide the required rate for fine-grain use such as per-application energy\naccounting.\n  In this work, we study a self-modeling paradigm in which a mobile system\nautomatically generates its energy model without any external assistance. Our\nsolution, Se-same, leverages the possibility of self power measurement through\nthe smart battery interface and employs a suite of novel techniques to achieve\naccuracy and rate much higher than that of the smart battery interface.\n  We report the implementation and evaluation of Se-same on a laptop and a\nsmartphone. The experiment results show that Sesame generates system energy\nmodels of 95% accuracy at one estimation per second and 88% accuracy at one\nestimation per 10ms, without any external assistance. A five-day field studies\nwith four laptop and four smartphones users further demonstrate the\neffectiveness, efficiency, and noninvasiveness of Sesame.\n", "versions": [{"version": "v1", "created": "Mon, 13 Dec 2010 18:47:10 GMT"}, {"version": "v2", "created": "Mon, 20 Dec 2010 22:16:29 GMT"}], "update_date": "2010-12-22", "authors_parsed": [["Dong", "Mian", ""], ["Zhong", "Lin", ""]]}, {"id": "1012.3071", "submitter": "Lin Zhong", "authors": "Ahmad Rahmati, Clay Shepard, Chad Tossell, Angela Nicoara, Lin Zhong,\n  Phil Kortum, Jatinder Singh", "title": "Seamless Flow Migration on Smartphones without Network Support", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.NI cs.OS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This paper addresses the following question: Is it possible to migrate TCP/IP\nflows between different networks on modern mobile devices, without\ninfrastructure support or protocol changes? To answer this question, we make\nthree research contributions. (i) We report a comprehensive characterization of\nIP traffic on smartphones using traces collected from 27 iPhone 3GS users for\nthree months. (ii) Driven by the findings from the characterization, we devise\ntwo novel system mechanisms for mobile devices to sup-port seamless flow\nmigration without network support, and extensively evaluate their effectiveness\nusing our field collected traces of real-life usage. Wait-n-Migrate leverages\nthe fact that most flows are short lived. It establishes new flows on newly\navailable networks but allows pre-existing flows on the old network to\nterminate naturally, effectively decreasing, or even eliminating, connectivity\ngaps during network switches. Resumption Agent takes advantage of the\nfunctionality integrated into many modern protocols to securely resume flows\nwithout application intervention. When combined, Wait-n-Migrate and Resumption\nAgent provide an unprecedented opportunity to immediately deploy performance\nand efficiency-enhancing policies that leverage multiple networks to improve\nthe performance, efficiency, and connectivity of mobile devices. (iii) Finally,\nwe report an iPhone 3GS based implementation of these two system mechanisms and\nshow that their overhead is negligible. Furthermore, we employ an example\nnetwork switching policy, called AutoSwitch, to demonstrate their performance.\nAutoSwitch improves the Wi-Fi user experience by intelligently migrating TCP\nflows between Wi-Fi and cellular networks. Through traces and field\nmeasurements, we show that AutoSwitch reduces the number of user disruptions by\nan order of magnitude.\n", "versions": [{"version": "v1", "created": "Tue, 14 Dec 2010 16:10:08 GMT"}], "update_date": "2010-12-15", "authors_parsed": [["Rahmati", "Ahmad", ""], ["Shepard", "Clay", ""], ["Tossell", "Chad", ""], ["Nicoara", "Angela", ""], ["Zhong", "Lin", ""], ["Kortum", "Phil", ""], ["Singh", "Jatinder", ""]]}, {"id": "1012.3452", "submitter": "Mohammad Nikseresht", "authors": "Mohammad R Nikseresht, Anil Somayaji, Anil Maheshwari", "title": "Customer Appeasement Scheduling", "comments": null, "journal-ref": null, "doi": null, "report-no": "TR-10-18", "categories": "cs.OS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Almost all of the current process scheduling algorithms which are used in\nmodern operating systems (OS) have their roots in the classical scheduling\nparadigms which were developed during the 1970's. But modern computers have\ndifferent types of software loads and user demands. We think it is important to\nrun what the user wants at the current moment. A user can be a human, sitting\nin front of a desktop machine, or it can be another machine sending a request\nto a server through a network connection. We think that OS should become\nintelligent to distinguish between different processes and allocate resources,\nincluding CPU, to those processes which need them most. In this work, as a\nfirst step to make the OS aware of the current state of the system, we consider\nprocess dependencies and interprocess communications. We are developing a\nmodel, which considers the need to satisfy interactive users and other possible\nremote users or customers, by making scheduling decisions based on process\ndependencies and interprocess communications. Our simple proof of concept\nimplementation and experiments show the effectiveness of this approach in the\nreal world applications. Our implementation does not require any change in the\nsoftware applications nor any special kind of configuration in the system,\nMoreover, it does not require any additional information about CPU needs of\napplications nor other resource requirements. Our experiments show significant\nperformance improvement for real world applications. For example, almost\nconstant average response time for Mysql data base server and constant frame\nrate for mplayer under different simulated load values.\n", "versions": [{"version": "v1", "created": "Wed, 15 Dec 2010 20:38:40 GMT"}], "update_date": "2010-12-16", "authors_parsed": [["Nikseresht", "Mohammad R", ""], ["Somayaji", "Anil", ""], ["Maheshwari", "Anil", ""]]}, {"id": "1012.4045", "submitter": "Tshilidzi Marwala", "authors": "George Anderson, Tshilidzi Marwala and Fulufhelo Vincent Nelwamondo", "title": "Application of Global and One-Dimensional Local Optimization to\n  Operating System Scheduler Tuning", "comments": "Proceedings of the Twenty-First Annual Symposium of the Pattern\n  Recognition Association of South Africa 22-23 November 2010 Stellenbosch,\n  South Africa, pp. 7-11", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.OS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This paper describes a study of comparison of global and one-dimensional\nlocal optimization methods to operating system scheduler tuning. The operating\nsystem scheduler we use is the Linux 2.6.23 Completely Fair Scheduler (CFS)\nrunning in simulator (LinSched). We have ported the Hackbench scheduler\nbenchmark to this simulator and use this as the workload. The global\noptimization approach we use is Particle Swarm Optimization (PSO). We make use\nof Response Surface Methodology (RSM) to specify optimal parameters for our PSO\nimplementation. The one-dimensional local optimization approach we use is the\nGolden Section method. In order to use this approach, we convert the scheduler\ntuning problem from one involving setting of three parameters to one involving\nthe manipulation of one parameter. Our results show that the global\noptimization approach yields better response but the one- dimensional\noptimization approach converges to a solution faster than the global\noptimization approach.\n", "versions": [{"version": "v1", "created": "Sat, 18 Dec 2010 00:51:57 GMT"}], "update_date": "2010-12-21", "authors_parsed": [["Anderson", "George", ""], ["Marwala", "Tshilidzi", ""], ["Nelwamondo", "Fulufhelo Vincent", ""]]}, {"id": "1012.5695", "submitter": "Santhi Baskaran", "authors": "Santhi Baskaran and P. Thambidurai", "title": "Dynamic Scheduling of Skippable Periodic Tasks with Energy Efficiency in\n  Weakly Hard Real-Time System", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.OS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Energy consumption is a critical design issue in real-time systems,\nespecially in battery- operated systems. Maintaining high performance, while\nextending the battery life between charges is an interesting challenge for\nsystem designers. Dynamic Voltage Scaling (DVS) allows a processor to\ndynamically change speed and voltage at run time, thereby saving energy by\nspreading run cycles into idle time. Knowing when to use full power and when\nnot, requires the cooperation of the operating system scheduler. Usually,\nhigher processor voltage and frequency leads to higher system throughput while\nenergy reduction can be obtained using lower voltage and frequency. Instead of\nlowering processor voltage and frequency as much as possible, energy efficient\nreal-time scheduling adjusts voltage and frequency according to some\noptimization criteria, such as low energy consumption or high throughput, while\nit meets the timing constraints of the real-time tasks. As the quantity and\nfunctional complexity of battery powered portable devices continues to raise,\nenergy efficient design of such devices has become increasingly important. Many\nreal-time scheduling algorithms have been developed recently to reduce energy\nconsumption in the portable devices that use DVS capable processors. Three\nalgorithms namely Red Tasks Only (RTO), Blue When Possible (BWP) and Red as\nLate as Possible (RLP) are proposed in the literature to schedule the real-time\ntasks in Weakly-hard real-time systems. This paper proposes optimal slack\nmanagement algorithms to make the above existing weakly hard real-time\nscheduling algorithms energy efficient using DVS and DPD techniques.\n", "versions": [{"version": "v1", "created": "Tue, 28 Dec 2010 04:35:02 GMT"}], "update_date": "2010-12-30", "authors_parsed": [["Baskaran", "Santhi", ""], ["Thambidurai", "P.", ""]]}, {"id": "1012.5929", "submitter": "Joel Goossens", "authors": "Jo\\\"el Goossens (1), Patrick Meumeu Yomsi (2) ((1) Brussels\n  University, U.L.B., Brussels, Belgium., (2) F.N.R.S, Belgium.)", "title": "Exact Schedulability Test for global-EDF Scheduling of Periodic Hard\n  Real-Time Tasks on Identical Multiprocessors", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.OS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In this paper we consider the scheduling problem of hard real-time systems\ncomposed of periodic constrained-deadline tasks upon identical multiprocessor\nplatforms. We assume that tasks are scheduled by using the global-EDF\nscheduler. We establish an exact schedulability test for this scheduler by\nexploiting on the one hand its predictability property and by providing on the\nother hand a feasibility interval so that if it is possible to find a valid\nschedule for all the jobs contained in this interval, then the whole system\nwill be stamped feasible. In addition, we show by means of a counterexample\nthat the feasibility interval, and thus the schedulability test, proposed by\nLeung [Leung 1989] is incorrect and we show which arguments are actually\nincorrect.\n", "versions": [{"version": "v1", "created": "Wed, 29 Dec 2010 12:41:13 GMT"}], "update_date": "2010-12-30", "authors_parsed": [["Goossens", "Jo\u00ebl", ""], ["Yomsi", "Patrick Meumeu", ""]]}]