[{"id": "0806.0132", "submitter": "Feng Xia", "authors": "Feng Xia, Yu-Chu Tian, Youxian Sun, Jinxiang Dong", "title": "Control-theoretic dynamic voltage scaling for embedded controllers", "comments": "Accepted for publication in IET Computers and Digital Techniques.\n  doi:10.1049/iet-cdt:20070112", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.OS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  For microprocessors used in real-time embedded systems, minimizing power\nconsumption is difficult due to the timing constraints. Dynamic voltage scaling\n(DVS) has been incorporated into modern microprocessors as a promising\ntechnique for exploring the trade-off between energy consumption and system\nperformance. However, it remains a challenge to realize the potential of DVS in\nunpredictable environments where the system workload cannot be accurately\nknown. Addressing system-level power-aware design for DVS-enabled embedded\ncontrollers, this paper establishes an analytical model for the DVS system that\nencompasses multiple real-time control tasks. From this model, a feedback\ncontrol based approach to power management is developed to reduce dynamic power\nconsumption while achieving good application performance. With this approach,\nthe unpredictability and variability of task execution times can be attacked.\nThanks to the use of feedback control theory, predictable performance of the\nDVS system is achieved, which is favorable to real-time applications. Extensive\nsimulations are conducted to evaluate the performance of the proposed approach.\n", "versions": [{"version": "v1", "created": "Sun, 1 Jun 2008 08:30:10 GMT"}], "update_date": "2008-12-18", "authors_parsed": [["Xia", "Feng", ""], ["Tian", "Yu-Chu", ""], ["Sun", "Youxian", ""], ["Dong", "Jinxiang", ""]]}, {"id": "0806.1381", "submitter": "Feng Xia", "authors": "Feng Xia, Guosong Tian, Youxian Sun", "title": "Feedback Scheduling: An Event-Driven Paradigm", "comments": "8 pages, 10 figures", "journal-ref": "ACM SIGPLAN Notices, vol.42, no.12, pp. 7-14, Dec. 2007", "doi": null, "report-no": null, "categories": "cs.OS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Embedded computing systems today increasingly feature resource constraints\nand workload variability, which lead to uncertainty in resource availability.\nThis raises great challenges to software design and programming in multitasking\nenvironments. In this paper, the emerging methodology of feedback scheduling is\nintroduced to address these challenges. As a closed-loop approach to resource\nmanagement, feedback scheduling promises to enhance the flexibility and\nresource efficiency of various software programs through dynamically\ndistributing available resources among concurrent tasks based on feedback\ninformation about the actual usage of the resources. With emphasis on the\nbehavioral design of feedback schedulers, we describe a general framework of\nfeedback scheduling in the context of real-time control applications. A simple\nyet illustrative feedback scheduling algorithm is given. From a programming\nperspective, we describe how to modify the implementation of control tasks to\nfacilitate the application of feedback scheduling. An event-driven paradigm\nthat combines time-triggered and event-triggered approaches is proposed for\nprogramming of the feedback scheduler. Simulation results argue that the\nproposed event-driven paradigm yields better performance than time-triggered\nparadigm in dynamic environments where the workload varies irregularly and\nunpredictably.\n", "versions": [{"version": "v1", "created": "Mon, 9 Jun 2008 07:23:28 GMT"}], "update_date": "2008-12-18", "authors_parsed": [["Xia", "Feng", ""], ["Tian", "Guosong", ""], ["Sun", "Youxian", ""]]}, {"id": "0806.1768", "submitter": "Ted Herman", "authors": "Ted Herman, Morten Mjelde", "title": "Local Read-Write Operations in Sensor Networks", "comments": "19 pages, 16 figures (using pstricks)", "journal-ref": null, "doi": null, "report-no": "TR08-02", "categories": "cs.OS cs.DC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Designing protocols and formulating convenient programming units of\nabstraction for sensor networks is challenging due to communication errors and\nplatform constraints. This paper investigates properties and implementation\nreliability for a \\emph{local read-write} abstraction. Local read-write is\ninspired by the class of read-modify-write operations defined for shared-memory\nmultiprocessor architectures. The class of read-modify-write operations is\nimportant in solving consensus and related synchronization problems for\nconcurrency control. Local read-write is shown to be an atomic abstraction for\nsynchronizing neighborhood states in sensor networks. The paper compares local\nread-write to similar lightweight operations in wireless sensor networks, such\nas read-all, write-all, and a transaction-based abstraction: for some\noptimistic scenarios, local read-write is a more efficient neighborhood\noperation. A partial implementation is described, which shows that three\noutcomes characterize operation response: success, failure, and cancel. A\nfailure response indicates possible inconsistency for the operation result,\nwhich is the result of a timeout event at the operation's initiator. The paper\npresents experimental results on operation performance with different timeout\nvalues and situations of no contention, with some tests also on various\nneighborhood sizes.\n", "versions": [{"version": "v1", "created": "Wed, 11 Jun 2008 00:03:00 GMT"}], "update_date": "2008-06-12", "authors_parsed": [["Herman", "Ted", ""], ["Mjelde", "Morten", ""]]}]