[{"id": "1603.03635", "submitter": "Emmanuel Baccelli", "authors": "Emmanuel Baccelli, Kaspar Schleiser", "title": "Powering the Internet of Things with RIOT: Why? How? What is RIOT?", "comments": "4 pages", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.CY cs.NI cs.OS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The crucial importance of software platforms was highlighted by recent events\nboth at the political level (e.g. renewed calls for digital data and operating\nsystem \"sovereignty\", following E. Snowden's revelations) and at the business\nlevel (e.g. Android generated a new industry worth tens of billions of euros\nyearly). In the Internet of Things, which is expected to generate business at\nvery large scale, but also to threaten even more individual privacy, such\naspects will be exacerbated. The need for an operating system like RIOT stems\nfrom this context, and this short article outlines RIOT's main non-technical\naspects, as well as its key technical characteristics.\n", "versions": [{"version": "v1", "created": "Fri, 11 Mar 2016 14:10:18 GMT"}], "update_date": "2016-03-14", "authors_parsed": [["Baccelli", "Emmanuel", ""], ["Schleiser", "Kaspar", ""]]}, {"id": "1603.05636", "submitter": "Harshal Sheth", "authors": "Harshal Sheth, Aashish Welling", "title": "An Implementation and Analysis of a Kernel Network Stack in Go with the\n  CSP Style", "comments": "10 pages", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.OS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Modern operating system kernels are written in lower-level languages such as\nC. Although the low-level functionalities of C are often useful within kernels,\nthey also give rise to several classes of bugs. Kernels written in higher level\nlanguages avoid many of these potential problems, at the possible cost of\ndecreased performance. This research evaluates the advantages and disadvantages\nof a kernel written in a higher level language. To do this, the network stack\nsubsystem of the kernel was implemented in Go with the Communicating Sequential\nProcesses (CSP) style. Go is a high-level programming language that supports\nthe CSP style, which recommends splitting large tasks into several smaller ones\nrunning in independent \"threads\". Modules for the major networking protocols,\nincluding Ethernet, ARP, IPv4, ICMP, UDP, and TCP, were implemented. In this\nstudy, the implemented Go network stack, called GoNet, was compared to a\nrepresentative network stack written in C. The GoNet code is more readable and\ngenerally performs better than that of its C stack counterparts. From this, it\ncan be concluded that Go with CSP style is a viable alternative to C for the\nlanguage of kernel implementations.\n", "versions": [{"version": "v1", "created": "Thu, 17 Mar 2016 19:43:36 GMT"}], "update_date": "2016-03-18", "authors_parsed": [["Sheth", "Harshal", ""], ["Welling", "Aashish", ""]]}]