[{"id": "1202.4030", "submitter": "Shashi Shekhar Shashi Shekhar", "authors": "Shashi Shekhar, Michael Dietz, Dan S. Wallach", "title": "AdSplit: Separating smartphone advertising from applications", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.OS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  A wide variety of smartphone applications today rely on third-party\nadvertising services, which provide libraries that are linked into the hosting\napplication. This situation is undesirable for both the application author and\nthe advertiser. Advertising libraries require additional permissions, resulting\nin additional permission requests to users. Likewise, a malicious application\ncould simulate the behavior of the advertising library, forging the user's\ninteraction and effectively stealing money from the advertiser. This paper\ndescribes AdSplit, where we extended Android to allow an application and its\nadvertising to run as separate processes, under separate user-ids, eliminating\nthe need for applications to request permissions on behalf of their advertising\nlibraries.\n  We also leverage mechanisms from Quire to allow the remote server to validate\nthe authenticity of client-side behavior. In this paper, we quantify the degree\nof permission bloat caused by advertising, with a study of thousands of\ndownloaded apps. AdSplit automatically recompiles apps to extract their ad\nservices, and we measure minimal runtime overhead. We also observe that most ad\nlibraries just embed an HTML widget within and describe how AdSplit can be\ndesigned with this in mind to avoid any need for ads to have native code.\n", "versions": [{"version": "v1", "created": "Fri, 17 Feb 2012 22:33:12 GMT"}], "update_date": "2015-03-20", "authors_parsed": [["Shekhar", "Shashi", ""], ["Dietz", "Michael", ""], ["Wallach", "Dan S.", ""]]}, {"id": "1202.5282", "submitter": "Mohammad Iftekhar Husain", "authors": "Mohammad Iftekhar Husain, Lokesh Mandvekar, Chunming Qiao, Ramalingam\n  Sridhar", "title": "How to Bypass Verified Boot Security in Chromium OS", "comments": "Update information about Chromium OS. Added new and advanced\n  exploits. Added mitigation techniques and evaluation", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.CR cs.OS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Verified boot is an interesting feature of Chromium OS that supposedly can\ndetect any modification in the root file system (rootfs) by a dedicated\nadversary. However, by exploiting a design flaw in verified boot, we show that\nan adversary can replace the original rootfs by a malicious rootfs containing\nexploits such as a spyware or keylogger and still pass the verified boot\nprocess. The exploit is based on the fact that a dedicated adversary can\nreplace the rootfs and the corresponding verification information in the\nbootloader. We experimentally demonstrate an attack using both the base and\ndeveloper version of Chromium OS in which the adversary installs a spyware in\nthe target system to send cached user data to the attacker machine in plain\ntext which are otherwise encrypted, and thus inaccessible. We also demonstrate\ntechniques to mitigate this vulnerability.\n", "versions": [{"version": "v1", "created": "Thu, 23 Feb 2012 20:12:00 GMT"}, {"version": "v2", "created": "Sat, 2 Jun 2012 15:56:26 GMT"}], "update_date": "2012-06-05", "authors_parsed": [["Husain", "Mohammad Iftekhar", ""], ["Mandvekar", "Lokesh", ""], ["Qiao", "Chunming", ""], ["Sridhar", "Ramalingam", ""]]}]