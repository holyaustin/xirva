[{"id": "1309.1714", "submitter": "Jalil Boukhobza", "authors": "Pierre Olivier (Lab-STICC), Jalil Boukhobza (Lab-STICC), Eric Senn\n  (Lab-STICC)", "title": "Flashmon V2: Monitoring Raw NAND Flash Memory I/O Requests on Embedded\n  Linux", "comments": "EWiLi, the Embedded Operating Systems Workshop, Toulouse : France\n  (2013)", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.OS cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This paper presents Flashmon version 2, a tool for monitoring embedded Linux\nNAND flash memory I/O requests. It is designed for embedded boards based\ndevices containing raw flash chips. Flashmon is a kernel module and stands for\n\"flash monitor\". It traces flash I/O by placing kernel probes at the NAND\ndriver level. It allows tracing at runtime the 3 main flash operations: page\nreads / writes and block erasures. Flashmon is (1) generic as it was\nsuccessfully tested on the three most widely used flash file systems that are\nJFFS2, UBIFS and YAFFS, and several NAND chip models. Moreover, it is (2) non\nintrusive, (3) has a controllable memory footprint, and (4) exhibits a low\noverhead (<6%) on the traced system. Finally, it is (5) simple to integrate and\nused as a standalone module or as a built-in function / module in existing\nkernel sources. Monitoring flash memory operations allows a better\nunderstanding of existing flash management systems by studying and analyzing\ntheir behavior. Moreover it is useful in development phase for prototyping and\nvalidating new solutions.\n", "versions": [{"version": "v1", "created": "Fri, 6 Sep 2013 18:14:04 GMT"}], "update_date": "2013-09-09", "authors_parsed": [["Olivier", "Pierre", "", "Lab-STICC"], ["Boukhobza", "Jalil", "", "Lab-STICC"], ["Senn", "Eric", "", "Lab-STICC"]]}, {"id": "1309.3096", "submitter": "Neetu Goel", "authors": "Neetu Goel, R.B. Garg", "title": "Simulation of an Optimum Multilevel Dynamic Round Robin Scheduling\n  Algorithm", "comments": "International Journal of Computer Applications, Aug 2013", "journal-ref": null, "doi": "10.5120/13263-0743", "report-no": null, "categories": "cs.OS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  CPU scheduling has valiant effect on resource utilization as well as overall\nquality of the system. Round Robin algorithm performs optimally in time shared\nsystems, but it performs more number of context switches, larger waiting time\nand larger response time. In order to simulate the behavior of various CPU\nscheduling algorithms and to improve Round Robin scheduling algorithm using\ndynamic time slice concept, in this paper we produce the implementation of new\nCPU scheduling algorithm called An Optimum Multilevel Dynamic Round Robin\nScheduling (OMDRRS), which calculates intelligent time slice and warps after\nevery round of execution. The results display the robustness of this software,\nespecially for academic, research and experimental use, as well as proving the\ndesirability and efficiency of the probabilistic algorithm over the other\nexisting techniques and it is observed that this OMDRRS projects good\nperformance as compared to the other existing CPU scheduling algorithms.\n", "versions": [{"version": "v1", "created": "Thu, 12 Sep 2013 10:26:10 GMT"}], "update_date": "2015-06-17", "authors_parsed": [["Goel", "Neetu", ""], ["Garg", "R. B.", ""]]}]