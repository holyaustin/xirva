[{"id": "1407.0122", "submitter": "Kazi Sakib", "authors": "Kazi Sakib, M. S. Hasan and M. A. Hossain", "title": "Effects of Hard Real-Time Constraints in Implementing the Myopic\n  Scheduling Algorithm", "comments": "9 pages, Journal of Computer Science (JCS), Bangladesh, Vol. 1, No.\n  2, December, 2007", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.OS cs.DC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Myopic is a hard real-time process scheduling algorithm that selects a\nsuitable process based on a heuristic function from a subset (Window)of all\nready processes instead of choosing from all available processes, like original\nheuristic scheduling algorithm. Performance of the algorithm significantly\ndepends on the chosen heuristic function that assigns weight to different\nparameters like deadline, earliest starting time, processing time etc. and the\nsizeof the Window since it considers only k processes from n processes (where,\nk<= n). This research evaluates the performance of the Myopic algorithm for\ndifferent parameters to demonstrate the merits and constraints of the\nalgorithm. A comparative performance of the impact of window size in\nimplementing the Myopic algorithm is presented and discussed through a set of\nexperiments.\n", "versions": [{"version": "v1", "created": "Tue, 1 Jul 2014 07:23:10 GMT"}], "update_date": "2014-07-02", "authors_parsed": [["Sakib", "Kazi", ""], ["Hasan", "M. S.", ""], ["Hossain", "M. A.", ""]]}, {"id": "1407.4245", "submitter": "Elena Reshetova", "authors": "Elena Reshetova, Janne Karhunen, Thomas Nyman, N. Asokan", "title": "Security of OS-level virtualization technologies: Technical report", "comments": "20 pages, 2 figures", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.CR cs.DC cs.OS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The need for flexible, low-overhead virtualization is evident on many fronts\nranging from high-density cloud servers to mobile devices. During the past\ndecade OS-level virtualization has emerged as a new, efficient approach for\nvirtualization, with implementations in multiple different Unix-based systems.\nDespite its popularity, there has been no systematic study of OS-level\nvirtualization from the point of view of security. In this report, we conduct a\ncomparative study of several OS-level virtualization systems, discuss their\nsecurity and identify some gaps in current solutions.\n", "versions": [{"version": "v1", "created": "Wed, 16 Jul 2014 10:03:51 GMT"}], "update_date": "2014-07-17", "authors_parsed": [["Reshetova", "Elena", ""], ["Karhunen", "Janne", ""], ["Nyman", "Thomas", ""], ["Asokan", "N.", ""]]}, {"id": "1407.4346", "submitter": "Nicolas Palix", "authors": "Nicolas Palix (Grenoble 1 UJF, LIG), Ga\\\"el Thomas (LIP6, INRIA\n  Paris-Rocquencourt), Suman Saha (LIP6, INRIA Paris-Rocquencourt), Christophe\n  Calv\\`es (LIP6, INRIA Paris-Rocquencourt), Gilles Muller (LIP6, INRIA\n  Paris-Rocquencourt), Julia L. Lawall (LIP6, INRIA Paris-Rocquencourt)", "title": "Faults in Linux 2.6", "comments": null, "journal-ref": "ACM Transactions on Computer Systems 32, 2 (2014) 1--40", "doi": "10.1145/2619090", "report-no": null, "categories": "cs.SE cs.OS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In August 2011, Linux entered its third decade. Ten years before, Chou et al.\npublished a study of faults found by applying a static analyzer to Linux\nversions 1.0 through 2.4.1. A major result of their work was that the drivers\ndirectory contained up to 7 times more of certain kinds of faults than other\ndirectories. This result inspired numerous efforts on improving the reliability\nof driver code. Today, Linux is used in a wider range of environments, provides\na wider range of services, and has adopted a new development and release model.\nWhat has been the impact of these changes on code quality? To answer this\nquestion, we have transported Chou et al.'s experiments to all versions of\nLinux 2.6; released between 2003 and 2011. We find that Linux has more than\ndoubled in size during this period, but the number of faults per line of code\nhas been decreasing. Moreover, the fault rate of drivers is now below that of\nother directories, such as arch. These results can guide further development\nand research efforts for the decade to come. To allow updating these results as\nLinux evolves, we define our experimental protocol and make our checkers\navailable.\n", "versions": [{"version": "v1", "created": "Wed, 16 Jul 2014 15:35:47 GMT"}], "update_date": "2014-07-17", "authors_parsed": [["Palix", "Nicolas", "", "Grenoble 1 UJF, LIG"], ["Thomas", "Ga\u00ebl", "", "LIP6, INRIA\n  Paris-Rocquencourt"], ["Saha", "Suman", "", "LIP6, INRIA Paris-Rocquencourt"], ["Calv\u00e8s", "Christophe", "", "LIP6, INRIA Paris-Rocquencourt"], ["Muller", "Gilles", "", "LIP6, INRIA\n  Paris-Rocquencourt"], ["Lawall", "Julia L.", "", "LIP6, INRIA Paris-Rocquencourt"]]}]