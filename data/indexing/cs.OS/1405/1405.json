[{"id": "1405.2281", "submitter": "Frank Hannig", "authors": "Frank Hannig and J\\\"urgen Teich", "title": "Proceedings of the First Workshop on Resource Awareness and Adaptivity\n  in Multi-Core Computing (Racing 2014)", "comments": "Website of the workshop: http://www12.cs.fau.de/racing2014/", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DC cs.OS cs.RO cs.SE", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This volume contains the papers accepted at the 1st Workshop on Resource\nAwareness and Adaptivity in Multi-Core Computing (Racing 2014), held in\nPaderborn, Germany, May 29-30, 2014. Racing 2014 was co-located with the IEEE\nEuropean Test Symposium (ETS).\n", "versions": [{"version": "v1", "created": "Thu, 8 May 2014 07:09:55 GMT"}], "update_date": "2014-05-12", "authors_parsed": [["Hannig", "Frank", ""], ["Teich", "J\u00fcrgen", ""]]}, {"id": "1405.2912", "submitter": "Mario Kicherer", "authors": "Mario Kicherer, Wolfgang Karl", "title": "Heterogeneity-aware Fault Tolerance using a Self-Organizing Runtime\n  System", "comments": "Presented at 1st Workshop on Resource Awareness and Adaptivity in\n  Multi-Core Computing (Racing 2014) (arXiv:1405.2281)", "journal-ref": null, "doi": null, "report-no": "Racing/2014/06", "categories": "cs.OS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Due to the diversity and implicit redundancy in terms of processing units and\ncompute kernels, off-the-shelf heterogeneous systems offer the opportunity to\ndetect and tolerate faults during task execution in hardware as well as in\nsoftware. To automatically leverage this diversity, we introduce an extension\nof an online-learning runtime system that combines the benefits of the existing\nperformance-oriented task mapping with task duplication, a diversity-oriented\nmapping strategy and heterogeneity-aware majority voter. This extension uses a\nnew metric to dynamically rate the remaining benefit of unreliable processing\nunits and a memory management mechanism for automatic data transfers and\ncheckpointing in the host and device memories.\n", "versions": [{"version": "v1", "created": "Mon, 12 May 2014 16:41:23 GMT"}], "update_date": "2014-05-14", "authors_parsed": [["Kicherer", "Mario", ""], ["Karl", "Wolfgang", ""]]}, {"id": "1405.2913", "submitter": "Bj\\\"orn D\\\"obel", "authors": "Bj\\\"orn D\\\"obel, Robert Muschner, Hermann H\\\"artig", "title": "Resource-Aware Replication on Heterogeneous Multicores: Challenges and\n  Opportunities", "comments": "Presented at 1st Workshop on Resource Awareness and Adaptivity in\n  Multi-Core Computing (Racing 2014) (arXiv:1405.2281)", "journal-ref": null, "doi": null, "report-no": "Racing/2014/07", "categories": "cs.DC cs.OS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Decreasing hardware feature sizes and increasing heterogeneity in multicore\nhardware require software that can adapt to these platforms' properties. We\nimplemented ROMAIN, an OS service providing redundant multithreading on top of\nthe FIASCO.OC microkernel to address the increasing unreliability of hardware.\nIn this paper we review challenges and opportunities for ROMAIN to adapt to\nsuch multicore platforms in order to decrease execution overhead, resource\nrequirements, and vulnerability against faults.\n", "versions": [{"version": "v1", "created": "Mon, 12 May 2014 16:41:49 GMT"}], "update_date": "2014-05-14", "authors_parsed": [["D\u00f6bel", "Bj\u00f6rn", ""], ["Muschner", "Robert", ""], ["H\u00e4rtig", "Hermann", ""]]}, {"id": "1405.5651", "submitter": "Francesco Gadaleta", "authors": "Francesco Gadaleta, Nick Nikiforakis, Yves Younan, and Wouter Joosen", "title": "Hello rootKitty: A lightweight invariance-enforcing framework", "comments": "16 pages, ISC Information Security Conference, Xi'an China, 2011,\n  Springer", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.OS cs.CR", "license": "http://creativecommons.org/licenses/by/3.0/", "abstract": "  In monolithic operating systems, the kernel is the piece of code that\nexecutes with the highest privileges and has control over all the software\nrunning on a host. A successful attack against an operating system's kernel\nmeans a total and complete compromise of the running system. These attacks\nusually end with the installation of a rootkit, a stealthy piece of software\nrunning with kernel privileges. When a rootkit is present, no guarantees can be\nmade about the correctness, privacy or isolation of the operating system.\n  In this paper we present \\emph{Hello rootKitty}, an invariance-enforcing\nframework which takes advantage of current virtualization technology to protect\na guest operating system against rootkits. \\emph{Hello rootKitty} uses the idea\nof invariance to detect maliciously modified kernel data structures and restore\nthem to their original legitimate values. Our prototype has negligible\nperformance and memory overhead while effectively protecting commodity\noperating systems from modern rootkits.\n", "versions": [{"version": "v1", "created": "Thu, 22 May 2014 07:52:45 GMT"}], "update_date": "2014-05-23", "authors_parsed": [["Gadaleta", "Francesco", ""], ["Nikiforakis", "Nick", ""], ["Younan", "Yves", ""], ["Joosen", "Wouter", ""]]}, {"id": "1405.7322", "submitter": "Guangmo Tong", "authors": "Guangmo Tong and Cong Liu", "title": "Supporting Soft Real-Time Sporadic Task Systems on Heterogeneous\n  Multiprocessors with No Utilization Loss", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.OS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Heterogeneous multicore architectures are becoming increasingly popular due\nto their potential of achieving high performance and energy efficiency compared\nto the homogeneous multicore architectures. In such systems, the real-time\nscheduling problem becomes more challenging in that processors have different\nspeeds. A job executing on a processor with speed $x$ for $t$ time units\ncompletes $(x \\cdot t)$ units of execution. Prior research on heterogeneous\nmultiprocessor real-time scheduling has focused on hard real-time systems,\nwhere, significant processing capacity may have to be sacrificed in the\nworst-case to ensure that all deadlines are met. As meeting hard deadlines is\noverkill for many soft real-time systems in practice, this paper shows that on\nsoft real-time heterogeneous multiprocessors, bounded response times can be\nensured for globally-scheduled sporadic task systems with no utilization loss.\nA GEDF-based scheduling algorithm, namely GEDF-H, is presented and response\ntime bounds are established under both preemptive and non-preemptive GEDF-H\nscheduling. Extensive experiments show that the magnitude of the derived\nresponse time bound is reasonable, often smaller than three task periods. To\nthe best of our knowledge, this paper is the first to show that soft real-time\nsporadic task systems can be supported on heterogeneous multiprocessors without\nutilization loss, and with reasonable predicted response time.\n", "versions": [{"version": "v1", "created": "Wed, 28 May 2014 18:28:45 GMT"}], "update_date": "2014-05-29", "authors_parsed": [["Tong", "Guangmo", ""], ["Liu", "Cong", ""]]}]