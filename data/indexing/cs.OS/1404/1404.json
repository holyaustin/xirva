[{"id": "1404.0088", "submitter": "EPTCS", "authors": "Youcheng Sun, Giuseppe Lipari, \\'Etienne Andr\\'e, Laurent Fribourg", "title": "Toward Parametric Timed Interfaces for Real-Time Components", "comments": "In Proceedings SynCoP 2014, arXiv:1403.7841", "journal-ref": "EPTCS 145, 2014, pp. 49-64", "doi": "10.4204/EPTCS.145.6", "report-no": null, "categories": "cs.OS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We propose here a framework to model real-time components consisting of\nconcurrent real-time tasks running on a single processor, using parametric\ntimed automata. Our framework is generic and modular, so as to be easily\nadapted to different schedulers and more complex task models. We first perform\na parametric schedulability analysis of the components using the inverse\nmethod. We show that the method unfortunately does not provide satisfactory\nresults when the task periods are consid- ered as parameters. After identifying\nand explaining the problem, we present a solution adapting the model by making\nuse of the worst-case scenario in schedulability analysis. We show that the\nanalysis with the inverse method always converges on the modified model when\nthe system load is strictly less than 100%. Finally, we show how to use our\nparametric analysis for the generation of timed interfaces in compositional\nsystem design.\n", "versions": [{"version": "v1", "created": "Tue, 1 Apr 2014 00:40:01 GMT"}], "update_date": "2014-04-02", "authors_parsed": [["Sun", "Youcheng", ""], ["Lipari", "Giuseppe", ""], ["Andr\u00e9", "\u00c9tienne", ""], ["Fribourg", "Laurent", ""]]}, {"id": "1404.1637", "submitter": "Yauhen Klimiankou", "authors": "Yauhen Klimiankou", "title": "An Enhanced Multi-Pager Environment Support for Second Generation\n  Microkernels", "comments": "7 pages, 4 figures, 1 table", "journal-ref": "International Journal of Computer Science and Information\n  Security, Vol. 12 No. 1 JAN 2014", "doi": null, "report-no": null, "categories": "cs.OS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The main objective of this paper is to present a mechanism of enhanced paging\nsupport for the second generation microkernels in the form of explicit support\nof multi-pager environment for the tasks running in the system. Proposed\nmechanism is based on the intra-kernel high granularity pagers assignments per\nvirtual address space, which allow efficient and simple dispatching of page\nfaults to the appropriate pagers. The paging is one of the major features of\nthe virtual memory, which is extensively used by advanced operating systems to\nprovide an illusion of elastic memory. Original and present second generation\nmicrokernels provide only limited, inflexible and unnatural support for paging.\nFurthermore, facilities provided by current solutions for multi-pager support\non the runtime level introduce an overhead in terms of mode switches and thread\ncontext switches which can be significantly reduced. Limited paging support\nlimits the attractiveness of the second generation microkernel based systems\nuse in real-life applications, in which processes usually have concurrent\nservicing of multiple paging servers. The purpose of this paper is to present a\nfacilities for the efficient and flexible support of multi-pager environments\nfor the second generation microkernels. A comparison of the proposed solution\nto the present architecture L4 + L4Re has been made and overhead of the page\nfault handling critical path has been evaluated. Proposed solution is simple\nenough and provides a natural and flexible support of multi-pager environments\nfor second generation microkernels in efficient way. It introduces a third less\noverhead in terms of the mode switches and thread context switches in\ncomparison to the present L4 + L4Re solution implemented in the Fiasco.OC.\n", "versions": [{"version": "v1", "created": "Sun, 6 Apr 2014 23:53:01 GMT"}], "update_date": "2014-07-11", "authors_parsed": [["Klimiankou", "Yauhen", ""]]}, {"id": "1404.5869", "submitter": "Sanjaya Kumar Panda", "authors": "Sanjaya Kumar Panda, Sourav Kumar Bhoi", "title": "An Effective Round Robin Algorithm using Min-Max Dispersion Measure", "comments": "9 pages, 15 figures. International Journal on Computer Science and\n  Engineering (IJCSE), 2012", "journal-ref": null, "doi": null, "report-no": "IJCSE12-04-01-124", "categories": "cs.OS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Round Robin (RR) scheduling algorithm is a preemptive scheduling algorithm.\nIt is designed especially for time sharing Operating System (OS). In RR\nscheduling algorithm the CPU switches between the processes when the static\nTime Quantum (TQ) expires. RR scheduling algorithm is considered as the most\nwidely used scheduling algorithm in research because the TQ is equally shared\namong the processes. In this paper a newly proposed variant of RR algorithm\ncalled Min-Max Round Robin (MMRR) scheduling algorithm is presented. The idea\nof this MMRR is to make the TQ repeatedly adjusted using Min-Max dispersion\nmeasure in accordance with remaining CPU burst time. Our experimental analysis\nshows that MMRR performs much better than RR algorithm in terms of average\nturnaround time, average waiting time and number of context switches.\n", "versions": [{"version": "v1", "created": "Wed, 23 Apr 2014 15:55:50 GMT"}], "update_date": "2014-04-24", "authors_parsed": [["Panda", "Sanjaya Kumar", ""], ["Bhoi", "Sourav Kumar", ""]]}, {"id": "1404.6087", "submitter": "Sanjaya Kumar Panda", "authors": "Sourav Kumar Bhoi, Sanjaya Kumar Panda, Debashee Tarai", "title": "Enhancing CPU Performance using Subcontrary Mean Dynamic Round Robin\n  (SMDRR) Scheduling Algorithm", "comments": "5 pages, 13 figures. Journal of Global Research in Computer Science\n  2011. arXiv admin note: text overlap with arXiv:1103.3832 by other authors", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.OS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Round Robin (RR) Algorithm is considered as optimal in time shared\nenvironment because the static time is equally shared among the processes. If\nthe time quantum taken is static then it undergoes degradation of the CPU\nperformance and leads to so many context switches. In this paper, we have\nproposed a new effective dynamic RR algorithm SMDRR (Subcontrary Mean Dynamic\nRound Robin) based on dynamic time quantum where we use the subcontrary mean or\nharmonic mean to find the time quantum. The idea of this approach is to make\nthe time quantum repeatedly adjusted according to the burst time of the\ncurrently running processes. Our experimental analysis shows that SMDRR\nperforms better than RR algorithm in terms of reducing the number of context\nswitches, average turnaround time and average waiting time.\n", "versions": [{"version": "v1", "created": "Thu, 24 Apr 2014 11:06:06 GMT"}], "update_date": "2014-04-25", "authors_parsed": [["Bhoi", "Sourav Kumar", ""], ["Panda", "Sanjaya Kumar", ""], ["Tarai", "Debashee", ""]]}]