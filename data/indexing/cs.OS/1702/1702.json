[{"id": "1702.02588", "submitter": "Assaf Eisenman", "authors": "Assaf Eisenman, Asaf Cidon, Evgenya Pergament, Or Haimovich, Ryan\n  Stutsman, Mohammad Alizadeh, and Sachin Katti", "title": "Flashield: a Key-value Cache that Minimizes Writes to Flash", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.OS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  As its price per bit drops, SSD is increasingly becoming the default storage\nmedium for cloud application databases. However, it has not become the\npreferred storage medium for key-value caches, even though SSD offers more than\n10x lower price per bit and sufficient performance compared to DRAM. This is\nbecause key-value caches need to frequently insert, update and evict small\nobjects. This causes excessive writes and erasures on flash storage, since\nflash only supports writes and erasures of large chunks of data. These\nexcessive writes and erasures significantly shorten the lifetime of flash,\nrendering it impractical to use for key-value caches. We present Flashield, a\nhybrid key-value cache that uses DRAM as a \"filter\" to minimize writes to SSD.\nFlashield performs light-weight machine learning profiling to predict which\nobjects are likely to be read frequently before getting updated; these objects,\nwhich are prime candidates to be stored on SSD, are written to SSD in large\nchunks sequentially. In order to efficiently utilize the cache's available\nmemory, we design a novel in-memory index for the variable-sized objects stored\non flash that requires only 4 bytes per object in DRAM. We describe Flashield's\ndesign and implementation and, we evaluate it on a real-world cache trace.\nCompared to state-of-the-art systems that suffer a write amplification of 2.5x\nor more, Flashield maintains a median write amplification of 0.5x without any\nloss of hit rate or throughput.\n", "versions": [{"version": "v1", "created": "Wed, 8 Feb 2017 19:21:13 GMT"}], "update_date": "2017-02-10", "authors_parsed": [["Eisenman", "Assaf", ""], ["Cidon", "Asaf", ""], ["Pergament", "Evgenya", ""], ["Haimovich", "Or", ""], ["Stutsman", "Ryan", ""], ["Alizadeh", "Mohammad", ""], ["Katti", "Sachin", ""]]}]