[{"id": "1812.07723", "submitter": "Amirhossein Esmaili", "authors": "Amirhossein Esmaili, Mahdi Nazemi, Massoud Pedram", "title": "Modeling Processor Idle Times in MPSoC Platforms to Enable Integrated\n  DPM, DVFS, and Task Scheduling Subject to a Hard Deadline", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.OS cs.DC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Energy efficiency is one of the most critical design criteria for modern\nembedded systems such as multiprocessor system-on-chips (MPSoCs). Dynamic\nvoltage and frequency scaling (DVFS) and dynamic power management (DPM) are two\nmajor techniques for reducing energy consumption in such embedded systems.\nFurthermore, MPSoCs are becoming more popular for many real-time applications.\nOne of the challenges of integrating DPM with DVFS and task scheduling of\nreal-time applications on MPSoCs is the modeling of idle intervals on these\nplatforms. In this paper, we present a novel approach for modeling idle\nintervals in MPSoC platforms which leads to a mixed integer linear programming\n(MILP) formulation integrating DPM, DVFS, and task scheduling of periodic task\ngraphs subject to a hard deadline. We also present a heuristic approach for\nsolving the MILP and compare its results with those obtained from solving the\nMILP.\n", "versions": [{"version": "v1", "created": "Wed, 19 Dec 2018 01:18:05 GMT"}], "update_date": "2018-12-20", "authors_parsed": [["Esmaili", "Amirhossein", ""], ["Nazemi", "Mahdi", ""], ["Pedram", "Massoud", ""]]}, {"id": "1812.09822", "submitter": "Srinivas Devadas", "authors": "Thomas Bourgeat, Ilia Lebedev, Andrew Wright, Sizhuo Zhang, Arvind,\n  Srinivas Devadas", "title": "MI6: Secure Enclaves in a Speculative Out-of-Order Processor", "comments": "15 pages", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.CR cs.OS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Recent attacks have broken process isolation by exploiting microarchitectural\nside channels that allow indirect access to shared microarchitectural state.\nEnclaves strengthen the process abstraction to restore isolation guarantees.\n  We propose MI6, an aggressive, speculative out-of-order processor capable of\nproviding secure enclaves under a threat model that includes an untrusted OS\nand an attacker capable of mounting any software attack currently considered\npractical, including control flow speculation attacks. MI6 is inspired by\nSanctum [16] and extends its isolation guarantee to more realistic memory\nhierarchies. It also introduces a purge instruction, which is used only when a\nsecure process is scheduled, and implements it for a complex processor\nmicroarchitecture. We model the performance impact of enclaves in MI6 through\nFPGA emulation on AWS F1 FPGAs by running SPEC CINT2006 benchmarks on top of an\nuntrusted Linux OS. Security comes at the cost of approximately 16.4% average\nslowdown for protected programs.\n", "versions": [{"version": "v1", "created": "Mon, 24 Dec 2018 03:55:32 GMT"}, {"version": "v2", "created": "Sat, 16 Feb 2019 02:33:11 GMT"}, {"version": "v3", "created": "Fri, 26 Jul 2019 03:23:13 GMT"}, {"version": "v4", "created": "Sat, 3 Aug 2019 02:13:34 GMT"}, {"version": "v5", "created": "Thu, 29 Aug 2019 04:53:09 GMT"}], "update_date": "2019-08-30", "authors_parsed": [["Bourgeat", "Thomas", ""], ["Lebedev", "Ilia", ""], ["Wright", "Andrew", ""], ["Zhang", "Sizhuo", ""], ["Arvind", "", ""], ["Devadas", "Srinivas", ""]]}, {"id": "1812.09920", "submitter": "Igor Korkin", "authors": "Igor Korkin", "title": "Divide et Impera: MemoryRanger Runs Drivers in Isolated Kernel Spaces", "comments": "Korkin, I. (2018, December 5-6). Divide et Impera: MemoryRanger Runs\n  Drivers in Isolated Kernel Spaces. In Proceedings of the BlackHat Europe\n  Conference, London, UK. 23 pages, 4 figures, 2 tables, 49 references.\n  Retrieved from\n  https://www.blackhat.com/eu-18/briefings/schedule/#divide-et-impera-memoryranger-runs-drivers-in-isolated-kernel-spaces-12668", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.CR cs.OS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  One of the main issues in the OS security is to provide trusted code\nexecution in an untrusted environment. During executing, kernel-mode drivers\nallocate and process memory data: OS internal structures, users private\ninformation, and sensitive data of third-party drivers. All this data and the\ndrivers code can be tampered with by kernel-mode malware. Microsoft security\nexperts integrated new features to fill this gap, but they are not enough:\nallocated data can be stolen and patched and the drivers code can be dumped\nwithout any security reaction. The proposed hypervisor-based system\n(MemoryRanger) tackles this issue by executing drivers in separate kernel\nenclaves with specific memory attributes. MemoryRanger protects code and data\nusing Intel VT-x and EPT features with low performance degradation on Windows\n10 x64.\n", "versions": [{"version": "v1", "created": "Mon, 24 Dec 2018 13:30:40 GMT"}], "update_date": "2018-12-27", "authors_parsed": [["Korkin", "Igor", ""]]}]