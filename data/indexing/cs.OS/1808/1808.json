[{"id": "1808.00017", "submitter": "Zheng Dong", "authors": "Zheng Dong and Cong Liu", "title": "New Analysis Techniques for Supporting Hard Real-Time Sporadic DAG Task\n  Systems on Multiprocessors", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.OS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The scheduling and schedulability analysis of real-time directed acyclic\ngraph (DAG) task systems have received much recent attention. The DAG model can\naccurately represent intra-task parallelim and precedence constraints existing\nin many application domains. Existing techniques show that analyzing the DAG\nmodel is fundamentally more challenging compared to the ordinary sporadic task\nmodel, due to the complex intra-DAG precedence constraints which may cause\nrather pessimistic schedulability loss. However,such increased loss is\ncounter-intuitive because the DAG structure shall better exploit the\nparallelism provided by the multiprocessor platform. Our observation is that\nthe intra-DAG precedence constraints, if not carefully considered by the\nscheduling algorithm, may cause very unpredictable execution behaviors of\nsubtasks in a DAG and further cause pessimistic analysis. In this paper, we\npresent a set of novel scheduling and analysis techniques for better supporting\nhard real-time sporadic DAG tasks on multiprocessors, through smartly defining\nand analyzing the execution order of subtasks in each DAG. Evaluation\ndemonstrates that our developed utilization-based schedulability test is highly\nefficient, which dramatically improves schedulability of existing\nutilization-based tests by over 60% on average. Interestingly, when each DAG in\nthe system is an ordinary sporadic task, our test becomes identical to the\nclassical density test designed for the sporadic task model.\n", "versions": [{"version": "v1", "created": "Tue, 31 Jul 2018 18:30:09 GMT"}], "update_date": "2018-08-02", "authors_parsed": [["Dong", "Zheng", ""], ["Liu", "Cong", ""]]}, {"id": "1808.04239", "submitter": "Chen-Kai Lin", "authors": "Chen-Kai Lin, Ching-Chun (Jim) Huang, Bow-Yaw Wang", "title": "A Spin-based model checking for the simple concurrent program on a\n  preemptive RTOS", "comments": "7 pages, 5 figures, The 24th Workshop on Compiler Techniques and\n  System Software for High-Performance and Embedded Computing, 2018, Chiayi,\n  Taiwan", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.OS cs.FL cs.LO", "license": "http://creativecommons.org/licenses/by-sa/4.0/", "abstract": "  We adapt an existing preemptive scheduling model of RTOS kernel by eChronos\nfrom machine-assisted proof to Spin-based model checker. The model we\nconstructed can be automatically verified rather than formulating proofs by\nhand. Moreover, we look into the designs of a Linux-like real-time\nkernel--Piko/RT and the specification of ARMv7-M architecture to reconstruct\nthe model, and use LTL to specify a simple concurrent\nprograms--consumer/producer problem during the development stage of the kernel.\nWe show that under the preemptive scheduling and the mechanism of ARMv7-M, the\nprogram will not suffer from race condition, starvation, and deadlock.\n", "versions": [{"version": "v1", "created": "Tue, 7 Aug 2018 08:21:58 GMT"}], "update_date": "2018-08-14", "authors_parsed": [["Lin", "Chen-Kai", "", "Jim"], ["Ching-Chun", "", "", "Jim"], ["Huang", "", ""], ["Wang", "Bow-Yaw", ""]]}, {"id": "1808.05078", "submitter": "Heejin Park", "authors": "Heejin Park, Shuang Zhai, Long Lu, Felix Xiaozhu Lin", "title": "StreamBox-TZ: Secure Stream Analytics at the Edge with TrustZone", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.CR cs.DC cs.OS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  While it is compelling to process large streams of IoT data on the cloud\nedge, doing so exposes the data to a sophisticated, vulnerable software stack\non the edge and hence security threats. To this end, we advocate isolating the\ndata and its computations in a trusted execution environment (TEE) on the edge,\nshielding them from the remaining edge software stack which we deem untrusted.\nThis approach faces two major challenges: (1) executing high-throughput,\nlow-delay stream analytics in a single TEE, which is constrained by a low\ntrusted computing base (TCB) and limited physical memory; (2) verifying\nexecution of stream analytics as the execution involves untrusted software\ncomponents on the edge. In response, we present StreamBox-TZ (SBT), a stream\nanalytics engine for an edge platform that offers strong data security,\nverifiable results, and good performance. SBT contributes a data plane designed\nand optimized for a TEE based on ARM TrustZone. It supports continuous remote\nattestation for analytics correctness and result freshness while incurring low\noverhead. SBT only adds 42.5 KB executable to the TCB (16% of the entire TCB).\nOn an octa core ARMv8 platform, it delivers the state-of-the-art performance by\nprocessing input events up to 140 MB/sec (12M events/sec) with sub-second\ndelay. The overhead incurred by SBT's security mechanism is less than 25%.\n", "versions": [{"version": "v1", "created": "Thu, 2 Aug 2018 21:21:50 GMT"}, {"version": "v2", "created": "Wed, 5 Jun 2019 20:52:44 GMT"}], "update_date": "2019-06-07", "authors_parsed": [["Park", "Heejin", ""], ["Zhai", "Shuang", ""], ["Lu", "Long", ""], ["Lin", "Felix Xiaozhu", ""]]}, {"id": "1808.05579", "submitter": "Giuseppe Petracca", "authors": "Giuseppe Petracca, Jens Grossklags, Patrick McDaniel and Trent Jaeger", "title": "Regulating Access to System Sensors in Cooperating Programs", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.CR cs.HC cs.OS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Modern operating systems such as Android, iOS, Windows Phone, and Chrome OS\nsupport a cooperating program abstraction. Instead of placing all functionality\ninto a single program, programs cooperate to complete tasks requested by users.\nHowever, untrusted programs may exploit interactions with other programs to\nobtain unauthorized access to system sensors either directly or through\nprivileged services. Researchers have proposed that programs should only be\nauthorized to access system sensors on a user-approved input event, but these\nmethods do not account for possible delegation done by the program receiving\nthe user input event. Furthermore, proposed delegation methods do not enable\nusers to control the use of their input events accurately. In this paper, we\npropose ENTRUST, a system that enables users to authorize sensor operations\nthat follow their input events, even if the sensor operation is performed by a\nprogram different from the program receiving the input event. ENTRUST tracks\nuser input as well as delegation events and restricts the execution of such\nevents to compute unambiguous delegation paths to enable accurate and reusable\nauthorization of sensor operations. To demonstrate this approach, we implement\nthe ENTRUST authorization system for Android. We find, via a laboratory user\nstudy, that attacks can be prevented at a much higher rate (54-64%\nimprovement); and via a field user study, that ENTRUST requires no more than\nthree additional authorizations per program with respect to the first-use\napproach, while incurring modest performance (<1%) and memory overheads (5.5 KB\nper program).\n", "versions": [{"version": "v1", "created": "Thu, 2 Aug 2018 21:37:29 GMT"}], "update_date": "2018-08-17", "authors_parsed": [["Petracca", "Giuseppe", ""], ["Grossklags", "Jens", ""], ["McDaniel", "Patrick", ""], ["Jaeger", "Trent", ""]]}, {"id": "1808.06049", "submitter": "Thomas Pasquier", "authors": "Thomas Pasquier and Xueyuan Han and Thomas Moyer and Adam Bates and\n  Olivier Hermant and David Eyers and Jean Bacon and Margo Seltzer", "title": "Runtime Analysis of Whole-System Provenance", "comments": "16 pages, 12 figures, 25th ACM Conference on Computer and\n  Communications Security 2018", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.CR cs.OS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Identifying the root cause and impact of a system intrusion remains a\nfoundational challenge in computer security. Digital provenance provides a\ndetailed history of the flow of information within a computing system,\nconnecting suspicious events to their root causes. Although existing\nprovenance-based auditing techniques provide value in forensic analysis, they\nassume that such analysis takes place only retrospectively. Such post-hoc\nanalysis is insufficient for realtime security applications, moreover, even for\nforensic tasks, prior provenance collection systems exhibited poor performance\nand scalability, jeopardizing the timeliness of query responses.\n  We present CamQuery, which provides inline, realtime provenance analysis,\nmaking it suitable for implementing security applications. CamQuery is a Linux\nSecurity Module that offers support for both userspace and in-kernel execution\nof analysis applications. We demonstrate the applicability of CamQuery to a\nvariety of runtime security applications including data loss prevention,\nintrusion detection, and regulatory compliance. In evaluation, we demonstrate\nthat CamQuery reduces the latency of realtime query mechanisms, while imposing\nminimal overheads on system execution. CamQuery thus enables the further\ndeployment of provenance-based technologies to address central challenges in\ncomputer security.\n", "versions": [{"version": "v1", "created": "Sat, 18 Aug 2018 06:39:03 GMT"}, {"version": "v2", "created": "Sat, 25 Aug 2018 05:50:43 GMT"}], "update_date": "2018-08-28", "authors_parsed": [["Pasquier", "Thomas", ""], ["Han", "Xueyuan", ""], ["Moyer", "Thomas", ""], ["Bates", "Adam", ""], ["Hermant", "Olivier", ""], ["Eyers", "David", ""], ["Bacon", "Jean", ""], ["Seltzer", "Margo", ""]]}, {"id": "1808.06434", "submitter": "Andreas Schmidt", "authors": "Stefan Reif and Andreas Schmidt and Timo H\\\"onig and Thorsten Herfet\n  and Wolfgang Schr\\\"oder-Preikschat", "title": "X-Lap: A Systems Approach for Cross-Layer Profiling and Latency Analysis\n  for Cyber-Physical Networks", "comments": null, "journal-ref": null, "doi": "10.1145/3267419.3267422", "report-no": null, "categories": "cs.NI cs.OS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Networked control applications for cyber-physical networks demand predictable\nand reliable real-time communication. Applications of this domain have to\ncooperate with network protocols, the operating system, and the hardware to\nimprove safety properties and increase resource efficiency. In consequence, a\ncross-layer approach is necessary for the design and holistic optimisation of\ncyber-physical systems and networks. This paper presents X-Lap, a cross-layer,\ninter-host timing analysis tool tailored to the needs of real-time\ncommunication. We use X-Lap to evaluate the timing behaviour of a reliable\nreal-time communication protocol. Our analysis identifies parts of the protocol\nwhich are responsible for unwanted jitter. To system designers, X-Lap provides\nuseful support for the design and evaluation of networked real-time systems.\n", "versions": [{"version": "v1", "created": "Mon, 20 Aug 2018 13:15:56 GMT"}], "update_date": "2018-08-21", "authors_parsed": [["Reif", "Stefan", ""], ["Schmidt", "Andreas", ""], ["H\u00f6nig", "Timo", ""], ["Herfet", "Thorsten", ""], ["Schr\u00f6der-Preikschat", "Wolfgang", ""]]}, {"id": "1808.07353", "submitter": "David Kreitschmann", "authors": "David Kreitschmann", "title": "User Manual for the Apple CoreCapture Framework", "comments": "12 pages, 12 figures", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.NI cs.OS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  CoreCapture is Apple's primary logging and tracing framework for IEEE 802.11\non iOS and macOS. It allows users and developers to create comprehensive debug\noutput for analysis by Apple. In this manual, we provide an overview into the\nconcepts, show in detail how CoreCapture logs can be created on iOS and macOS,\nand introduce the first CoreCapture dissector for Wireshark.\n", "versions": [{"version": "v1", "created": "Tue, 17 Jul 2018 16:34:43 GMT"}], "update_date": "2018-08-23", "authors_parsed": [["Kreitschmann", "David", ""]]}, {"id": "1808.08192", "submitter": "Sumit Maheshwari", "authors": "Sumit Maheshwari, Saurabh Deochake, Ridip De, Anish Grover", "title": "Comparative Study of Virtual Machines and Containers for DevOps\n  Developers", "comments": "16:198:553 Course Rutgers CS", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.OS cs.NI", "license": "http://creativecommons.org/licenses/by-nc-sa/4.0/", "abstract": "  In this work, we plan to develop a system to compare virtual machines with\ncontainer technology. We would devise ways to measure the administrator effort\nof containers vs. Virtual Machines (VMs). Metrics that will be tested against\ninclude human efforts required, ease of migration, resource utilization and\nease of use using containers and virtual machines.\n", "versions": [{"version": "v1", "created": "Fri, 17 Aug 2018 22:35:15 GMT"}], "update_date": "2018-08-27", "authors_parsed": [["Maheshwari", "Sumit", ""], ["Deochake", "Saurabh", ""], ["De", "Ridip", ""], ["Grover", "Anish", ""]]}, {"id": "1808.10097", "submitter": "Behnam Dezfouli", "authors": "Immanuel Amirtharaj, Tai Groot, Behnam Dezfouli", "title": "Profiling and Improving the Duty-Cycling Performance of Linux-based IoT\n  Devices", "comments": "SCU's IoT Research Lab", "journal-ref": null, "doi": null, "report-no": "TR-SCU-SIOTLAB-AUG2018-PALLEX", "categories": "cs.OS cs.DC cs.NI cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Minimizing the energy consumption of Linux-based devices is an essential step\ntowards their wide deployment in various IoT scenarios. Energy saving methods\nsuch as duty-cycling aim to address this constraint by limiting the amount of\ntime the device is powered on. In this work we study and improve the amount of\ntime a Linux-based IoT device is powered on to accomplish its tasks. We analyze\nthe processes of system boot up and shutdown on two platforms, the Raspberry Pi\n3 and Raspberry Pi Zero Wireless, and enhance duty-cycling performance by\nidentifying and disabling time-consuming or unnecessary units initialized in\nthe userspace. We also study whether SD card speed and SD card capacity\nutilization affect boot up duration and energy consumption. In addition, we\npropose 'Pallex', a parallel execution framework built on top of the 'systemd\ninit' system to run a user application concurrently with userspace\ninitialization. We validate the performance impact of Pallex when applied to\nvarious IoT application scenarios: (i) capturing an image, (ii) capturing and\nencrypting an image, (iii) capturing and classifying an image using the the\nk-nearest neighbor algorithm, and (iv) capturing images and sending them to a\ncloud server. Our results show that system lifetime is increased by 18.3%,\n16.8%, 13.9% and 30.2%, for these application scenarios, respectively.\n", "versions": [{"version": "v1", "created": "Thu, 30 Aug 2018 03:09:40 GMT"}, {"version": "v2", "created": "Thu, 3 Jan 2019 20:36:43 GMT"}], "update_date": "2019-01-07", "authors_parsed": [["Amirtharaj", "Immanuel", ""], ["Groot", "Tai", ""], ["Dezfouli", "Behnam", ""]]}, {"id": "1808.10821", "submitter": "V\\'ictor Mayoral Vilches", "authors": "Carlos San Vicente Guti\\'errez, Lander Usategui San Juan, Irati\n  Zamalloa Ugarte and V\\'ictor Mayoral Vilches", "title": "Real-time Linux communications: an evaluation of the Linux communication\n  stack for real-time robotic applications", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.OS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  As robotics systems become more distributed, the communications between\ndifferent robot modules play a key role for the reliability of the overall\nrobot control. In this paper, we present a study of the Linux communication\nstack meant for real-time robotic applications. We evaluate the real-time\nperformance of UDP based communications in Linux on multi-core embedded devices\nas test platforms. We prove that, under an appropriate configuration, the Linux\nkernel greatly enhances the determinism of communications using the UDP\nprotocol. Furthermore, we demonstrate that concurrent traffic disrupts the\nbounded latencies and propose a solution by separating the real-time\napplication and the corresponding interrupt in a CPU.\n", "versions": [{"version": "v1", "created": "Thu, 30 Aug 2018 15:20:56 GMT"}], "update_date": "2018-09-03", "authors_parsed": [["Guti\u00e9rrez", "Carlos San Vicente", ""], ["Juan", "Lander Usategui San", ""], ["Ugarte", "Irati Zamalloa", ""], ["Vilches", "V\u00edctor Mayoral", ""]]}]