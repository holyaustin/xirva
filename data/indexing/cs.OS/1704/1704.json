[{"id": "1704.00999", "submitter": "Gilles Geeraerts", "authors": "Gilles Geeraerts and Jo\\\"el Goossens and Thi-Van-Anh Nguyen", "title": "A Backward Algorithm for the Multiprocessor Online Feasibility of\n  Sporadic Tasks", "comments": "Long version of a conference paper accepted to ACSD 2017", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.GT cs.OS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The online feasibility problem (for a set of sporadic tasks) asks whether\nthere is a scheduler that always prevents deadline misses (if any), whatever\nthe sequence of job releases, which is a priori} unknown to the scheduler. In\nthe multiprocessor setting, this problem is notoriously difficult. The only\nexact test for this problem has been proposed by Bonifaci and\nMarchetti-Spaccamela: it consists in modelling all the possible behaviours of\nthe scheduler and of the tasks as a graph; and to interpret this graph as a\ngame between the tasks and the scheduler, which are seen as antagonistic\nplayers. Then, computing a correct scheduler is equivalent to finding a winning\nstrategy for the `scheduler player', whose objective in the game is to avoid\ndeadline misses. In practice, however this approach is limited by the\nintractable size of the graph. In this work, we consider the classical\nattractor algorithm to solve such games, and introduce antichain techniques to\noptimise its performance in practice and overcome the huge size of the game\ngraph. These techniques are inspired from results from the formal methods\ncommunity, and exploit the specific structure of the feasibility problem. We\ndemonstrate empirically that our approach allows to dramatically improve the\nperformance of the game solving algorithm.\n", "versions": [{"version": "v1", "created": "Tue, 4 Apr 2017 13:26:31 GMT"}], "update_date": "2017-04-05", "authors_parsed": [["Geeraerts", "Gilles", ""], ["Goossens", "Jo\u00ebl", ""], ["Nguyen", "Thi-Van-Anh", ""]]}, {"id": "1704.01198", "submitter": "Lei Liu", "authors": "Lei Liu", "title": "Tackling Diversity and Heterogeneity by Vertical Memory Management", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.OS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Existing memory management mechanisms used in commodity computing machines\ntypically adopt hardware based address interleaving and OS directed random\nmemory allocation to service generic application requests. These conventional\nmemory management mechanisms are challenged by contention at multiple memory\nlevels, a daunting variety of workload behaviors, and an increasingly\ncomplicated memory hierarchy. Our ISCA-41 paper proposes vertical partitioning\nto eliminate shared resource contention at multiple levels in the memory\nhierarchy. Combined with horizontal memory management policies, our framework\nsupports a flexible policy space for tackling diverse application needs in\nproduction environment and is suitable for future heterogeneous memory systems.\n", "versions": [{"version": "v1", "created": "Tue, 4 Apr 2017 21:43:04 GMT"}], "update_date": "2017-04-06", "authors_parsed": [["Liu", "Lei", ""]]}, {"id": "1704.05600", "submitter": "Le Guan", "authors": "Le Guan, Peng Liu, Xinyu Xing, Xinyang Ge, Shengzhi Zhang, Meng Yu,\n  Trent Jaeger", "title": "TrustShadow: Secure Execution of Unmodified Applications with ARM\n  TrustZone", "comments": "MobiSys 2017", "journal-ref": null, "doi": "10.1145/3081333.3081349", "report-no": null, "categories": "cs.CR cs.OS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The rapid evolution of Internet-of-Things (IoT) technologies has led to an\nemerging need to make it smarter. A variety of applications now run\nsimultaneously on an ARM-based processor. For example, devices on the edge of\nthe Internet are provided with higher horsepower to be entrusted with storing,\nprocessing and analyzing data collected from IoT devices. This significantly\nimproves efficiency and reduces the amount of data that needs to be transported\nto the cloud for data processing, analysis and storage. However, commodity OSes\nare prone to compromise. Once they are exploited, attackers can access the data\non these devices. Since the data stored and processed on the devices can be\nsensitive, left untackled, this is particularly disconcerting.\n  In this paper, we propose a new system, TrustShadow that shields legacy\napplications from untrusted OSes. TrustShadow takes advantage of ARM TrustZone\ntechnology and partitions resources into the secure and normal worlds. In the\nsecure world, TrustShadow constructs a trusted execution environment for\nsecurity-critical applications. This trusted environment is maintained by a\nlightweight runtime system that coordinates the communication between\napplications and the ordinary OS running in the normal world. The runtime\nsystem does not provide system services itself. Rather, it forwards requests\nfor system services to the ordinary OS, and verifies the correctness of the\nresponses. To demonstrate the efficiency of this design, we prototyped\nTrustShadow on a real chip board with ARM TrustZone support, and evaluated its\nperformance using both microbenchmarks and real-world applications. We showed\nTrustShadow introduces only negligible overhead to real-world applications.\n", "versions": [{"version": "v1", "created": "Wed, 19 Apr 2017 03:30:09 GMT"}, {"version": "v2", "created": "Fri, 23 Jun 2017 02:43:41 GMT"}], "update_date": "2017-06-26", "authors_parsed": [["Guan", "Le", ""], ["Liu", "Peng", ""], ["Xing", "Xinyu", ""], ["Ge", "Xinyang", ""], ["Zhang", "Shengzhi", ""], ["Yu", "Meng", ""], ["Jaeger", "Trent", ""]]}, {"id": "1704.08876", "submitter": "Muhammad Ali Awan", "authors": "Muhammad Ali Awan and Konstantinos Bletsas and Pedro F. Souto and\n  Benny Akesson and Eduardo Tovar", "title": "Mixed-criticality Scheduling with Dynamic Redistribution of Shared Cache", "comments": "ECRTS 2017, 26 pages", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.OS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The design of mixed-criticality systems often involvespainful tradeoffs\nbetween safety guarantees and performance.However, the use of more detailed\narchitectural modelsin the design and analysis of scheduling arrangements for\nmixedcriticalitysystems can provide greater confidence in the analysis,but also\nopportunities for better performance. Motivated by thisview, we propose an\nextension of Vestal 19s model for mixedcriticalitymulticore systems that (i)\naccounts for the per-taskpartitioning of the last-level cache and (ii) supports\nthe dynamicreassignment, for better schedulability, of cache portions\ninitiallyreserved for lower-criticality tasks to the higher-criticalitytasks,\nwhen the system switches to high-criticality mode. Tothis model, we apply\npartitioned EDF scheduling with Ekbergand Yi 19s deadline-scaling technique.\nOur schedulability analysisand scalefactor calculation is cognisant of the\ncache resourcesassigned to each task, by using WCET estimates that take\nintoaccount these resources. It is hence able to leverage the\ndynamicreconfiguration of the cache partitioning, at mode change, forbetter\nperformance, in terms of provable schedulability. We alsopropose heuristics for\npartitioning the cache in low- and highcriticalitymode, that promote\nschedulability. Our experimentswith synthetic task sets, indicate tangible\nimprovements inschedulability compared to a baseline cache-aware\narrangementwhere there is no redistribution of cache resources from low-\ntohigh-criticality tasks in the event of a mode change.\n", "versions": [{"version": "v1", "created": "Fri, 28 Apr 2017 11:17:51 GMT"}], "update_date": "2017-05-01", "authors_parsed": [["Awan", "Muhammad Ali", ""], ["Bletsas", "Konstantinos", ""], ["Souto", "Pedro F.", ""], ["Akesson", "Benny", ""], ["Tovar", "Eduardo", ""]]}]