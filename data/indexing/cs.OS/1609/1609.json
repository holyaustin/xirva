[{"id": "1609.00100", "submitter": "Zhiyong Shan", "authors": "Zhiyong Shan", "title": "Suspicious-Taint-Based Access Control for Protecting OS from Network\n  Attacks", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.CR cs.OS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Today, security threats to operating systems largely come from network.\nTraditional discretionary access control mechanism alone can hardly defeat\nthem. Although traditional mandatory access control models can effectively\nprotect the security of OS, they have problems of being incompatible with\napplication software and complex in administration. In this paper, we propose a\nnew model, Suspicious-Taint-Based Access Control (STBAC) model, for defeating\nnetwork attacks while being compatible, simple and maintaining good system\nperformance. STBAC regards the processes using Non-Trustable-Communications as\nthe starting points of suspicious taint, traces the activities of the\nsuspiciously tainted processes by taint rules, and forbids the suspiciously\ntainted processes to illegally access vital resources by protection rules. Even\nin the cases when some privileged processes are subverted, STBAC can still\nprotect vital resources from being compromised by the intruder. We implemented\nthe model in the Linux kernel and evaluated it through experiments. The\nevaluation showed that STBAC could protect vital resources effectively without\nsignificant impact on compatibility and performance.\n", "versions": [{"version": "v1", "created": "Thu, 1 Sep 2016 03:45:39 GMT"}, {"version": "v2", "created": "Sat, 3 Sep 2016 22:40:31 GMT"}], "update_date": "2016-09-06", "authors_parsed": [["Shan", "Zhiyong", ""]]}, {"id": "1609.00875", "submitter": "Zhiyong Shan", "authors": "Zhiyong Shan", "title": "Compatible and Usable Mandatory Access Control for Good-enough OS\n  Security", "comments": "Electronic Commerce and Security, 2009. ISECS '09. Second\n  International Symposium on", "journal-ref": null, "doi": "10.1109/ISECS.2009.29", "report-no": null, "categories": "cs.OS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  OS compromise is one of the most serious computer security problems today,\nbut still not being resolved. Although people proposed different kinds of\nmethods, they could not be accepted by most users who are non-expert due to the\nlack of compatibility and usability. In this paper, we introduce a kind of new\nmandatory access control model, named CUMAC, that aims to achieve good-enough\nsecurity, high compatibility and usability. It has two novel features. One is\naccess control based on tracing potential intrusion that can reduce false\nnegatives and facilitate security configuration, in order to improve both\ncompatibility and usability; the other is automatically figuring out all of the\ncompatibility exceptions that usually incurs incompatible problems. The\nexperiments performed on the prototype show that CUMAC can defense attacks from\nnetwork, mobile disk and local untrustable users while keeping good\ncompatibility and usability.\n", "versions": [{"version": "v1", "created": "Sat, 3 Sep 2016 23:09:11 GMT"}], "update_date": "2016-09-06", "authors_parsed": [["Shan", "Zhiyong", ""]]}, {"id": "1609.02067", "submitter": "Gennady Pekhimenko", "authors": "Gennady Pekhimenko", "title": "Practical Data Compression for Modern Memory Hierarchies", "comments": "PhD Thesis", "journal-ref": null, "doi": null, "report-no": "CMU-CS-16-116", "categories": "cs.AR cs.OS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In this thesis, we describe a new, practical approach to integrating\nhardware-based data compression within the memory hierarchy, including on-chip\ncaches, main memory, and both on-chip and off-chip interconnects. This new\napproach is fast, simple, and effective in saving storage space. A key insight\nin our approach is that access time (including decompression latency) is\ncritical in modern memory hierarchies. By combining inexpensive hardware\nsupport with modest OS support, our holistic approach to compression achieves\nsubstantial improvements in performance and energy efficiency across the memory\nhierarchy. Using this new approach, we make several major contributions in this\nthesis. First, we propose a new compression algorithm, Base-Delta-Immediate\nCompression (BDI), that achieves high compression ratio with very low\ncompression/decompression latency. BDI exploits the existing low dynamic range\nof values present in many cache lines to compress them to smaller sizes using\nBase+Delta encoding. Second, we observe that the compressed size of a cache\nblock can be indicative of its reuse. We use this observation to develop a new\ncache insertion policy for compressed caches, the Size-based Insertion Policy\n(SIP), which uses the size of a compressed block as one of the metrics to\npredict its potential future reuse. Third, we propose a new main memory\ncompression framework, Linearly Compressed Pages (LCP), that significantly\nreduces the complexity and power cost of supporting main memory compression. We\ndemonstrate that any compression algorithm can be adapted to fit the\nrequirements of LCP, and that LCP can be efficiently integrated with the\nexisting cache compression designs, avoiding extra compression/decompression.\n", "versions": [{"version": "v1", "created": "Wed, 7 Sep 2016 16:53:40 GMT"}], "update_date": "2016-09-08", "authors_parsed": [["Pekhimenko", "Gennady", ""]]}, {"id": "1609.04781", "submitter": "Zhiyong Shan", "authors": "Zhiyong Shan, Yang Yu, Tzi-cker Chiueh", "title": "Confining Windows Inter-Process Communications for OS-Level Virtual\n  Machine", "comments": "VDTS '09 Proceedings of the 1st EuroSys Workshop on Virtualization\n  Technology for Dependable Systems", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.OS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  As OS-level virtualization technology usually imposes little overhead on\nvirtual machine start-up and running, it provides an excellent choice for\nbuilding intrusion/fault tolerant applications that require redundancy and\nfrequent invocation. When developing Windows OS-level virtual machine, however,\npeople will inevitably face the challenge of confining Windows Inter-Process\nCommunications (IPC). As IPC on Windows platform is more complex than UNIX\nstyle OS and most of the programs on Windows are not open-source, it is\ndifficult to discover all of the performed IPCs and confine them. In this\npaper, we propose three general principles to confine IPC on Windows OS and a\nnovel IPC confinement mechanism based on the principles. With the mechanism,\nfor the first time from the literature, we successfully virtualized RPC System\nService (RPCSS) and Internet Information Server (IIS) on Feather-weight Virtual\nMachine (FVM). Experimental results demonstrate that multiple IIS web server\ninstances can simultaneously run on single Windows OS with much less\nperformance overhead than other popular VM technology, offering a good basis\nfor constructing dependable system.\n", "versions": [{"version": "v1", "created": "Thu, 15 Sep 2016 19:18:12 GMT"}], "update_date": "2016-09-16", "authors_parsed": [["Shan", "Zhiyong", ""], ["Yu", "Yang", ""], ["Chiueh", "Tzi-cker", ""]]}, {"id": "1609.04785", "submitter": "Zhiyong Shan", "authors": "Zhiyong Shan, Tzi-cker Chiueh, Xin Wang", "title": "Virtualizing System and Ordinary Services in Windows-based OS-Level\n  Virtual Machines", "comments": "SAC '11 Proceedings of the 2011 ACM Symposium on Applied Computing", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.OS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  OS-level virtualization incurs smaller start-up and run-time overhead than\nHAL-based virtualization and thus forms an important building block for\ndeveloping fault-tolerant and intrusion-tolerant applications. A complete\nimplementation of OS-level virtualization on the Windows platform requires\nvirtualization of Windows services, such as system services like the Remote\nProcedure Call Server Service (RPCSS), because they are essentially extensions\nof the kernel. As Windows system services work very differently from their\ncounterparts on UNIX-style OS, i.e., daemons, and many of their implementation\ndetails are proprietary, virtualizing Windows system services turned out to be\nthe most challenging technical barrier for OS-level virtualization for the\nWindows platform. In this paper, we describe a general technique to virtualize\nWindows services, and demonstrate its effectiveness by applying it to\nsuccessfully virtualize a set of important Windows system services and ordinary\nservices on different versions of Windows OS, including RPCSS, DcomLaunch, IIS\nservice group, Tlntsvr, MySQL, Apache2.2, CiSvc, ImapiService, etc.\n", "versions": [{"version": "v1", "created": "Thu, 15 Sep 2016 19:21:22 GMT"}], "update_date": "2016-09-16", "authors_parsed": [["Shan", "Zhiyong", ""], ["Chiueh", "Tzi-cker", ""], ["Wang", "Xin", ""]]}, {"id": "1609.08154", "submitter": "Zhiyong Shan", "authors": "Zhiyong Shan, Yu-fang Sun", "title": "Implementing RBAC model in An Operating System Kernel", "comments": "in Chinese", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.OS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In this paper, the implementation of an operating system oriented RBAC model\nis discussed. Firstly, on the basis of RBAC96 model, a new RBAC model named OSR\nis presented. Secondly, the OSR model is enforced in RFSOS kernel by the way of\nintegrating GFAC method and Capability mechanism together. All parts of the OSR\nimplementation are described in detail.\n", "versions": [{"version": "v1", "created": "Mon, 26 Sep 2016 17:36:18 GMT"}], "update_date": "2016-09-28", "authors_parsed": [["Shan", "Zhiyong", ""], ["Sun", "Yu-fang", ""]]}, {"id": "1609.08372", "submitter": "Gernot Heiser", "authors": "Kevin Elphinstone, Amirreza Zarrabi, Adrian Danis, Yanyan Shen, Gernot\n  Heiser", "title": "An Evaluation of Coarse-Grained Locking for Multicore Microkernels", "comments": "11 pages, 7 figures, 28 references", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.OS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The trade-off between coarse- and fine-grained locking is a well understood\nissue in operating systems. Coarse-grained locking provides lower overhead\nunder low contention, fine-grained locking provides higher scalability under\ncontention, though at the expense of implementation complexity and re- duced\nbest-case performance.\n  We revisit this trade-off in the context of microkernels and tightly-coupled\ncores with shared caches and low inter-core migration latencies. We evaluate\nperformance on two architectures: x86 and ARM MPCore, in the former case also\nutilising transactional memory (Intel TSX). Our thesis is that on such\nhardware, a well-designed microkernel, with short system calls, can take\nadvantage of coarse-grained locking on modern hardware, avoid the run-time and\ncomplexity cost of multiple locks, enable formal verification, and still\nachieve scalability comparable to fine-grained locking.\n", "versions": [{"version": "v1", "created": "Tue, 27 Sep 2016 12:21:02 GMT"}, {"version": "v2", "created": "Wed, 28 Sep 2016 09:17:05 GMT"}], "update_date": "2016-09-29", "authors_parsed": [["Elphinstone", "Kevin", ""], ["Zarrabi", "Amirreza", ""], ["Danis", "Adrian", ""], ["Shen", "Yanyan", ""], ["Heiser", "Gernot", ""]]}]