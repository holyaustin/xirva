[{"id": "1107.2003", "submitter": "Qi Guo", "authors": "Qi Guo, Yunji Chen, Tianshi chen, and Ling Li", "title": "Efficient Deterministic Replay Using Complete Race Detection", "comments": "18 pages, 7 figures", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.PL cs.OS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Data races can significantly affect the executions of multi-threaded\nprograms. Hence, one has to recur the results of data races to\ndeterministically replay a multi-threaded program. However, data races are\nconcealed in enormous number of memory operations in a program. Due to the\ndifficulty of accurately identifying data races, previous multi-threaded\ndeterministic record/replay schemes for commodity multi-processor system give\nup to record data races directly. Consequently, they either record all shared\nmemory operations, which brings remarkable slowdown to the production run, or\nrecord the synchronization only, which introduces significant efforts to\nreplay.\n  Inspired by the advances in data race detection, we propose an efficient\nsoftware-only deterministic replay scheme for commodity multi-processor\nsystems, which is named RacX. The key insight of RacX is as follows: although\nit is NP-hard to accurately identify the existence of data races between a pair\nof memory operations, we can find out all potential data races in a\nmulti-threaded program, in which the false positives can be reduced to a small\namount with our automatic false positive reduction techniques. As a result,\nRacX can efficiently monitor all potential data races to deterministically\nreplay a multi-threaded program.\n  To evaluate RacX, we have carried out experiments over a number of well-known\nmulti-threaded programs from SPLASH-2 benchmark suite and large-scale\ncommercial programs. RacX can precisely recur production runs of these programs\nwith value determinism. Averagely, RacX causes only about 1.21%, 1.89%, 2.20%,\nand 8.41% slowdown to the original run during recording (for 2-, 4-, 8- and\n16-thread programs, respectively). The soundness, efficiency, scalability, and\nportability of RacX well demonstrate its superiority.\n", "versions": [{"version": "v1", "created": "Mon, 11 Jul 2011 11:51:06 GMT"}, {"version": "v2", "created": "Tue, 12 Jul 2011 08:46:58 GMT"}], "update_date": "2011-07-13", "authors_parsed": [["Guo", "Qi", ""], ["Chen", "Yunji", ""], ["chen", "Tianshi", ""], ["Li", "Ling", ""]]}, {"id": "1107.4786", "submitter": "Frederic Le Mouel", "authors": "Roya Golchay (CITI Insa Lyon / Inria Grenoble Rh\\^one-Alpes),\n  Fr\\'ed\\'eric Le Mou\\\"el (CITI Insa Lyon / Inria Grenoble Rh\\^one-Alpes),\n  St\\'ephane Fr\\'enot (CITI Insa Lyon / Inria Grenoble Rh\\^one-Alpes), Julien\n  Ponge (CITI Insa Lyon / Inria Grenoble Rh\\^one-Alpes)", "title": "Towards Bridging IoT and Cloud Services: Proposing Smartphones as Mobile\n  and Autonomic Service Gateways", "comments": "Position Paper", "journal-ref": "UbiMob'2011 (2011) 45--48", "doi": null, "report-no": null, "categories": "cs.OS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Computing is currently getting at the same time incredibly in the small with\nsensors/actuators embedded in our every- day objects and also greatly in the\nlarge with data and ser- vice clouds accessible anytime, anywhere. This\nInternet of Things is physically closed to the user but suffers from weak\nrun-time execution environments. Cloud Environments provide powerful data\nstorage and computing power but can not be easily accessed and integrate the\nfinal-user context- awareness. We consider smartphones are set to become the\nuniversal interface between these two worlds. In this position paper, we\npropose a middleware approach where smartphones provide service gateways to\nbridge the gap between IoT services and Cloud services. Since smartphones are\nmobile gateways, they should be able to (re)configure themself according to\ntheir place, things discovered around, and their own resources such battery.\nSeveral issues are discussed: collaborative event-based context management,\nadaptive and opportunistic service deployment and invocation, multi-criteria\n(user- and performance-oriented) optimization decision algorithm.\n", "versions": [{"version": "v1", "created": "Sun, 24 Jul 2011 19:39:02 GMT"}], "update_date": "2011-07-26", "authors_parsed": [["Golchay", "Roya", "", "CITI Insa Lyon / Inria Grenoble Rh\u00f4ne-Alpes"], ["Mou\u00ebl", "Fr\u00e9d\u00e9ric Le", "", "CITI Insa Lyon / Inria Grenoble Rh\u00f4ne-Alpes"], ["Fr\u00e9not", "St\u00e9phane", "", "CITI Insa Lyon / Inria Grenoble Rh\u00f4ne-Alpes"], ["Ponge", "Julien", "", "CITI Insa Lyon / Inria Grenoble Rh\u00f4ne-Alpes"]]}]