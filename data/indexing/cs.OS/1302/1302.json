[{"id": "1302.0621", "submitter": "Patrick P. C. Lee", "authors": "Chun-Ho Ng and Patrick P. C. Lee", "title": "RevDedup: A Reverse Deduplication Storage System Optimized for Reads to\n  Latest Backups", "comments": "A 7-page version appeared in APSys'13", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DC cs.OS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Scaling up the backup storage for an ever-increasing volume of virtual\nmachine (VM) images is a critical issue in virtualization environments. While\ndeduplication is known to effectively eliminate duplicates for VM image\nstorage, it also introduces fragmentation that will degrade read performance.\nWe propose RevDedup, a deduplication system that optimizes reads to latest VM\nimage backups using an idea called reverse deduplication. In contrast with\nconventional deduplication that removes duplicates from new data, RevDedup\nremoves duplicates from old data, thereby shifting fragmentation to old data\nwhile keeping the layout of new data as sequential as possible. We evaluate our\nRevDedup prototype using microbenchmark and real-world workloads. For a 12-week\nspan of real-world VM images from 160 users, RevDedup achieves high\ndeduplication efficiency with around 97% of saving, and high backup and read\nthroughput on the order of 1GB/s. RevDedup also incurs small metadata overhead\nin backup/read operations.\n", "versions": [{"version": "v1", "created": "Mon, 4 Feb 2013 09:09:38 GMT"}, {"version": "v2", "created": "Wed, 6 Feb 2013 12:32:32 GMT"}, {"version": "v3", "created": "Thu, 27 Jun 2013 06:04:17 GMT"}], "update_date": "2013-06-28", "authors_parsed": [["Ng", "Chun-Ho", ""], ["Lee", "Patrick P. C.", ""]]}, {"id": "1302.1306", "submitter": "Giuseppe Lipari", "authors": "Youcheng Sun, Romain Soulat, Giuseppe Lipari, \\'Etienne Andr\\'e,\n  Laurent Fribourg", "title": "Parametric Schedulability Analysis of Fixed Priority Real-Time\n  Distributed Systems", "comments": "Submitted to ECRTS 2013 (http://ecrts.eit.uni-kl.de/ecrts13)", "journal-ref": null, "doi": null, "report-no": "LSV-13-03", "categories": "cs.DC cs.OS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Parametric analysis is a powerful tool for designing modern embedded systems,\nbecause it permits to explore the space of design parameters, and to check the\nrobustness of the system with respect to variations of some uncontrollable\nvariable. In this paper, we address the problem of parametric schedulability\nanalysis of distributed real-time systems scheduled by fixed priority. In\nparticular, we propose two different approaches to parametric analysis: the\nfirst one is a novel technique based on classical schedulability analysis,\nwhereas the second approach is based on model checking of Parametric Timed\nAutomata (PTA).\n  The proposed analytic method extends existing sensitivity analysis for single\nprocessors to the case of a distributed system, supporting preemptive and\nnon-preemptive scheduling, jitters and unconstrained deadlines. Parametric\nTimed Automata are used to model all possible behaviours of a distributed\nsystem, and therefore it is a necessary and sufficient analysis. Both\ntechniques have been implemented in two software tools, and they have been\ncompared with classical holistic analysis on two meaningful test cases. The\nresults show that the analytic method provides results similar to classical\nholistic analysis in a very efficient way, whereas the PTA approach is slower\nbut covers the entire space of solutions.\n", "versions": [{"version": "v1", "created": "Wed, 6 Feb 2013 10:06:39 GMT"}], "update_date": "2013-02-07", "authors_parsed": [["Sun", "Youcheng", ""], ["Soulat", "Romain", ""], ["Lipari", "Giuseppe", ""], ["Andr\u00e9", "\u00c9tienne", ""], ["Fribourg", "Laurent", ""]]}, {"id": "1302.1747", "submitter": "Antonio Paolillo", "authors": "Nathan Fisher, Jo\\\"el Goossens, Pradeep M. Hettiarachchi, Antonio\n  Paolillo", "title": "Energy Minimization for Parallel Real-Time Systems with Malleable Jobs\n  and Homogeneous Frequencies", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.OS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In this work, we investigate the potential utility of parallelization for\nmeeting real-time constraints and minimizing energy. We consider malleable Gang\nscheduling of implicit-deadline sporadic tasks upon multiprocessors. We first\nshow the non-necessity of dynamic voltage/frequency regarding optimality of our\nscheduling problem. We adapt the canonical schedule for DVFS multiprocessor\nplatforms and propose a polynomial-time optimal processor/frequency-selection\nalgorithm. We evaluate the performance of our algorithm via simulations using\nparameters obtained from a hardware testbed implementation. Our algorithm has\nup to a 60 watt decrease in power consumption over the optimal non-parallel\napproach.\n", "versions": [{"version": "v1", "created": "Thu, 7 Feb 2013 13:52:09 GMT"}], "update_date": "2013-02-08", "authors_parsed": [["Fisher", "Nathan", ""], ["Goossens", "Jo\u00ebl", ""], ["Hettiarachchi", "Pradeep M.", ""], ["Paolillo", "Antonio", ""]]}, {"id": "1302.5109", "submitter": "Marco Sironi", "authors": "Marco Sironi, Francesco Tisato", "title": "Capturing Information Flows inside Android and Qemu Environments", "comments": "13 pages", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.OS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The smartphone market has grown so wide that it assumed a strategic\nrelevance. Today the most common smartphone OSs are Google's Android and\nApple's iOS. The former is particularly interesting due to its open source\nnature, that allows everyone to deeply inspect every aspect of the OS. Android\nsource code is also bundled with an hardware emulator, based on the open source\nsoftware Qemu, that allows the user to run the Android OS without the need of a\nphysical device. We first present a procedure to extract information flows from\na generic system. We then focus on Android and Qemu architectures and their\nlogging infrastructures. Finally, we detail what happens inside an Android\ndevice in a particular scenario: the system boot.\n", "versions": [{"version": "v1", "created": "Wed, 20 Feb 2013 15:50:29 GMT"}], "update_date": "2013-02-22", "authors_parsed": [["Sironi", "Marco", ""], ["Tisato", "Francesco", ""]]}, {"id": "1302.5502", "submitter": "Srimugunthan Dhandapani", "authors": "Srimugunthan, K. Gopinath, Giridhar Appaji Nag Yasa", "title": "LFTL: A multi-threaded FTL for a Parallel IO Flash Card under Linux", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.OS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  New PCI-e flash cards and SSDs supporting over 100,000 IOPs are now\navailable, with several usecases in the design of a high performance storage\nsystem. By using an array of flash chips, arranged in multiple banks, large\ncapacities are achieved. Such multi-banked architecture allow parallel read,\nwrite and erase operations. In a raw PCI-e flash card, such parallelism is\ndirectly available to the software layer. In addition, the devices have\nrestrictions such as, pages within a block can only be written sequentially.\nThe devices also have larger minimum write sizes (greater than 4KB). Current\nflash translation layers (FTLs) in Linux are not well suited for such devices\ndue to the high device speeds, architectural restrictions as well as other\nfactors such as high lock contention. We present a FTL for Linux that takes\ninto account the hardware restrictions, that also exploits the parallelism to\nachieve high speeds. We also consider leveraging the parallelism for garbage\ncollection by scheduling the garbage collection activities on idle banks. We\npropose and evaluate an adaptive method to vary the amount of garbage\ncollection according to the current I/O load on the device.\n", "versions": [{"version": "v1", "created": "Fri, 22 Feb 2013 07:32:48 GMT"}], "update_date": "2013-02-25", "authors_parsed": [["Srimugunthan", "", ""], ["Gopinath", "K.", ""], ["Yasa", "Giridhar Appaji Nag", ""]]}, {"id": "1302.5521", "submitter": "Ulrik Schultz", "authors": "Mikael Moghadam and David Johan Christensen and David Brandt and Ulrik\n  Pagh Schultz", "title": "Towards Python-based Domain-specific Languages for Self-reconfigurable\n  Modular Robotics Research", "comments": "Presented at DSLRob 2011 (arXiv:1212.3308)", "journal-ref": null, "doi": null, "report-no": "DSLRob/2011/04", "categories": "cs.RO cs.OS cs.PL cs.SE", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This paper explores the role of operating system and high-level languages in\nthe development of software and domain-specific languages (DSLs) for\nself-reconfigurable robotics. We review some of the current trends in\nself-reconfigurable robotics and describe the development of a software system\nfor ATRON II which utilizes Linux and Python to significantly improve software\nabstraction and portability while providing some basic features which could\nprove useful when using Python, either stand-alone or via a DSL, on a\nself-reconfigurable robot system. These features include transparent socket\ncommunication, module identification, easy software transfer and reliable\nmodule-to-module communication. The end result is a software platform for\nmodular robots that where appropriate builds on existing work in operating\nsystems, virtual machines, middleware and high-level languages.\n", "versions": [{"version": "v1", "created": "Fri, 22 Feb 2013 09:01:24 GMT"}], "update_date": "2013-02-25", "authors_parsed": [["Moghadam", "Mikael", ""], ["Christensen", "David Johan", ""], ["Brandt", "David", ""], ["Schultz", "Ulrik Pagh", ""]]}]