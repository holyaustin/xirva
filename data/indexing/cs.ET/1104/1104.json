[{"id": "1104.0924", "submitter": "Alexander Yu. Vlasov", "authors": "Alexander Yu. Vlasov", "title": "ReveR: Software Simulator of Reversible Processor with Stack", "comments": "LaTeX, 7 pages, no figures, 3 tables, v2: spelling and grammar\n  corrected; project url http://friedmann.objectis.net/Members/vlasov/rever", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.ET cs.AR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  A software model of a reversible processor ReveR with the stack is discussed\nin this paper. An architecture, the minimal set of elementary reversible\noperations together with an implementation of the basic control flow structures\nand procedures calls using simple assembler language are described.\n", "versions": [{"version": "v1", "created": "Tue, 5 Apr 2011 21:38:17 GMT"}, {"version": "v2", "created": "Tue, 31 May 2011 15:20:48 GMT"}], "update_date": "2011-06-01", "authors_parsed": [["Vlasov", "Alexander Yu.", ""]]}, {"id": "1104.1707", "submitter": "Andrew Adamatzky", "authors": "Andrew Adamatzky, Ben de Lacy Costello, Julian Holley, Jerzy Gorecki\n  and Larry Bull", "title": "Vesicle computers: Approximating Voronoi diagram on Voronoi automata", "comments": "Chaos, Solitons & Fractals (2011), in press", "journal-ref": "Chaos, Solitons & Fractals Volume 44, Issue 7, July 2011, Pages\n  480-489", "doi": "10.1016/j.chaos.2011.01.016", "report-no": null, "categories": "cs.ET nlin.CG", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Irregular arrangements of vesicles filled with excitable and precipitating\nchemical systems are imitated by Voronoi automata --- finite-state machines\ndefined on a planar Voronoi diagram. Every Voronoi cell takes four states:\nresting, excited, refractory and precipitate. A resting cell excites if it has\nat least one excited neighbour; the cell precipitates if a ratio of excited\ncells in its neighbourhood to its number of neighbours exceed certain\nthreshold. To approximate a Voronoi diagram on Voronoi automata we project a\nplanar set onto automaton lattice, thus cells corresponding to data-points are\nexcited. Excitation waves propagate across the Voronoi automaton, interact with\neach other and form precipitate in result of the interaction. Configuration of\nprecipitate represents edges of approximated Voronoi diagram. We discover\nrelation between quality of Voronoi diagram approximation and precipitation\nthreshold, and demonstrate feasibility of our model in approximation Voronoi\ndiagram of arbitrary-shaped objects and a skeleton of a planar shape.\n", "versions": [{"version": "v1", "created": "Sat, 9 Apr 2011 14:02:39 GMT"}], "update_date": "2011-09-28", "authors_parsed": [["Adamatzky", "Andrew", ""], ["Costello", "Ben de Lacy", ""], ["Holley", "Julian", ""], ["Gorecki", "Jerzy", ""], ["Bull", "Larry", ""]]}, {"id": "1104.1824", "submitter": "Francis Cabarle", "authors": "Francis Cabarle, Henry Adorna, Miguel A. Martinez-del-Amor", "title": "Simulating Spiking Neural P systems without delays using GPUs", "comments": "19 pages in total, 4 figures, listings/algorithms, submitted at the\n  9th Brainstorming Week in Membrane Computing, University of Seville, Spain", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DC cs.ET cs.FL cs.NE q-bio.NC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We present in this paper our work regarding simulating a type of P system\nknown as a spiking neural P system (SNP system) using graphics processing units\n(GPUs). GPUs, because of their architectural optimization for parallel\ncomputations, are well-suited for highly parallelizable problems. Due to the\nadvent of general purpose GPU computing in recent years, GPUs are not limited\nto graphics and video processing alone, but include computationally intensive\nscientific and mathematical applications as well. Moreover P systems, including\nSNP systems, are inherently and maximally parallel computing models whose\ninspirations are taken from the functioning and dynamics of a living cell. In\nparticular, SNP systems try to give a modest but formal representation of a\nspecial type of cell known as the neuron and their interactions with one\nanother. The nature of SNP systems allowed their representation as matrices,\nwhich is a crucial step in simulating them on highly parallel devices such as\nGPUs. The highly parallel nature of SNP systems necessitate the use of hardware\nintended for parallel computations. The simulation algorithms, design\nconsiderations, and implementation are presented. Finally, simulation results,\nobservations, and analyses using an SNP system that generates all numbers in\n$\\mathbb N$ - {1} are discussed, as well as recommendations for future work.\n", "versions": [{"version": "v1", "created": "Mon, 11 Apr 2011 01:17:01 GMT"}], "update_date": "2011-04-13", "authors_parsed": [["Cabarle", "Francis", ""], ["Adorna", "Henry", ""], ["Martinez-del-Amor", "Miguel A.", ""]]}, {"id": "1104.2529", "submitter": "Paul-Henri Tichit", "authors": "Tichit Paul-Henri, Shah Nawaz Burokur, Dylan Germain, Andre de Lustrac", "title": "Design and experimental demonstration of a high-directive emission with\n  optical transformations", "comments": "http://prb.aps.org/abstract/PRB/v83/i15/e155108", "journal-ref": "Phys. Rev. B, American Physical Society, 2011, 83, 155108", "doi": "10.1103/PhysRevB.83.155108", "report-no": null, "categories": "cond-mat.mtrl-sci cs.ET physics.optics", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  With the explosion of wireless networks and automotive radar systems, there\nis an acute need for new materials and technologies that would not only\nminimize the size of these devices, but also enhance their performances. The\ntechnique of transformation optics-an innovative approach to produce artificial\nmetamaterials that control electromagnetic waves as if space itself was\ntransformed-provides unique opportunities to reach this goal. In this paper we\ndesign, fabricate and characterize a new class of metamaterial capable of\ntransforming the source distribution and radiation pattern of an isotropic\nmicrowave emitter. Our findings have considerable implications for the\ndevelopment of new ultradirective antennas with superior performances and\ncompactness compared to conventional antennas operating in the same frequency\nrange.\n", "versions": [{"version": "v1", "created": "Wed, 13 Apr 2011 15:39:01 GMT"}], "update_date": "2011-04-14", "authors_parsed": [["Paul-Henri", "Tichit", ""], ["Burokur", "Shah Nawaz", ""], ["Germain", "Dylan", ""], ["de Lustrac", "Andre", ""]]}, {"id": "1104.2809", "submitter": "Matthew Patitz", "authors": "Bin Fu and Matthew J. Patitz and Robert T. Schweller and Bobby Sheline", "title": "Self-Assembly with Geometric Tiles", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.CG cs.CC cs.DS cs.ET", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In this work we propose a generalization of Winfree's abstract Tile Assembly\nModel (aTAM) in which tile types are assigned rigid shapes, or geometries,\nalong each tile face. We examine the number of distinct tile types needed to\nassemble shapes within this model, the temperature required for efficient\nassembly, and the problem of designing compact geometric faces to meet given\ncompatibility specifications. Our results show a dramatic decrease in the\nnumber of tile types needed to assemble $n \\times n$ squares to\n$\\Theta(\\sqrt{\\log n})$ at temperature 1 for the most simple model which meets\na lower bound from Kolmogorov complexity, and $O(\\log\\log n)$ in a model in\nwhich tile aggregates must move together through obstacle free paths within the\nplane. This stands in contrast to the $\\Theta(\\log n / \\log\\log n)$ tile types\nat temperature 2 needed in the basic aTAM. We also provide a general method for\nsimulating a large and computationally universal class of temperature 2 aTAM\nsystems with geometric tiles at temperature 1. Finally, we consider the problem\nof computing a set of compact geometric faces for a tile system to implement a\ngiven set of compatibility specifications. We show a number of bounds on the\ncomplexity of geometry size needed for various classes of compatibility\nspecifications, many of which we directly apply to our tile assembly results to\nachieve non-trivial reductions in geometry size.\n", "versions": [{"version": "v1", "created": "Thu, 14 Apr 2011 15:46:11 GMT"}], "update_date": "2015-03-19", "authors_parsed": [["Fu", "Bin", ""], ["Patitz", "Matthew J.", ""], ["Schweller", "Robert T.", ""], ["Sheline", "Bobby", ""]]}]