[{"id": "0808.0084", "submitter": "Frederic Magniez", "authors": "Frederic Magniez, Ashwin Nayak, Peter C. Richter, and Miklos Santha", "title": "On the hitting times of quantum versus random walks", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "quant-ph cs.DS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In this paper we define new Monte Carlo type classical and quantum hitting\ntimes, and we prove several relationships among these and the already existing\nLas Vegas type definitions. In particular, we show that for some marked state\nthe two types of hitting time are of the same order in both the classical and\nthe quantum case.\n  Further, we prove that for any reversible ergodic Markov chain $P$, the\nquantum hitting time of the quantum analogue of $P$ has the same order as the\nsquare root of the classical hitting time of $P$. We also investigate the\n(im)possibility of achieving a gap greater than quadratic using an alternative\nquantum walk.\n  Finally, we present new quantum algorithms for the detection and finding\nproblems. The complexities of both algorithms are related to the new,\npotentially smaller, quantum hitting times. The detection algorithm is based on\nphase estimation and is particularly simple. The finding algorithm combines a\nsimilar phase estimation based procedure with ideas of Tulsi from his recent\ntheorem for the 2D grid. Extending his result, we show that for any\nstate-transitive Markov chain with unique marked state, the quantum hitting\ntime is of the same order for both the detection and finding problems.\n", "versions": [{"version": "v1", "created": "Fri, 1 Aug 2008 14:45:51 GMT"}], "update_date": "2018-03-22", "authors_parsed": [["Magniez", "Frederic", ""], ["Nayak", "Ashwin", ""], ["Richter", "Peter C.", ""], ["Santha", "Miklos", ""]]}, {"id": "0808.0148", "submitter": "James Lee", "authors": "Punyashloka Biswal, James R. Lee, Satish Rao", "title": "Eigenvalue bounds, spectral partitioning, and metrical deformations via\n  flows", "comments": "Minor revisions", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DS cs.CG math.MG math.SP", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We present a new method for upper bounding the second eigenvalue of the\nLaplacian of graphs. Our approach uses multi-commodity flows to deform the\ngeometry of the graph; we embed the resulting metric into Euclidean space to\nrecover a bound on the Rayleigh quotient. Using this, we show that every\n$n$-vertex graph of genus $g$ and maximum degree $d$ satisfies $\\lambda_2(G) =\nO((g+1)^3 d/n)$. This recovers the $O(d/n)$ bound of Spielman and Teng for\nplanar graphs, and compares to Kelner's bound of $O((g+1) poly(d)/n)$, but our\nproof does not make use of conformal mappings or circle packings. We are thus\nable to extend this to resolve positively a conjecture of Spielman and Teng, by\nproving that $\\lambda_2(G) = O(d h^6 \\log h/n)$ whenever $G$ is $K_h$-minor\nfree. This shows, in particular, that spectral partitioning can be used to\nrecover $O(\\sqrt{n})$-sized separators in bounded degree graphs that exclude a\nfixed minor. We extend this further by obtaining nearly optimal bounds on\n$\\lambda_2$ for graphs which exclude small-depth minors in the sense of\nPlotkin, Rao, and Smith. Consequently, we show that spectral algorithms find\nsmall separators in a general class of geometric graphs.\n  Moreover, while the standard \"sweep\" algorithm applied to the second\neigenvector may fail to find good quotient cuts in graphs of unbounded degree,\nour approach produces a vector that works for arbitrary graphs. This yields an\nalternate proof of the result of Alon, Seymour, and Thomas that every\nexcluded-minor family of graphs has $O(\\sqrt{n})$-node balanced separators.\n", "versions": [{"version": "v1", "created": "Fri, 1 Aug 2008 16:45:16 GMT"}, {"version": "v2", "created": "Sat, 9 Aug 2008 15:54:35 GMT"}], "update_date": "2008-08-09", "authors_parsed": [["Biswal", "Punyashloka", ""], ["Lee", "James R.", ""], ["Rao", "Satish", ""]]}, {"id": "0808.0159", "submitter": "Eli Ben-Naim", "authors": "T. Antal, D. ben-Avraham, E. Ben-Naim, P.L. Krapivsky", "title": "Front Propagation with Rejuvenation in Flipping Processes", "comments": "10 pages, 9 figures, 4 tables", "journal-ref": "J. Phys. A 41, 465002 (2008)", "doi": "10.1088/1751-8113/41/46/465002", "report-no": null, "categories": "cond-mat.stat-mech cs.DS math.PR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We study a directed flipping process that underlies the performance of the\nrandom edge simplex algorithm. In this stochastic process, which takes place on\na one-dimensional lattice whose sites may be either occupied or vacant,\noccupied sites become vacant at a constant rate and simultaneously cause all\nsites to the right to change their state. This random process exhibits rich\nphenomenology. First, there is a front, defined by the position of the\nleft-most occupied site, that propagates at a nontrivial velocity. Second, the\nfront involves a depletion zone with an excess of vacant sites. The total\nexcess D_k increases logarithmically, D_k ~ ln k, with the distance k from the\nfront. Third, the front exhibits rejuvenation -- young fronts are vigorous but\nold fronts are sluggish. We investigate these phenomena using a quasi-static\napproximation, direct solutions of small systems, and numerical simulations.\n", "versions": [{"version": "v1", "created": "Fri, 1 Aug 2008 17:44:13 GMT"}], "update_date": "2008-10-16", "authors_parsed": [["Antal", "T.", ""], ["ben-Avraham", "D.", ""], ["Ben-Naim", "E.", ""], ["Krapivsky", "P. L.", ""]]}, {"id": "0808.0163", "submitter": "Daniel A. Spielman", "authors": "Joshua Batson, Daniel A. Spielman, Nikhil Srivastava", "title": "Twice-Ramanujan Sparsifiers", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DS cs.DM", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We prove that every graph has a spectral sparsifier with a number of edges\nlinear in its number of vertices. As linear-sized spectral sparsifiers of\ncomplete graphs are expanders, our sparsifiers of arbitrary graphs can be\nviewed as generalizations of expander graphs.\n  In particular, we prove that for every $d>1$ and every undirected, weighted\ngraph $G=(V,E,w)$ on $n$ vertices, there exists a weighted graph\n$H=(V,F,\\tilde{w})$ with at most $\\ceil{d(n-1)}$ edges such that for every $x\n\\in \\R^{V}$, \\[ x^{T}L_{G}x \\leq x^{T}L_{H}x \\leq\n(\\frac{d+1+2\\sqrt{d}}{d+1-2\\sqrt{d}})\\cdot x^{T}L_{G}x \\] where $L_{G}$ and\n$L_{H}$ are the Laplacian matrices of $G$ and $H$, respectively. Thus, $H$\napproximates $G$ spectrally at least as well as a Ramanujan expander with\n$dn/2$ edges approximates the complete graph. We give an elementary\ndeterministic polynomial time algorithm for constructing $H$.\n", "versions": [{"version": "v1", "created": "Fri, 1 Aug 2008 18:19:17 GMT"}, {"version": "v2", "created": "Mon, 1 Dec 2008 19:13:09 GMT"}, {"version": "v3", "created": "Wed, 18 Nov 2009 07:27:03 GMT"}], "update_date": "2009-11-18", "authors_parsed": [["Batson", "Joshua", ""], ["Spielman", "Daniel A.", ""], ["Srivastava", "Nikhil", ""]]}, {"id": "0808.0298", "submitter": "Dmitrii V. Pasechnik", "authors": "Edith Elkind and Dmitrii V. Pasechnik", "title": "Computing the nucleolus of weighted voting games", "comments": "LaTeX, 12 pages, COMSOC-2008 workshop", "journal-ref": "Proceedings of SODA 2009, pp. 327-335", "doi": "10.1145/1496770.1496807", "report-no": null, "categories": "cs.GT cs.DS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Weighted voting games (WVG) are coalitional games in which an agent's\ncontribution to a coalition is given by his it weight, and a coalition wins if\nits total weight meets or exceeds a given quota. These games model\ndecision-making in political bodies as well as collaboration and surplus\ndivision in multiagent domains. The computational complexity of various\nsolution concepts for weighted voting games received a lot of attention in\nrecent years. In particular, Elkind et al.(2007) studied the complexity of\nstability-related solution concepts in WVGs, namely, of the core, the least\ncore, and the nucleolus. While they have completely characterized the\nalgorithmic complexity of the core and the least core, for the nucleolus they\nhave only provided an NP-hardness result. In this paper, we solve an open\nproblem posed by Elkind et al. by showing that the nucleolus of WVGs, and, more\ngenerally, k-vector weighted voting games with fixed k, can be computed in\npseudopolynomial time, i.e., there exists an algorithm that correctly computes\nthe nucleolus and runs in time polynomial in the number of players and the\nmaximum weight. In doing so, we propose a general framework for computing the\nnucleolus, which may be applicable to a wider of class of games.\n", "versions": [{"version": "v1", "created": "Sun, 3 Aug 2008 05:22:47 GMT"}], "update_date": "2010-10-21", "authors_parsed": [["Elkind", "Edith", ""], ["Pasechnik", "Dmitrii V.", ""]]}, {"id": "0808.0540", "submitter": "Paul Tarau", "authors": "Paul Tarau", "title": "Executable Set Theory and Arithmetic Encodings in Prolog", "comments": "Unpublished draft", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO cs.DM cs.DS cs.MS cs.SC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The paper is organized as a self-contained literate Prolog program that\nimplements elements of an executable finite set theory with focus on\ncombinatorial generation and arithmetic encodings. The complete Prolog code is\navailable at http://logic.csci.unt.edu/tarau/research/2008/pHFS.zip . First,\nranking and unranking functions for some \"mathematically elegant\" data types in\nthe universe of Hereditarily Finite Sets with Urelements are provided,\nresulting in arithmetic encodings for powersets, hypergraphs, ordinals and\nchoice functions. After implementing a digraph representation of Hereditarily\nFinite Sets we define {\\em decoration functions} that can recover well-founded\nsets from encodings of their associated acyclic digraphs. We conclude with an\nencoding of arbitrary digraphs and discuss a concept of duality induced by the\nset membership relation. In the process, we uncover the surprising possibility\nof internally sharing isomorphic objects, independently of their language level\ntypes and meanings.\n", "versions": [{"version": "v1", "created": "Tue, 5 Aug 2008 04:59:56 GMT"}], "update_date": "2009-09-29", "authors_parsed": [["Tarau", "Paul", ""]]}, {"id": "0808.0753", "submitter": "Paul Tarau", "authors": "Paul Tarau", "title": "Ranking Catamorphisms and Unranking Anamorphisms on Hereditarily Finite\n  Datatypes", "comments": "unpublished draft", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.SC cs.DM cs.DS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Using specializations of unfold and fold on a generic tree data type we\nderive unranking and ranking functions providing natural number encodings for\nvarious Hereditarily Finite datatypes.\n  In this context, we interpret unranking operations as instances of a generic\nanamorphism and ranking operations as instances of the corresponding\ncatamorphism.\n  Starting with Ackerman's Encoding from Hereditarily Finite Sets to Natural\nNumbers we define pairings and tuple encodings that provide building blocks for\na theory of Hereditarily Finite Functions.\n  The more difficult problem of ranking and unranking Hereditarily Finite\nPermutations is then tackled using Lehmer codes and factoradics.\n  The self-contained source code of the paper, as generated from a literate\nHaskell program, is available at\n\\url{http://logic.csci.unt.edu/tarau/research/2008/fFUN.zip}.\n  Keywords: ranking/unranking, pairing/tupling functions, Ackermann encoding,\nhereditarily finite sets, hereditarily finite functions, permutations and\nfactoradics, computational mathematics, Haskell data representations\n", "versions": [{"version": "v1", "created": "Wed, 6 Aug 2008 00:54:05 GMT"}], "update_date": "2008-08-07", "authors_parsed": [["Tarau", "Paul", ""]]}, {"id": "0808.0754", "submitter": "Paul Tarau", "authors": "Paul Tarau", "title": "A Functional Hitchhiker's Guide to Hereditarily Finite Sets, Ackermann\n  Encodings and Pairing Functions", "comments": "unpublished draft", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.MS cs.DM cs.DS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The paper is organized as a self-contained literate Haskell program that\nimplements elements of an executable finite set theory with focus on\ncombinatorial generation and arithmetic encodings. The code, tested under GHC\n6.6.1, is available at http://logic.csci.unt.edu/tarau/research/2008/fSET.zip .\n  We introduce ranking and unranking functions generalizing Ackermann's\nencoding to the universe of Hereditarily Finite Sets with Urelements. Then we\nbuild a lazy enumerator for Hereditarily Finite Sets with Urelements that\nmatches the unranking function provided by the inverse of Ackermann's encoding\nand we describe functors between them resulting in arithmetic encodings for\npowersets, hypergraphs, ordinals and choice functions. After implementing a\ndigraph representation of Hereditarily Finite Sets we define {\\em decoration\nfunctions} that can recover well-founded sets from encodings of their\nassociated acyclic digraphs. We conclude with an encoding of arbitrary digraphs\nand discuss a concept of duality induced by the set membership relation.\n  Keywords: hereditarily finite sets, ranking and unranking functions,\nexecutable set theory, arithmetic encodings, Haskell data representations,\nfunctional programming and computational mathematics\n", "versions": [{"version": "v1", "created": "Wed, 6 Aug 2008 01:05:09 GMT"}], "update_date": "2008-08-07", "authors_parsed": [["Tarau", "Paul", ""]]}, {"id": "0808.0760", "submitter": "Paul Tarau", "authors": "Paul Tarau", "title": "Declarative Combinatorics: Boolean Functions, Circuit Synthesis and BDDs\n  in Haskell", "comments": "unpublished draft", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We describe Haskell implementations of interesting combinatorial generation\nalgorithms with focus on boolean functions and logic circuit representations.\n  First, a complete exact combinational logic circuit synthesizer is described\nas a combination of catamorphisms and anamorphisms.\n  Using pairing and unpairing functions on natural number representations of\ntruth tables, we derive an encoding for Binary Decision Diagrams (BDDs) with\nthe unique property that its boolean evaluation faithfully mimics its\nstructural conversion to a a natural number through recursive application of a\nmatching pairing function.\n  We then use this result to derive ranking and unranking functions for BDDs\nand reduced BDDs.\n  Finally, a generalization of the encoding techniques to Multi-Terminal BDDs\nis provided.\n  The paper is organized as a self-contained literate Haskell program,\navailable at http://logic.csci.unt.edu/tarau/research/2008/fBDD.zip .\n  Keywords: exact combinational logic synthesis, binary decision diagrams,\nencodings of boolean functions, pairing/unpairing functions, ranking/unranking\nfunctions for BDDs and MTBDDs, declarative combinatorics in Haskell\n", "versions": [{"version": "v1", "created": "Wed, 6 Aug 2008 01:41:51 GMT"}], "update_date": "2008-08-07", "authors_parsed": [["Tarau", "Paul", ""]]}, {"id": "0808.0980", "submitter": "Gregory Gutin", "authors": "Peter Dankelmann, Gregory Gutin, Eun Jung Kim", "title": "On Complexity of Minimum Leaf Out-branching Problem", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DS cs.CC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Given a digraph $D$, the Minimum Leaf Out-Branching problem (MinLOB) is the\nproblem of finding in $D$ an out-branching with the minimum possible number of\nleaves, i.e., vertices of out-degree 0. Gutin, Razgon and Kim (2008) proved\nthat MinLOB is polynomial time solvable for acyclic digraphs which are exactly\nthe digraphs of directed path-width (DAG-width, directed tree-width,\nrespectively) 0. We investigate how much one can extend this polynomiality\nresult. We prove that already for digraphs of directed path-width (directed\ntree-width, DAG-width, respectively) 1, MinLOB is NP-hard. On the other hand,\nwe show that for digraphs of restricted directed tree-width (directed\npath-width, DAG-width, respectively) and a fixed integer $k$, the problem of\nchecking whether there is an out-branching with at most $k$ leaves is\npolynomial time solvable.\n", "versions": [{"version": "v1", "created": "Thu, 7 Aug 2008 08:41:48 GMT"}], "update_date": "2008-08-08", "authors_parsed": [["Dankelmann", "Peter", ""], ["Gutin", "Gregory", ""], ["Kim", "Eun Jung", ""]]}, {"id": "0808.1108", "submitter": "Nicolas Bock", "authors": "Nicolas Bock and Emanuel H. Rubensson and Pawe{\\l} Sa{\\l}ek and Anders\n  M. N. Niklasson and Matt Challacombe", "title": "Cache oblivious storage and access heuristics for blocked matrix-matrix\n  multiplication", "comments": "Fixed typos", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We investigate effects of ordering in blocked matrix--matrix multiplication.\nWe find that submatrices do not have to be stored contiguously in memory to\nachieve near optimal performance. Instead it is the choice of execution order\nof the submatrix multiplications that leads to a speedup of up to four times\nfor small block sizes. This is in contrast to results for single matrix\nelements showing that contiguous memory allocation quickly becomes irrelevant\nas the blocksize increases.\n", "versions": [{"version": "v1", "created": "Thu, 7 Aug 2008 22:49:29 GMT"}, {"version": "v2", "created": "Fri, 15 Aug 2008 14:34:31 GMT"}], "update_date": "2008-08-15", "authors_parsed": [["Bock", "Nicolas", ""], ["Rubensson", "Emanuel H.", ""], ["Sa\u0142ek", "Pawe\u0142", ""], ["Niklasson", "Anders M. N.", ""], ["Challacombe", "Matt", ""]]}, {"id": "0808.1128", "submitter": "Mihai Patrascu", "authors": "Timothy M. Chan and Mihai Patrascu and Liam Roditty", "title": "Dynamic Connectivity: Connecting to Networks and Geometry", "comments": "Full version of a paper to appear in FOCS 2008", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DS cs.CG", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Dynamic connectivity is a well-studied problem, but so far the most\ncompelling progress has been confined to the edge-update model: maintain an\nunderstanding of connectivity in an undirected graph, subject to edge\ninsertions and deletions. In this paper, we study two more challenging, yet\nequally fundamental problems.\n  Subgraph connectivity asks to maintain an understanding of connectivity under\nvertex updates: updates can turn vertices on and off, and queries refer to the\nsubgraph induced by \"on\" vertices. (For instance, this is closer to\napplications in networks of routers, where node faults may occur.)\n  We describe a data structure supporting vertex updates in O (m^{2/3})\namortized time, where m denotes the number of edges in the graph. This greatly\nimproves over the previous result [Chan, STOC'02], which required fast matrix\nmultiplication and had an update time of O(m^0.94). The new data structure is\nalso simpler.\n  Geometric connectivity asks to maintain a dynamic set of n geometric objects,\nand query connectivity in their intersection graph. (For instance, the\nintersection graph of balls describes connectivity in a network of sensors with\nbounded transmission radius.)\n  Previously, nontrivial fully dynamic results were known only for special\ncases like axis-parallel line segments and rectangles. We provide similarly\nimproved update times, O (n^{2/3}), for these special cases. Moreover, we show\nhow to obtain sublinear update bounds for virtually all families of geometric\nobjects which allow sublinear-time range queries, such as arbitrary 2D line\nsegments, d-dimensional simplices, and d-dimensional balls.\n", "versions": [{"version": "v1", "created": "Thu, 7 Aug 2008 22:16:15 GMT"}], "update_date": "2008-08-11", "authors_parsed": [["Chan", "Timothy M.", ""], ["Patrascu", "Mihai", ""], ["Roditty", "Liam", ""]]}, {"id": "0808.1246", "submitter": "Mugurel Ionut Andreica", "authors": "Mugurel Ionut Andreica, Romulus Andreica, Angela Andreica", "title": "Minimum Dissatisfaction Personnel Scheduling", "comments": "Some of the algorithmic techniques presented in this paper were later\n  used by the first author for developing solutions to several algorithmic\n  contest tasks (see the attached zip archive for some examples)", "journal-ref": "ARA Congress, Boston : United States (2008)", "doi": null, "report-no": null, "categories": "cs.DS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In this paper we consider two problems regarding the scheduling of available\npersonnel in order to perform a given quantity of work, which can be\narbitrarily decomposed into a sequence of activities. We are interested in\nschedules which minimize the overall dissatisfaction, where each employee's\ndissatisfaction is modeled as a time-dependent linear function. For the two\nsituations considered we provide a detailed mathematical analysis, as well as\nefficient algorithms for determining optimal schedules.\n", "versions": [{"version": "v1", "created": "Fri, 8 Aug 2008 17:15:34 GMT"}, {"version": "v2", "created": "Mon, 21 Jan 2013 17:26:48 GMT"}], "update_date": "2013-01-22", "authors_parsed": [["Andreica", "Mugurel Ionut", ""], ["Andreica", "Romulus", ""], ["Andreica", "Angela", ""]]}, {"id": "0808.1671", "submitter": "Shuchi Chawla", "authors": "Shuchi Chawla and Jason Hartline and Robert Kleinberg", "title": "Algorithmic Pricing via Virtual Valuations", "comments": "A preliminary version of this work appeared at the ACM EC'07\n  conference. The current version contains improved results and simpler\n  algorithms", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.GT cs.DS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Algorithmic pricing is the computational problem that sellers (e.g., in\nsupermarkets) face when trying to set prices for their items to maximize their\nprofit in the presence of a known demand. Guruswami et al. (2005) propose this\nproblem and give logarithmic approximations (in the number of consumers) when\neach consumer's values for bundles are known precisely. Subsequently several\nversions of the problem have been shown to have poly-logarithmic\ninapproximability. This problem has direct ties to the important open question\nof better understanding the Bayesian optimal mechanism in multi-parameter\nsettings; however, logarithmic approximations are inadequate for this purpose.\nIt is therefore of vital interest to consider special cases where constant\napproximations are possible. We consider the unit-demand variant of this\nproblem. Here a consumer has a valuation for each different item and their\nvalue for a set of items is simply the maximum value they have for any item in\nthe set. We assume that the preferences of the consumers are drawn from a\ndistribution, the standard assumption in economics; furthermore, the setting of\na specific set of customers with known preferences, which is employed in all\nprior work in algorithmic pricing, is a special case of this general problem,\nwhere there is a discrete Bayesian distribution for preferences specified by\npicking one consumer uniformly from the given set of consumers. Our work\ncomplements these existing works by considering the case where the consumer's\nvaluations for the different items are independent random variables. Our main\nresult is a constant approximation that makes use of an interesting connection\nbetween this problem and the concept of virtual valuations from the\nsingle-parameter Bayesian optimal mechanism design literature.\n", "versions": [{"version": "v1", "created": "Tue, 12 Aug 2008 18:08:21 GMT"}], "update_date": "2008-08-13", "authors_parsed": [["Chawla", "Shuchi", ""], ["Hartline", "Jason", ""], ["Kleinberg", "Robert", ""]]}, {"id": "0808.1766", "submitter": "Ping Li", "authors": "Ping Li", "title": "The Optimal Quantile Estimator for Compressed Counting", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Compressed Counting (CC) was recently proposed for very efficiently computing\nthe (approximate) $\\alpha$th frequency moments of data streams, where $0<\\alpha\n<= 2$. Several estimators were reported including the geometric mean estimator,\nthe harmonic mean estimator, the optimal power estimator, etc. The geometric\nmean estimator is particularly interesting for theoretical purposes. For\nexample, when $\\alpha -> 1$, the complexity of CC (using the geometric mean\nestimator) is $O(1/\\epsilon)$, breaking the well-known large-deviation bound\n$O(1/\\epsilon^2)$. The case $\\alpha\\approx 1$ has important applications, for\nexample, computing entropy of data streams.\n  For practical purposes, this study proposes the optimal quantile estimator.\nCompared with previous estimators, this estimator is computationally more\nefficient and is also more accurate when $\\alpha> 1$.\n", "versions": [{"version": "v1", "created": "Wed, 13 Aug 2008 01:38:45 GMT"}], "update_date": "2008-08-14", "authors_parsed": [["Li", "Ping", ""]]}, {"id": "0808.1771", "submitter": "Ping Li", "authors": "Ping Li", "title": "A Very Efficient Scheme for Estimating Entropy of Data Streams Using\n  Compressed Counting", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Compressed Counting (CC)} was recently proposed for approximating the\n$\\alpha$th frequency moments of data streams, for $0<\\alpha \\leq 2$. Under the\nrelaxed strict-Turnstile model, CC dramatically improves the standard algorithm\nbased on symmetric stable random projections}, especially as $\\alpha\\to 1$. A\ndirect application of CC is to estimate the entropy, which is an important\nsummary statistic in Web/network measurement and often serves a crucial\n\"feature\" for data mining. The R\\'enyi entropy and the Tsallis entropy are\nfunctions of the $\\alpha$th frequency moments; and both approach the Shannon\nentropy as $\\alpha\\to 1$. A recent theoretical work suggested using the\n$\\alpha$th frequency moment to approximate the Shannon entropy with\n$\\alpha=1+\\delta$ and very small $|\\delta|$ (e.g., $<10^{-4}$).\n  In this study, we experiment using CC to estimate frequency moments, R\\'enyi\nentropy, Tsallis entropy, and Shannon entropy, on real Web crawl data. We\ndemonstrate the variance-bias trade-off in estimating Shannon entropy and\nprovide practical recommendations. In particular, our experiments enable us to\ndraw some important conclusions:\n  (1) As $\\alpha\\to 1$, CC dramatically improves {\\em symmetric stable random\nprojections} in estimating frequency moments, R\\'enyi entropy, Tsallis entropy,\nand Shannon entropy. The improvements appear to approach \"infinity.\"\n  (2) Using {\\em symmetric stable random projections} and $\\alpha = 1+\\delta$\nwith very small $|\\delta|$ does not provide a practical algorithm because the\nrequired sample size is enormous.\n", "versions": [{"version": "v1", "created": "Wed, 13 Aug 2008 03:05:33 GMT"}, {"version": "v2", "created": "Thu, 21 Aug 2008 17:36:19 GMT"}], "update_date": "2008-08-21", "authors_parsed": [["Li", "Ping", ""]]}, {"id": "0808.1787", "submitter": "Arnab Bhattacharyya", "authors": "Arnab Bhattacharyya, Elena Grigorescu, Kyomin Jung, Sofya\n  Raskhodnikova, David P. Woodruff", "title": "Transitive-Closure Spanners", "comments": "Extended abstract with appendices", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DS cs.CC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Given a directed graph G = (V,E) and an integer k>=1, a\nk-transitive-closure-spanner (k-TC-spanner) of G is a directed graph H = (V,\nE_H) that has (1) the same transitive-closure as G and (2) diameter at most k.\nThese spanners were implicitly studied in access control, data structures, and\nproperty testing, and properties of these spanners have been rediscovered over\nthe span of 20 years. The main goal in each of these applications is to obtain\nthe sparsest k-TC-spanners. We bring these diverse areas under the unifying\nframework of TC-spanners.\n  We initiate the study of approximability of the size of the sparsest\nk-TC-spanner for a given directed graph. We completely resolve the\napproximability of 2-TC-spanners, showing that it is Theta(log n) unless P =\nNP. For k>2, we present a polynomial-time algorithm that finds a k-TC-spanner\nwith size within O((n log n)^{1-1/k}) of the optimum. Our algorithmic\ntechniques also yield algorithms with the best-known approximation ratio for\nwell-studied problems on directed spanners when k>3: DIRECTED k-SPANNER,\nCLIENT/SERVER DIRECTED k-SPANNER, and k-DIAMETER SPANNING SUBGRAPH. For\nconstant k>=3, we show that the size of the sparsest k-TC-spanner is hard to\napproximate with 2^{log^{1-eps} n} ratio unless NP \\subseteq DTIME(n^{polylog\nn}}). Finally, we study the size of the sparsest k-TC-spanners for H-minor-free\ngraph families. Combining our constructions with our insight that 2-TC-spanners\ncan be used for designing property testers, we obtain a monotonicity tester\nwith O(log^2 n /eps) queries for any poset whose transitive reduction is an\nH-minor free digraph, improving the Theta(sqrt(n) log n/eps)-queries required\nof the tester due to Fischer et al (2002).\n", "versions": [{"version": "v1", "created": "Wed, 13 Aug 2008 06:44:10 GMT"}], "update_date": "2008-08-14", "authors_parsed": [["Bhattacharyya", "Arnab", ""], ["Grigorescu", "Elena", ""], ["Jung", "Kyomin", ""], ["Raskhodnikova", "Sofya", ""], ["Woodruff", "David P.", ""]]}, {"id": "0808.2017", "submitter": "Ittai Abraham", "authors": "Ittai Abraham, Yair Bartal, and Ofer Neiman", "title": "Nearly Tight Low Stretch Spanning Trees", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DS cs.DM", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We prove that any graph $G$ with $n$ points has a distribution $\\mathcal{T}$\nover spanning trees such that for any edge $(u,v)$ the expected stretch $E_{T\n\\sim \\mathcal{T}}[d_T(u,v)/d_G(u,v)]$ is bounded by $\\tilde{O}(\\log n)$. Our\nresult is obtained via a new approach of building ``highways'' between portals\nand a new strong diameter probabilistic decomposition theorem.\n", "versions": [{"version": "v1", "created": "Thu, 14 Aug 2008 15:58:55 GMT"}], "update_date": "2008-08-15", "authors_parsed": [["Abraham", "Ittai", ""], ["Bartal", "Yair", ""], ["Neiman", "Ofer", ""]]}, {"id": "0808.2222", "submitter": "Andrew McGregor", "authors": "Alexandr Andoni, Andrew McGregor, Krzysztof Onak, Rina Panigrahy", "title": "Better Bounds for Frequency Moments in Random-Order Streams", "comments": "4 pages", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Estimating frequency moments of data streams is a very well studied problem\nand tight bounds are known on the amount of space that is necessary and\nsufficient when the stream is adversarially ordered. Recently, motivated by\nvarious practical considerations and applications in learning and statistics,\nthere has been growing interest into studying streams that are randomly\nordered. In the paper we improve the previous lower bounds on the space\nrequired to estimate the frequency moments of a randomly ordered streams.\n", "versions": [{"version": "v1", "created": "Sat, 16 Aug 2008 00:43:14 GMT"}], "update_date": "2008-08-19", "authors_parsed": [["Andoni", "Alexandr", ""], ["McGregor", "Andrew", ""], ["Onak", "Krzysztof", ""], ["Panigrahy", "Rina", ""]]}, {"id": "0808.2953", "submitter": "Paul Tarau", "authors": "Paul Tarau", "title": "Declarative Combinatorics: Isomorphisms, Hylomorphisms and Hereditarily\n  Finite Data Types in Haskell", "comments": "unpublished draft, revision 3, added various new encodings, with\n  focus on primes and multisets, now 104 pages", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.PL cs.DS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This paper is an exploration in a functional programming framework of {\\em\nisomorphisms} between elementary data types (natural numbers, sets, multisets,\nfinite functions, permutations binary decision diagrams, graphs, hypergraphs,\nparenthesis languages, dyadic rationals, primes, DNA sequences etc.) and their\nextension to hereditarily finite universes through {\\em hylomorphisms} derived\nfrom {\\em ranking/unranking} and {\\em pairing/unpairing} operations.\n  An embedded higher order {\\em combinator language} provides any-to-any\nencodings automatically.\n  Besides applications to experimental mathematics, a few examples of ``free\nalgorithms'' obtained by transferring operations between data types are shown.\nOther applications range from stream iterators on combinatorial objects to\nself-delimiting codes, succinct data representations and generation of random\ninstances.\n  The paper covers 59 data types and, through the use of the embedded\ncombinator language, provides 3540 distinct bijective transformations between\nthem.\n  The self-contained source code of the paper, as generated from a literate\nHaskell program, is available at\n\\url{http://logic.csci.unt.edu/tarau/research/2008/fISO.zip}.\n  {\\bf Keywords}: Haskell data representations, data type isomorphisms,\ndeclarative combinatorics, computational mathematics, Ackermann encoding,\nG\\\"{o}del numberings, arithmetization, ranking/unranking, hereditarily finite\nsets, functions and permutations, encodings of binary decision diagrams, dyadic\nrationals, DNA encodings\n", "versions": [{"version": "v1", "created": "Thu, 21 Aug 2008 16:47:38 GMT"}, {"version": "v2", "created": "Mon, 20 Oct 2008 18:47:59 GMT"}, {"version": "v3", "created": "Tue, 9 Dec 2008 01:28:15 GMT"}, {"version": "v4", "created": "Mon, 19 Jan 2009 19:39:51 GMT"}], "update_date": "2009-01-19", "authors_parsed": [["Tarau", "Paul", ""]]}, {"id": "0808.3197", "submitter": "Ming-Zhe Chen", "authors": "Ming-Zhe Chen", "title": "On the Monotonicity of Work Function in k-Server Conjecture", "comments": "3 pages, corrected typos", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This paper presents a mistake in work function algorithm of k-server\nconjecture. That is, the monotonicity of the work function is not always true.\n", "versions": [{"version": "v1", "created": "Sun, 24 Aug 2008 15:37:35 GMT"}], "update_date": "2008-08-26", "authors_parsed": [["Chen", "Ming-Zhe", ""]]}, {"id": "0808.3331", "submitter": "Gregory  Karagiorgos", "authors": "Gregory Karagiorgos, Dimitrios Poulakis", "title": "Efficient algorithms for the basis of finite Abelian groups", "comments": "11 pages", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DS cs.CC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Let $G$ be a finite abelian group $G$ with $N$ elements. In this paper we\ngive a O(N) time algorithm for computing a basis of $G$. Furthermore, we obtain\nan algorithm for computing a basis from a generating system of $G$ with $M$\nelements having time complexity $O(M\\sum_{p|N} e(p)\\lceil\np^{1/2}\\rceil^{\\mu(p)})$, where $p$ runs over all the prime divisors of $N$,\nand $p^{e(p)}$, $\\mu(p)$ are the exponent and the number of cyclic groups which\nare direct factors of the $p$-primary component of $G$, respectively. In case\nwhere $G$ is a cyclic group having a generating system with $M$ elements, a\n$O(MN^{\\epsilon})$ time algorithm for the computation of a basis of $G$ is\nobtained.\n", "versions": [{"version": "v1", "created": "Mon, 25 Aug 2008 11:01:15 GMT"}], "update_date": "2008-08-26", "authors_parsed": [["Karagiorgos", "Gregory", ""], ["Poulakis", "Dimitrios", ""]]}, {"id": "0808.3881", "submitter": "Paul Bonsma", "authors": "Paul Bonsma, Felix Breuer", "title": "Counting Hexagonal Patches and Independent Sets in Circle Graphs", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DM cs.DS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  A hexagonal patch is a plane graph in which inner faces have length 6, inner\nvertices have degree 3, and boundary vertices have degree 2 or 3. We consider\nthe following counting problem: given a sequence of twos and threes, how many\nhexagonal patches exist with this degree sequence along the outer face? This\nproblem is motivated by the study of benzenoid hydrocarbons and fullerenes in\ncomputational chemistry. We give the first polynomial time algorithm for this\nproblem. We show that it can be reduced to counting maximum independent sets in\ncircle graphs, and give a simple and fast algorithm for this problem.\n", "versions": [{"version": "v1", "created": "Thu, 28 Aug 2008 10:39:10 GMT"}, {"version": "v2", "created": "Wed, 15 Jul 2009 15:27:00 GMT"}], "update_date": "2009-07-15", "authors_parsed": [["Bonsma", "Paul", ""], ["Breuer", "Felix", ""]]}, {"id": "0808.4134", "submitter": "Daniel A. Spielman", "authors": "Daniel A. Spielman and Shang-Hua Teng", "title": "Spectral Sparsification of Graphs", "comments": "This revision addresses comments of the referees. In particular, we\n  have completely re-written the proof of the main graph partitioning theorem\n  in section 8", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DS cs.DM", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We introduce a new notion of graph sparsificaiton based on spectral\nsimilarity of graph Laplacians: spectral sparsification requires that the\nLaplacian quadratic form of the sparsifier approximate that of the original.\nThis is equivalent to saying that the Laplacian of the sparsifier is a good\npreconditioner for the Laplacian of the original. We prove that every graph has\na spectral sparsifier of nearly linear size. Moreover, we present an algorithm\nthat produces spectral sparsifiers in time $\\softO{m}$, where $m$ is the number\nof edges in the original graph. This construction is a key component of a\nnearly-linear time algorithm for solving linear equations in\ndiagonally-dominant matrcies. Our sparsification algorithm makes use of a\nnearly-linear time algorithm for graph partitioning that satisfies a strong\nguarantee: if the partition it outputs is very unbalanced, then the larger part\nis contained in a subgraph of high conductance.\n", "versions": [{"version": "v1", "created": "Fri, 29 Aug 2008 17:17:29 GMT"}, {"version": "v2", "created": "Fri, 19 Sep 2008 14:20:42 GMT"}, {"version": "v3", "created": "Tue, 20 Jul 2010 20:48:36 GMT"}], "update_date": "2010-07-22", "authors_parsed": [["Spielman", "Daniel A.", ""], ["Teng", "Shang-Hua", ""]]}]