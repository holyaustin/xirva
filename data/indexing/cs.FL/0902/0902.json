[{"id": "0902.0261", "submitter": "Tomoyuki Yamakami", "authors": "Tomoyuki Yamakami", "title": "Immunity and Pseudorandomness of Context-Free Languages", "comments": "A4, 23 pages, 10 pt. A complete revision of the initial version that\n  was posted in February 2009", "journal-ref": "Theoretical Computer Science, vol. 412, pp.6432-6450, 2011", "doi": "10.1016/j.tcs.2011.07.013", "report-no": null, "categories": "cs.CC cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We discuss the computational complexity of context-free languages,\nconcentrating on two well-known structural properties---immunity and\npseudorandomness. An infinite language is REG-immune (resp., CFL-immune) if it\ncontains no infinite subset that is a regular (resp., context-free) language.\nWe prove that (i) there is a context-free REG-immune language outside REG/n and\n(ii) there is a REG-bi-immune language that can be computed deterministically\nusing logarithmic space. We also show that (iii) there is a CFL-simple set,\nwhere a CFL-simple language is an infinite context-free language whose\ncomplement is CFL-immune. Similar to the REG-immunity, a REG-primeimmune\nlanguage has no polynomially dense subsets that are also regular. We further\nprove that (iv) there is a context-free language that is REG/n-bi-primeimmune.\nConcerning pseudorandomness of context-free languages, we show that (v) CFL\ncontains REG/n-pseudorandom languages. Finally, we prove that (vi) against\nREG/n, there exists an almost 1-1 pseudorandom generator computable in\nnondeterministic pushdown automata equipped with a write-only output tape and\n(vii) against REG, there is no almost 1-1 weakly pseudorandom generator\ncomputable deterministically in linear time by a single-tape Turing machine.\n", "versions": [{"version": "v1", "created": "Mon, 2 Feb 2009 12:21:23 GMT"}, {"version": "v2", "created": "Wed, 20 Jul 2011 13:18:33 GMT"}], "update_date": "2011-09-20", "authors_parsed": [["Yamakami", "Tomoyuki", ""]]}, {"id": "0902.1042", "submitter": "Wadie Guizani", "authors": "Mikolaj Bojanczyk", "title": "Weak Mso with the Unbounding Quantifier", "comments": null, "journal-ref": "26th International Symposium on Theoretical Aspects of Computer\n  Science STACS 2009 (2009) 159-170", "doi": null, "report-no": null, "categories": "cs.FL cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  A new class of languages of infinite words is introduced, called the\nmax-regular languages, extending the class of $\\omega$-regular languages. The\nclass has two equivalent descriptions: in terms of automata (a type of\ndeterministic counter automaton), and in terms of logic (weak monadic\nsecond-order logic with a bounding quantifier). Effective translations between\nthe logic and automata are given.\n", "versions": [{"version": "v1", "created": "Fri, 6 Feb 2009 09:53:15 GMT"}], "update_date": "2009-03-09", "authors_parsed": [["Bojanczyk", "Mikolaj", ""]]}, {"id": "0902.2108", "submitter": "Olivier Serre", "authors": "Vincent Gripon (LIAFA), Olivier Serre (LIAFA)", "title": "Qualitative Concurrent Stochastic Games with Imperfect Information", "comments": "Automata, Languages and Programming, 36th International Colloquium,\n  ICALP 2009, Rhodes: Greece (2009)", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL cs.GT cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We study a model of games that combines concurrency, imperfect information\nand stochastic aspects. Those are finite states games in which, at each round,\nthe two players choose, simultaneously and independently, an action. Then a\nsuccessor state is chosen accordingly to some fixed probability distribution\ndepending on the previous state and on the pair of actions chosen by the\nplayers. Imperfect information is modeled as follows: both players have an\nequivalence relation over states and, instead of observing the exact state,\nthey only know to which equivalence class it belongs. Therefore, if two partial\nplays are indistinguishable by some player, he should behave the same in both\nof them. We consider reachability (does the play eventually visit a final\nstate?) and B\\\"uchi objective (does the play visit infinitely often a final\nstate?). Our main contribution is to prove that the following problem is\ncomplete for 2-ExpTime: decide whether the first player has a strategy that\nensures her to almost-surely win against any possible strategy of her oponent.\nWe also characterise those strategies needed by the first player to\nalmost-surely win.\n", "versions": [{"version": "v1", "created": "Thu, 12 Feb 2009 13:39:23 GMT"}, {"version": "v2", "created": "Wed, 10 Jun 2009 09:55:51 GMT"}, {"version": "v3", "created": "Tue, 30 Aug 2011 11:45:27 GMT"}], "update_date": "2011-08-31", "authors_parsed": [["Gripon", "Vincent", "", "LIAFA"], ["Serre", "Olivier", "", "LIAFA"]]}, {"id": "0902.2140", "submitter": "Publications Loria", "authors": "Juraj Hromkovic, Georg Schnitger", "title": "Ambiguity and Communication", "comments": null, "journal-ref": "26th International Symposium on Theoretical Aspects of Computer\n  Science STACS 2009 (2009) 553-564", "doi": null, "report-no": null, "categories": "cs.FL cs.CC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The ambiguity of a nondeterministic finite automaton (NFA) N for input size n\nis the maximal number of accepting computations of N for an input of size n.\nFor all k, r 2 N we construct languages Lr,k which can be recognized by NFA's\nwith size k poly(r) and ambiguity O(nk), but Lr,k has only NFA's with\nexponential size, if ambiguity o(nk) is required. In particular, a hierarchy\nfor polynomial ambiguity is obtained, solving a long standing open problem\n(Ravikumar and Ibarra, 1989, Leung, 1998).\n", "versions": [{"version": "v1", "created": "Thu, 12 Feb 2009 15:56:14 GMT"}], "update_date": "2009-03-02", "authors_parsed": [["Hromkovic", "Juraj", ""], ["Schnitger", "Georg", ""]]}, {"id": "0902.2152", "submitter": "Publications Loria", "authors": "Sven Schewe", "title": "B\\\"uchi complementation made tight", "comments": null, "journal-ref": "26th International Symposium on Theoretical Aspects of Computer\n  Science - STACS 2009 (2009) 433-444", "doi": null, "report-no": null, "categories": "cs.FL cs.CC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The precise complexity of complementing B\\\"uchi automata is an intriguing and\nlong standing problem. While optimal complementation techniques for finite\nautomata are simple - it suffices to determinize them using a simple subset\nconstruction and to dualize the acceptance condition of the resulting automaton\n- B\\\"uchi complementation is more involved. Indeed, the construction of an\nEXPTIME complementation procedure took a quarter of a century from the\nintroduction of B\\\"uchi automata in the early 60s, and stepwise narrowing the\ngap between the upper and lower bound to a simple exponent (of (6e)n for\nB\\\"uchi automata with n states) took four decades. While the distance between\nthe known upper (O'(0.96 n)n') and lower ('(0.76 n)n') bound on the required\nnumber of states has meanwhile been significantly reduced, an exponential\nfactor remains between them. Also, the upper bound on the size of the\ncomplement automaton is not linear in the bound of its state space. These gaps\nare unsatisfactory from a theoretical point of view, but also because B\\\"uchi\ncomplementation is a useful tool in formal verification, in particular for the\nlanguage containment problem. This paper proposes a B\\\"uchi complementation\nalgorithm whose complexity meets, modulo a quadratic (O(n2)) factor, the known\nlower bound for B\\\"uchi complementation. It thus improves over previous\nconstructions by an exponential factor and concludes the quest for optimal\nB\\\"uchi complementation algorithms.\n", "versions": [{"version": "v1", "created": "Thu, 12 Feb 2009 16:26:28 GMT"}], "update_date": "2009-03-02", "authors_parsed": [["Schewe", "Sven", ""]]}, {"id": "0902.2774", "submitter": "Tomoyuki Yamakami", "authors": "Tomoyuki Yamakami", "title": "Pseudorandom Generators Against Advised Context-Free Languages", "comments": "A4, 10pt, 5 figures, 30 pages. This is the latest complete version,\n  improving the readability", "journal-ref": "Theoretical Computer Science, vol. 613, pp. 1-27, 2016", "doi": null, "report-no": null, "categories": "cs.FL cs.CC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Pseudorandomness has played a central role in modern cryptography, finding\ntheoretical and practical applications to various fields of computer science. A\nfunction that generates pseudorandom strings from shorter but truly random\nseeds is known as a pseudorandom generator. Our generators are designed to fool\nlanguages (or equivalently, Boolean-valued functions). In particular, our\ngenerator fools advised context-free languages, namely, context-free languages\nassisted by external information known as advice, and moreover our generator is\nmade almost one-to-one, stretching $n$-bit seeds to $n+1$ bits. We explicitly\nconstruct such a pseudorandom generator, which is computed by a deterministic\nTuring machine using logarithmic space and also belongs to CFLMV(2)/n---a\nfunctional extension of the 2-conjunctive closure of CFL with the help of\nappropriate deterministic advice. In contrast, we show that there is no almost\none-to-one pseudorandom generator against context-free languages if we demand\nthat it should be computed by a nondeterministic pushdown automaton equipped\nwith a write-only output tape. Our generator naturally extends known\npseudorandom generators against advised regular languages. Our proof of the\nCFL/n-pseudorandomness of the generator is quite elementary, and in particular,\none part of the proof utilizes a special feature of the behaviors of\nnondeterministic pushdown automata, called a swapping property, which is\ninteresting in its own right, generalizing the swapping lemma for context-free\nlanguages.\n", "versions": [{"version": "v1", "created": "Mon, 16 Feb 2009 20:41:25 GMT"}, {"version": "v2", "created": "Thu, 30 Aug 2012 07:02:14 GMT"}, {"version": "v3", "created": "Mon, 13 Jan 2014 17:14:44 GMT"}, {"version": "v4", "created": "Mon, 24 Aug 2015 15:05:58 GMT"}], "update_date": "2016-10-25", "authors_parsed": [["Yamakami", "Tomoyuki", ""]]}]