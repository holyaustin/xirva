[{"id": "1503.00035", "submitter": "Steffen Kopecki", "authors": "Lila Kari, Stavros Konstantinidis, and Steffen Kopecki", "title": "Transducer Descriptions of DNA Code Properties and Undecidability of\n  Antimorphic Problems", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL cs.CC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This work concerns formal descriptions of DNA code properties, and builds on\nprevious work on transducer descriptions of classic code properties and on\ntrajectory descriptions of DNA code properties. This line of research allows us\nto give a property as input to an algorithm, in addition to any regular\nlanguage, which can then answer questions about the language and the property.\nHere we define DNA code properties via transducers and show that this method is\nstrictly more expressive than that of trajectories, without sacrificing the\nefficiency of deciding the satisfaction question. We also show that the\nmaximality question can be undecidable. Our undecidability results hold not\nonly for the fixed DNA involution but also for any fixed antimorphic\npermutation. Moreover, we also show the undecidability of the antimorphic\nversion of the Post Corresponding Problem, for any fixed antimorphic\npermutation.\n", "versions": [{"version": "v1", "created": "Fri, 27 Feb 2015 23:45:25 GMT"}], "update_date": "2015-03-03", "authors_parsed": [["Kari", "Lila", ""], ["Konstantinidis", "Stavros", ""], ["Kopecki", "Steffen", ""]]}, {"id": "1503.00258", "submitter": "Radu Iosif", "authors": "Radu Iosif", "title": "Decidable Horn Systems with Difference Constraints Arithmetic", "comments": "This paper has been withdrawn by the author due to a crucial error in\n  Lemma 5", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This paper tackles the problem of the existence of solutions for recursive\nsystems of Horn clauses with second-order variables interpreted as integer\nrelations, and harnessed by quantifier-free difference bounds arithmetic. We\nstart by proving the decidability of the problem \"does the system have a\nsolution ?\" for a simple class of Horn systems with one second-order variable\nand one non-linear recursive rule. The proof relies on a construction of a tree\nautomaton recognizing all cycles in the weighted graph corresponding to every\nunfolding tree of the Horn system. We constrain the tree to recognize only\ncycles of negative weight by adding a Presburger formula that harnesses the\nnumber of times each rule is fired, and reduce our problem to the universality\nof a Presburger-constrained tree automaton. We studied the complexity of this\nproblem and found it to be in \\textsc{NEXPtime} with an \\textsc{EXPtime}-hard\nlower bound. Second, we drop the univariate restriction and consider\nmultivariate second-order Horn systems with a structural restriction, called\n\\emph{flatness}. This more general class of Horn systems is found to be\ndecidable, within the same complexity bounds. Finally, we encode the\nreachability problem for Alternating Branching Vector Addition Systems (ABVASS)\nusing Horn systems and prove that, for flat ABVASS, this problem is in\nco-\\textsc{NEXPtime}.\n", "versions": [{"version": "v1", "created": "Sun, 1 Mar 2015 11:52:57 GMT"}, {"version": "v2", "created": "Thu, 11 Jun 2015 20:40:24 GMT"}, {"version": "v3", "created": "Sun, 14 Feb 2016 14:57:50 GMT"}], "update_date": "2016-02-16", "authors_parsed": [["Iosif", "Radu", ""]]}, {"id": "1503.00279", "submitter": "Nelma Moreira", "authors": "Sabine Broda, Ant\\'onio Machiavelo, Nelma Moreira, Rog\\'erio Reis", "title": "Partial Derivative Automaton for Regular Expressions with Shuffle", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We generalize the partial derivative automaton to regular expressions with\nshuffle and study its size in the worst and in the average case. The number of\nstates of the partial derivative automata is in the worst case at most 2^m,\nwhere m is the number of letters in the expression, while asymptotically and on\naverage it is no more than (4/3)^m.\n", "versions": [{"version": "v1", "created": "Sun, 1 Mar 2015 14:06:02 GMT"}], "update_date": "2015-03-03", "authors_parsed": [["Broda", "Sabine", ""], ["Machiavelo", "Ant\u00f3nio", ""], ["Moreira", "Nelma", ""], ["Reis", "Rog\u00e9rio", ""]]}, {"id": "1503.00295", "submitter": "Alexander Rubtsov", "authors": "Alexander A. Rubtsov, Mikhail N. Vyalyi", "title": "Regular realizability problems and context-free languages", "comments": "conference DCFS 2015", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We investigate regular realizability (RR) problems, which are the problems of\nverifying whether intersection of a regular language -- the input of the\nproblem -- and fixed language called filter is non-empty. In this paper we\nfocus on the case of context-free filters. Algorithmic complexity of the RR\nproblem is a very coarse measure of context-free languages complexity. This\ncharacteristic is compatible with rational dominance. We present examples of\nP-complete RR problems as well as examples of RR problems in the class NL. Also\nwe discuss RR problems with context-free filters that might have intermediate\ncomplexity. Possible candidates are the languages with polynomially bounded\nrational indices.\n", "versions": [{"version": "v1", "created": "Sun, 1 Mar 2015 15:31:09 GMT"}, {"version": "v2", "created": "Wed, 22 Apr 2015 18:41:44 GMT"}], "update_date": "2015-04-23", "authors_parsed": [["Rubtsov", "Alexander A.", ""], ["Vyalyi", "Mikhail N.", ""]]}, {"id": "1503.01068", "submitter": "Georg Zetzsche", "authors": "Georg Zetzsche", "title": "An approach to computing downward closures", "comments": "Full version of contribution to ICALP 2015. Comments welcome", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://creativecommons.org/licenses/by-nc-sa/3.0/", "abstract": "  The downward closure of a word language is the set of all (not necessarily\ncontiguous) subwords of its members. It is well-known that the downward closure\nof any language is regular. While the downward closure appears to be a powerful\nabstraction, algorithms for computing a finite automaton for the downward\nclosure of a given language have been established only for few language\nclasses.\n  This work presents a simple general method for computing downward closures.\nFor language classes that are closed under rational transductions, it is shown\nthat the computation of downward closures can be reduced to checking a certain\nunboundedness property.\n  This result is used to prove that downward closures are computable for (i)\nevery language class with effectively semilinear Parikh images that are closed\nunder rational transductions, (ii) matrix languages, and (iii) indexed\nlanguages (equivalently, languages accepted by higher-order pushdown automata\nof order 2).\n", "versions": [{"version": "v1", "created": "Tue, 3 Mar 2015 19:19:56 GMT"}, {"version": "v2", "created": "Mon, 1 Jun 2015 15:29:48 GMT"}], "update_date": "2015-06-02", "authors_parsed": [["Zetzsche", "Georg", ""]]}, {"id": "1503.02208", "submitter": "Janusz Brzozowski", "authors": "Janusz Brzozowski and Sylvie Davies", "title": "Quotient Complexities of Atoms in Regular Ideal Languages", "comments": "17 pages, 4 figures, two tables", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  A (left) quotient of a language $L$ by a word $w$ is the language\n$w^{-1}L=\\{x\\mid wx\\in L\\}$. The quotient complexity of a regular language $L$\nis the number of quotients of $L$; it is equal to the state complexity of $L$,\nwhich is the number of states in a minimal deterministic finite automaton\naccepting $L$. An atom of $L$ is an equivalence class of the relation in which\ntwo words are equivalent if for each quotient, they either are both in the\nquotient or both not in it; hence it is a non-empty intersection of\ncomplemented and uncomplemented quotients of $L$. A right (respectively, left\nand two-sided) ideal is a language $L$ over an alphabet $\\Sigma$ that satisfies\n$L=L\\Sigma^*$ (respectively, $L=\\Sigma^*L$ and $L=\\Sigma^*L\\Sigma^*$). We\ncompute the maximal number of atoms and the maximal quotient complexities of\natoms of right, left and two-sided regular ideals.\n", "versions": [{"version": "v1", "created": "Sat, 7 Mar 2015 20:04:22 GMT"}, {"version": "v2", "created": "Sat, 23 May 2015 20:38:08 GMT"}], "update_date": "2015-05-26", "authors_parsed": [["Brzozowski", "Janusz", ""], ["Davies", "Sylvie", ""]]}, {"id": "1503.02422", "submitter": "Lorenzo Clemente Lorenzo Clemente", "authors": "Lorenzo Clemente and S{\\l}awomir Lasota", "title": "Timed pushdown automata revisited", "comments": "full technical report of LICS'15 paper", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL cs.LO", "license": "http://creativecommons.org/licenses/by/3.0/", "abstract": "  This paper contains two results on timed extensions of pushdown automata\n(PDA). As our first result we prove that the model of dense-timed PDA of\nAbdulla et al. collapses: it is expressively equivalent to dense-timed PDA with\ntimeless stack. Motivated by this result, we advocate the framework of\nfirst-order definable PDA, a specialization of PDA in sets with atoms, as the\nright setting to define and investigate timed extensions of PDA. The general\nmodel obtained in this way is Turing complete. As our second result we prove\nNEXPTIME upper complexity bound for the non-emptiness problem for an expressive\nsubclass. As a byproduct, we obtain a tight EXPTIME complexity bound for a more\nrestrictive subclass of PDA with timeless stack, thus subsuming the complexity\nbound known for dense-timed PDA.\n", "versions": [{"version": "v1", "created": "Mon, 9 Mar 2015 10:59:48 GMT"}, {"version": "v2", "created": "Fri, 17 Apr 2015 16:03:44 GMT"}], "update_date": "2015-04-20", "authors_parsed": [["Clemente", "Lorenzo", ""], ["Lasota", "S\u0142awomir", ""]]}, {"id": "1503.02840", "submitter": "Dominique Lecomte", "authors": "Olivier Finkel (ELM, IMJ), Dominique Lecomte (IMJ), Pierre Simonnet\n  (SPE)", "title": "An Upper Bound on the Complexity of Recognizable Tree Languages", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL math.GN math.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The third author noticed in his 1992 PhD Thesis [Sim92] that every regular\ntree language of infinite trees is in a class $\\Game (D\\_n({\\bf\\Sigma}^0\\_2))$\nfor some natural number $n\\geq 1$, where $\\Game$ is the game quantifier. We\nfirst give a detailed exposition of this result. Next, using an embedding of\nthe Wadge hierarchy of non self-dual Borel subsets of the Cantor space\n$2^\\omega$ into the class ${\\bf\\Delta}^1\\_2$, and the notions of Wadge degree\nand Veblen function, we argue that this upper bound on the topological\ncomplexity of regular tree languages is much better than the usual\n${\\bf\\Delta}^1\\_2$.\n", "versions": [{"version": "v1", "created": "Tue, 10 Mar 2015 10:02:21 GMT"}, {"version": "v2", "created": "Wed, 11 Mar 2015 17:42:44 GMT"}], "update_date": "2015-03-12", "authors_parsed": [["Finkel", "Olivier", "", "ELM, IMJ"], ["Lecomte", "Dominique", "", "IMJ"], ["Simonnet", "Pierre", "", "SPE"]]}, {"id": "1503.03318", "submitter": "Witold Bo{\\l}t", "authors": "Witold Bo{\\l}t, Jan M. Baetens and Bernard DeBaets", "title": "On the decomposition of stochastic cellular automata", "comments": "Submitted to Journal of Computation Science, Special Issue on\n  Cellular Automata Applications", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL math.DS nlin.CG", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In this paper we present two interesting properties of stochastic cellular\nautomata that can be helpful in analyzing the dynamical behavior of such\nautomata. The first property allows for calculating cell-wise probability\ndistributions over the state set of a stochastic cellular automaton, i.e.\nimages that show the average state of each cell during the evolution of the\nstochastic cellular automaton. The second property shows that stochastic\ncellular automata are equivalent to so-called stochastic mixtures of\ndeterministic cellular automata. Based on this property, any stochastic\ncellular automaton can be decomposed into a set of deterministic cellular\nautomata, each of which contributes to the behavior of the stochastic cellular\nautomaton.\n", "versions": [{"version": "v1", "created": "Wed, 11 Mar 2015 13:18:58 GMT"}, {"version": "v2", "created": "Tue, 18 Aug 2015 22:36:25 GMT"}], "update_date": "2015-08-20", "authors_parsed": [["Bo\u0142t", "Witold", ""], ["Baetens", "Jan M.", ""], ["DeBaets", "Bernard", ""]]}, {"id": "1503.03321", "submitter": "Yuri Shalygo", "authors": "Yuri Shalygo", "title": "The Kinetic Basis of Morphogenesis", "comments": "8 pages. Submitted to the 13th European Conference on Artificial Life\n  (ECAL-2015) on March 10, 2015. Accepted on April 28, 2015", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  It has been shown recently (Shalygo, 2014) that stationary and dynamic\npatterns can arise in the proposed one-component model of the analog\n(continuous state) kinetic automaton, or kinon for short, defined as a\nreflexive dynamical system with active transport. This paper presents\nextensions of the model, which increase further its complexity and tunability,\nand shows that the extended kinon model can produce spatio-temporal patterns\npertaining not only to pattern formation but also to morphogenesis in real\nphysical and biological systems. The possible applicability of the model to\nmorphogenetic engineering and swarm robotics is also discussed.\n", "versions": [{"version": "v1", "created": "Wed, 11 Mar 2015 13:20:27 GMT"}, {"version": "v2", "created": "Fri, 22 May 2015 16:03:27 GMT"}], "update_date": "2015-05-25", "authors_parsed": [["Shalygo", "Yuri", ""]]}, {"id": "1503.04018", "submitter": "Gr\\'egoire Sutre", "authors": "J\\'er\\^ome Leroux, Gr\\'egoire Sutre, Patrick Totzke", "title": "On the Coverability Problem for Pushdown Vector Addition Systems in One\n  Dimension", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Does the trace language of a given vector addition system (VAS) intersect\nwith a given context-free language? This question lies at the heart of several\nverification questions involving recursive programs with integer parameters. In\nparticular, it is equivalent to the coverability problem for VAS that operate\non a pushdown stack. We show decidability in dimension one, based on an\nanalysis of a new model called grammar-controlled vector addition systems.\n", "versions": [{"version": "v1", "created": "Fri, 13 Mar 2015 10:57:23 GMT"}, {"version": "v2", "created": "Mon, 20 Apr 2015 19:55:52 GMT"}, {"version": "v3", "created": "Wed, 29 Apr 2015 15:35:30 GMT"}], "update_date": "2015-04-30", "authors_parsed": [["Leroux", "J\u00e9r\u00f4me", ""], ["Sutre", "Gr\u00e9goire", ""], ["Totzke", "Patrick", ""]]}, {"id": "1503.04045", "submitter": "Travis Gagie", "authors": "Hideo Bannai, Travis Gagie, Shunsuke Inenaga, Juha Karkkainen, Dominik\n  Kempa, Marcin Piatkowski, Simon J. Puglisi and Shiho Sugimoto", "title": "Diverse Palindromic Factorization is NP-Complete", "comments": null, "journal-ref": null, "doi": "10.1142/S0129054118400014", "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We prove that it is NP-complete to decide whether a given string can be\nfactored into palindromes that are each unique in the factorization.\n", "versions": [{"version": "v1", "created": "Fri, 13 Mar 2015 13:04:26 GMT"}, {"version": "v2", "created": "Tue, 14 Apr 2015 02:07:08 GMT"}, {"version": "v3", "created": "Thu, 16 Feb 2017 11:18:51 GMT"}], "update_date": "2020-12-15", "authors_parsed": [["Bannai", "Hideo", ""], ["Gagie", "Travis", ""], ["Inenaga", "Shunsuke", ""], ["Karkkainen", "Juha", ""], ["Kempa", "Dominik", ""], ["Piatkowski", "Marcin", ""], ["Puglisi", "Simon J.", ""], ["Sugimoto", "Shiho", ""]]}, {"id": "1503.04915", "submitter": "EPTCS", "authors": "Jean-Michel Hufflen (FEMTO-ST & University of Franche-Comt\\'e)", "title": "Using Model-Checking Techniques for Component-Based Systems with\n  Reconfigurations", "comments": "In Proceedings FESCA 2015, arXiv:1503.04378", "journal-ref": "EPTCS 178, 2015, pp. 33-46", "doi": "10.4204/EPTCS.178.4", "report-no": null, "categories": "cs.SE cs.DS cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Within a component-based approach allowing dynamic reconfigurations,\nsequences of successive reconfiguration operations are expressed by means of\nreconfiguration paths, possibly infinite. We show that a subclass of such paths\ncan be modelled by finite state automata. This feature allows us to use\ntechniques related to model-checking to prove some architectural, event, and\ntemporal properties related to dynamic reconfiguration. Our method is proved\ncorrect w.r.t. these properties' definition.\n", "versions": [{"version": "v1", "created": "Tue, 17 Mar 2015 04:00:09 GMT"}], "update_date": "2015-03-18", "authors_parsed": [["Hufflen", "Jean-Michel", "", "FEMTO-ST & University of Franche-Comt\u00e9"]]}, {"id": "1503.04928", "submitter": "Ashutosh Trivedi", "authors": "Shankara Narayanan Krishna and Ashutosh Trivedi", "title": "Hybrid Automata for Formal Modeling and Verification of Cyber-Physical\n  Systems", "comments": "17 pages", "journal-ref": "Journal of Indian Institute of Science, Special Issue on Cyber\n  Physical Systems, vol. 93 (3), 2013", "doi": null, "report-no": null, "categories": "cs.LO cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The presence of a tight integration between the discrete control (the\n\"cyber\") and the analog environment (the \"physical\")---via sensors and\nactuators over wired or wireless communication networks---is the defining\nfeature of cyber-physical systems. Hence, the functional correctness of a\ncyber- physical system is crucially dependent not only on the dynamics of the\nanalog physical environment, but also on the decisions taken by the discrete\ncontrol that alter the dynamics of the environment. The framework of Hybrid\nautomata---introduced by Alur, Courcoubetis, Henzinger, and Ho---provides a\nformal modeling and specification environment to analyze the interaction\nbetween the discrete and continuous parts of a cyber-physical system. Hybrid\nautomata can be considered as generalizations of finite state automata\naugmented with a finite set of real-valued variables whose dynamics in each\nstate is governed by a system of ordinary differential equations. Moreover, the\ndiscrete transitions of hybrid automata are guarded by constraints over the\nvalues of these real-valued variables, and enable discontinuous jumps in the\nevolution of these variables. Considering the richness of the dynamics in a\nhybrid automaton, it is perhaps not surprising that the fundamental\nverification questions, like reachability and schedulability, for the general\nmodel are undecidable. In this article we present a review of hybrid automata\nas modeling and verification framework for cyber-physical systems, and survey\nsome of the key results related to practical verification questions related to\nhybrid automata.\n", "versions": [{"version": "v1", "created": "Tue, 17 Mar 2015 05:57:49 GMT"}], "update_date": "2015-03-18", "authors_parsed": [["Krishna", "Shankara Narayanan", ""], ["Trivedi", "Ashutosh", ""]]}, {"id": "1503.05879", "submitter": "Alexander Rubtsov", "authors": "Alexander A. Rubtsov", "title": "Regular realizability problems and regular languages", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL cs.CC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We investigate regular realizability (RR) problems, which are the problems of\nverifying whether intersection of a regular language -- the input of the\nproblem -- and fixed language called filter is non-empty. We consider two kind\nof problems depending on representation of regular language. If a regular\nlanguage on input is represented by a DFA, then we obtain (deterministic)\nregular realizability problem and we show that in this case the complexity of\nregular realizability problem for an arbitrary regular filter is either\nL-complete or NL-complete. We also show that in case of representation regular\nlanguage on input by NFA the problem is always NL-complete.\n", "versions": [{"version": "v1", "created": "Thu, 19 Mar 2015 18:49:15 GMT"}], "update_date": "2015-03-20", "authors_parsed": [["Rubtsov", "Alexander A.", ""]]}, {"id": "1503.06365", "submitter": "Jeffrey Shallit", "authors": "Paul Bell, Daniel Reidenbach, Jeffrey Shallit", "title": "Factorization in Formal Languages", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We consider several novel aspects of unique factorization in formal\nlanguages. We reprove the familiar fact that the set uf(L) of words having\nunique factorization into elements of L is regular if L is regular, and from\nthis deduce an quadratic upper and lower bound on the length of the shortest\nword not in uf(L). We observe that uf(L) need not be context-free if L is\ncontext-free.\n  Next, we consider variations on unique factorization. We define a notion of\n\"semi-unique\" factorization, where every factorization has the same number of\nterms, and show that, if L is regular or even finite, the set of words having\nsuch a factorization need not be context-free. Finally, we consider additional\nvariations, such as unique factorization \"up to permutation\" and \"up to\nsubset\".\n", "versions": [{"version": "v1", "created": "Sat, 21 Mar 2015 23:15:37 GMT"}], "update_date": "2015-03-24", "authors_parsed": [["Bell", "Paul", ""], ["Reidenbach", "Daniel", ""], ["Shallit", "Jeffrey", ""]]}, {"id": "1503.08476", "submitter": "Vadim Zaytsev", "authors": "Vadim Zaytsev", "title": "Guided Grammar Convergence", "comments": "In Poster Proceedings of 6th Conference on Software Language\n  Engineering (SLE) 2013, http://www.sleconf.org/2013/", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.SE cs.FL cs.PL", "license": "http://creativecommons.org/licenses/by/3.0/", "abstract": "  Relating formal grammars is a hard problem that balances between language\nequivalence (which is known to be undecidable) and grammar identity (which is\ntrivial). In this paper, we investigate several milestones between those two\nextremes and propose a methodology for inconsistency management in grammar\nengineering. While conventional grammar convergence is a practical approach\nrelying on human experts to encode differences as transformation steps, guided\ngrammar convergence is a more narrowly applicable technique that infers such\ntransformation steps automatically by normalising the grammars and establishing\na structural equivalence relation between them. This allows us to perform a\ncase study with automatically inferring bidirectional transformations between\n11 grammars (in a broad sense) of the same artificial functional language:\nparser specifications with different combinator libraries, definite clause\ngrammars, concrete syntax definitions, algebraic data types, metamodels, XML\nschemata, object models.\n", "versions": [{"version": "v1", "created": "Sun, 29 Mar 2015 18:40:45 GMT"}], "update_date": "2015-03-31", "authors_parsed": [["Zaytsev", "Vadim", ""]]}, {"id": "1503.08602", "submitter": "Roland Rieke", "authors": "Peter Ochsenschl\\\"ager and Roland Rieke", "title": "Pairs of Languages Closed under Shuffle Projection", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Shuffle projection is motivated by the verification of safety properties of\nspecial parameterized systems. Basic definitions and properties, especially\nrelated to alphabetic homomorphisms, are presented. The relation between\niterated shuffle products and shuffle projections is shown. A special class of\nmulti-counter automata is introduced, to formulate shuffle projection in terms\nof computations of these automata represented by transductions. This\nreformulation of shuffle projection leads to construction principles for pairs\nof languages closed under shuffle projection. Additionally, it is shown that\nunder certain conditions these transductions are rational, which implies\ndecidability of closure against shuffle projection. Decidability of these\nconditions is proven for regular languages. Finally, without additional\nconditions, decidability of the question, whether a pair of regular languages\nis closed under shuffle projection, is shown. In an appendix the relation\nbetween shuffle projection and the shuffle product of two languages is\ndiscussed. Additionally, a kind of shuffle product for computations in\nS-automata is defined.\n", "versions": [{"version": "v1", "created": "Mon, 30 Mar 2015 09:06:08 GMT"}], "update_date": "2015-03-31", "authors_parsed": [["Ochsenschl\u00e4ger", "Peter", ""], ["Rieke", "Roland", ""]]}, {"id": "1503.08847", "submitter": "William  Gasarch", "authors": "Richard Beigel and William Gasarch", "title": "On the Sizes of DPDAs, PDAs, LBAs", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  There are languages A such that there is a Pushdown Automata (PDA) that\nrecognizes A which is much smaller than any Deterministic Pushdown Automata\n(DPDA) that recognizes A. There are languages A such that there is a Linear\nBounded Automata (Linear Space Turing Machine, henceforth LBA) that recognizes\nA which is much smaller than ny PDA that recognizes A. There are languages A\nsuch that both A and compliment(A) are recognizable by a PDA, but the PDA for A\nis much smaller than the PDA for compliment(A). There are languages A1, A2 such\nthat A1,A2,A1 INTERSECT A_2 are recognizable by a PDA, but the PDA for A1 and\nA2 are much smaller than the PDA for A1 INTERSECT A2. We investigate these\nphenomenon and show that, in all these cases, the size difference is captured\nby a function whose Turing degree is on the second level of the arithmetic\nhierarchy.\n  Our theorems lead to infinitely-often results. For example: for infinitely\nmany $n$ there exists a language An recognized by a DPDA such that there is a\nsmall PDA for An, but any DPDA for An is large. We look at cases where we can\nget almost-all results, though with much smaller size differences.\n", "versions": [{"version": "v1", "created": "Mon, 30 Mar 2015 20:38:23 GMT"}, {"version": "v2", "created": "Fri, 10 Apr 2015 19:54:43 GMT"}, {"version": "v3", "created": "Thu, 16 Jul 2015 00:29:56 GMT"}], "update_date": "2015-07-17", "authors_parsed": [["Beigel", "Richard", ""], ["Gasarch", "William", ""]]}, {"id": "1503.08936", "submitter": "Samuel J. Van Gool", "authors": "Silvio Ghilardi and Samuel J. van Gool", "title": "A model-theoretic characterization of monadic second order logic on\n  infinite words", "comments": "15 pages", "journal-ref": null, "doi": null, "report-no": null, "categories": "math.LO cs.FL cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Monadic second order logic and linear temporal logic are two logical\nformalisms that can be used to describe classes of infinite words, i.e.,\nfirst-order models based on the natural numbers with order, successor, and\nfinitely many unary predicate symbols.\n  Monadic second order logic over infinite words (S1S) can alternatively be\ndescribed as a first-order logic interpreted in $\\mathcal{P}(\\omega)$, the\npower set Boolean algebra of the natural numbers, equipped with modal operators\nfor 'initial', 'next' and 'future' states. We prove that the first-order theory\nof this structure is the model companion of a class of algebras corresponding\nto the appropriate version of linear temporal logic (LTL) without until.\n  The proof makes crucial use of two classical, non-trivial results from the\nliterature, namely the completeness of LTL with respect to the natural numbers,\nand the correspondence between S1S-formulas and B\\\"uchi automata.\n", "versions": [{"version": "v1", "created": "Tue, 31 Mar 2015 07:22:11 GMT"}, {"version": "v2", "created": "Fri, 29 Apr 2016 14:10:34 GMT"}], "update_date": "2016-05-02", "authors_parsed": [["Ghilardi", "Silvio", ""], ["van Gool", "Samuel J.", ""]]}, {"id": "1503.09112", "submitter": "Arseny Shur", "authors": "Chuan Guo, Jeffrey Shallit and Arseny M. Shur", "title": "On the Combinatorics of Palindromes and Antipalindromes", "comments": "13 pages/ submitted to DLT 2015", "journal-ref": null, "doi": "10.1016/j.ipl.2016.07.001", "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We prove a number of results on the structure and enumeration of palindromes\nand antipalindromes. In particular, we study conjugates of palindromes,\npalindromic pairs, rich words, and the counterparts of these notions for\nantipalindromes.\n", "versions": [{"version": "v1", "created": "Tue, 31 Mar 2015 16:26:13 GMT"}], "update_date": "2016-09-13", "authors_parsed": [["Guo", "Chuan", ""], ["Shallit", "Jeffrey", ""], ["Shur", "Arseny M.", ""]]}, {"id": "1503.09163", "submitter": "Helmut Seidl", "authors": "Helmut Seidl, Sebastian Maneth, Gregor Kemper", "title": "Equivalence of Deterministic Top-Down Tree-to-String Transducers is\n  Decidable", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We show that equivalence of deterministic top-down tree-to-string transducers\nis decidable, thus solving a long standing open problem in formal language\ntheory. We also present efficient algorithms for subclasses: polynomial time\nfor total transducers with unary output alphabet (over a given top-down regular\ndomain language), and co-randomized polynomial time for linear transducers;\nthese results are obtained using techniques from multi-linear algebra.\n  For our main result, we prove that equivalence can be certified by means of\ninductive invariants using polynomial ideals. This allows us to construct two\nsemi-algorithms, one searching for a proof of equivalence, one for a witness of\nnon-equivalence. Furthermore, we extend our result to deterministic top-down\ntree-to-string transducers which produce output not in a free monoid but in a\nfree group.\n", "versions": [{"version": "v1", "created": "Tue, 31 Mar 2015 19:00:25 GMT"}, {"version": "v2", "created": "Fri, 27 Jan 2017 17:09:32 GMT"}], "update_date": "2017-01-30", "authors_parsed": [["Seidl", "Helmut", ""], ["Maneth", "Sebastian", ""], ["Kemper", "Gregor", ""]]}]