[{"id": "2003.03222", "submitter": "Gabriele Fici", "authors": "P\\'eter Burcsi and Gabriele Fici and Zsuzsanna Lipt\\'ak and Rajeev\n  Raman and Joe Sawada", "title": "Generating a Gray code for prefix normal words in amortized\n  polylogarithmic time per word", "comments": "To appear in Theoretical Computer Science. arXiv admin note: text\n  overlap with arXiv:1401.6346", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DS cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  A prefix normal word is a binary word with the property that no substring has\nmore $1$s than the prefix of the same length. By proving that the set of prefix\nnormal words is a bubble language, we can exhaustively list all prefix normal\nwords of length $n$ as a combinatorial Gray code, where successive strings\ndiffer by at most two swaps or bit flips. This Gray code can be generated in\n$\\Oh(\\log^2 n)$ amortized time per word, while the best generation algorithm\nhitherto has $\\Oh(n)$ running time per word. We also present a membership\ntester for prefix normal words, as well as a novel characterization of bubble\nlanguages.\n", "versions": [{"version": "v1", "created": "Thu, 5 Mar 2020 07:43:53 GMT"}, {"version": "v2", "created": "Fri, 7 Aug 2020 07:17:47 GMT"}], "update_date": "2020-08-20", "authors_parsed": [["Burcsi", "P\u00e9ter", ""], ["Fici", "Gabriele", ""], ["Lipt\u00e1k", "Zsuzsanna", ""], ["Raman", "Rajeev", ""], ["Sawada", "Joe", ""]]}, {"id": "2003.03785", "submitter": "Zhangsheng Lai", "authors": "Zhangsheng Lai, Aik Beng Ng, Liang Ze Wong, Simon See, and Shaowei Lin", "title": "Dependently Typed Knowledge Graphs", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL cs.AI cs.DB", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Reasoning over knowledge graphs is traditionally built upon a hierarchy of\nlanguages in the Semantic Web Stack. Starting from the Resource Description\nFramework (RDF) for knowledge graphs, more advanced constructs have been\nintroduced through various syntax extensions to add reasoning capabilities to\nknowledge graphs. In this paper, we show how standardized semantic web\ntechnologies (RDF and its query language SPARQL) can be reproduced in a unified\nmanner with dependent type theory. In addition to providing the basic\nfunctionalities of knowledge graphs, dependent types add expressiveness in\nencoding both entities and queries, explainability in answers to queries\nthrough witnesses, and compositionality and automation in the construction of\nwitnesses. Using the Coq proof assistant, we demonstrate how to build and query\ndependently typed knowledge graphs as a proof of concept for future works in\nthis direction.\n", "versions": [{"version": "v1", "created": "Sun, 8 Mar 2020 14:04:23 GMT"}], "update_date": "2020-03-10", "authors_parsed": [["Lai", "Zhangsheng", ""], ["Ng", "Aik Beng", ""], ["Wong", "Liang Ze", ""], ["See", "Simon", ""], ["Lin", "Shaowei", ""]]}, {"id": "2003.04629", "submitter": "Pamela Fleischmann", "authors": "Laura Barker, Pamela Fleischmann, Katharina Harwardt, Florin Manea,\n  Dirk Nowotka", "title": "Scattered Factor-Universality of Words", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL math.CO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  A word $u=u_1\\dots u_n$ is a scattered factor of a word $w$ if $u$ can be\nobtained from $w$ by deleting some of its letters: there exist the (potentially\nempty) words $v_0,v_1,..,v_n$ such that $w = v_0u_1v_1...u_nv_n$. The set of\nall scattered factors up to length $k$ of a word is called its full\n$k$-spectrum. Firstly, we show an algorithm deciding whether the $k$-spectra\nfor given $k$ of two words are equal or not, running in optimal time. Secondly,\nwe consider a notion of scattered-factors universality: the word $w$, with\n$\\letters(w)=\\Sigma$, is called $k$-universal if its $k$-spectrum includes all\nwords of length $k$ over the alphabet $\\Sigma$; we extend this notion to\n$k$-circular universality. After a series of preliminary combinatorial results,\nwe present an algorithm computing, for a given $k'$-universal word $w$ the\nminimal $i$ such that $w^i$ is $k$-universal for some $k>k'$. Several other\nconnected problems~are~also~considered.\n", "versions": [{"version": "v1", "created": "Tue, 10 Mar 2020 10:51:05 GMT"}], "update_date": "2020-03-11", "authors_parsed": [["Barker", "Laura", ""], ["Fleischmann", "Pamela", ""], ["Harwardt", "Katharina", ""], ["Manea", "Florin", ""], ["Nowotka", "Dirk", ""]]}, {"id": "2003.04728", "submitter": "Adriano Peron", "authors": "Laura Bozzelli, Aniello Murano, Adriano Peron", "title": "Module checking of pushdown multi-agent systems", "comments": "arXiv admin note: substantial text overlap with arXiv:1709.02107", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO cs.FL cs.MA", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In this paper, we investigate the module-checking problem of pushdown\nmulti-agent systems (PMS) against ATL and ATL* specifications. We establish\nthat for ATL, module checking of PMS is 2EXPTIME-complete, which is the same\ncomplexity as pushdown module-checking for CTL. On the other hand, we show that\nATL* module-checking of PMS turns out to be 4EXPTIME-complete, hence\nexponentially harder than both CTL* pushdown module-checking and ATL*\nmodel-checking of PMS. Our result for ATL* provides a rare example of a natural\ndecision problem that is elementary yet but with a complexity that is higher\nthan triply exponential-time.\n", "versions": [{"version": "v1", "created": "Sat, 7 Mar 2020 13:42:10 GMT"}], "update_date": "2020-03-11", "authors_parsed": [["Bozzelli", "Laura", ""], ["Murano", "Aniello", ""], ["Peron", "Adriano", ""]]}, {"id": "2003.05706", "submitter": "Ville Salo", "authors": "Ville Salo", "title": "Four heads are better than three", "comments": "14 pages; this v2 corrects, improves, and proves Theorem 4", "journal-ref": null, "doi": null, "report-no": null, "categories": "math.DS cs.CC cs.FL math.GR math.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We construct recursively-presented finitely-generated torsion groups which\nhave bounded torsion and whose word problem is conjunctive equivalent (in\nparticular positive and Turing equivalent) to a given recursively enumerable\nset. These groups can be interpreted as groups of finite state machines or as\nsubgroups of topological full groups, on effective subshifts over other torsion\ngroups. We define a recursion-theoretic property of a set of natural numbers,\ncalled impredictability, which roughly states that a Turing machine can\nenumerate numbers such that every Turing machine occasionally \"correctly\nguesses\" whether they are in the language (by halting on them or not), even if\ntrying not to, and given an oracle for shorter identities. We prove that\nimpredictable recursively enumerable sets exist. Combining these constructions\nand slightly adapting a result of [Salo and T\\\"orm\\\"a, 2017], we obtain that\nfour-headed group-walking finite-state automata can define strictly more\nsubshifts than three-headed automata on a group containing a copy of the\nintegers, confirming a conjecture of [Salo and T\\\"orm\\\"a, 2017]. These are the\nfirst examples of groups where four heads are better than one, and they show\nthe maximal height of a finite head hierarchy is indeed four.\n", "versions": [{"version": "v1", "created": "Thu, 12 Mar 2020 11:08:22 GMT"}, {"version": "v2", "created": "Fri, 13 Mar 2020 11:05:03 GMT"}], "update_date": "2020-03-16", "authors_parsed": [["Salo", "Ville", ""]]}, {"id": "2003.05826", "submitter": "Petra Wolf", "authors": "Petra Wolf, Henning Fernau", "title": "Regular Intersection Emptiness of Graph Problems: Finding a Needle in a\n  Haystack of Graphs with the Help of Automata", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL cs.CL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The Int_reg-problem of a combinatorial problem P asks, given a\nnondeterministic automaton M as input, whether the language L(M) accepted by M\ncontains any positive instance of the problem P. We consider the\nInt_reg-problem for a number of different graph problems and give general\ncriteria that give decision procedures for these Int_reg-problems. To achieve\nthis goal, we consider a natural graph encoding so that the language of all\ngraph encodings is regular. Then, we draw the connection between classical\npumping- and interchange-arguments from the field of formal language theory\nwith the graph operations induced on the encoded graph. Our techniques apply\namong others to the Int_reg-problem of well-known graph problems like Vertex\nCover and Independent Set, as well as to subgraph problems, graph-edit problems\nand graph-partitioning problems, including coloring problems.\n", "versions": [{"version": "v1", "created": "Thu, 12 Mar 2020 14:51:41 GMT"}], "update_date": "2020-03-13", "authors_parsed": [["Wolf", "Petra", ""], ["Fernau", "Henning", ""]]}, {"id": "2003.06177", "submitter": "Avraham N. Trahtman", "authors": "A.N. Trahtman", "title": "Cerny-Starke conjecture from the sixties of XX century", "comments": "18 pages, 9 lemmas, graphs, matrices. 4 examples arXiv admin note:\n  substantial text overlap with arXiv:1904.07694, arXiv:1202.4626; text overlap\n  with arXiv:1405.2435", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  A word $s$ of letters on edges of underlying graph $\\Gamma$ of deterministic\nfinite automaton (DFA) is called synchronizing if $s$ sends all states of the\nautomaton to a unique state. J. \\v{C}erny discovered in 1964 a sequence of\n$n$-state complete DFA possessing a minimal synchronizing word of length\n$(n-1)^2$. The hypothesis, mostly known today as \\v{C}erny conjecture, claims\nthat $(n-1)^2$ is a precise upper bound on the length of such a word over\nalphabet $\\Sigma$ of letters on edges of $\\Gamma$ for every complete $n$-state\nDFA. The hypothesis was formulated in 1966 by Starke. Algebra with nonstandard\noperation over special class of matrices induced by words in the alphabet of\nlabels on edges is used to prove the conjecture. The proof is based on the\nconnection between length of words $u$ and dimension of the space generated by\nsolution $L_x$ of matrix equation $M_uL_x=M_s$ for synchronizing word $s$, as\nwell as on relation between ranks of $M_u$ and $L_x$. Important role below\nplaced the notion of pseudo inverseL matrix, sometimes reversible.\n", "versions": [{"version": "v1", "created": "Fri, 13 Mar 2020 10:00:08 GMT"}, {"version": "v2", "created": "Tue, 25 Aug 2020 10:33:40 GMT"}, {"version": "v3", "created": "Tue, 9 Mar 2021 15:21:05 GMT"}, {"version": "v4", "created": "Tue, 6 Apr 2021 13:28:05 GMT"}], "update_date": "2021-06-15", "authors_parsed": [["Trahtman", "A. N.", ""]]}, {"id": "2003.06265", "submitter": "Henri Kauhanen", "authors": "Henri Kauhanen", "title": "Stable variation in multidimensional competition", "comments": "28 pages, 14 figures", "journal-ref": "In A. Breitbarth, M. Bouzouita, L. Danckaert & M. Farasyn (eds.),\n  The determinants of diachronic stability, pp. 263-290. Amsterdam: John\n  Benjamins (2019)", "doi": "10.1075/la.254.11kau", "report-no": null, "categories": "cs.AI cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The Fundamental Theorem of Language Change (Yang, 2000) implies the\nimpossibility of stable variation in the Variational Learning framework, but\nonly in the special case where two, and not more, grammatical variants compete.\nIntroducing the notion of an advantage matrix, I generalize Variational\nLearning to situations where the learner receives input generated by more than\ntwo grammars, and show that diachronically stable variation is an intrinsic\nfeature of several types of such multiple-grammar systems. This invites\nexperimentalists to take the possibility of stable variation seriously and\nidentifies one possible place where to look for it: situations of complex\nlanguage contact.\n", "versions": [{"version": "v1", "created": "Wed, 11 Mar 2020 17:40:57 GMT"}], "update_date": "2020-03-16", "authors_parsed": [["Kauhanen", "Henri", ""]]}, {"id": "2003.08249", "submitter": "Lukas Fleischer", "authors": "Lukas Fleischer and Jeffrey Shallit", "title": "The State Complexity of Lexicographically Smallest Words and Computing\n  Successors", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Given a regular language L over an ordered alphabet $\\Sigma$, the set of\nlexicographically smallest (resp., largest) words of each length is itself\nregular. Moreover, there exists an unambiguous finite-state transducer that, on\na given word w, outputs the length-lexicographically smallest word larger than\nw (henceforth called the L-successor of w). In both cases, naive constructions\nresult in an exponential blowup in the number of states. We prove that if L is\nrecognized by a DFA with n states, then $2^{\\Theta(\\sqrt{n \\log n})}$ states\nare sufficient for a DFA to recognize the subset S(L) of L composed of its\nlexicographically smallest words. We give a matching lower bound that holds\neven if S(L) is represented as an NFA. We then show that the same upper and\nlower bounds hold for an unambiguous finite-state transducer that computes\nL-successors.\n", "versions": [{"version": "v1", "created": "Wed, 18 Mar 2020 14:42:56 GMT"}], "update_date": "2020-03-19", "authors_parsed": [["Fleischer", "Lukas", ""], ["Shallit", "Jeffrey", ""]]}, {"id": "2003.08627", "submitter": "Marcin Jurdzi\\'nski", "authors": "Laure Daviaud and Marcin Jurdzi\\'nski and K. S. Thejaswini", "title": "The Strahler number of a parity game", "comments": "To appear in ICALP 2020", "journal-ref": null, "doi": "10.4230/LIPIcs.ICALP.2020.123", "report-no": null, "categories": "cs.DS cs.FL cs.GT cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The Strahler number of a rooted tree is the largest height of a perfect\nbinary tree that is its minor. The Strahler number of a parity game is proposed\nto be defined as the smallest Strahler number of the tree of any of its\nattractor decompositions. It is proved that parity games can be solved in\nquasi-linear space and in time that is polynomial in the number of vertices~$n$\nand linear in $({d}/{2k})^k$, where $d$ is the number of priorities and $k$ is\nthe Strahler number. This complexity is quasi-polynomial because the Strahler\nnumber is at most logarithmic in the number of vertices. The proof is based on\na new construction of small Strahler-universal trees.\n  It is shown that the Strahler number of a parity game is a robust parameter:\nit coincides with its alternative version based on trees of progress measures\nand with the register number defined by Lehtinen~(2018). It follows that parity\ngames can be solved in quasi-linear space and in time that is polynomial in the\nnumber of vertices and linear in $({d}/{2k})^k$, where $k$ is the register\nnumber. This significantly improves the running times and space achieved for\nparity games of bounded register number by Lehtinen (2018) and by Parys (2020).\n  The running time of the algorithm based on small Strahler-universal trees\nyields a novel trade-off $k \\cdot \\lg(d/k) = O(\\log n)$ between the two natural\nparameters that measure the structural complexity of a parity game, which\nallows solving parity games in polynomial time. This includes as special cases\nthe asymptotic settings of those parameters covered by the results of Calude,\nJain Khoussainov, Li, and Stephan (2017), of Jurdzi\\'nski and Lazi\\'c (2017),\nand of Lehtinen (2018), and it significantly extends the range of such\nsettings, for example to $d = 2^{O\\left(\\sqrt{\\lg n}\\right)}$ and $k =\nO\\!\\left(\\sqrt{\\lg n}\\right)$.\n", "versions": [{"version": "v1", "created": "Thu, 19 Mar 2020 08:36:48 GMT"}, {"version": "v2", "created": "Mon, 4 May 2020 12:36:53 GMT"}], "update_date": "2020-08-04", "authors_parsed": [["Daviaud", "Laure", ""], ["Jurdzi\u0144ski", "Marcin", ""], ["Thejaswini", "K. S.", ""]]}, {"id": "2003.09364", "submitter": "Stoyan Mihov", "authors": "Diana Geneva, Georgi Shopov, Stoyan Mihov", "title": "Composition and Weight Pushing of Monotonic Subsequential Failure\n  Transducers Representing Probabilistic Models", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We present a construction for the composition of subsequential transducers\n(representing conditional probabilistic models) with subsequential failure\ntransducers (representing probabilistic models). Under certain conditions,\nsatisfied by the corresponding transduction devices, a more efficient\nconstruction is applicable that avoids the creation of unnecessary states.\nFurthermore, the weights of the resulting failure transducers can be\nefficiently redistributed via weight pushing in the $\\langle \\mathbb{R}_+, +,\n\\times, 0, 1 \\rangle$ and $\\langle \\mathbb{R}_+, \\max, \\times, 0, 1 \\rangle$\nsemirings.\n", "versions": [{"version": "v1", "created": "Fri, 20 Mar 2020 16:37:00 GMT"}, {"version": "v2", "created": "Thu, 21 May 2020 11:51:58 GMT"}], "update_date": "2020-05-22", "authors_parsed": [["Geneva", "Diana", ""], ["Shopov", "Georgi", ""], ["Mihov", "Stoyan", ""]]}, {"id": "2003.09918", "submitter": "Irmak Sa\\u{g}lam", "authors": "Irmak Saglam, Ebru Aydin Gol", "title": "Kontrol Edilebilir ptSTL Formulu Sentezi -- Synthesis of Controllable\n  ptSTL Formulas", "comments": "in Turkish", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL cs.LO cs.SY eess.SY", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In this work, we develop an approach to anomaly detection and prevention\nproblem using Signal Temporal Logic (STL). This approach consists of two steps:\ndetection of the causes of the anomalities as STL formulas and prevention of\nthe satisfaction of the formula via controller synthesis. This work focuses on\nthe first step and proposes a formula template such that any controllable cause\ncan be represented in this template. An efficient algorithm to synthesize\nformulas in this template is presented. Finally, the results are shown on an\nexample.\n  -----\n  Bu bildiride anomali tespiti ve onlenmesi problemine, Sinyal Zamansal Mantigi\n(Signal Temporal Logic) tabanli iki asamali bir cozum sunulmaktadir. Ilk asama\nnedenlerin tespiti, ikinci asama ise bir kontrol stratejisi ile nedenlerin\nsistem uzerinde engellenmesidir. Iki asama birbirine bagimlidir. Bu bildiride,\nilk asama olan istenmeyen olaylarin nedenlerinin tespitinde kullanilan neden\nformulu sablonu gelistirilmektedir. Bildiride kullanilan sablon ile butun\nkontrol edilebilir formuller tanimlanabilmektedir. Bu sablon icin verimli bir\nformul sentezleme algoritmasi sunulmus, ve sonuclar ornek bir sistem uzerinde\ngosterilmistir.\n", "versions": [{"version": "v1", "created": "Sun, 22 Mar 2020 15:09:22 GMT"}], "update_date": "2020-03-24", "authors_parsed": [["Saglam", "Irmak", ""], ["Gol", "Ebru Aydin", ""]]}, {"id": "2003.10328", "submitter": "Ilkka T\\\"orm\\\"a", "authors": "Ville Salo and Ilkka T\\\"orm\\\"a", "title": "A Physically Universal Turing Machine", "comments": "45 pages plus 6 pages of appendices, 17 figures", "journal-ref": null, "doi": null, "report-no": null, "categories": "math.DS cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We construct a two-dimensional Turing machine that is physically universal in\nboth the moving tape and moving head model. In particular, it is mixing of all\nfinite orders in both models. We also provide a variant that is physically\nuniversal in the moving tape model, but not in the moving head model.\n", "versions": [{"version": "v1", "created": "Fri, 20 Mar 2020 15:36:08 GMT"}], "update_date": "2020-03-24", "authors_parsed": [["Salo", "Ville", ""], ["T\u00f6rm\u00e4", "Ilkka", ""]]}, {"id": "2003.11808", "submitter": "Ami Sakakibara", "authors": "Ami Sakakibara, Toshimitsu Ushio", "title": "On-Line Permissive Supervisory Control of Discrete Event Systems for\n  scLTL Specifications", "comments": "6 pages, 4 figures", "journal-ref": "in IEEE Control Systems Letters, vol. 4, no. 3, pp. 530-535, July\n  2020", "doi": "10.1109/LCSYS.2020.2971029", "report-no": null, "categories": "eess.SY cs.FL cs.SY", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We propose an on-line supervisory control scheme for discrete event systems\n(DESs), where a control specification is described by a fragment of linear\ntemporal logic. On the product automaton of the DES and an acceptor for the\nspecification, we define a ranking function that returns the minimum number of\nsteps required to reach an accepting state from each state. In addition, we\nintroduce a permissiveness function that indicates a time-varying permissive\nlevel. At each step during the on-line control scheme, the supervisor refers to\nthe permissiveness function as well as the ranking function in order to\nguarantee the control specification while handling the tradeoff between its\npermissiveness and acceptance of the specification. The proposed scheme is\ndemonstrated in a surveillance problem for a mobile robot.\n", "versions": [{"version": "v1", "created": "Thu, 26 Mar 2020 09:21:17 GMT"}], "update_date": "2020-03-27", "authors_parsed": [["Sakakibara", "Ami", ""], ["Ushio", "Toshimitsu", ""]]}, {"id": "2003.11979", "submitter": "Sven Schewe", "authors": "Sven Schewe", "title": "Minimising Good-for-Games automata is NP complete", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This paper discusses the hardness of finding minimal good-for-games (GFG)\nBuchi, Co-Buchi, and parity automata with state based acceptance. The problem\nappears to sit between finding small deterministic and finding small\nnondeterministic automata, where minimality is NP-complete and PSPACE-complete,\nrespectively. However, recent work of Radi and Kupferman has shown that\nminimising Co-Buchi automata with transition based acceptance is tractable,\nwhich suggests that the complexity of minimising GFG automata might be cheaper\nthan minimising deterministic automata.\n  We show for the standard state based acceptance that the minimality of a GFG\nautomaton is NP-complete for Buchi, Co-Buchi, and parity GFG automata. The\nproofs are a surprisingly straight forward generalisation of the proofs from\ndeterministic Buchi automata: they use a similar reductions, and the same hard\nclass of languages.\n", "versions": [{"version": "v1", "created": "Thu, 26 Mar 2020 15:37:34 GMT"}], "update_date": "2020-03-27", "authors_parsed": [["Schewe", "Sven", ""]]}, {"id": "2003.12274", "submitter": "Ami Sakakibara", "authors": "Ami Sakakibara, Toshimitsu Ushio", "title": "On-Line Synthesis of Permissive Supervisors for Partially Observed\n  Discrete Event Systems under scLTL Constraints", "comments": "7 pages, 2 figures; Accepted for the 21st IFAC World Congress. arXiv\n  admin note: text overlap with arXiv:2003.11808", "journal-ref": null, "doi": null, "report-no": null, "categories": "eess.SY cs.FL cs.SY", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We consider a supervisory control problem of a discrete event system (DES)\nunder partial observation, where a control specification is given by a fragment\nof linear temporal logic. We design an on-line supervisor that dynamically\ncomputes its control action with the complete information of the product\nautomaton of the DES and an acceptor for the specification. The concepts of\ncontrollability and observability are defined by means of a ranking function\ndefined on the product automaton, which decreases its value if an accepting\nstate of the product automaton is being approached. The proposed on-line\ncontrol scheme leverages the ranking function and a permissiveness function,\nwhich represents a time-varying permissiveness level. As a result, the on-line\nsupervisor achieves the specification, being aware of the tradeoff between its\npermissiveness and acceptance of the specification, if the product automaton is\ncontrollable and observable.\n", "versions": [{"version": "v1", "created": "Fri, 27 Mar 2020 08:20:41 GMT"}], "update_date": "2020-03-30", "authors_parsed": [["Sakakibara", "Ami", ""], ["Ushio", "Toshimitsu", ""]]}, {"id": "2003.12477", "submitter": "Jan Baumeister", "authors": "Jan Baumeister and Bernd Finkbeiner and Maximilian Schwenger and Hazem\n  Torfah", "title": "FPGA Stream-Monitoring of Real-time Properties", "comments": null, "journal-ref": "ACM Transactions on Embedded Computing Systems 2019", "doi": null, "report-no": null, "categories": "cs.DC cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  An essential part of cyber-physical systems is the online evaluation of\nreal-time data streams. Especially in systems that are intrinsically\nsafety-critical, a dedicated monitoring component inspecting data streams to\ndetect problems at runtime greatly increases the confidence in a safe\nexecution. Such a monitor needs to be based on a specification language capable\nof expressing complex, high-level properties using only the accessible\nlow-level signals. Moreover, tight constraints on computational resources\nexacerbate the requirements on the monitor. Thus, several existing approaches\nto monitoring are not applicable due to their dependence on an operating\nsystem. We present an FPGA-based monitoring approach by compiling an RTLola\nspecification into synthesizable VHDL code. RTLola is a stream-based\nspecification language capable of expressing complex real-time properties while\nproviding an upper bound on the execution time and memory requirements. The\nstatically determined memory bound allows for a compilation to an FPGA with a\nfixed size. An advantage of FPGAs is a simple integration process in existing\nsystems and superb executing time. The compilation results in a highly parallel\nimplementation thanks to the modular nature of RTLola specifications. This\nfurther increases the maximal event rate the monitor can handle.\n", "versions": [{"version": "v1", "created": "Wed, 18 Mar 2020 14:49:20 GMT"}], "update_date": "2021-04-13", "authors_parsed": [["Baumeister", "Jan", ""], ["Finkbeiner", "Bernd", ""], ["Schwenger", "Maximilian", ""], ["Torfah", "Hazem", ""]]}, {"id": "2003.12810", "submitter": "Tara Brough", "authors": "Tara Brough", "title": "Automaton semigroup free products revisited", "comments": "5 pages", "journal-ref": null, "doi": null, "report-no": null, "categories": "math.GR cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  An improvement on earlier results on free products of automaton semigroups;\nshowing that a free product of two automaton semigroups is again an automaton\nsemigroup providing there exists a homomorphism from one of the base semigroups\nto the other. The result is extended by induction to give a condition for a\nfree product of finitely many automaton semigroups to be an automaton\nsemigroup.\n", "versions": [{"version": "v1", "created": "Sat, 28 Mar 2020 15:10:34 GMT"}], "update_date": "2020-03-31", "authors_parsed": [["Brough", "Tara", ""]]}, {"id": "2003.13558", "submitter": "Thomas Worsch", "authors": "Thomas Worsch (Karlsruhe Institute of Technology)", "title": "A faster algorithm for the FSSP in one-dimensional CA with multiple\n  speeds", "comments": "11 pages, 3 figures", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.CC cs.FL nlin.CG", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In cellular automata with multiple speeds for each cell $i$ there is a\npositive integer $p_i$ such that this cell updates its state still periodically\nbut only at times which are a multiple of $p_i$. Additionally there is a finite\nupper bound on all $p_i$. Manzoni and Umeo have described an algorithm for\nthese (one-dimensional) cellular automata which solves the Firing Squad\nSynchronization Problem. This algorithm needs linear time (in the number of\ncells to be synchronized) but for many problem instances it is slower than the\noptimum time by some positive constant factor. In the present paper we derive\nlower bounds on possible synchronization times and describe an algorithm which\nis never slower and in some cases faster than the one by Manzoni and Umeo and\nwhich is close to a lower bound (up to a constant summand) in more cases.\n", "versions": [{"version": "v1", "created": "Mon, 30 Mar 2020 15:34:09 GMT"}], "update_date": "2020-03-31", "authors_parsed": [["Worsch", "Thomas", "", "Karlsruhe Institute of Technology"]]}, {"id": "2003.13608", "submitter": "Tara Brough", "authors": "Tara Brough", "title": "Word problem languages for completely regular semigroups", "comments": "7 pages", "journal-ref": null, "doi": null, "report-no": null, "categories": "math.GR cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Motivated by the question of which completely regular semigroups have\ncontext-free word problem, we show that for certain classes of languages\n$\\mathfrak{C}$(including context-free), every completely regular semigroup that\nis a union of finitely many finitely generated groups with word problem in\n$\\mathfrak{C}$ also has word problem in $\\mathfrak{C}$. We give an example to\nshow that not all completely regular semigroups with context-free word problem\ncan be so constructed.\n", "versions": [{"version": "v1", "created": "Mon, 30 Mar 2020 16:43:00 GMT"}], "update_date": "2020-03-31", "authors_parsed": [["Brough", "Tara", ""]]}, {"id": "2003.14177", "submitter": "Micha{\\l} Pilipczuk", "authors": "Adam Paszke and Micha{\\l} Pilipczuk", "title": "VC density of set systems defnable in tree-like graphs", "comments": "14 pages, 1 figure", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO cs.DM cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We study set systems definable in graphs using variants of logic with\ndifferent expressive power. Our focus is on the notion of Vapnik-Chervonenkis\ndensity: the smallest possible degree of a polynomial bounding the\ncardinalities of restrictions of such set systems. On one hand, we prove that\nif $\\varphi(\\bar x,\\bar y)$ is a fixed CMSO$_1$ formula and $\\cal C$ is a class\nof graphs with uniformly bounded cliquewidth, then the set systems defined by\n$\\varphi$ in graphs from $\\cal C$ have VC density at most $|\\bar y|$, which is\nthe smallest bound that one could expect. We also show an analogous statement\nfor the case when $\\varphi(\\bar x,\\bar y)$ is a CMSO$_2$ formula and $\\cal C$\nis a class of graphs with uniformly bounded treewidth. We complement these\nresults by showing that if $\\cal C$ has unbounded cliquewidth (respectively,\ntreewidth), then, under some mild technical assumptions on $\\cal C$, the set\nsystems definable by CMSO$_1$ (respectively, CMSO$_2$) formulas in graphs from\n$\\cal C$ may have unbounded VC dimension, hence also unbounded VC density.\n", "versions": [{"version": "v1", "created": "Tue, 31 Mar 2020 13:21:59 GMT"}], "update_date": "2020-04-01", "authors_parsed": [["Paszke", "Adam", ""], ["Pilipczuk", "Micha\u0142", ""]]}]