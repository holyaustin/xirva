[{"id": "0905.1045", "submitter": "Giovanni Pighizzini", "authors": "Andreas Malcher and Giovanni Pighizzini", "title": "Descriptional complexity of bounded context-free languages", "comments": "31 pages, 1 figure. A preliminary version was presented at DLT 2007.\n  The full version is submitted to a journal", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Finite-turn pushdown automata (PDA) are investigated concerning their\ndescriptional complexity. It is known that they accept exactly the class of\nultralinear context-free languages. Furthermore, the increase in size when\nconverting arbitrary PDAs accepting ultralinear languages to finite-turn PDAs\ncannot be bounded by any recursive function. The latter phenomenon is known as\nnon-recursive trade-off. In this paper, finite-turn PDAs accepting bounded\nlanguages are considered. First, letter-bounded languages are studied. We prove\nthat in this case the non-recursive trade-off is reduced to a recursive\ntrade-off, more precisely, to an exponential trade-off. A conversion algorithm\nis presented and the optimality of the construction is shown by proving tight\nlower bounds. Furthermore, the question of reducing the number of turns of a\ngiven finite-turn PDA is studied. Again, a conversion algorithm is provided\nwhich shows that in this case the trade-off is at most polynomial. Finally, the\nmore general case of word-bounded languages is investigated. We show how the\nresults obtained for letter-bounded languages can be extended to word-bounded\nlanguages.\n", "versions": [{"version": "v1", "created": "Thu, 7 May 2009 15:18:10 GMT"}, {"version": "v2", "created": "Fri, 8 May 2009 14:20:09 GMT"}], "update_date": "2009-05-08", "authors_parsed": [["Malcher", "Andreas", ""], ["Pighizzini", "Giovanni", ""]]}, {"id": "0905.1129", "submitter": "Narad Rampersad", "authors": "James Currie and Narad Rampersad", "title": "A proof of Dejean's conjecture", "comments": "proof details added", "journal-ref": null, "doi": null, "report-no": null, "categories": "math.CO cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We prove Dejean's conjecture. Specifically, we show that Dejean's conjecture\nholds for the last remaining open values of n, namely 15 <= n <= 26.\n", "versions": [{"version": "v1", "created": "Thu, 7 May 2009 20:19:04 GMT"}, {"version": "v2", "created": "Mon, 11 May 2009 14:49:23 GMT"}, {"version": "v3", "created": "Fri, 22 May 2009 16:50:26 GMT"}], "update_date": "2009-05-22", "authors_parsed": [["Currie", "James", ""], ["Rampersad", "Narad", ""]]}, {"id": "0905.1202", "submitter": "Pedro Pablo P\\'erez Velasco", "authors": "Pedro Pablo Perez Velasco", "title": "Matrix Graph Grammars as a Model of Computation", "comments": "33 pages, 19 figures. English improved. One new section introducing\n  an algebra of matrices", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DM cs.CC cs.FL", "license": "http://creativecommons.org/licenses/by-nc-sa/3.0/", "abstract": "  Matrix Graph Grammars (MGG) is a novel approach to the study of graph\ndynamics ([15]). In the present contribution we look at MGG as a formal grammar\nand as a model of computation, which is a necessary step in the more ambitious\nprogram of tackling complexity theory through MGG. We also study its relation\nwith other well-known models such as Turing machines (TM) and Boolean circuits\n(BC) as well as non-determinism. As a side effect, all techniques available for\nMGG can be applied to TMs and BCs.\n", "versions": [{"version": "v1", "created": "Fri, 8 May 2009 08:35:23 GMT"}, {"version": "v2", "created": "Tue, 12 May 2009 06:40:21 GMT"}, {"version": "v3", "created": "Mon, 16 Nov 2009 07:00:16 GMT"}], "update_date": "2009-11-16", "authors_parsed": [["Velasco", "Pedro Pablo Perez", ""]]}, {"id": "0905.1248", "submitter": "Giovanni Pighizzini", "authors": "Giovanni Pighizzini", "title": "Deterministic pushdown automata and unary languages", "comments": "17 pages. Preprint of an article submitted for consideration in the\n  International Journal of Foundations of Computer Science (World Scientific\n  Publishing Company). A preliminary version was presented at the conference\n  CIAA 2008", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The simulation of deterministic pushdown automata defined over a one-letter\nalphabet by finite state automata is investigated from a descriptional\ncomplexity point of view. We show that each unary deterministic pushdown\nautomaton of size s can be simulated by a deterministic finite automaton with a\nnumber of states that is exponential in s. We prove that this simulation is\ntight. Furthermore, its cost cannot be reduced even if it is performed by a\ntwo-way nondeterministic automaton. We also prove that there are unary\nlanguages for which deterministic pushdown automata cannot be exponentially\nmore succinct than finite automata. In order to state this result, we\ninvestigate the conversion of deterministic pushdown automata into context-free\ngrammars. We prove that in the unary case the number of variables in the\nresulting grammar is strictly smaller than the number of variables needed in\nthe case of nonunary alphabets.\n", "versions": [{"version": "v1", "created": "Fri, 8 May 2009 14:24:08 GMT"}], "update_date": "2009-05-11", "authors_parsed": [["Pighizzini", "Giovanni", ""]]}, {"id": "0905.1271", "submitter": "Giovanni Pighizzini", "authors": "Giovanni Pighizzini", "title": "Nondeterministic one-tape off-line Turing machines and their time\n  complexity", "comments": "18 pages. The paper will appear on the Journal of Automata, Languages\n  and Combinatorics", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL cs.CC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In this paper we consider the time and the crossing sequence complexities of\none-tape off-line Turing machines. We show that the running time of each\nnondeterministic machine accepting a nonregular language must grow at least as\nn\\log n, in the case all accepting computations are considered (accept\nmeasure). We also prove that the maximal length of the crossing sequences used\nin accepting computations must grow at least as \\log n. On the other hand, it\nis known that if the time is measured considering, for each accepted string,\nonly the faster accepting computation (weak measure), then there exist\nnonregular languages accepted in linear time. We prove that under this measure,\neach accepting computation should exhibit a crossing sequence of length at\nleast \\log\\log n. We also present efficient implementations of algorithms\naccepting some unary nonregular languages.\n", "versions": [{"version": "v1", "created": "Fri, 8 May 2009 14:34:37 GMT"}], "update_date": "2009-05-11", "authors_parsed": [["Pighizzini", "Giovanni", ""]]}, {"id": "0905.2355", "submitter": "Zhe Chen", "authors": "Zhe Chen, Gilles Motet", "title": "Modeling System Safety Requirements Using Input/Output Constraint\n  Meta-Automata", "comments": "6 pages. In Proceedings of the 4th International Conference on\n  Systems (ICONS 2009), Gosier, Guadeloupe, France, pp. 228-233. IEEE Computer\n  Society, 2009", "journal-ref": null, "doi": "10.1109/ICONS.2009.24", "report-no": null, "categories": "cs.SE cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Most recent software related accidents have been system accidents. To\nvalidate the absence of system hazards concerning dysfunctional interactions,\nindustrials call for approaches of modeling system safety requirements and\ninteraction constraints among components and with environments (e.g., between\nhumans and machines). This paper proposes a framework based on input/output\nconstraint meta-automata, which restricts system behavior at the meta level.\nThis approach can formally model safe interactions between a system and its\nenvironment or among its components. This framework differs from the framework\nof the traditional model checking. It explicitly separates the tasks of product\nengineers and safety engineers, and provides a top-down technique for modeling\na system with safety constraints, and for automatically composing a safe system\nthat conforms to safety requirements. The contributions of this work include\nformalizing system safety requirements and a way of automatically ensuring\nsystem safety.\n", "versions": [{"version": "v1", "created": "Thu, 14 May 2009 15:52:40 GMT"}], "update_date": "2016-11-17", "authors_parsed": [["Chen", "Zhe", ""], ["Motet", "Gilles", ""]]}, {"id": "0905.2364", "submitter": "Zhe Chen", "authors": "Zhe Chen, Gilles Motet", "title": "Formalizing Safety Requirements Using Controlling Automata", "comments": "6 pages. In Proceedings of the 2nd International Conference on\n  Dependability (DEPEND 2009), Athens, Greece. IEEE Computer Society, 2009", "journal-ref": null, "doi": "10.1109/DEPEND.2009.18", "report-no": null, "categories": "cs.SE cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Safety is an important element of dependability. It is defined as the absence\nof accidents. Most accidents involving software-intensive systems have been\nsystem accidents, which are caused by unsafe inter-system or inter-component\ninteractions. To validate the absence of system hazards concerning\ndysfunctional interactions, industrials call for approaches of modeling system\nsafety requirements and interaction constraints among components. This paper\nproposes such a formalism, namely interface control systems (or shortly\nC-Systems). An interface C-System is composed of an interface automaton and a\ncontrolling automaton, which formalizes safe interactions and restricts system\nbehavior at the meta level. This framework differs from the framework of\ntraditional model checking. It explicitly separates the tasks of product\nengineers and safety engineers, and provides a top-down technique for modeling\na system with safety constraints, and for automatically composing a safe system\nthat conforms to safety requirements. The contributions of this work include\nformalizing safety requirements and a way of automatically ensuring system\nsafety.\n", "versions": [{"version": "v1", "created": "Thu, 14 May 2009 16:03:51 GMT"}], "update_date": "2016-11-17", "authors_parsed": [["Chen", "Zhe", ""], ["Motet", "Gilles", ""]]}, {"id": "0905.2367", "submitter": "Zhe Chen", "authors": "Zhe Chen, Gilles Motet", "title": "A Language-theoretic View on Guidelines and Consistency Rules of UML", "comments": "16 pages. In Proceedings of the 5th European Conference on Model\n  Driven Architecture - Foundations and Applications (ECMDA-FA 2009), Enschede,\n  The Netherlands, Lecture Notes in Computer Science 5562, pp. 66-81. Springer,\n  2009", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.SE cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Guidelines and consistency rules of UML are used to control the degrees of\nfreedom provided by the language to prevent faults. Guidelines are used in\nspecific domains (e.g., avionics) to recommend the proper use of technologies.\nConsistency rules are used to deal with inconsistencies in models. However,\nguidelines and consistency rules use informal restrictions on the uses of\nlanguages, which makes checking difficult. In this paper, we consider these\nproblems from a language-theoretic view. We propose the formalism of C-Systems,\nshort for \"formal language control systems\". A C-System consists of a\ncontrolled grammar and a controlling grammar. Guidelines and consistency rules\nare formalized as controlling grammars that control the uses of UML, i.e. the\nderivations using the grammar of UML. This approach can be implemented as a\nparser, which can automatically verify the rules on a UML user model in XMI\nformat. A comparison to related work shows our contribution: a generic top-down\nand syntax-based approach that checks language level constraints at\ncompile-time.\n", "versions": [{"version": "v1", "created": "Thu, 14 May 2009 16:13:48 GMT"}], "update_date": "2009-05-15", "authors_parsed": [["Chen", "Zhe", ""], ["Motet", "Gilles", ""]]}, {"id": "0905.4193", "submitter": "Tomas Masopust", "authors": "Tomas Masopust", "title": "Answers to Questions Formulated in the Paper \"On States Observability in\n  Deterministic Finite Automata\"", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This paper gives answers to questions formulated as open in the paper \"On\nState Observability in Deterministic Finite Automata\" by A. Mateescu and Gh.\nPaun. Specifically, it demonstrates that for all k >= 2, the families of\nregular languages acceptable by deterministic finite automata with no more than\nk semi-observable states, denoted by Tk, are anti-AFL's, and that the family T1\ndiffers in the closure property under Kleene +.\n", "versions": [{"version": "v1", "created": "Tue, 26 May 2009 13:07:53 GMT"}], "update_date": "2009-05-27", "authors_parsed": [["Masopust", "Tomas", ""]]}, {"id": "0905.4923", "submitter": "James Currie", "authors": "James D. Currie", "title": "Lexicographically least words in the orbit closure of the Rudin-Shapiro\n  word", "comments": "9 pages", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL math.CO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We give an effective characterization of the lexicographically least word in\nthe orbit closure of the Rudin-Shapiro word w having a specified prefix. In\nparticular, the lexicographically least word in the orbit closure of the\nRudin-Shapiro word is 0w. This answers a question Allouche et al.\n", "versions": [{"version": "v1", "created": "Fri, 29 May 2009 17:14:46 GMT"}, {"version": "v2", "created": "Mon, 1 Jun 2009 15:13:42 GMT"}, {"version": "v3", "created": "Mon, 4 Oct 2010 20:12:31 GMT"}], "update_date": "2010-10-06", "authors_parsed": [["Currie", "James D.", ""]]}]