[{"id": "1609.00214", "submitter": "Wojciech Czerwi\\'nski", "authors": "Lorenzo Clemente, Wojciech Czerwi\\'nski, S{\\l}awomir Lasota, Charles\n  Paperman", "title": "Separability of Reachability Sets of Vector Addition Systems", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Given two families of sets $\\mathcal{F}$ and $\\mathcal{G}$, the $\\mathcal{F}$\nseparability problem for $\\mathcal{G}$ asks whether for two given sets $U, V\n\\in \\mathcal{G}$ there exists a set $S \\in \\mathcal{F}$, such that $U$ is\nincluded in $S$ and $V$ is disjoint with $S$. We consider two families of sets\n$\\mathcal{F}$: modular sets $S \\subseteq \\mathbb{N}^d$, defined as unions of\nequivalence classes modulo some natural number $n \\in \\mathbb{N}$, and unary\nsets. Our main result is decidability of modular and unary separability for the\nclass $\\mathcal{G}$ of reachability sets of Vector Addition Systems, Petri\nNets, Vector Addition Systems with States, and for sections thereof.\n", "versions": [{"version": "v1", "created": "Thu, 1 Sep 2016 12:42:18 GMT"}], "update_date": "2016-09-02", "authors_parsed": [["Clemente", "Lorenzo", ""], ["Czerwi\u0144ski", "Wojciech", ""], ["Lasota", "S\u0142awomir", ""], ["Paperman", "Charles", ""]]}, {"id": "1609.00396", "submitter": "\\\"Ozlem Salehi", "authors": "\\\"Ozlem Salehi, Flavio D'Alessandro, A.C.Cem Say", "title": "Language Classes Associated with Automata Over Matrix Groups", "comments": "NCMA'16", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We investigate the language classes recognized by group automata over matrix\ngroups. We present a summary of the results obtained so far together with a\nnumber of new results. We look at the computational power of time-bounded group\nautomata where the group under consideration has polynomial growth.\n", "versions": [{"version": "v1", "created": "Thu, 1 Sep 2016 20:24:55 GMT"}], "update_date": "2016-09-05", "authors_parsed": [["Salehi", "\u00d6zlem", ""], ["D'Alessandro", "Flavio", ""], ["Say", "A. C. Cem", ""]]}, {"id": "1609.00610", "submitter": "Claudio Menghi", "authors": "Claudio Menghi and Paola Spoletini and Carlo Ghezzi", "title": "Modeling, refining and analyzing Incomplete B\\\"uchi Automata", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Software development is an iterative process which includes a set of\ndevelopment steps that transform the initial high level specification of the\nsystem into its final, fully specified, implementation. This report discusses\nthe theoretical foundations that allow Incomplete B\\\"uchi Automata (IBAs) to be\nused in the iterative development of a sequential system.\n", "versions": [{"version": "v1", "created": "Fri, 2 Sep 2016 14:19:43 GMT"}], "update_date": "2016-09-05", "authors_parsed": [["Menghi", "Claudio", ""], ["Spoletini", "Paola", ""], ["Ghezzi", "Carlo", ""]]}, {"id": "1609.01458", "submitter": "Tom\\'a\\v{s} Masopust", "authors": "Jan Komenda, Tom\\'a\\v{s} Masopust and J. H. van Schuppen", "title": "On a Distributed Computation of Supervisors in Modular Supervisory\n  Control", "comments": "Extended abstract of a paper presented at the International\n  Conference on Complex Systems Engineering (ICCSE 2015)", "journal-ref": null, "doi": "10.1109/ComplexSys.2015.7385990", "report-no": null, "categories": "math.OC cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In this paper, we discuss a supervisory control problem of modular\ndiscrete-event systems that allows for a distributed computation of\nsupervisors. We provide a characterization and an algorithm to compute the\nsupervisors. If the specification does not satisfy the properties, we make use\nof a relaxation of coordination control to compute a sublanguage of the\nspecification for which the supervisors can be computed in a distributed way.\n", "versions": [{"version": "v1", "created": "Tue, 6 Sep 2016 09:34:45 GMT"}], "update_date": "2016-09-07", "authors_parsed": [["Komenda", "Jan", ""], ["Masopust", "Tom\u00e1\u0161", ""], ["van Schuppen", "J. H.", ""]]}, {"id": "1609.01926", "submitter": "Giovanni Carmantini", "authors": "Giovanni Sirio Carmantini, Peter beim Graben, Mathieu Desroches,\n  Serafim Rodrigues", "title": "A modular architecture for transparent computation in Recurrent Neural\n  Networks", "comments": null, "journal-ref": null, "doi": "10.1016/j.neunet.2016.09.001", "report-no": null, "categories": "cs.NE cs.AI cs.CL cs.FL cs.SC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Computation is classically studied in terms of automata, formal languages and\nalgorithms; yet, the relation between neural dynamics and symbolic\nrepresentations and operations is still unclear in traditional eliminative\nconnectionism. Therefore, we suggest a unique perspective on this central\nissue, to which we would like to refer as to transparent connectionism, by\nproposing accounts of how symbolic computation can be implemented in neural\nsubstrates. In this study we first introduce a new model of dynamics on a\nsymbolic space, the versatile shift, showing that it supports the real-time\nsimulation of a range of automata. We then show that the Goedelization of\nversatile shifts defines nonlinear dynamical automata, dynamical systems\nevolving on a vectorial space. Finally, we present a mapping between nonlinear\ndynamical automata and recurrent artificial neural networks. The mapping\ndefines an architecture characterized by its granular modularity, where data,\nsymbolic operations and their control are not only distinguishable in\nactivation space, but also spatially localizable in the network itself, while\nmaintaining a distributed encoding of symbolic representations. The resulting\nnetworks simulate automata in real-time and are programmed directly, in absence\nof network training. To discuss the unique characteristics of the architecture\nand their consequences, we present two examples: i) the design of a Central\nPattern Generator from a finite-state locomotive controller, and ii) the\ncreation of a network simulating a system of interactive automata that supports\nthe parsing of garden-path sentences as investigated in psycholinguistics\nexperiments.\n", "versions": [{"version": "v1", "created": "Wed, 7 Sep 2016 10:44:28 GMT"}], "update_date": "2016-09-08", "authors_parsed": [["Carmantini", "Giovanni Sirio", ""], ["Graben", "Peter beim", ""], ["Desroches", "Mathieu", ""], ["Rodrigues", "Serafim", ""]]}, {"id": "1609.03062", "submitter": "Thomas Wilke", "authors": "Thomas Wilke", "title": "{\\omega}-Automata", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This paper gives a concise introduction into the basic theory of\n{\\omega}-automata (as of March 2014). The starting point are the different\ntypes of recurrence conditions, modes of operation (deterministic,\nnondeterministic, alternating automata), and directions (forward or backward\nautomata). The main focus is on fundamental automata constructions, for\ninstance, for boolean operations, determinization, disambiguation, and removing\nalternation. It also covers some algebraic aspects such as congruences for\n{\\omega}-automata (and {\\omega}-languages), basic structure theory (loops), and\napplications in mathematical logic. This paper may eventually become a chapter\nin a handbook of automata theory.\n", "versions": [{"version": "v1", "created": "Sat, 10 Sep 2016 14:50:42 GMT"}], "update_date": "2016-09-13", "authors_parsed": [["Wilke", "Thomas", ""]]}, {"id": "1609.03148", "submitter": "Diego Krivochen", "authors": "Diego Gabriel Krivochen", "title": "Divide and...conquer? On the limits of algorithmic approaches to\n  syntactic semantic structure", "comments": "Ms. 36 pages", "journal-ref": "Czech and Slovak Linguistic Review 1(2016)", "doi": "10.13140/RG.2.2.25292.82565", "report-no": null, "categories": "cs.CL cs.FL", "license": "http://creativecommons.org/licenses/by/4.0/", "abstract": "  In computer science, divide and conquer (D&C) is an algorithm design paradigm\nbased on multi-branched recursion. A D&C algorithm works by recursively and\nmonotonically breaking down a problem into sub problems of the same (or a\nrelated) type, until these become simple enough to be solved directly. The\nsolutions to the sub problems are then combined to give a solution to the\noriginal problem. The present work identifies D&C algorithms assumed within\ncontemporary syntactic theory, and discusses the limits of their applicability\nin the realms of the syntax semantics and syntax morphophonology interfaces. We\nwill propose that D&C algorithms, while valid for some processes, fall short on\nflexibility given a mixed approach to the structure of linguistic phrase\nmarkers. Arguments in favour of a computationally mixed approach to linguistic\nstructure will be presented as an alternative that offers advantages to uniform\nD&C approaches.\n", "versions": [{"version": "v1", "created": "Sun, 11 Sep 2016 10:20:48 GMT"}], "update_date": "2018-09-24", "authors_parsed": [["Krivochen", "Diego Gabriel", ""]]}, {"id": "1609.03199", "submitter": "Arseny Shur", "authors": "Andrei A. Bulatov, Olga Karpova, Arseny M. Shur, and Konstantin\n  Startsev", "title": "Lower Bounds on Words Separation: Are There Short Identities in\n  Transformation Semigroups?", "comments": "12 pages, 2 figures, 2 tables", "journal-ref": null, "doi": null, "report-no": null, "categories": "math.CO cs.FL math.GR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The words separation problem, originally formulated by Goralcik and Koubek\n(1986), is stated as follows. Let $Sep(n)$ be the minimum number such that for\nany two words of length $\\le n$ there is a deterministic finite automaton with\n$Sep(n)$ states, accepting exactly one of them. The problem is to find the\nasymptotics of the function $Sep$. This problem is inverse to finding the\nasymptotics of the length of the shortest identity in full transformation\nsemigroups $T_k$. The known lower bound on $Sep$ stems from the unary identity\nin $T_k$. We find the first series of identities in $T_k$ which are shorter\nthan the corresponding unary identity for infinitely many values of $k$, and\nthus slightly improve the lower bound on $Sep(n)$. Then we present some short\npositive identities in symmetric groups, improving the lower bound on\nseparating words by permutational automata by a multiplicative constant.\nFinally, we present the results of computer search for short identities for\nsmall $k$.\n", "versions": [{"version": "v1", "created": "Sun, 11 Sep 2016 19:22:58 GMT"}], "update_date": "2016-09-13", "authors_parsed": [["Bulatov", "Andrei A.", ""], ["Karpova", "Olga", ""], ["Shur", "Arseny M.", ""], ["Startsev", "Konstantin", ""]]}, {"id": "1609.03460", "submitter": "Tom\\'a\\v{s} Masopust", "authors": "Markus Kr\\\"otzsch, Tom\\'a\\v{s} Masopust, Micha\\\"el Thomazo", "title": "Complexity of Universality and Related Problems for Partially Ordered\n  NFAs", "comments": "Preliminary version presented at MFCS 2016", "journal-ref": "Information and Computation, 255, Part 1, 177-192, 2017", "doi": "10.1016/j.ic.2017.06.004", "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Partially ordered nondeterminsitic finite automata (poNFAs) are NFAs whose\ntransition relation induces a partial order on states, that is, for which\ncycles occur only in the form of self-loops on a single state. A poNFA is\nuniversal if it accepts all words over its input alphabet. Deciding\nuniversality is PSPACE-complete for poNFAs, and we show that this remains true\neven when restricting to a fixed alphabet. This is nontrivial since standard\nencodings of alphabet symbols in, e.g., binary can turn self-loops into longer\ncycles. A lower coNP-complete complexity bound can be obtained if we require\nthat all self-loops in the poNFA are deterministic, in the sense that the\nsymbol read in the loop cannot occur in any other transition from that state.\nWe find that such restricted poNFAs (rpoNFAs) characterise the class of\n$\\mathcal{R}$-trivial languages, and we establish the complexity of deciding if\nthe language of an NFA is $\\mathcal{R}$-trivial. Nevertheless, the limitation\nto fixed alphabets turns out to be essential even in the restricted case:\ndeciding universality of rpoNFAs with unbounded alphabets is PSPACE-complete.\nBased on a close relation between universality and the problems of inclusion\nand equivalence, we also obtain the complexity results for these two problems.\nFinaly, we show that the languages of rpoNFAs are definable by deterministic\n(one-unambiguous) regular expressions, which makes them interesting in schema\nlanguages for XML data.\n", "versions": [{"version": "v1", "created": "Mon, 12 Sep 2016 16:10:28 GMT"}, {"version": "v2", "created": "Fri, 23 Jun 2017 09:35:17 GMT"}], "update_date": "2017-11-15", "authors_parsed": [["Kr\u00f6tzsch", "Markus", ""], ["Masopust", "Tom\u00e1\u0161", ""], ["Thomazo", "Micha\u00ebl", ""]]}, {"id": "1609.03645", "submitter": "EPTCS", "authors": "Johannes Waldmann", "title": "Efficient Completion of Weighted Automata", "comments": "In Proceedings TERMGRAPH 2016, arXiv:1609.03014", "journal-ref": "EPTCS 225, 2016, pp. 55-62", "doi": "10.4204/EPTCS.225.8", "report-no": null, "categories": "cs.DS cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We consider directed graphs with edge labels from a semiring. We present an\nalgorithm that allows efficient execution of queries for existence and weights\nof paths, and allows updates of the graph: adding nodes and edges, and changing\nweights of existing edges.\n  We apply this method in the construction of matchbound certificates for\nautomatically proving termination of string rewriting. We re-implement the\ndecomposition/completion algorithm of Endrullis et al. (2006) in our framework,\nand achieve comparable performance.\n", "versions": [{"version": "v1", "created": "Tue, 13 Sep 2016 00:17:43 GMT"}], "update_date": "2016-09-14", "authors_parsed": [["Waldmann", "Johannes", ""]]}, {"id": "1609.03648", "submitter": "EPTCS", "authors": "Domenico Cantone (University of Catania), Giorgio Delzanno (University\n  of Genova)", "title": "Proceedings of the Seventh International Symposium on Games, Automata,\n  Logics and Formal Verification", "comments": null, "journal-ref": "EPTCS 226, 2016", "doi": "10.4204/EPTCS.226", "report-no": null, "categories": "cs.LO cs.FL cs.GT", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This volume contains the proceedings of the Seventh International Symposium\non Games, Automata, Logic and Formal Verification (GandALF 2016). The symposium\ntook place in Catania, Italy, from the 14th to the 16th of September 2016. The\nproceedings of the symposium contain abstracts of the 3 invited talks and 21\nfull papers that were accepted after a careful evaluation for presentation at\nthe conference. The topics of the accepted papers cover algorithmic game\ntheory, automata theory, synthesis, formal verification, and dynamic, modal and\ntemporal logics.\n", "versions": [{"version": "v1", "created": "Tue, 13 Sep 2016 00:48:10 GMT"}], "update_date": "2016-09-14", "authors_parsed": [["Cantone", "Domenico", "", "University of Catania"], ["Delzanno", "Giorgio", "", "University\n  of Genova"]]}, {"id": "1609.04092", "submitter": "EPTCS", "authors": "Florian Bruse (Universit\\\"at Kassel)", "title": "Alternation Is Strict For Higher-Order Modal Fixpoint Logic", "comments": "In Proceedings GandALF 2016, arXiv:1609.03648", "journal-ref": "EPTCS 226, 2016, pp. 105-119", "doi": "10.4204/EPTCS.226.8", "report-no": null, "categories": "cs.LO cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We study the expressive power of Alternating Parity Krivine Automata (APKA),\nwhich provide operational semantics to Higher-Order Modal Fixpoint Logic (HFL).\nAPKA consist of ordinary parity automata extended by a variation of the Krivine\nAbstract Machine. We show that the number and parity of priorities available to\nan APKA form a proper hierarchy of expressive power as in the modal\nmu-calculus. This also induces a strict alternation hierarchy on HFL. The proof\nfollows Arnold's (1999) encoding of runs into trees and subsequent use of the\nBanach Fixpoint Theorem.\n", "versions": [{"version": "v1", "created": "Wed, 14 Sep 2016 00:58:38 GMT"}], "update_date": "2016-09-15", "authors_parsed": [["Bruse", "Florian", "", "Universit\u00e4t Kassel"]]}, {"id": "1609.04095", "submitter": "EPTCS", "authors": "Ga\\\"elle Fontaine (Universidad de Chile), Fabio Mogavero (University\n  of Oxford), Aniello Murano (University of Naples), Giuseppe Perelli\n  (University of Oxford), Loredana Sorrentino (University of Naples)", "title": "Cycle Detection in Computation Tree Logic", "comments": "In Proceedings GandALF 2016, arXiv:1609.03648", "journal-ref": "EPTCS 226, 2016, pp. 164-177", "doi": "10.4204/EPTCS.226.12", "report-no": null, "categories": "cs.LO cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Temporal logic is a very powerful formalism deeply investigated and used in\nformal system design and verification. Its application usually reduces to\nsolving specific decision problems such as model checking and satisfiability.\nIn these kind of problems, the solution often requires detecting some specific\nproperties over cycles. For instance, this happens when using classic\ntechniques based on automata, game-theory, SCC decomposition, and the like.\nSurprisingly, no temporal logics have been considered so far with the explicit\nability of talking about cycles.\n  In this paper we introduce Cycle-CTL*, an extension of the classical\nbranching-time temporal logic CTL* along with cycle quantifications in order to\npredicate over cycles. This logic turns out to be very expressive. Indeed, we\nprove that it strictly extends CTL* and is orthogonal to mu-calculus. We also\ngive an evidence of its usefulness by providing few examples involving\nnon-regular properties.\n  We investigate the model checking problem for Cycle-CTL* and show that it is\nPSPACE-Complete as for CTL*. We also study the satisfiability problem for the\nexistential-cycle fragment of the logic and show that it is solvable in\n2ExpTime. This result makes use of an automata-theoretic approach along with\nnovel ad-hoc definitions of bisimulation and tree-like unwinding.\n", "versions": [{"version": "v1", "created": "Wed, 14 Sep 2016 00:59:17 GMT"}], "update_date": "2016-09-15", "authors_parsed": [["Fontaine", "Ga\u00eblle", "", "Universidad de Chile"], ["Mogavero", "Fabio", "", "University\n  of Oxford"], ["Murano", "Aniello", "", "University of Naples"], ["Perelli", "Giuseppe", "", "University of Oxford"], ["Sorrentino", "Loredana", "", "University of Naples"]]}, {"id": "1609.04096", "submitter": "EPTCS", "authors": "Pierre Ganty (IMDEA Software Institute, Madrid, Spain), Damir Valput\n  (IMDEA Software Institute, Madrid, Spain)", "title": "Bounded-oscillation Pushdown Automata", "comments": "In Proceedings GandALF 2016, arXiv:1609.03648", "journal-ref": "EPTCS 226, 2016, pp. 178-197", "doi": "10.4204/EPTCS.226.13", "report-no": null, "categories": "cs.FL cs.CC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We present an underapproximation for context-free languages by filtering out\nruns of the underlying pushdown automaton depending on how the stack height\nevolves over time. In particular, we assign to each run a number quantifying\nthe oscillating behavior of the stack along the run. We study languages\naccepted by pushdown automata restricted to k-oscillating runs. We relate\noscillation on pushdown automata with a counterpart restriction on context-free\ngrammars. We also provide a way to filter all but the k-oscillating runs from a\ngiven PDA by annotating stack symbols with information about the oscillation.\nFinally, we study closure properties of the defined class of languages and the\ncomplexity of the k-emptiness problem asking, given a pushdown automaton P and\nk >= 0, whether P has a k-oscillating run. We show that, when k is not part of\nthe input, the k-emptiness problem is NLOGSPACE-complete.\n", "versions": [{"version": "v1", "created": "Wed, 14 Sep 2016 00:59:26 GMT"}], "update_date": "2016-09-15", "authors_parsed": [["Ganty", "Pierre", "", "IMDEA Software Institute, Madrid, Spain"], ["Valput", "Damir", "", "IMDEA Software Institute, Madrid, Spain"]]}, {"id": "1609.04098", "submitter": "EPTCS", "authors": "Milka Hutagalung (Universit\\\"at Kassel), Norbert Hundeshagen\n  (Universit\\\"at Kassel), Dietrich Kuske (Technische Universit\\\"at Ilmenau),\n  Martin Lange (Universit\\\"at Kassel), Etienne Lozes (ENS Cachan)", "title": "Multi-Buffer Simulations for Trace Language Inclusion", "comments": "In Proceedings GandALF 2016, arXiv:1609.03648", "journal-ref": "EPTCS 226, 2016, pp. 213-227", "doi": "10.4204/EPTCS.226.15", "report-no": null, "categories": "cs.FL cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We consider simulation games played between Spoiler and Duplicator on two\nB\\\"uchi automata in which the choices made by Spoiler can be buffered by\nDuplicator in several buffers before she executes them on her structure. We\nshow that the simulation games are useful to approximate the inclusion of trace\nclosures of languages accepted by finite-state automata, which is known to be\nundecidable. We study the decidability and complexity and show that the game\nwith bounded buffers can be decided in polynomial time, whereas the game with\none unbounded and one bounded buffer is highly undecidable. We also show some\nsufficient conditions on the automata for Duplicator to win the game (with\nunbounded buffers).\n", "versions": [{"version": "v1", "created": "Wed, 14 Sep 2016 00:59:45 GMT"}], "update_date": "2016-09-15", "authors_parsed": [["Hutagalung", "Milka", "", "Universit\u00e4t Kassel"], ["Hundeshagen", "Norbert", "", "Universit\u00e4t Kassel"], ["Kuske", "Dietrich", "", "Technische Universit\u00e4t Ilmenau"], ["Lange", "Martin", "", "Universit\u00e4t Kassel"], ["Lozes", "Etienne", "", "ENS Cachan"]]}, {"id": "1609.04101", "submitter": "EPTCS", "authors": "Yoshiki Nakamura (Tokyo Institute of Technology)", "title": "The Almost Equivalence by Asymptotic Probabilities for Regular Languages\n  and Its Computational Complexities", "comments": "In Proceedings GandALF 2016, arXiv:1609.03648", "journal-ref": "EPTCS 226, 2016, pp. 272-286", "doi": "10.4204/EPTCS.226.19", "report-no": null, "categories": "cs.FL cs.CC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We introduce p-equivalence by asymptotic probabilities, which is a weak\nalmost-equivalence based on zero-one laws in finite model theory. In this\npaper, we consider the computational complexities of p-equivalence problems for\nregular languages and provide the following details. First, we give an\nrobustness of p-equivalence and a logical characterization for p-equivalence.\nThe characterization is useful to generate some algorithms for p-equivalence\nproblems by coupling with standard results from descriptive complexity. Second,\nwe give the computational complexities for the p-equivalence problems by the\nlogical characterization. The computational complexities are the same as for\nthe (fully) equivalence problems. Finally, we apply the proofs for\np-equivalence to some generalized equivalences.\n", "versions": [{"version": "v1", "created": "Wed, 14 Sep 2016 01:00:25 GMT"}], "update_date": "2016-09-15", "authors_parsed": [["Nakamura", "Yoshiki", "", "Tokyo Institute of Technology"]]}, {"id": "1609.04439", "submitter": "Corwin Sinnamon", "authors": "Janusz Brzozowski and Corwin Sinnamon", "title": "Unrestricted State Complexity of Binary Operations on Regular and Ideal\n  Languages", "comments": "30 pages, 15 figures. This paper is a revised and expanded version of\n  the DCFS 2016 conference paper, also posted previously as arXiv:1602.01387v3.\n  The expanded version has appeared in J. Autom. Lang. Comb. 22 (1-3), 29-59,\n  2017, the issue of selected papers from DCFS 2016. This version corrects the\n  proof of distinguishability of states in the difference operation on p. 12 in\n  arXiv:1609.04439v2", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We study the state complexity of binary operations on regular languages over\ndifferent alphabets. It is known that if $L'_m$ and $L_n$ are languages of\nstate complexities $m$ and $n$, respectively, and restricted to the same\nalphabet, the state complexity of any binary boolean operation on $L'_m$ and\n$L_n$ is $mn$, and that of product (concatenation) is $m 2^n - 2^{n-1}$. In\ncontrast to this, we show that if $L'_m$ and $L_n$ are over different\nalphabets, the state complexity of union and symmetric difference is\n$(m+1)(n+1)$, that of difference is $mn+m$, that of intersection is $mn$, and\nthat of product is $m2^n+2^{n-1}$. We also study unrestricted complexity of\nbinary operations in the classes of regular right, left, and two-sided ideals,\nand derive tight upper bounds. The bounds for product of the unrestricted cases\n(with the bounds for the restricted cases in parentheses) are as follows: right\nideals $m+2^{n-2}+2^{n-1}$ ($m+2^{n-2}$); left ideals $mn+m+n$ ($m+n-1$);\ntwo-sided ideals $m+2n$ ($m+n-1$). The state complexities of boolean operations\non all three types of ideals are the same as those of arbitrary regular\nlanguages, whereas that is not the case if the alphabets of the arguments are\nthe same. Finally, we update the known results about most complex regular,\nright-ideal, left-ideal, and two-sided-ideal languages to include the\nunrestricted cases.\n", "versions": [{"version": "v1", "created": "Wed, 14 Sep 2016 20:39:47 GMT"}, {"version": "v2", "created": "Sat, 1 Oct 2016 19:57:28 GMT"}, {"version": "v3", "created": "Thu, 21 Dec 2017 02:48:23 GMT"}], "update_date": "2017-12-22", "authors_parsed": [["Brzozowski", "Janusz", ""], ["Sinnamon", "Corwin", ""]]}, {"id": "1609.05240", "submitter": "Genaro J. Martinez", "authors": "Genaro J. Martinez, Andrew Adamatzky, Harold V. McIntosh", "title": "A Computation in a Cellular Automaton Collider Rule 110", "comments": "39 pages, 32 figures, 3 tables", "journal-ref": "In: A. Adamatzky (ed.) Advances in Unconventional Computing:\n  Volume I Theory, Springer-Switzerland. Chapter 15, pages 391-428, 2016", "doi": null, "report-no": null, "categories": "nlin.CG cs.ET cs.FL physics.comp-ph", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  A cellular automaton collider is a finite state machine build of rings of\none-dimensional cellular automata. We show how a computation can be performed\non the collider by exploiting interactions between gliders (particles,\nlocalisations). The constructions proposed are based on universality of\nelementary cellular automaton rule 110, cyclic tag systems, supercolliders, and\ncomputing on rings.\n", "versions": [{"version": "v1", "created": "Fri, 16 Sep 2016 21:20:20 GMT"}], "update_date": "2016-09-20", "authors_parsed": [["Martinez", "Genaro J.", ""], ["Adamatzky", "Andrew", ""], ["McIntosh", "Harold V.", ""]]}, {"id": "1609.05952", "submitter": "Mickael Randour", "authors": "V\\'eronique Bruy\\`ere, Quentin Hautem, Mickael Randour", "title": "Window Parity Games: An Alternative Approach Toward Parity Games with\n  Time Bounds (Full Version)", "comments": "Full version of GandALF 2016 paper (arXiv:1606.01831v2), same as\n  arXiv:1606.01831v1", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO cs.FL cs.GT", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Classical objectives in two-player zero-sum games played on graphs often deal\nwith limit behaviors of infinite plays: e.g., mean-payoff and total-payoff in\nthe quantitative setting, or parity in the qualitative one (a canonical way to\nencode omega-regular properties). Those objectives offer powerful abstraction\nmechanisms and often yield nice properties such as memoryless determinacy.\nHowever, their very nature provides no guarantee on time bounds within which\nsomething good can be witnessed. In this work, we consider two approaches\ntoward inclusion of time bounds in parity games. The first one, parity-response\ngames, is based on the notion of finitary parity games [CHH09] and parity games\nwith costs [FZ14,WZ16]. The second one, window parity games, is inspired by\nwindow mean-payoff games [CDRR15]. We compare the two approaches and show that\nwhile they prove to be equivalent in some contexts, window parity games offer a\nmore tractable alternative when the time bound is given as a parameter (P-c.\nvs. PSPACE-C.). In particular, it provides a conservative approximation of\nparity games computable in polynomial time. Furthermore, we extend both\napproaches to the multi-dimension setting. We give the full picture for both\ntypes of games with regard to complexity and memory bounds.\n  [CHH09] K. Chatterjee, T.A. Henzinger, F. Horn (2009): Finitary winning in\nomega-regular games. ACM Trans. Comput. Log. 11(1). [FZ14] N. Fijalkow, M.\nZimmermann (2014): Parity and Streett Games with Costs. LMCS 10(2). [WZ16] A.\nWeinert, M. Zimmermann (2016): Easy to Win, Hard to Master: Optimal Strategies\nin Parity Games with Costs. Proc. of CSL, LIPIcs 62, pp. 31:1-31:17, Schloss\nDagstuhl - LZI. [CDRR15] K. Chatterjee, L. Doyen, M. Randour, J.-F. Raskin\n(2015): Looking at mean-payoff and total-payoff through windows. Information\nand Computation 242, pp. 25-52.\n", "versions": [{"version": "v1", "created": "Thu, 15 Sep 2016 09:37:14 GMT"}], "update_date": "2016-09-21", "authors_parsed": [["Bruy\u00e8re", "V\u00e9ronique", ""], ["Hautem", "Quentin", ""], ["Randour", "Mickael", ""]]}, {"id": "1609.06124", "submitter": "Thorsten Wissmann", "authors": "Benedikt Bollig, Karin Quaas and Arnaud Sangnier", "title": "The Complexity of Flat Freeze LTL", "comments": null, "journal-ref": "Logical Methods in Computer Science, Volume 15, Issue 3 (September\n  30, 2019) lmcs:5795", "doi": "10.23638/LMCS-15(3:33)2019", "report-no": null, "categories": "cs.FL cs.LO", "license": "http://creativecommons.org/licenses/by/4.0/", "abstract": "  We consider the model-checking problem for freeze LTL on one-counter automata\n(OCA). Freeze LTL extends LTL with the freeze quantifier, which allows one to\nstore different counter values of a run in registers so that they can be\ncompared with one another. As the model-checking problem is undecidable in\ngeneral, we focus on the flat fragment of freeze LTL, in which the usage of the\nfreeze quantifier is restricted. In a previous work, Lechner et al. showed that\nmodel checking for flat freeze LTL on OCA with binary encoding of counter\nupdates is decidable and in 2NEXPTIME. In this paper, we prove that the problem\nis, in fact, NEXPTIME-complete no matter whether counter updates are encoded in\nunary or binary. Like Lechner et al., we rely on a reduction to the\nreachability problem in OCA with parameterized tests (OCA(P)). The new aspect\nis that we simulate OCA(P) by alternating two-way automata over words. This\nimplies an exponential upper bound on the parameter values that we exploit\ntowards an NP algorithm for reachability in OCA(P) with unary updates. We\nobtain our main result as a corollary. As another application, relying on a\nreduction by Bundala and Ouaknine, one obtains an alternative proof of the\nknown fact that reachability in closed parametric timed automata with one\nparametric clock is in NEXPTIME.\n", "versions": [{"version": "v1", "created": "Tue, 20 Sep 2016 12:13:44 GMT"}, {"version": "v2", "created": "Sun, 26 Feb 2017 21:40:27 GMT"}, {"version": "v3", "created": "Wed, 26 Apr 2017 11:20:35 GMT"}, {"version": "v4", "created": "Mon, 2 Jul 2018 08:07:51 GMT"}, {"version": "v5", "created": "Fri, 26 Apr 2019 12:31:05 GMT"}, {"version": "v6", "created": "Mon, 2 Sep 2019 20:24:29 GMT"}, {"version": "v7", "created": "Fri, 27 Sep 2019 09:24:19 GMT"}, {"version": "v8", "created": "Tue, 15 Oct 2019 14:09:21 GMT"}], "update_date": "2019-10-23", "authors_parsed": [["Bollig", "Benedikt", ""], ["Quaas", "Karin", ""], ["Sangnier", "Arnaud", ""]]}, {"id": "1609.06290", "submitter": "C Aiswarya", "authors": "C. Aiswarya, Paul Gastin, Prakash Saivasan", "title": "Nested Words for Order-2 Pushdown Systems", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL cs.LO", "license": "http://creativecommons.org/licenses/by/4.0/", "abstract": "  We study linear time model checking of collapsible higher-order pushdown\nsystems (CPDS) of order 2 (manipulating stack of stacks) against MSO and PDL\n(propositional dynamic logic with converse and loop) enhanced with push/pop\nmatching relations. To capture these linear time behaviours with matchings, we\npropose order-2 nested words. These graphs consist of a word structure\naugmented with two binary matching relations, one for each order of stack,\nwhich relate a push with matching pops (or collapse) on the respective stack.\nDue to the matching relations, satisfiability and model checking are\nundecidable. Hence we propose an under-approximation, bounding the number of\ntimes an order-1 push can be popped. With this under-approximation, which still\nallows unbounded stack height, we get decidability for satisfiability and model\nchecking of both MSO and PDL. The problems are ExpTime-Complete for PDL.\n", "versions": [{"version": "v1", "created": "Tue, 20 Sep 2016 18:52:07 GMT"}], "update_date": "2016-09-21", "authors_parsed": [["Aiswarya", "C.", ""], ["Gastin", "Paul", ""], ["Saivasan", "Prakash", ""]]}, {"id": "1609.06853", "submitter": "Henk Don", "authors": "Michiel de Bondt, Henk Don, Hans Zantema", "title": "Slowly synchronizing automata with fixed alphabet size", "comments": "Replacing and extending the paper titled 'Finding DFAs with maximal\n  shortest synchronizing word length'. Source code included", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL math.CO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  It was conjectured by \\v{C}ern\\'y in 1964 that a synchronizing DFA on $n$\nstates always has a shortest synchronizing word of length at most $(n-1)^2$,\nand he gave a sequence of DFAs for which this bound is reached.\n  In this paper, we investigate the role of the alphabet size. For each\npossible alphabet size, we count DFAs on $n \\le 6$ states which synchronize in\n$(n-1)^2 - e$ steps, for all $e < 2\\lceil n/2 \\rceil$. Furthermore, we give\nconstructions of automata with any number of states, and $3$, $4$, or $5$\nsymbols, which synchronize slowly, namely in $n^2 - 3n + O(1)$ steps.\n  In addition, our results prove \\v{C}ern\\'y's conjecture for $n \\le 6$. Our\ncomputation has led to $27$ DFAs on $3$, $4$, $5$ or $6$ states, which\nsynchronize in $(n-1)^2$ steps, but do not belong to \\v{C}ern\\'y's sequence. Of\nthese $27$ DFA's, $19$ are new, and the remaining $8$ which were already known\nare exactly the \\emph{minimal} ones: they will not synchronize any more after\nremoving a symbol.\n  So the $19$ new DFAs are extensions of automata which were already known,\nincluding the \\v{C}ern\\'y automaton on $3$ states. But for $n > 3$, we prove\nthat the \\v{C}ern\\'y automaton on $n$ states does not admit non-trivial\nextensions with the same smallest synchronizing word length $(n-1)^2$.\n", "versions": [{"version": "v1", "created": "Thu, 22 Sep 2016 08:02:33 GMT"}, {"version": "v2", "created": "Wed, 19 Oct 2016 14:59:13 GMT"}, {"version": "v3", "created": "Fri, 21 Oct 2016 07:29:26 GMT"}, {"version": "v4", "created": "Tue, 1 Nov 2016 10:22:47 GMT"}, {"version": "v5", "created": "Thu, 14 Dec 2017 12:45:36 GMT"}], "update_date": "2017-12-15", "authors_parsed": [["de Bondt", "Michiel", ""], ["Don", "Henk", ""], ["Zantema", "Hans", ""]]}, {"id": "1609.07736", "submitter": "Samuel J. van Gool", "authors": "Samuel J. v. Gool and Benjamin Steinberg", "title": "Pro-aperiodic monoids via saturated models", "comments": "Technical report, submitted", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL math.GR math.LO math.RA", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We apply Stone duality and model theory to study the structure theory of free\npro-aperiodic monoids. Stone duality implies that elements of the free\npro-aperiodic monoid may be viewed as elementary equivalence classes of\npseudofinite words. Model theory provides us with saturated words in each such\nclass, i.e., words in which all possible factorizations are realized. We give\nseveral applications of this new approach, including a solution to the word\nproblem for $\\omega$-terms that avoids using McCammond's normal forms, as well\nas new proofs and extensions of other structural results concerning free\npro-aperiodic monoids.\n", "versions": [{"version": "v1", "created": "Sun, 25 Sep 2016 13:07:46 GMT"}, {"version": "v2", "created": "Mon, 28 Aug 2017 19:27:57 GMT"}], "update_date": "2017-08-30", "authors_parsed": [["Gool", "Samuel J. v.", ""], ["Steinberg", "Benjamin", ""]]}, {"id": "1609.08367", "submitter": "J\\\"urgen Koslowski", "authors": "Helle Hvid Hansen, Clemens Kupke, Jan Rutten", "title": "Stream Differential Equations: Specification Formats and Solution\n  Methods", "comments": null, "journal-ref": "Logical Methods in Computer Science, Volume 13, Issue 1 (February\n  3, 2017) lmcs:3118", "doi": "10.23638/LMCS-13(1:3)2017", "report-no": null, "categories": "cs.LO cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Streams, or infinite sequences, are infinite objects of a very simple type,\nyet they have a rich theory partly due to their ubiquity in mathematics and\ncomputer science. Stream differential equations are a coinductive method for\nspecifying streams and stream operations, and their theory has been developed\nin many papers over the past two decades. In this paper we present a survey of\nthe many results in this area. Our focus is on the classification of different\nformats of stream differential equations, their solution methods, and the\nclasses of streams they can define. Moreover, we describe in detail the\nconnection between the so-called syntactic solution method and abstract GSOS.\n", "versions": [{"version": "v1", "created": "Tue, 27 Sep 2016 11:56:31 GMT"}, {"version": "v2", "created": "Wed, 1 Feb 2017 14:07:38 GMT"}], "update_date": "2019-03-14", "authors_parsed": [["Hansen", "Helle Hvid", ""], ["Kupke", "Clemens", ""], ["Rutten", "Jan", ""]]}, {"id": "1609.09274", "submitter": "Thibault Godin", "authors": "Thibault Godin (IRIF)", "title": "Knapsack problem for automaton groups", "comments": "This article has been withdrawn due to a conceptual error in the\n  proof of the decidability of the problem for bounded automata. The\n  undecidability result remains true", "journal-ref": null, "doi": "10.4230/LIPIcs", "report-no": null, "categories": "math.GR cs.DM cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The knapsack problem is a classic optimisation problem that has been recently\nextended in the setting of groups. Its study reveals to be interesting since it\nprovides many different behaviours, depending on the considered class of\ngroups. In this paper we deal with groups generated by Mealy automata-a class\nthat is often used to study group-theoretical conjectures-and prove that the\nknapsack problem is undecidable for this class. In a second time, we construct\na graph that, if finite, provides a solution to the knapsack problem. We deduce\nthat the knapsack problem is decidable for the so-called bounded automaton\ngroups, a class where the order and conjugacy problems are already known to be\ndecidable.\n", "versions": [{"version": "v1", "created": "Thu, 29 Sep 2016 09:46:07 GMT"}, {"version": "v2", "created": "Wed, 14 Dec 2016 13:34:12 GMT"}], "update_date": "2016-12-15", "authors_parsed": [["Godin", "Thibault", "", "IRIF"]]}, {"id": "1609.09364", "submitter": "Matthieu Picantin", "authors": "Matthieu Picantin (IRIF)", "title": "Automatic semigroups vs automaton semigroups", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "math.GR cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We develop an effective and natural approach to interpret any semigroup\nadmitting a special language of greedy normal forms as an automaton\nsemigroup,namely the semigroup generated by a Mealy automaton encoding the\nbehaviour of such a language of greedy normal forms under one-sided\nmultiplication.The framework embraces many of the well-known classes of\n(automatic) semigroups: finite monoids, free semigroups, free commutative\nmonoids, trace or divisibility monoids, braid or Artin-Tits or Krammer or\nGarside monoids, Baumslag-Solitar semigroups, etc.Like plactic monoids or\nChinese monoids, some neither left- nor right-cancellative automatic semigroups\nare also investigated, as well as some residually finite variations of the\nbicyclic monoid. It provides what appears to be the first known connection from\na class of automatic semigroupsto a class of automaton semigroups. It is\nworthwhile noting that, in all these cases, \"being an automatic semigroup\" and\n\"being an automaton semigroup\" become dual properties in a very\nautomata-theoretical sense. Quadratic rewriting systems and associated tilings\nappear as a cornerstone of our construction.\n", "versions": [{"version": "v1", "created": "Thu, 29 Sep 2016 14:34:02 GMT"}, {"version": "v2", "created": "Thu, 8 Dec 2016 12:59:00 GMT"}, {"version": "v3", "created": "Wed, 18 Jan 2017 14:25:06 GMT"}, {"version": "v4", "created": "Fri, 5 Oct 2018 20:06:53 GMT"}, {"version": "v5", "created": "Wed, 5 Dec 2018 10:18:55 GMT"}], "update_date": "2018-12-06", "authors_parsed": [["Picantin", "Matthieu", "", "IRIF"]]}, {"id": "1609.09555", "submitter": "M. Hadi Zibaeenejad", "authors": "M. H. Zibaeenejad, J. G. Thistle", "title": "Study of Parameterized-Chain networks", "comments": "Parts of this technical report are pablished in\n  http://ieeexplore.ieee.org/document/7527669/", "journal-ref": null, "doi": "10.1109/TAC.2016.2596758", "report-no": "University of Waterloo, Waterloo, Canada, D-1205781", "categories": "cs.FL math.OC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In areas such as computer software and hardware, manufacturing systems, and\ntransportation, engineers encounter networks with arbitrarily large numbers of\nisomorphic subprocesses. Parameterized systems provide a framework for modeling\nsuch networks. The analysis of parameterized systems is a challenge as some key\nproperties such as nonblocking and deadlock-freedom are undecidable even for\nthe case of a parameterized system with ring topology. In this paper, we\nintroduce \\textit{Parameterized-Chain Networks} (PCN) for modeling of networks\ncontaining several linear parameterized segments. Since deadlock analysis is\nundecidable, to achieve a tractable subproblem we limit the behavior of\nsubprocesses of the network using our previously developed mathematical notion\n`weak invariant simulation.' We develop a dependency graph for analysis of PCN\nand show that partial and total deadlocks of the proposed PCN are characterized\nby full, consistent subgraphs of the dependency graph. We investigate deadlock\nin a traffic network as an illustrative example. This document contains all the\ndetails and proofs of the study.\n", "versions": [{"version": "v1", "created": "Fri, 30 Sep 2016 00:51:46 GMT"}], "update_date": "2016-10-03", "authors_parsed": [["Zibaeenejad", "M. H.", ""], ["Thistle", "J. G.", ""]]}, {"id": "1609.09728", "submitter": "Peter Chini", "authors": "Peter Chini, Jonathan Kolberg, Andreas Krebs, Roland Meyer, Prakash\n  Saivasan", "title": "On the Complexity of Bounded Context Switching", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Bounded context switching (BCS) is an under-approximate method for finding\nviolations to safety properties in shared memory concurrent programs.\nTechnically, BCS is a reachability problem that is known to be NP-complete. Our\ncontribution is a parameterized analysis of BCS.\n  The first result is an algorithm that solves BCS when parameterized by the\nnumber of context switches (cs) and the size of the memory (m) in\nO*(m^(cs)2^(cs)). This is achieved by creating instances of the easier problem\nShuff which we solve via fast subset convolution. We also present a lower bound\nfor BCS of the form m^o(cs / log(cs)), based on the exponential time\nhypothesis. Interestingly, closing the gap means settling a conjecture that has\nbeen open since FOCS'07. Further, we prove that BCS admits no polynomial\nkernel.\n  Next, we introduce a measure, called scheduling dimension, that captures the\ncomplexity of schedules. We study BCS parameterized by the scheduling dimension\n(sdim) and show that it can be solved in O*((2m)^(4sdim)4^t)$, where t is the\nnumber of threads. We consider variants of the problem for which we obtain\n(matching) upper and lower bounds.\n", "versions": [{"version": "v1", "created": "Fri, 30 Sep 2016 13:44:32 GMT"}, {"version": "v2", "created": "Mon, 24 Apr 2017 13:34:44 GMT"}], "update_date": "2017-04-25", "authors_parsed": [["Chini", "Peter", ""], ["Kolberg", "Jonathan", ""], ["Krebs", "Andreas", ""], ["Meyer", "Roland", ""], ["Saivasan", "Prakash", ""]]}]