[{"id": "1809.00679", "submitter": "Manon Stipulanti", "authors": "Lucas Mol, Narad Rampersad, Jeffrey Shallit and Manon Stipulanti", "title": "Cobham's Theorem and Automaticity", "comments": "17 pages", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL math.CO math.NT", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We make certain bounds in Krebs' proof of Cobham's theorem explicit and\nobtain corresponding upper bounds on the length of a common prefix of an\naperiodic $a$-automatic sequence and an aperiodic $b$-automatic sequence, where\n$a$ and $b$ are multiplicatively independent. We also show that an automatic\nsequence cannot have arbitrarily large factors in common with a Sturmian\nsequence.\n", "versions": [{"version": "v1", "created": "Mon, 3 Sep 2018 18:09:37 GMT"}, {"version": "v2", "created": "Fri, 14 Dec 2018 09:17:45 GMT"}], "update_date": "2018-12-17", "authors_parsed": [["Mol", "Lucas", ""], ["Rampersad", "Narad", ""], ["Shallit", "Jeffrey", ""], ["Stipulanti", "Manon", ""]]}, {"id": "1809.01103", "submitter": "Adilson Bonifacio", "authors": "Adilson Luiz Bonifacio and Wellington Aparecido Della Mura", "title": "An automatic tool for checking multi-party contracts", "comments": "28 pages, 26 figures, 3 tables, 2 algorithms", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Contracts play an important role in business where relationships among\ndifferent parties are dictated by legal rules. The notion of electronic\ncontracts has emerged mostly due to technological advances and the electronic\ntrading among companies and customers. Thereby new challenges have arisen to\nguarantee reliability among the stakeholders in electronic negotiations. In\nthis scenery, the automatic verification of electronic contracts appeared as\nthe solution but as a new challenge at the same time. An important task on\nverifying contracts is concerned of detecting conflicts in multi-party\ncontracts. The problem of checking contracts has been largely addressed in the\nliterature, but we are not aware about any method and tool that deals with\nmulti-party contracts and conflict detection using a contract language. This\nwork presents an automatic checker, so-called RECALL, for finding conflicts on\nmulti-party contracts modeled by an extension of a contract language. We\ndeveloped an automatic checking tool and also applied it to a a well-known case\nstudy of selling products that is characterized by multi-party aspects of the\ncontracts. We also performed some experiments in order to show the tool\nperformance w.r.t. the size of contracts.\n", "versions": [{"version": "v1", "created": "Tue, 4 Sep 2018 17:14:36 GMT"}], "update_date": "2018-09-05", "authors_parsed": [["Bonifacio", "Adilson Luiz", ""], ["Della Mura", "Wellington Aparecido", ""]]}, {"id": "1809.01201", "submitter": "Eric DeGiuli", "authors": "E. DeGiuli", "title": "Random Language Model", "comments": "5 pages + 3 pages SI", "journal-ref": "Phys. Rev. Lett. 122, 128301 (2019)", "doi": "10.1103/PhysRevLett.122.128301", "report-no": null, "categories": "cond-mat.dis-nn cs.CL cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Many complex generative systems use languages to create structured objects.\nWe consider a model of random languages, defined by weighted context-free\ngrammars. As the distribution of grammar weights broadens, a transition is\nfound from a random phase, in which sentences are indistinguishable from noise,\nto an organized phase in which nontrivial information is carried. This marks\nthe emergence of deep structure in the language, and can be understood by a\ncompetition between energy and entropy.\n", "versions": [{"version": "v1", "created": "Tue, 4 Sep 2018 19:06:18 GMT"}, {"version": "v2", "created": "Wed, 27 Mar 2019 17:24:10 GMT"}], "update_date": "2019-04-03", "authors_parsed": [["DeGiuli", "E.", ""]]}, {"id": "1809.02416", "submitter": "EPTCS", "authors": "Andrea Orlandini (National Research Council of Italy), Martin\n  Zimmermann (Saarland University)", "title": "Proceedings Ninth International Symposium on Games, Automata, Logics,\n  and Formal Verification", "comments": null, "journal-ref": "EPTCS 277, 2018", "doi": "10.4204/EPTCS.277", "report-no": null, "categories": "cs.LO cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This volume contains the proceedings of the Ninth International Symposium on\nGames, Automata, Logic and Formal Verification (GandALF 2018). The symposium\ntook place in Saarbr\\\"ucken, Germany, from the 26th to the 28th of September\n2018. The GandALF symposium was established by a group of Italian computer\nscientists interested in mathematical logic, automata theory, game theory, and\ntheir applications to the specification, design, and verification of complex\nsystems. Its aim is to provide a forum where people from different areas, and\npossibly with different backgrounds, can fruitfully interact. GandALF has a\ntruly international spirit, as witnessed by the composition of the program and\nsteering committee and by the country distribution of the submitted papers.\n", "versions": [{"version": "v1", "created": "Fri, 7 Sep 2018 11:41:03 GMT"}], "update_date": "2018-09-11", "authors_parsed": [["Orlandini", "Andrea", "", "National Research Council of Italy"], ["Zimmermann", "Martin", "", "Saarland University"]]}, {"id": "1809.03093", "submitter": "EPTCS", "authors": "Arno Pauly (Swansea University)", "title": "Parameterized Games and Parameterized Automata", "comments": "In Proceedings GandALF 2018, arXiv:1809.02416", "journal-ref": "EPTCS 277, 2018, pp. 30-42", "doi": "10.4204/EPTCS.277.3", "report-no": null, "categories": "cs.GT cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We introduce a way to parameterize automata and games on finite graphs with\nnatural numbers. The parameters are accessed essentially by allowing counting\ndown from the parameter value to 0 and branching depending on whether 0 has\nbeen reached. The main technical result is that in games, a player can win for\nsome values of the parameters at all, if she can win for some values below an\nexponential bound. For many winning conditions, this implies decidability of\nany statements about a player being able to win with arbitrary quantification\nover the parameter values.\n  While the result seems broadly applicable, a specific motivation comes from\nthe study of chains of strategies in games. Chains of games were recently\nsuggested as a means to define a rationality notion based on dominance that\nworks well with quantitative games by Bassett, Jecker, P., Raskin and Van den\nBoogard. From the main result of this paper, we obtain generalizations of their\ndecidability results with much simpler proofs.\n  As both a core technical notion in the proof of the main result, and as a\nnotion of potential independent interest, we look at boolean functions defined\nvia graph game forms. Graph game forms have properties akin to monotone\ncircuits, albeit are more concise. We raise some open questions regarding how\nconcise they are exactly, which have a flavour similar to circuit complexity.\nAnswers to these questions could improve the bounds in the main theorem.\n", "versions": [{"version": "v1", "created": "Mon, 10 Sep 2018 02:29:44 GMT"}], "update_date": "2018-09-11", "authors_parsed": [["Pauly", "Arno", "", "Swansea University"]]}, {"id": "1809.03108", "submitter": "EPTCS", "authors": "Dana Angluin (Yale University), Dana Fisman (Ben-Gurion University)", "title": "Regular omega-Languages with an Informative Right Congruence", "comments": "In Proceedings GandALF 2018, arXiv:1809.02416", "journal-ref": "EPTCS 277, 2018, pp. 265-279", "doi": "10.4204/EPTCS.277.19", "report-no": null, "categories": "cs.FL cs.LG", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  A regular language is almost fully characterized by its right congruence\nrelation. Indeed, a regular language can always be recognized by a DFA\nisomorphic to the automaton corresponding to its right congruence, henceforth\nthe Rightcon automaton. The same does not hold for regular omega-languages. The\nright congruence of a regular omega-language is not informative enough; many\nregular omega-languages have a trivial right congruence, and in general it is\nnot always possible to define an omega-automaton recognizing a given language\nthat is isomorphic to the rightcon automaton.\n  The class of weak regular omega-languages does have an informative right\ncongruence. That is, any weak regular omega-language can always be recognized\nby a deterministic B\\\"uchi automaton that is isomorphic to the rightcon\nautomaton. Weak regular omega-languages reside in the lower levels of the\nexpressiveness hierarchy of regular omega-languages. Are there more expressive\nsub-classes of regular omega languages that have an informative right\ncongruence? Can we fully characterize the class of languages with a trivial\nright congruence? In this paper we try to place some additional pieces of this\nbig puzzle.\n", "versions": [{"version": "v1", "created": "Mon, 10 Sep 2018 02:35:18 GMT"}], "update_date": "2018-09-11", "authors_parsed": [["Angluin", "Dana", "", "Yale University"], ["Fisman", "Dana", "", "Ben-Gurion University"]]}, {"id": "1809.03814", "submitter": "EPTCS", "authors": "Vladimir Zamdzhiev", "title": "A Framework for Rewriting Families of String Diagrams", "comments": "In Proceedings TERMGRAPH 2018, arXiv:1902.01510", "journal-ref": "EPTCS 288, 2019, pp. 63-76", "doi": "10.4204/EPTCS.288.6", "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We describe a mathematical framework for equational reasoning about infinite\nfamilies of string diagrams which is amenable to computer automation. The\nframework is based on context-free families of string diagrams which we\nrepresent using context-free graph grammars. We model equations between\ninfinite families of diagrams using rewrite rules between context-free\ngrammars. Our framework represents equational reasoning about concrete string\ndiagrams and context-free families of string diagrams using double-pushout\nrewriting on graphs and context-free graph grammars respectively. We prove that\nour representation is sound by showing that it respects the concrete semantics\nof string diagrammatic reasoning and we show that our framework is appropriate\nfor software implementation by proving the membership problem is decidable.\n", "versions": [{"version": "v1", "created": "Tue, 11 Sep 2018 12:22:44 GMT"}, {"version": "v2", "created": "Wed, 6 Feb 2019 03:24:07 GMT"}], "update_date": "2019-02-07", "authors_parsed": [["Zamdzhiev", "Vladimir", ""]]}, {"id": "1809.05017", "submitter": "Ayrat Khalimov", "authors": "Ayrat Khalimov, Benedikt Maderbacher, Roderick Bloem", "title": "Bounded Synthesis of Register Transducers", "comments": "full version of our ATVA'18 paper", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Reactive synthesis aims at automatic construction of systems from their\nbehavioural specifications. The research mostly focuses on synthesis of systems\ndealing with Boolean signals. But real-life systems are often described using\nbit-vectors, integers, etc. Bit-blasting would make such systems unreadable,\nhit synthesis scalability, and is not possible for infinite data-domains. One\nstep closer to real-life systems are register transducers: they can store\ndata-input into registers and later output the content of a register, but they\ndo not directly depend on the data-input, only on its comparison with the\nregisters. Previously it was proven that synthesis of register transducers from\nregister automata is undecidable, but there the authors considered transducers\nequipped with the unbounded queue of registers. First, we prove the problem\nbecomes decidable if bound the number of registers in transducers, by reducing\nthe problem to standard synthesis of Boolean systems. Second, we show how to\nuse quantified temporal logic, instead of automata, for specifications.\n", "versions": [{"version": "v1", "created": "Tue, 28 Aug 2018 17:30:13 GMT"}], "update_date": "2018-09-14", "authors_parsed": [["Khalimov", "Ayrat", ""], ["Maderbacher", "Benedikt", ""], ["Bloem", "Roderick", ""]]}, {"id": "1809.05730", "submitter": "Joost Engelfriet", "authors": "Joost Engelfriet, Hendrik Jan Hoogeboom, Bart Samwel", "title": "XML Navigation and Transformation by Tree-Walking Automata and\n  Transducers with Visible and Invisible Pebbles", "comments": "96 pages, 6 figures, 7 tables", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The pebble tree automaton and the pebble tree transducer are enhanced by\nadditionally allowing an unbounded number of \"invisible\" pebbles (as opposed to\nthe usual \"visible\" ones). The resulting pebble tree automata recognize the\nregular tree languages (i.e., can validate all generalized DTD's) and hence can\nfind all matches of MSO definable patterns. Moreover, when viewed as a\nnavigational device, they lead to an XPath-like formalism that has a path\nexpression for every MSO definable binary pattern. The resulting pebble tree\ntransducers can apply arbitrary MSO definable tests to (the observable part of)\ntheir configurations, they (still) have a decidable typechecking problem, and\nthey can model the recursion mechanism of XSLT. The time complexity of the\ntypechecking problem for conjunctive queries that use MSO definable patterns\ncan often be reduced through the use of invisible pebbles.\n", "versions": [{"version": "v1", "created": "Sat, 15 Sep 2018 15:30:39 GMT"}], "update_date": "2018-09-18", "authors_parsed": [["Engelfriet", "Joost", ""], ["Hoogeboom", "Hendrik Jan", ""], ["Samwel", "Bart", ""]]}, {"id": "1809.05978", "submitter": "Dietmar Berwanger", "authors": "Dietmar Berwanger and Laurent Doyen", "title": "Observation and Distinction. Representing Information in Infinite Games", "comments": "Full version of a contribution to the Proceedings of STACS 2020\n  (Symposium on Theoretical Aspects of Computer Science)", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.GT cs.FL", "license": "http://creativecommons.org/licenses/by/4.0/", "abstract": "  We compare two approaches for modelling imperfect information in infinite\ngames by using finite-state automata. The first, more standard approach views\ninformation as the result of an observation process driven by a sequential\nMealy machine. In contrast, the second approach features indistinguishability\nrelations described by synchronous two-tape automata.\n  The indistinguishability-relation model turns out to be strictly more\nexpressive than the one based on observations. We present a characterisation of\nthe indistinguishability relations that admit a representation as a\nfinite-state observation function. We show that the characterisation is\ndecidable, and give a procedure to construct a corresponding Mealy machine\nwhenever one exists.\n", "versions": [{"version": "v1", "created": "Sun, 16 Sep 2018 23:23:32 GMT"}, {"version": "v2", "created": "Tue, 1 Oct 2019 13:53:36 GMT"}, {"version": "v3", "created": "Thu, 30 Jan 2020 15:40:52 GMT"}], "update_date": "2020-01-31", "authors_parsed": [["Berwanger", "Dietmar", ""], ["Doyen", "Laurent", ""]]}, {"id": "1809.06178", "submitter": "EPTCS", "authors": "Flavio Corradini (University of Camerino), Chiara Muzi (University of\n  Camerino), Barbara Re (University of Camerino), Francesco Tiezzi (University\n  of Camerino)", "title": "A Classification of BPMN Collaborations based on Safeness and Soundness\n  Notions", "comments": "In Proceedings EXPRESS/SOS 2018, arXiv:1808.08071", "journal-ref": "EPTCS 276, 2018, pp. 37-52", "doi": "10.4204/EPTCS.276.5", "report-no": null, "categories": "cs.SE cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  BPMN 2.0 standard has a huge uptake in modelling business processes within\nthe same organisation or collaborations involving multiple interacting\nparticipants. It results that providing a solid foundation to enable BPMN\ndesigners to understand their models in a consistent way is becoming more and\nmore important. In our investigation we define and exploit a formal\ncharacterisation of the collaborations' semantics, specifically and directly\ngiven for BPMN models, to provide a classification of BPMN collaborations. In\nparticular, we refer to collaborations involving processes with arbitrary\ntopology, thus overcoming the well-structuredness limitations. The proposed\nclassification is based on some of the most important correctness properties in\nthe business process domain, namely safeness and soundness. We prove, with a\nuniform formal framework, some conjectured and expected results and, most of\nall, we achieve novel results for BPMN collaborations concerning the\nrelationships between safeness and soundness, and their compositionality, that\nrepresent major advances in the state-of-the-art.\n", "versions": [{"version": "v1", "created": "Mon, 27 Aug 2018 01:19:25 GMT"}], "update_date": "2018-09-18", "authors_parsed": [["Corradini", "Flavio", "", "University of Camerino"], ["Muzi", "Chiara", "", "University of\n  Camerino"], ["Re", "Barbara", "", "University of Camerino"], ["Tiezzi", "Francesco", "", "University\n  of Camerino"]]}, {"id": "1809.07115", "submitter": "Jerome Leroux", "authors": "Wojciech Czerwinski, Slawomir Lasota, Ranko Lazic, Jerome Leroux,\n  Filip Mazowiecki", "title": "The Reachability Problem for Petri Nets is Not Elementary", "comments": "Final version of STOC'19", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Petri nets, also known as vector addition systems, are a long established\nmodel of concurrency with extensive applications in modelling and analysis of\nhardware, software and database systems, as well as chemical, biological and\nbusiness processes. The central algorithmic problem for Petri nets is\nreachability: whether from the given initial configuration there exists a\nsequence of valid execution steps that reaches the given final configuration.\nThe complexity of the problem has remained unsettled since the 1960s, and it is\none of the most prominent open questions in the theory of verification.\nDecidability was proved by Mayr in his seminal STOC 1981 work, and the\ncurrently best published upper bound is non-primitive recursive Ackermannian of\nLeroux and Schmitz from LICS 2019. We establish a non-elementary lower bound,\ni.e. that the reachability problem needs a tower of exponentials of time and\nspace. Until this work, the best lower bound has been exponential space, due to\nLipton in 1976. The new lower bound is a major breakthrough for several\nreasons. Firstly, it shows that the reachability problem is much harder than\nthe coverability (i.e., state reachability) problem, which is also ubiquitous\nbut has been known to be complete for exponential space since the late 1970s.\nSecondly, it implies that a plethora of problems from formal languages, logic,\nconcurrent systems, process calculi and other areas, that are known to admit\nreductions from the Petri nets reachability problem, are also not elementary.\nThirdly, it makes obsolete the currently best lower bounds for the reachability\nproblems for two key extensions of Petri nets: with branching and with a\npushdown stack.\n", "versions": [{"version": "v1", "created": "Wed, 19 Sep 2018 10:39:00 GMT"}, {"version": "v2", "created": "Tue, 6 Nov 2018 09:07:29 GMT"}, {"version": "v3", "created": "Fri, 9 Nov 2018 09:07:34 GMT"}, {"version": "v4", "created": "Thu, 11 Apr 2019 10:02:23 GMT"}], "update_date": "2019-04-12", "authors_parsed": [["Czerwinski", "Wojciech", ""], ["Lasota", "Slawomir", ""], ["Lazic", "Ranko", ""], ["Leroux", "Jerome", ""], ["Mazowiecki", "Filip", ""]]}, {"id": "1809.07177", "submitter": "Dai Liyun", "authors": "Liyun Dai and Taolue Chen and Zhiming Liu and Bican Xia and Naijun\n  Zhan and Kim G. Larsen", "title": "Parameter Synthesis Problems for one parametric clock Timed Automata", "comments": "20 pages, 1 figure. arXiv admin note: substantial text overlap with\n  arXiv:1808.06792", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL cs.LO cs.SY", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In this paper, we study the parameter synthesis problem for a class of\nparametric timed automata. The problem asks to construct the set of valuations\nof the parameters in the parametric timed automa- ton, referred to as the\nfeasible region, under which the resulting timed automaton satisfies certain\nproperties. We show that the parameter syn- thesis problem of parametric timed\nautomata with only one parametric clock (unlimited concretely constrained\nclock) and arbitrarily many pa- rameters is solvable when all the expressions\nare linear expressions. And it is moreover the synthesis problem is solvable\nwhen the form of con- straints are parameter polynomial inequality not just\nsimple constraint and parameter domain is nonnegative real number.\n", "versions": [{"version": "v1", "created": "Sat, 15 Sep 2018 07:03:14 GMT"}], "update_date": "2018-09-24", "authors_parsed": [["Dai", "Liyun", ""], ["Chen", "Taolue", ""], ["Liu", "Zhiming", ""], ["Xia", "Bican", ""], ["Zhan", "Naijun", ""], ["Larsen", "Kim G.", ""]]}, {"id": "1809.07823", "submitter": "Mohammadhosein Hasanbeig", "authors": "Mohammadhosein Hasanbeig, Alessandro Abate, Daniel Kroening", "title": "Logically-Constrained Neural Fitted Q-Iteration", "comments": "AAMAS 2019", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LG cs.FL cs.LO stat.ML", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We propose a method for efficient training of Q-functions for\ncontinuous-state Markov Decision Processes (MDPs) such that the traces of the\nresulting policies satisfy a given Linear Temporal Logic (LTL) property. LTL, a\nmodal logic, can express a wide range of time-dependent logical properties\n(including \"safety\") that are quite similar to patterns in natural language. We\nconvert the LTL property into a limit deterministic Buchi automaton and\nconstruct an on-the-fly synchronised product MDP. The control policy is then\nsynthesised by defining an adaptive reward function and by applying a modified\nneural fitted Q-iteration algorithm to the synchronised structure, assuming\nthat no prior knowledge is available from the original MDP. The proposed method\nis evaluated in a numerical study to test the quality of the generated control\npolicy and is compared with conventional methods for policy synthesis such as\nMDP abstraction (Voronoi quantizer) and approximate dynamic programming (fitted\nvalue iteration).\n", "versions": [{"version": "v1", "created": "Thu, 20 Sep 2018 19:52:06 GMT"}, {"version": "v2", "created": "Sat, 17 Nov 2018 19:39:49 GMT"}, {"version": "v3", "created": "Wed, 13 Mar 2019 12:04:34 GMT"}, {"version": "v4", "created": "Thu, 14 Mar 2019 11:17:57 GMT"}], "update_date": "2019-03-15", "authors_parsed": [["Hasanbeig", "Mohammadhosein", ""], ["Abate", "Alessandro", ""], ["Kroening", "Daniel", ""]]}, {"id": "1809.07853", "submitter": "Diego Krivochen", "authors": "Diego Gabriel Krivochen", "title": "On Folding and Twisting (and whatknot): towards a characterization of\n  workspaces in syntax", "comments": "Manuscript. Do not cite without permission. Comments welcome", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.CL cs.CG cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Syntactic theory has traditionally adopted a constructivist approach, in\nwhich a set of atomic elements are manipulated by combinatory operations to\nyield derived, complex elements. Syntactic structure is thus seen as the result\nor discrete recursive combinatorics over lexical items which get assembled into\nphrases, which are themselves combined to form sentences. This view is common\nto European and American structuralism (e.g., Benveniste, 1971; Hockett, 1958)\nand different incarnations of generative grammar, transformational and\nnon-transformational (Chomsky, 1956, 1995; and Kaplan & Bresnan, 1982; Gazdar,\n1982). Since at least Uriagereka (2002), there has been some attention paid to\nthe fact that syntactic operations must apply somewhere, particularly when\ncopying and movement operations are considered. Contemporary syntactic theory\nhas thus somewhat acknowledged the importance of formalizing aspects of the\nspaces in which elements are manipulated, but it is still a vastly\nunderexplored area. In this paper we explore the consequences of\nconceptualizing syntax as a set of topological operations applying over spaces\nrather than over discrete elements. We argue that there are empirical\nadvantages in such a view for the treatment of long-distance dependencies and\ncross-derivational dependencies: constraints on possible configurations emerge\nfrom the dynamics of the system.\n", "versions": [{"version": "v1", "created": "Thu, 20 Sep 2018 20:57:43 GMT"}, {"version": "v2", "created": "Tue, 13 Nov 2018 13:41:36 GMT"}, {"version": "v3", "created": "Sun, 30 Dec 2018 22:04:26 GMT"}], "update_date": "2019-01-01", "authors_parsed": [["Krivochen", "Diego Gabriel", ""]]}, {"id": "1809.08050", "submitter": "Ville Salo", "authors": "Ville Salo", "title": "Universal gates with wires in a row", "comments": "15 pages + 3 page appendix; comments and references to previous\n  studies of G are welcome by email!", "journal-ref": null, "doi": null, "report-no": null, "categories": "math.GR cs.FL math.CO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We give some optimal size generating sets for the group generated by shifts\nand local permutations on the binary full shift. We show that a single\ngenerator, namely the fully asynchronous application of the elementary cellular\nautomaton 57 (or, by symmetry, ECA 99), suffices in addition to the shift. In\nthe terminology of logical gates, we have a single reversible gate whose shifts\ngenerate all (finitary) reversible gates on infinitely many binary-valued wires\nthat lie in a row and cannot (a priori) be rearranged. We classify pairs of\nwords $u, v$ such that the gate swapping these two words, together with the\nshift and the bit flip, generates all local permutations. As a corollary, we\nobtain analogous results in the case where the wires are arranged on a cycle,\nconfirming a conjecture of Macauley-McCammond-Mortveit and Vielhaber.\n", "versions": [{"version": "v1", "created": "Fri, 21 Sep 2018 11:55:31 GMT"}, {"version": "v2", "created": "Mon, 24 Sep 2018 07:36:16 GMT"}], "update_date": "2018-09-25", "authors_parsed": [["Salo", "Ville", ""]]}, {"id": "1809.08664", "submitter": "Apostolos Syropoulos", "authors": "Apostolos Syropoulos and Stratos Doumanis and Konstantinos T.\n  Sotiriades", "title": "Computing with P Systems", "comments": null, "journal-ref": "Pre-proceedings of the Fifth Workshop on Membrane Computing\n  (WMC5), Milano, Italy, June 2004, pp. 414--421", "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://creativecommons.org/licenses/by/4.0/", "abstract": "  P systems are computing conceptual computing devices that are at least as\npowerful as Turing machines. However, until recently it was not known how one\ncan encode any recursive function as a P~system. Here we propose a new encoding\nof recursive as P~systems with graph-like structure, which is the main\ndifference with previous documented attempts. The consequence of this and other\nsuch efforts is that they provide a solid ground for the implementation of real\nprogramming languages in existing hardware.\n", "versions": [{"version": "v1", "created": "Sun, 23 Sep 2018 19:33:35 GMT"}], "update_date": "2018-09-25", "authors_parsed": [["Syropoulos", "Apostolos", ""], ["Doumanis", "Stratos", ""], ["Sotiriades", "Konstantinos T.", ""]]}, {"id": "1809.08985", "submitter": "Antoine Mottet", "authors": "Antoine Mottet, Karin Quaas", "title": "The Containment Problem for Unambiguous Register Automata", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://creativecommons.org/licenses/by-nc-sa/4.0/", "abstract": "  We investigate the complexity of the containment problem \"Does $L(A)\\subseteq\nL(B)$ hold?\", where $B$ is an unambiguous register automaton and $A$ is an\narbitrary register automaton. We prove that the problem is decidable and give\nupper bounds on the computational complexity in the general case, and when $B$\nis restricted to have a fixed number of registers.\n", "versions": [{"version": "v1", "created": "Mon, 24 Sep 2018 15:04:39 GMT"}, {"version": "v2", "created": "Sun, 20 Jan 2019 10:07:42 GMT"}], "update_date": "2019-01-23", "authors_parsed": [["Mottet", "Antoine", ""], ["Quaas", "Karin", ""]]}, {"id": "1809.09033", "submitter": "Olivier Carton", "authors": "Olivier Carton and Luc Boasson", "title": "Transfinite Lyndon words", "comments": null, "journal-ref": "Logical Methods in Computer Science, Volume 16, Issue 4 (November\n  10, 2020) lmcs:6893", "doi": "10.23638/LMCS-16(4:9)2020", "report-no": null, "categories": "cs.FL", "license": "http://creativecommons.org/licenses/by/4.0/", "abstract": "  In this paper, we extend the notion of Lyndon word to transfinite words. We\nprove two main results. We first show that, given a transfinite word, there\nexists a unique factorization in Lyndon words that are densely non-increasing,\na relaxation of the condition used in the case of finite words.\n  In the annex, we prove that the factorization of a rational word has a\nspecial form and that it can be computed from a rational expression describing\nthe word.\n", "versions": [{"version": "v1", "created": "Mon, 24 Sep 2018 16:20:26 GMT"}, {"version": "v2", "created": "Tue, 18 Feb 2020 18:16:05 GMT"}, {"version": "v3", "created": "Tue, 25 Aug 2020 09:05:29 GMT"}, {"version": "v4", "created": "Wed, 26 Aug 2020 13:08:53 GMT"}, {"version": "v5", "created": "Fri, 28 Aug 2020 06:55:43 GMT"}, {"version": "v6", "created": "Mon, 9 Nov 2020 14:47:58 GMT"}], "update_date": "2021-02-10", "authors_parsed": [["Carton", "Olivier", ""], ["Boasson", "Luc", ""]]}, {"id": "1809.09415", "submitter": "Anton Pirogov", "authors": "Christof L\\\"oding and Anton Pirogov", "title": "On finitely ambiguous B\\\"uchi automata", "comments": null, "journal-ref": null, "doi": "10.1007/978-3-319-98654-8_41", "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Unambiguous B\\\"uchi automata, i.e. B\\\"uchi automata allowing only one\naccepting run per word, are a useful restriction of B\\\"uchi automata that is\nwell-suited for probabilistic model-checking. In this paper we propose a more\npermissive variant, namely finitely ambiguous B\\\"uchi automata, a\ngeneralisation where each word has at most $k$ accepting runs, for some fixed\n$k$. We adapt existing notions and results concerning finite and bounded\nambiguity of finite automata to the setting of $\\omega$-languages and present a\ntranslation from arbitrary nondeterministic B\\\"uchi automata with $n$ states to\nfinitely ambiguous automata with at most $3^n$ states and at most $n$ accepting\nruns per word.\n", "versions": [{"version": "v1", "created": "Tue, 25 Sep 2018 11:40:39 GMT"}], "update_date": "2018-09-26", "authors_parsed": [["L\u00f6ding", "Christof", ""], ["Pirogov", "Anton", ""]]}, {"id": "1809.10542", "submitter": "Diego Krivochen", "authors": "Diego Krivochen and Douglas Saddy", "title": "Towards a classification of Lindenmayer systems", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL cs.CL cs.GL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In this paper we will attempt to classify Lindenmayer systems based on\nproperties of sets of rules and the kind of strings those rules generate. This\nclassification will be referred to as a parametrization of the L-space: the\nL-space is the phase space in which all possible L-developments are\nrepresented. This space is infinite, because there is no halting algorithm for\nL-grammars; but it is also subjected to hard conditions, because there are\ngrammars and developments which are not possible states of an L-system: a very\nwell-known example is the space of normal grammars. Just as the space of normal\ngrammars is parametrized into Regular, Context-Free, Context-Sensitive, and\nUnrestricted (with proper containment relations holding among them; see\nChomsky, 1959: Theorem 1), we contend here that the L-space is a very rich\nlandscape of grammars which cluster into kinds that are not mutually\ntranslatable.\n", "versions": [{"version": "v1", "created": "Thu, 27 Sep 2018 14:36:00 GMT"}], "update_date": "2018-09-28", "authors_parsed": [["Krivochen", "Diego", ""], ["Saddy", "Douglas", ""]]}]