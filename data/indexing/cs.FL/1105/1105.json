[{"id": "1105.0065", "submitter": "Luca Manzoni", "authors": "J\\'er\\^ome Chandesris, Alberto Dennunzio, Enrico Formenti, and Luca\n  Manzoni", "title": "Computational Aspects of Asynchronous CA", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL nlin.CG", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This work studies some aspects of the computational power of fully\nasynchronous cellular automata (ACA). We deal with some notions of simulation\nbetween ACA and Turing Machines. In particular, we characterize the updating\nsequences specifying which are \"universal\", i.e., allowing a (specific family\nof) ACA to simulate any TM on any input. We also consider the computational\ncost of such simulations.\n", "versions": [{"version": "v1", "created": "Sat, 30 Apr 2011 09:14:35 GMT"}], "update_date": "2011-05-03", "authors_parsed": [["Chandesris", "J\u00e9r\u00f4me", ""], ["Dennunzio", "Alberto", ""], ["Formenti", "Enrico", ""], ["Manzoni", "Luca", ""]]}, {"id": "1105.1657", "submitter": "Pierre Ganty", "authors": "Mohamed Faouzi Atig and Pierre Ganty", "title": "Approximating Petri Net Reachability Along Context-free Traces", "comments": "16 pages", "journal-ref": null, "doi": "10.4230/LIPIcs.FSTTCS.2011.152", "report-no": null, "categories": "cs.FL cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We investigate the problem asking whether the intersection of a context-free\nlanguage (CFL) and a Petri net language (PNL) is empty. Our contribution to\nsolve this long-standing problem which relates, for instance, to the\nreachability analysis of recursive programs over unbounded data domain, is to\nidentify a class of CFLs called the finite-index CFLs for which the problem is\ndecidable. The k-index approximation of a CFL can be obtained by discarding all\nthe words that cannot be derived within a budget k on the number of occurrences\nof non-terminals. A finite-index CFL is thus a CFL which coincides with its\nk-index approximation for some k. We decide whether the intersection of a\nfinite-index CFL and a PNL is empty by reducing it to the reachability problem\nof Petri nets with weak inhibitor arcs, a class of systems with infinitely many\nstates for which reachability is known to be decidable. Conversely, we show\nthat the reachability problem for a Petri net with weak inhibitor arcs reduces\nto the emptiness problem of a finite-index CFL intersected with a PNL.\n", "versions": [{"version": "v1", "created": "Mon, 9 May 2011 12:44:49 GMT"}, {"version": "v2", "created": "Sat, 4 Jun 2011 21:58:47 GMT"}, {"version": "v3", "created": "Mon, 16 Jan 2012 10:27:08 GMT"}], "update_date": "2015-03-19", "authors_parsed": [["Atig", "Mohamed Faouzi", ""], ["Ganty", "Pierre", ""]]}, {"id": "1105.1704", "submitter": "Evgeny Skvortsov", "authors": "Evgeny Skvortsov, Evgeny Tipikin", "title": "Experimental Study of the Shortest Reset Word of Random Automata", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In this paper we describe an approach to finding the shortest reset word of a\nfinite synchronizing automaton by using a SAT solver. We use this approach to\nperform an experimental study of the length of the shortest reset word of a\nfinite synchronizing automaton. The largest automata we considered had 100\nstates. The results of the experiments allow us to formulate a hypothesis that\nthe length of the shortest reset word of a random finite automaton with $n$\nstates and 2 input letters with high probability is sublinear with respect to\n$n$ and can be estimated as $1.95 n^{0.55}.$\n", "versions": [{"version": "v1", "created": "Tue, 26 Apr 2011 15:48:59 GMT"}], "update_date": "2015-03-19", "authors_parsed": [["Skvortsov", "Evgeny", ""], ["Tipikin", "Evgeny", ""]]}, {"id": "1105.2576", "submitter": "Adam Koprowski", "authors": "Adam Koprowski (MLstate, Paris, France), Henri Binsztok (MLstate,\n  Paris, France)", "title": "TRX: A Formally Verified Parser Interpreter", "comments": "26 pages, LMCS", "journal-ref": "Logical Methods in Computer Science, Volume 7, Issue 2 (June 24,\n  2011) lmcs:686", "doi": "10.2168/LMCS-7(2:18)2011", "report-no": null, "categories": "cs.LO cs.FL cs.PL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Parsing is an important problem in computer science and yet surprisingly\nlittle attention has been devoted to its formal verification. In this paper, we\npresent TRX: a parser interpreter formally developed in the proof assistant\nCoq, capable of producing formally correct parsers. We are using parsing\nexpression grammars (PEGs), a formalism essentially representing recursive\ndescent parsing, which we consider an attractive alternative to context-free\ngrammars (CFGs). From this formalization we can extract a parser for an\narbitrary PEG grammar with the warranty of total correctness, i.e., the\nresulting parser is terminating and correct with respect to its grammar and the\nsemantics of PEGs; both properties formally proven in Coq.\n", "versions": [{"version": "v1", "created": "Thu, 12 May 2011 20:43:38 GMT"}, {"version": "v2", "created": "Wed, 22 Jun 2011 20:51:51 GMT"}], "update_date": "2015-07-01", "authors_parsed": [["Koprowski", "Adam", "", "MLstate, Paris, France"], ["Binsztok", "Henri", "", "MLstate,\n  Paris, France"]]}, {"id": "1105.2849", "submitter": "James Currie", "authors": "James D. Currie", "title": "Pattern avoidance with involution", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We give the avoidance indices (morphic and antimorphic) for all unary\npatterns with involution.\n", "versions": [{"version": "v1", "created": "Fri, 13 May 2011 22:59:27 GMT"}], "update_date": "2011-05-17", "authors_parsed": [["Currie", "James D.", ""]]}, {"id": "1105.3116", "submitter": "Roman Kolpakov", "authors": "Roman Kolpakov, Michael Rao", "title": "On the number of Dejean words over alphabets of 5, 6, 7, 8, 9 and 10\n  letters", "comments": "13 pages", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We give lower bounds on the growth rate of Dejean words, i.e. minimally\nrepetitive words, over a k-letter alphabet, for k=5, 6, 7, 8, 9, 10. Put\ntogether with the known upper bounds, we estimate these growth rates with the\nprecision of 0,005. As an consequence, we establish the exponential growth of\nthe number of Dejean words over a k-letter alphabet, for k=5, 6, 7, 8, 9, 10.\n", "versions": [{"version": "v1", "created": "Mon, 16 May 2011 15:06:26 GMT"}], "update_date": "2011-05-17", "authors_parsed": [["Kolpakov", "Roman", ""], ["Rao", "Michael", ""]]}, {"id": "1105.4725", "submitter": "Ines Klimann", "authors": "Ali Akhavi, Ines Klimann, Sylvain Lombardy, Jean Mairesse and Matthieu\n  Picantin", "title": "On the Finiteness Problem for Automaton (Semi)groups", "comments": null, "journal-ref": null, "doi": "10.1142/S021819671250052X", "report-no": null, "categories": "cs.FL math.GR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This paper addresses a decision problem highlighted by Grigorchuk,\nNekrashevich, and Sushchanskii, namely the finiteness problem for automaton\n(semi)groups.\n  For semigroups, we give an effective sufficient but not necessary condition\nfor finiteness and, for groups, an effective necessary but not sufficient\ncondition. The efficiency of the new criteria is demonstrated by testing all\nMealy automata with small stateset and alphabet. Finally, for groups, we\nprovide a necessary and sufficient condition that does not directly lead to a\ndecision procedure.\n", "versions": [{"version": "v1", "created": "Tue, 24 May 2011 10:27:40 GMT"}], "update_date": "2013-01-11", "authors_parsed": [["Akhavi", "Ali", ""], ["Klimann", "Ines", ""], ["Lombardy", "Sylvain", ""], ["Mairesse", "Jean", ""], ["Picantin", "Matthieu", ""]]}, {"id": "1105.5055", "submitter": "Markus Lindstr\\\"om", "authors": "Markus Lindstr\\\"om, Gilles Geeraerts, Jo\\\"el Goossens", "title": "A faster exact multiprocessor schedulability test for sporadic tasks", "comments": "10 pages", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.OS cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Baker and Cirinei introduced an exact but naive algorithm, based on solving a\nstate reachability problem in a finite automaton, to check whether sets of\nsporadic hard real-time tasks are schedulable on identical multiprocessor\nplatforms. However, the algorithm suffered from poor performance due to the\nexponential size of the automaton relative to the size of the task set. In this\npaper, we successfully apply techniques developed by the formal verification\ncommunity, specifically antichain algorithms, by defining and proving the\ncorrectness of a simulation relation on Baker and Cirinei's automaton. We show\nour improved algorithm yields dramatically improved performance for the\nschedulability test and opens for many further improvements.\n", "versions": [{"version": "v1", "created": "Wed, 25 May 2011 15:02:01 GMT"}, {"version": "v2", "created": "Wed, 7 Sep 2011 13:42:51 GMT"}], "update_date": "2011-09-08", "authors_parsed": [["Lindstr\u00f6m", "Markus", ""], ["Geeraerts", "Gilles", ""], ["Goossens", "Jo\u00ebl", ""]]}, {"id": "1105.5894", "submitter": "Alexandr Rubtsov", "authors": "A. Rubtsov, M. Vyalyi", "title": "Regular realizability problems and models of a generalized\n  nondeterminism", "comments": "13 pages", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL cs.DM", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Models of a generalized nondeterminism are defined by limitations on nonde-\nterministic behavior of a computing device. A regular realizability problem is\na problem of verifying existence of a special sort word in a regular language.\nThese notions are closely connected. In this paper we consider regular\nrealizability problems for languages consist- ing of all prefixes of an\ninfinite word. These problems are related to the automata on infinite words and\nto the decidability of monadic second-order theories. The main contribution is\na new decidability condition for regular realizability problems and for\nmonadic-second order theories. We also show that decidability of a regular\nrealizability problem is equivalent to decidability of some prefix\nrealizability problem.\n", "versions": [{"version": "v1", "created": "Mon, 30 May 2011 07:59:11 GMT"}], "update_date": "2015-03-19", "authors_parsed": [["Rubtsov", "A.", ""], ["Vyalyi", "M.", ""]]}, {"id": "1105.6190", "submitter": "Miroslav Ciric", "authors": "Aleksandar Stamenkovi\\'c, Miroslav \\'Ciri\\'c", "title": "Construction of fuzzy automata from fuzzy regular expressions", "comments": "26 pages, submitted to a journal", "journal-ref": "Fuzzy Sets and Systems 199 (2012) 1-27", "doi": "10.1016/j.fss.2012.01.007", "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Li and Pedrycz [Y. M. Li, W. Pedrycz, Fuzzy finite automata and fuzzy regular\nexpressions with membership values in lattice ordered monoids, Fuzzy Sets and\nSystems 156 (2005) 68--92] have proved fundamental results that provide\ndifferent equivalent ways to represent fuzzy languages with membership values\nin a lattice-ordered monoid, and generalize the well-known results of the\nclassical theory of formal languages. In particular, they have shown that a\nfuzzy language over an integral lattice-ordered monoid can be represented by a\nfuzzy regular expression if and only if it can be recognized by a fuzzy finite\nautomaton. However, they did not give any effective method for constructing an\nequivalent fuzzy finite automaton from a given fuzzy regular expression. In\nthis paper we provide such an effective method. Transforming scalars appearing\nin a fuzzy regular expression {\\alpha} into letters of the new extended\nalphabet, we convert the fuzzy regular expression {\\alpha} to an ordinary\nregular expression {\\alpha}_{R}. Then, starting from an arbitrary\nnondeterministic finite automaton A that recognizes the language ||{\\alpha}_R||\nrepresented by the regular expression {\\alpha}_R, we construct fuzzy finite\nautomata A_{\\alpha} and A_{\\alpha}^r with the same or even less number of\nstates than the automaton A, which recognize the fuzzy language ||{\\alpha}||\nrepresented by the fuzzy regular expression {\\alpha}. The starting\nnondeterministic finite automaton A can be obtained from {\\alpha}_R using any\nof the well-known constructions for converting regular expressions to\nnondeterministic finite automata, such as Glushkov-McNaughton-Yamada's position\nautomaton, Brzozowski's derivative automaton, Antimirov's partial derivative\nautomaton, or Ilie-Yu's follow automaton.\n", "versions": [{"version": "v1", "created": "Tue, 31 May 2011 07:41:22 GMT"}], "update_date": "2014-04-01", "authors_parsed": [["Stamenkovi\u0107", "Aleksandar", ""], ["\u0106iri\u0107", "Miroslav", ""]]}]