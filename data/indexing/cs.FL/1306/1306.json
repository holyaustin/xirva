[{"id": "1306.0400", "submitter": "Michael Brand", "authors": "Michael Brand", "title": "The RAM equivalent of P vs. RP", "comments": "23 pages", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.CC cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  One of the fundamental open questions in computational complexity is whether\nthe class of problems solvable by use of stochasticity under the Random\nPolynomial time (RP) model is larger than the class of those solvable in\ndeterministic polynomial time (P). However, this question is only open for\nTuring Machines, not for Random Access Machines (RAMs).\n  Simon (1981) was able to show that for a sufficiently equipped Random Access\nMachine, the ability to switch states nondeterministically does not entail any\ncomputational advantage. However, in the same paper, Simon describes a\ndifferent (and arguably more natural) scenario for stochasticity under the RAM\nmodel. According to Simon's proposal, instead of receiving a new random bit at\neach execution step, the RAM program is able to execute the pseudofunction\n$\\textit{RAND}(y)$, which returns a uniformly distributed random integer in the\nrange $[0,y)$. Whether the ability to allot a random integer in this fashion is\nmore powerful than the ability to allot a random bit remained an open question\nfor the last 30 years.\n  In this paper, we close Simon's open problem, by fully characterising the\nclass of languages recognisable in polynomial time by each of the RAMs\nregarding which the question was posed. We show that for some of these,\nstochasticity entails no advantage, but, more interestingly, we show that for\nothers it does.\n", "versions": [{"version": "v1", "created": "Mon, 3 Jun 2013 13:26:24 GMT"}, {"version": "v2", "created": "Mon, 30 Sep 2013 05:10:05 GMT"}], "update_date": "2013-10-01", "authors_parsed": [["Brand", "Michael", ""]]}, {"id": "1306.0662", "submitter": "Franck Cassez", "authors": "Franck Cassez and Alban Grastien", "title": "Predictability of Event Occurrences in Timed Systems", "comments": "Extended version of FORMATS 2013", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.SY cs.FL cs.LO math.OC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We address the problem of predicting events' occurrences in partially\nobservable timed systems modelled by timed automata. Our contribution is\nmany-fold: 1) we give a definition of bounded predictability, namely\nk-predictability, that takes into account the minimum delay between the\nprediction and the actual event's occurrence; 2) we show that 0-predictability\nis equivalent to the original notion of predictability of S. Genc and S.\nLafortune; 3) we provide a necessary and sufficient condition for\nk-predictability (which is very similar to k-diagnosability) and give a simple\nalgorithm to check k-predictability; 4) we address the problem of\npredictability of events' occurrences in timed automata and show that the\nproblem is PSPACE-complete.\n", "versions": [{"version": "v1", "created": "Tue, 4 Jun 2013 06:18:37 GMT"}], "update_date": "2013-06-05", "authors_parsed": [["Cassez", "Franck", ""], ["Grastien", "Alban", ""]]}, {"id": "1306.1069", "submitter": "Alexander Kartzow", "authors": "Alexander Heu{\\ss}ner and Alexander Kartzow", "title": "Reachability in Higher-Order-Counters", "comments": "Version with Full Proofs of a paper that appears at MFCS 2013", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Higher-order counter automata (\\HOCS) can be either seen as a restriction of\nhigher-order pushdown automata (\\HOPS) to a unary stack alphabet, or as an\nextension of counter automata to higher levels. We distinguish two principal\nkinds of \\HOCS: those that can test whether the topmost counter value is zero\nand those which cannot.\n  We show that control-state reachability for level $k$ \\HOCS with $0$-test is\ncomplete for \\mbox{$(k-2)$}-fold exponential space; leaving out the $0$-test\nleads to completeness for \\mbox{$(k-2)$}-fold exponential time. Restricting\n\\HOCS (without $0$-test) to level $2$, we prove that global (forward or\nbackward) reachability analysis is $\\PTIME$-complete. This enhances the known\nresult for pushdown systems which are subsumed by level $2$ \\HOCS without\n$0$-test.\n  We transfer our results to the formal language setting. Assuming that $\\PTIME\n\\subsetneq \\PSPACE \\subsetneq \\mathbf{EXPTIME}$, we apply proof ideas of\nEngelfriet and conclude that the hierarchies of languages of \\HOPS and of \\HOCS\nform strictly interleaving hierarchies. Interestingly, Engelfriet's\nconstructions also allow to conclude immediately that the hierarchy of\ncollapsible pushdown languages is strict level-by-level due to the existing\ncomplexity results for reachability on collapsible pushdown graphs. This\nanswers an open question independently asked by Parys and by Kobayashi.\n", "versions": [{"version": "v1", "created": "Wed, 5 Jun 2013 11:54:53 GMT"}], "update_date": "2013-06-06", "authors_parsed": [["Heu\u00dfner", "Alexander", ""], ["Kartzow", "Alexander", ""]]}, {"id": "1306.1138", "submitter": "Attila Egri-Nagy", "authors": "Attila Egri-Nagy, Chrystopher L. Nehaniv", "title": "Compact Notation for Finite Transformations", "comments": "7 pages, 4 figures, compact notation implemented in SgpDec\n  http://gap-packages.github.io/sgpdec/", "journal-ref": null, "doi": null, "report-no": null, "categories": "math.GR cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We describe a new notation for finite transformations. This compact notation\nextends the orbit-cycle notation for permutations and builds upon existing\nnotations. It gives insight into the structure of transformations and reduces\nthe length of expressions without increasing the number of types of symbols.\n", "versions": [{"version": "v1", "created": "Mon, 3 Jun 2013 22:31:10 GMT"}, {"version": "v2", "created": "Tue, 3 Oct 2017 13:38:50 GMT"}], "update_date": "2017-10-04", "authors_parsed": [["Egri-Nagy", "Attila", ""], ["Nehaniv", "Chrystopher L.", ""]]}, {"id": "1306.1468", "submitter": "Benjamin Steinberg", "authors": "Benjamin Steinberg", "title": "Topological dynamics and recognition of languages", "comments": "This draft was written in March 2010 and was intended to be the\n  beginning of a foundational paper on varieties of not necessarily rational\n  languages and varieties of left compact semitopological semigroups, including\n  an Eilenberg variety theorem and a Reiterman's theorem. Lacking sufficient\n  applications to develop the full theory, I put here what has been worked out", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL math.CO math.GR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We define compact automata and show that every language has a unique minimal\ncompact automaton. We also define recognition of languages by compact left\nsemitopological monoids and construct the analogue of the syntactic monoid in\nthis context. For rational languages this reduces to the usual theory of finite\nautomata and finite monoids.\n", "versions": [{"version": "v1", "created": "Thu, 6 Jun 2013 16:45:48 GMT"}], "update_date": "2013-06-07", "authors_parsed": [["Steinberg", "Benjamin", ""]]}, {"id": "1306.1947", "submitter": "Wan Fokkink", "authors": "Wan Fokkink, Dick Grune, Brinio Hond, Peter Rutgers", "title": "Detecting Useless Transitions in Pushdown Automata", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Pushdown automata may contain transitions that are never used in any\naccepting run of the automaton. We present an algorithm for detecting such\nuseless transitions. A finite automaton that captures the possible stack\ncontent during runs of the pushdown automaton, is first constructed in a\nforward procedure to determine which transitions are reachable, and then\nemployed in a backward procedure to determine which of these transitions can\nlead to a final stat\n", "versions": [{"version": "v1", "created": "Sat, 8 Jun 2013 19:10:45 GMT"}], "update_date": "2013-06-11", "authors_parsed": [["Fokkink", "Wan", ""], ["Grune", "Dick", ""], ["Hond", "Brinio", ""], ["Rutgers", "Peter", ""]]}, {"id": "1306.2254", "submitter": "Gabriele Fici", "authors": "Alessandro De Luca and Gabriele Fici", "title": "Open and Closed Prefixes of Sturmian Words", "comments": "To appear in WORDS 2013 proceedings", "journal-ref": "Lecture Notes in Computer Science 8079: 132-142 (2013)", "doi": "10.1007/978-3-642-40579-2_15", "report-no": null, "categories": "math.CO cs.DM cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  A word is closed if it contains a proper factor that occurs both as a prefix\nand as a suffix but does not have internal occurrences, otherwise it is open.\nWe deal with the sequence of open and closed prefixes of Sturmian words and\nprove that this sequence characterizes every finite or infinite Sturmian word\nup to isomorphisms of the alphabet. We then characterize the combinatorial\nstructure of the sequence of open and closed prefixes of standard Sturmian\nwords. We prove that every standard Sturmian word, after swapping its first\nletter, can be written as an infinite product of squares of reversed standard\nwords.\n", "versions": [{"version": "v1", "created": "Mon, 10 Jun 2013 17:32:14 GMT"}], "update_date": "2014-07-15", "authors_parsed": [["De Luca", "Alessandro", ""], ["Fici", "Gabriele", ""]]}, {"id": "1306.2548", "submitter": "K. V. Krishna", "authors": "Shubh Narayan Singh and K. V. Krishna", "title": "The Holonomy Decomposition of Circular Semi-Flower Automata", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Eilenberg's holonomy decomposition is useful to ascertain the structural\nproperties of automata. Using this method, Egri-Nagy and Nehaniv characterized\nthe absence of certain types of cycles in automata. In the direction of\nstudying the structure of automata with cycles, this work focuses on a special\nclass of semi-flower automata and establish the holonomy decompositions of\ncertain circular semi-flower automata.\n", "versions": [{"version": "v1", "created": "Tue, 11 Jun 2013 15:01:29 GMT"}], "update_date": "2013-06-12", "authors_parsed": [["Singh", "Shubh Narayan", ""], ["Krishna", "K. V.", ""]]}, {"id": "1306.2695", "submitter": "EPTCS", "authors": "Tingting Han, Christian Krause, Marta Kwiatkowska, Holger Giese", "title": "Modal Specifications for Probabilistic Timed Systems", "comments": "In Proceedings QAPL 2013, arXiv:1306.2413", "journal-ref": "EPTCS 117, 2013, pp. 66-80", "doi": "10.4204/EPTCS.117.5", "report-no": null, "categories": "cs.LO cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Modal automata are a classic formal model for component-based systems that\ncomes equipped with a rich specification theory supporting abstraction,\nrefinement and compositional reasoning. In recent years, quantitative variants\nof modal automata were introduced for specifying and reasoning about\ncomponent-based designs for embedded and mobile systems. These respectively\ngeneralize modal specification theories for timed and probabilistic systems. In\nthis paper, we define a modal specification language for combined probabilistic\ntimed systems, called abstract probabilistic timed automata, which generalizes\nexisting formalisms. We introduce appropriate syntactic and semantic refinement\nnotions and discuss consistency of our specification language, also with\nrespect to time-divergence. We identify a subclass of our models for which we\ndefine the fundamental operations for abstraction, conjunction and parallel\ncomposition, and show several compositionality results.\n", "versions": [{"version": "v1", "created": "Wed, 12 Jun 2013 01:55:46 GMT"}], "update_date": "2013-06-13", "authors_parsed": [["Han", "Tingting", ""], ["Krause", "Christian", ""], ["Kwiatkowska", "Marta", ""], ["Giese", "Holger", ""]]}, {"id": "1306.3050", "submitter": "Walter Vogler", "authors": "Gerald L\\\"uttgen (Uni. Bamberg), Walter Vogler (Uni. Augsburg)", "title": "Modal Interface Automata", "comments": "28 pages", "journal-ref": "Logical Methods in Computer Science, Volume 9, Issue 3 (August 14,\n  2013) lmcs:1136", "doi": "10.2168/LMCS-9(3:4)2013", "report-no": null, "categories": "cs.LO cs.FL cs.SE", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  De Alfaro and Henzinger's Interface Automata (IA) and Nyman et al.'s recent\ncombination IOMTS of IA and Larsen's Modal Transition Systems (MTS) are\nestablished frameworks for specifying interfaces of system components. However,\nneither IA nor IOMTS consider conjunction that is needed in practice when a\ncomponent shall satisfy multiple interfaces, while Larsen's MTS-conjunction is\nnot closed and Bene\\v{s} et al.'s conjunction on disjunctive MTS does not treat\ninternal transitions. In addition, IOMTS-parallel composition exhibits a\ncompositionality defect. This article defines conjunction (and also\ndisjunction) on IA and disjunctive MTS and proves the operators to be\n'correct', i.e., the greatest lower bounds (least upper bounds) wrt. IA- and\nresp. MTS-refinement. As its main contribution, a novel interface theory called\nModal Interface Automata (MIA) is introduced: MIA is a rich subset of IOMTS\nfeaturing explicit output-must-transitions while input-transitions are always\nallowed implicitly, is equipped with compositional parallel, conjunction and\ndisjunction operators, and allows a simpler embedding of IA than Nyman's. Thus,\nit fixes the shortcomings of related work, without restricting designers to\ndeterministic interfaces as Raclet et al.'s modal interface theory does.\n", "versions": [{"version": "v1", "created": "Thu, 13 Jun 2013 08:00:59 GMT"}, {"version": "v2", "created": "Tue, 13 Aug 2013 15:49:06 GMT"}], "update_date": "2015-07-01", "authors_parsed": [["L\u00fcttgen", "Gerald", "", "Uni. Bamberg"], ["Vogler", "Walter", "", "Uni. Augsburg"]]}, {"id": "1306.3123", "submitter": "\\v{S}t\\v{e}p\\'an Holub", "authors": "\\v{S}t\\v{e}p\\'an Holub", "title": "Words with unbounded periodicity complexity", "comments": "some references adjusted", "journal-ref": "International Journal of Algebra and Computation 24 (2014) ,\n  827-836", "doi": "10.1142/S0218196714500362", "report-no": null, "categories": "cs.FL math.CO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  If an infinite non-periodic word is uniformly recurrent or is of bounded\nrepetition, then the limit of its periodicity complexity is infinity. Moreover,\nthere are uniformly recurrent words with the periodicity complexity arbitrarily\nhigh at infinitely many positions.\n", "versions": [{"version": "v1", "created": "Thu, 13 Jun 2013 14:37:43 GMT"}, {"version": "v2", "created": "Thu, 25 Jul 2013 11:37:22 GMT"}], "update_date": "2019-12-18", "authors_parsed": [["Holub", "\u0160t\u011bp\u00e1n", ""]]}, {"id": "1306.3260", "submitter": "Georg Zetzsche", "authors": "P. Buckheister and Georg Zetzsche", "title": "Semilinearity and Context-Freeness of Languages Accepted by Valence\n  Automata", "comments": "Long version of a paper accepted for MFCS 2013. Corrected typos and\n  improved readability, results unchanged", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL math.GR", "license": "http://creativecommons.org/licenses/by-nc-sa/3.0/", "abstract": "  Valence automata are a generalization of various models of automata with\nstorage. Here, each edge carries, in addition to an input word, an element of a\nmonoid. A computation is considered valid if multiplying the monoid elements on\nthe visited edges yields the identity element. By choosing suitable monoids, a\nvariety of automata models can be obtained as special valence automata.\n  This work is concerned with the accepting power of valence automata.\nSpecifically, we ask for which monoids valence automata can accept only\ncontext-free languages or only languages with semilinear Parikh image,\nrespectively.\n  First, we present a characterization of those graph products (of monoids) for\nwhich valence automata accept only context-free languages. Second, we provide a\nnecessary and sufficient condition for a graph product of copies of the\nbicyclic monoid and the integers to yield only languages with semilinear Parikh\nimage when used as a storage mechanism in valence automata. Third, we show that\nall languages accepted by valence automata over torsion groups have a\nsemilinear Parikh image.\n", "versions": [{"version": "v1", "created": "Thu, 13 Jun 2013 21:29:06 GMT"}, {"version": "v2", "created": "Tue, 18 Jun 2013 13:56:56 GMT"}], "update_date": "2013-06-19", "authors_parsed": [["Buckheister", "P.", ""], ["Zetzsche", "Georg", ""]]}, {"id": "1306.3492", "submitter": "K. V. Krishna", "authors": "Shubh Narayan Singh and K. V. Krishna", "title": "Syntactic Complexity of Circular Semi-Flower Automata", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We investigate the syntactic complexity of certain types of finitely\ngenerated submonoids of a free monoid. In fact, we consider those submonoids\nwhich are accepted by circular semi-flower automata (CSFA). Here, we show that\nthe syntactic complexity of CSFA with at most one `branch point going in' (bpi)\nis linear. Further, we prove that the syntactic complexity of $n$-state CSFA\nwith two bpis over a binary alphabet is $2n(n+1)$.\n", "versions": [{"version": "v1", "created": "Fri, 14 Jun 2013 19:28:58 GMT"}], "update_date": "2013-06-17", "authors_parsed": [["Singh", "Shubh Narayan", ""], ["Krishna", "K. V.", ""]]}, {"id": "1306.3507", "submitter": "Faissal Ouardi", "authors": "Jean-Marc Champarnaud and Faissal Ouardi and Djelloul Ziadi", "title": "Extended to Multi-Tilde-Bar Regular Expressions and Efficient Finite\n  Automata Constructions", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Several algorithms have been designed to convert a regular expression into an\nequivalent finite automaton. One of the most popular constructions, due to\nGlushkov and to McNaughton and Yamada, is based on the computation of the Null,\nFirst, Last and Follow sets (called Glushkov functions) associated with a\nlinearized version of the expression. Recently Mignot considered a family of\nextended expressions called Extended to multi-tilde-bar Regular Expressions\n(EmtbREs) and he showed that, under some restrictions, Glushkov functions can\nbe defined for an EmtbRE. In this paper we present an algorithm which\nefficiently computes the Glushkov functions of an unrestricted EmtbRE. Our\napproach is based on a recursive definition of the language associated with an\nEmtbRE which enlightens the fact that the worst case time complexity of the\nconversion of an EmtbRE into an automaton is related to the worst case time\ncomplexity of the computation of the Null function. Finally we show how to\nextend the ZPC-structure to EmtbREs, which allows us to apply to this family of\nextended expressions the efficient constructions based on this structure (in\nparticular the construction of the c-continuation automaton, the position\nautomaton, the follow automaton and the equation automaton).\n", "versions": [{"version": "v1", "created": "Fri, 14 Jun 2013 20:32:31 GMT"}], "update_date": "2013-06-18", "authors_parsed": [["Champarnaud", "Jean-Marc", ""], ["Ouardi", "Faissal", ""], ["Ziadi", "Djelloul", ""]]}, {"id": "1306.3726", "submitter": "Sanjay Jain", "authors": "John Case (University of Delaware), Sanjay Jain (National University\n  of Singapore), Samuel Seah (National University of Singapore), Frank Stephan\n  (National University of Singapore)", "title": "Automatic functions, linear time and learning", "comments": "A preliminary version was presented at the conference CiE 2012\n  (Computability in Europe)", "journal-ref": "Logical Methods in Computer Science, Volume 9, Issue 3 (September\n  17, 2013) lmcs:734", "doi": "10.2168/LMCS-9(3:19)2013", "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The present work determines the exact nature of {\\em linear time computable}\nnotions which characterise automatic functions (those whose graphs are\nrecognised by a finite automaton). The paper also determines which type of\nlinear time notions permit full learnability for learning in the limit of\nautomatic classes (families of languages which are uniformly recognised by a\nfinite automaton). In particular it is shown that a function is automatic iff\nthere is a one-tape Turing machine with a left end which computes the function\nin linear time where the input before the computation and the output after the\ncomputation both start at the left end. It is known that learners realised as\nautomatic update functions are restrictive for learning. In the present work it\nis shown that one can overcome the problem by providing work tapes additional\nto a resource-bounded base tape while keeping the update-time to be linear in\nthe length of the largest datum seen so far. In this model, one additional such\nwork tape provides additional learning power over the automatic learner model\nand two additional work tapes give full learning power. Furthermore, one can\nalso consider additional queues or additional stacks in place of additional\nwork tapes and for these devices, one queue or two stacks are sufficient for\nfull learning power while one stack is insufficient.\n", "versions": [{"version": "v1", "created": "Mon, 17 Jun 2013 01:46:43 GMT"}, {"version": "v2", "created": "Tue, 18 Jun 2013 08:23:24 GMT"}, {"version": "v3", "created": "Mon, 16 Sep 2013 15:45:55 GMT"}], "update_date": "2018-04-19", "authors_parsed": [["Case", "John", "", "University of Delaware"], ["Jain", "Sanjay", "", "National University\n  of Singapore"], ["Seah", "Samuel", "", "National University of Singapore"], ["Stephan", "Frank", "", "National University of Singapore"]]}, {"id": "1306.3777", "submitter": "Ilkka T\\\"orm\\\"a", "authors": "Ville Salo and Ilkka T\\\"orm\\\"a", "title": "Block Maps between Primitive Uniform and Pisot Substitutions", "comments": "21 pages. Minor corrections to grammar and some proofs. To appear in\n  Ergodic Theory and Dynamical Systems after editorial input by Cambridge\n  University Press. Copyright held by Cambridge University Press", "journal-ref": null, "doi": "10.1017/etds.2014.29", "report-no": null, "categories": "math.DS cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In this article, we prove that for all pairs of primitive Pisot or uniform\nsubstitutions with the same dominating eigenvalue, there exists a finite set of\nblock maps such that every block map between the corresponding subshifts is an\nelement of this set, up to a shift.\n", "versions": [{"version": "v1", "created": "Mon, 17 Jun 2013 09:00:38 GMT"}, {"version": "v2", "created": "Wed, 2 Oct 2013 10:31:05 GMT"}, {"version": "v3", "created": "Wed, 12 Mar 2014 14:22:46 GMT"}, {"version": "v4", "created": "Mon, 17 Mar 2014 13:04:30 GMT"}], "update_date": "2014-08-13", "authors_parsed": [["Salo", "Ville", ""], ["T\u00f6rm\u00e4", "Ilkka", ""]]}, {"id": "1306.4636", "submitter": "Jan  Strejcek", "authors": "Tom\\'a\\v{s} Babiak, Franti\\v{s}ek Blahoudek, Mojm\\'ir\n  K\\v{r}et\\'insk\\'y, Jan Strej\\v{c}ek", "title": "Effective Translation of LTL to Deterministic Rabin Automata: Beyond the\n  (F,G)-Fragment", "comments": "Full version of the paper accepted to ATVA 2013", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Some applications of linear temporal logic (LTL) require to translate\nformulae of the logic to deterministic omega-automata. There are currently two\ntranslators producing deterministic automata: ltl2dstar working for the whole\nLTL and Rabinizer applicable to LTL(F,G) which is the LTL fragment using only\nmodalities F and G. We present a new translation to deterministic Rabin\nautomata via alternating automata and deterministic transition-based\ngeneralized Rabin automata. Our translation applies to a fragment that is\nstrictly larger than LTL(F,G). Experimental results show that our algorithm can\nproduce significantly smaller automata compared to Rabinizer and ltl2dstar,\nespecially for more complex LTL formulae.\n", "versions": [{"version": "v1", "created": "Wed, 19 Jun 2013 18:10:18 GMT"}, {"version": "v2", "created": "Thu, 20 Jun 2013 09:29:57 GMT"}, {"version": "v3", "created": "Mon, 1 Jul 2013 12:55:51 GMT"}, {"version": "v4", "created": "Tue, 13 Aug 2013 16:53:33 GMT"}, {"version": "v5", "created": "Wed, 6 Nov 2013 16:38:09 GMT"}], "update_date": "2013-11-07", "authors_parsed": [["Babiak", "Tom\u00e1\u0161", ""], ["Blahoudek", "Franti\u0161ek", ""], ["K\u0159et\u00ednsk\u00fd", "Mojm\u00edr", ""], ["Strej\u010dek", "Jan", ""]]}]