[{"id": "1607.00138", "submitter": "Noemi Passing", "authors": "Tobias Marschall, Noemi E. Passing", "title": "Representing Pattern Matching Algorithms by Polynomial-Size Automata", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DS cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Pattern matching algorithms to find exact occurrences of a pattern\n$S\\in\\Sigma^m$ in a text $T\\in\\Sigma^n$ have been analyzed extensively with\nrespect to asymptotic best, worst, and average case runtime. For more detailed\nanalyses, the number of text character accesses $X^{\\mathcal{A},S}_n$ performed\nby an algorithm $\\mathcal{A}$ when searching a random text of length $n$ for a\nfixed pattern $S$ has been considered. Constructing a state space and\ncorresponding transition rules (e.g. in a Markov chain) that reflect the\nbehavior of a pattern matching algorithm is a key step in existing analyses of\n$X^{\\mathcal{A},S}_n$ in both the asymptotic ($n\\to\\infty$) and the\nnon-asymptotic regime. The size of this state space is hence a crucial\nparameter for such analyses. In this paper, we introduce a general methodology\nto construct corresponding state spaces and demonstrate that it applies to a\nwide range of algorithms, including Boyer-Moore (BM), Boyer-Moore-Horspool\n(BMH), Backward Oracle Matching (BOM), and Backward (Non-Deterministic) DAWG\nMatching (B(N)DM). In all cases except BOM, our method leads to state spaces of\nsize $O(m^3)$ for pattern length $m$, a result that has previously only been\nobtained for BMH. In all other cases, only state spaces with size exponential\nin $m$ had been reported. Our results immediately imply an algorithm to compute\nthe distribution of $X^{\\mathcal{A},S}_n$ for fixed $S$, fixed $n$, and\n$\\mathcal{A}\\in\\{\\text{BM},\\text{BMH},\\text{B(N)DM}\\}$ in polynomial time for a\nvery general class of random text models.\n", "versions": [{"version": "v1", "created": "Fri, 1 Jul 2016 07:44:07 GMT"}], "update_date": "2016-07-04", "authors_parsed": [["Marschall", "Tobias", ""], ["Passing", "Noemi E.", ""]]}, {"id": "1607.00431", "submitter": "Luis Moraes", "authors": "Nicholas Radcliffe, Luis Moraes and Rakesh Verma", "title": "Uniqueness of Normal Forms for Shallow Term Rewrite Systems", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Uniqueness of normal forms ($UN^=$) is an important property of term rewrite\nsystems. $UN^=$ is decidable for ground (i.e., variable-free) systems and\nundecidable in general. Recently it was shown to be decidable for linear,\nshallow systems. We generalize this previous result and show that this property\nis decidable for shallow rewrite systems, in contrast to confluence,\nreachability and other properties, which are all undecidable for flat systems.\nOur result is also optimal in some sense, since we prove that the $UN^=$\nproperty is undecidable for two classes of linear rewrite systems: left-flat\nsystems in which right-hand sides are of depth at most two and right-flat\nsystems in which left-hand sides are of depth at most two.\n", "versions": [{"version": "v1", "created": "Fri, 1 Jul 2016 23:00:39 GMT"}], "update_date": "2016-07-05", "authors_parsed": [["Radcliffe", "Nicholas", ""], ["Moraes", "Luis", ""], ["Verma", "Rakesh", ""]]}, {"id": "1607.00554", "submitter": "Mikhail Volkov", "authors": "Evgenija Bondar and Mikhail Volkov", "title": "Completely Reachable Automata", "comments": "23 pages, 12 figures. This is an expanded version of the conference\n  paper published in C. Campeanu et al. (eds.), Descriptional Complexity of\n  Formal Systems. DCFS 2016 [Lect. Notes Comp. Sci. 9777], Springer-Verlag,\n  Berlin-Heidelberg-N.Y., 2016, 1-17", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We present a few results and several open problems concerning complete\ndeterministic finite automata in which every non-empty subset of the state set\noccurs as the image of the whole state set under the action of a suitable input\nword.\n", "versions": [{"version": "v1", "created": "Sat, 2 Jul 2016 19:50:20 GMT"}], "update_date": "2016-07-05", "authors_parsed": [["Bondar", "Evgenija", ""], ["Volkov", "Mikhail", ""]]}, {"id": "1607.00811", "submitter": "Kumar Sankar Ray", "authors": "Debayan Ganguly, Kumar Sankar Ray", "title": "2-tape 1-way Quantum Finite State Automata", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  1-way quantum finite state automata are reversible in nature, which greatly\nreduces its accepting property. In fact, the set of languages accepted by 1-way\nquantum finite automata is a proper subset of regular languages. We introduce\n2-tape 1-way quantum finite state automaton (2T1QFA(2))which is a modified\nversion of 1-way 2-head quantum finite state automaton(1QFA(2)). In this paper,\nwe replace the single tape of 1-way 2-head quantum finite state automaton with\ntwo tapes. The content of the second tape is determined using a relation\ndefined on input alphabet. The main claims of this paper are as follows: (1)We\nestablish that 2-tape 1-way quantum finite state automaton(2T1QFA(2)) can\naccept all regular languages (2)A language which cannot be accepted by any\nmulti-head deterministic finite automaton can be accepted by 2-tape 1-way\nquantum finite state automaton(2T1QFA(2)) .(3) Exploiting the superposition\nproperty of quantum automata we show that 2-tape 1-way quantum finite state\nautomaton(2T1QFA(2)) can accept the language L=ww.\n", "versions": [{"version": "v1", "created": "Mon, 4 Jul 2016 10:30:01 GMT"}], "update_date": "2016-07-05", "authors_parsed": [["Ganguly", "Debayan", ""], ["Ray", "Kumar Sankar", ""]]}, {"id": "1607.00931", "submitter": "Ian McQuillan", "authors": "Joey Eremondi and Oscar H. Ibarra and Ian McQuillan", "title": "Deletion Operations on Deterministic Families of Automata", "comments": "20 pages, accepted version to Information and Computation", "journal-ref": null, "doi": "10.1016/j.ic.2017.07.009", "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Many different deletion operations are investigated applied to languages\naccepted by one-way and two-way deterministic reversal-bounded multicounter\nmachines, deterministic pushdown automata, and finite automata. Operations\nstudied include the prefix, suffix, infix and outfix operations, as well as\nleft and right quotient with languages from different families. It is often\nexpected that language families defined from deterministic machines will not be\nclosed under deletion operations. However, here, it is shown that one-way\ndeterministic reversal-bounded multicounter languages are closed under right\nquotient with languages from many different language families; even those\ndefined by nondeterministic machines such as the context-free languages. Also,\nit is shown that when starting with one-way deterministic machines with one\ncounter that makes only one reversal, taking the left quotient with languages\nfrom many different language families -- again including those defined by\nnondeterministic machines such as the context-free languages -- yields only\none-way deterministic reversal-bounded multicounter languages (by increasing\nthe number of counters). However, if there are two more reversals on the\ncounter, or a second 1-reversal-bounded counter, taking the left quotient (or\neven just the suffix operation) yields languages that can neither be accepted\nby deterministic reversal-bounded multicounter machines, nor by 2-way\nnondeterministic machines with one reversal-bounded counter.\n", "versions": [{"version": "v1", "created": "Mon, 4 Jul 2016 15:30:04 GMT"}, {"version": "v2", "created": "Wed, 19 Oct 2016 02:21:20 GMT"}], "update_date": "2019-03-08", "authors_parsed": [["Eremondi", "Joey", ""], ["Ibarra", "Oscar H.", ""], ["McQuillan", "Ian", ""]]}, {"id": "1607.01474", "submitter": "Ernst Moritz Hahn", "authors": "Ernst Moritz Hahn, Sven Schewe, Andrea Turrini, Lijun Zhang", "title": "Synthesising Strategy Improvement and Recursive Algorithms for Solving\n  2.5 Player Parity Games", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  2.5 player parity games combine the challenges posed by 2.5 player\nreachability games and the qualitative analysis of parity games. These two\ntypes of problems are best approached with different types of algorithms:\nstrategy improvement algorithms for 2.5 player reachability games and recursive\nalgorithms for the qualitative analysis of parity games. We present a method\nthat - in contrast to existing techniques - tackles both aspects with the best\nsuited approach and works exclusively on the 2.5 player game itself. The\nresulting technique is powerful enough to handle games with several million\nstates.\n", "versions": [{"version": "v1", "created": "Wed, 6 Jul 2016 03:39:05 GMT"}], "update_date": "2016-07-07", "authors_parsed": [["Hahn", "Ernst Moritz", ""], ["Schewe", "Sven", ""], ["Turrini", "Andrea", ""], ["Zhang", "Lijun", ""]]}, {"id": "1607.01828", "submitter": "Holger Petersen", "authors": "Holger Petersen", "title": "A Note on Nested String Replacements", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We investigate the number of nested string replacements required to reduce a\nstring of identical characters to one character.\n", "versions": [{"version": "v1", "created": "Wed, 6 Jul 2016 22:19:27 GMT"}], "update_date": "2016-07-08", "authors_parsed": [["Petersen", "Holger", ""]]}, {"id": "1607.02291", "submitter": "Sukanta Das Dr.", "authors": "Kamalika Bhattacharjee, Nazma Naskar, Souvik Roy, Sukanta Das", "title": "A Survey of Cellular Automata: Types, Dynamics, Non-uniformity and\n  Applications", "comments": "43 pages; Under review in Natural Computing", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL nlin.CG", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Cellular automata (CAs) are dynamical systems which exhibit complex global\nbehavior from simple local interaction and computation. Since the inception of\ncellular automaton (CA) by von Neumann in 1950s, it has attracted the attention\nof several researchers over various backgrounds and fields for modelling\ndifferent physical, natural as well as real-life phenomena. Classically, CAs\nare uniform. However, non-uniformity has also been introduced in update\npattern, lattice structure, neighborhood dependency and local rule. In this\nsurvey, we tour to the various types of CAs introduced till date, the different\ncharacterization tools, the global behaviors of CAs, like universality,\nreversibility, dynamics etc. Special attention is given to non-uniformity in\nCAs and especially to non-uniform elementary CAs, which have been very useful\nin solving several real-life problems.\n", "versions": [{"version": "v1", "created": "Fri, 8 Jul 2016 09:51:34 GMT"}, {"version": "v2", "created": "Wed, 21 Sep 2016 07:19:01 GMT"}, {"version": "v3", "created": "Tue, 8 May 2018 12:31:57 GMT"}], "update_date": "2018-05-09", "authors_parsed": [["Bhattacharjee", "Kamalika", ""], ["Naskar", "Nazma", ""], ["Roy", "Souvik", ""], ["Das", "Sukanta", ""]]}, {"id": "1607.04025", "submitter": "Marek Szyku{\\l}a", "authors": "Andrzej Kisielewicz, Jakub Kowalski, Marek Szyku{\\l}a", "title": "Experiments with Synchronizing Automata", "comments": "CIAA 2016. The final publication available at\n  http://link.springer.com/chapter/10.1007/978-3-319-40946-7_15", "journal-ref": "In Implementation and Application of Automata (CIAA 2016), volume\n  9705 of LNCS, pages 176--188, 2016", "doi": "10.1007/978-3-319-40946-7_15", "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We have improved an algorithm generating synchronizing automata with a large\nlength of the shortest reset words. This has been done by refining some known\nresults concerning bounds on the reset length. Our improvements make possible\nto consider a number of conjectures and open questions concerning synchronizing\nautomata, checking them for automata with a small number of states and\ndiscussing the results. In particular, we have verified the \\v{C}ern\\'y\nconjecture for all binary automata with at most 12 states, and all ternary\nautomata with at most 8 states.\n", "versions": [{"version": "v1", "created": "Thu, 14 Jul 2016 08:11:26 GMT"}], "update_date": "2016-07-15", "authors_parsed": [["Kisielewicz", "Andrzej", ""], ["Kowalski", "Jakub", ""], ["Szyku\u0142a", "Marek", ""]]}, {"id": "1607.04031", "submitter": "Pascal Caron", "authors": "Pascal Caron and Jean-Gabriel Luque and Bruno Patrou", "title": "State complexity of multiple catenation", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We improve some results relative to the state complexity of the multiple\ncatenation described by Gao and Yu. In particular we nearly divide by 2 the\nsize of the alphabet needed for witnesses. We also give some refinements to the\nalgebraic expression of the state complexity, which is especially complex with\nthis operation. We obtain these results by using peculiar DFAs defined by\nBrzozowski.\n", "versions": [{"version": "v1", "created": "Thu, 14 Jul 2016 08:37:56 GMT"}], "update_date": "2016-07-15", "authors_parsed": [["Caron", "Pascal", ""], ["Luque", "Jean-Gabriel", ""], ["Patrou", "Bruno", ""]]}, {"id": "1607.04728", "submitter": "Luca Zamboni", "authors": "Julien Cassaigne, Anna E. Frid, Svetlana Puzynina, Luca Q. Zamboni", "title": "Cost and dimension of words of zero topological entropy", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "math.CO cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Let $A^*$ denote the free monoid generated by a finite nonempty set $A.$ In\nthis paper we introduce a new measure of complexity of languages $L\\subseteq\nA^*$ defined in terms of the semigroup structure on $A^*.$ For each $L\\subseteq\nA^*,$ we define its {\\it cost} $c(L)$ as the infimum of all real numbers\n$\\alpha$ for which there exist a language $S\\subseteq A^*$ with\n$p_S(n)=O(n^\\alpha)$ and a positive integer $k$ with $L\\subseteq S^k.$ We also\ndefine the {\\it cost dimension} $d_c(L)$ as the infimum of the set of all\npositive integers $k$ such that $L\\subseteq S^k$ for some language $S$ with\n$p_S(n)=O(n^{c(L)}).$ We are primarily interested in languages $L$ given by the\nset of factors of an infinite word $x=x_0x_1x_2\\cdots \\in A^\\omega$ of zero\ntopological entropy, in which case $c(L)<+\\infty.$ We establish the following\ncharacterisation of words of linear factor complexity: Let $x\\in A^\\omega$ and\n$L=$Fac$(x)$ be the set of factors of $x.$ Then $p_x(n)=\\Theta(n)$ if and only\n$c(L)=0$ and $d_c(L)=2.$ In other words, $p_x(n)=O(n)$ if and only if\nFac$(x)\\subseteq S^2$ for some language $S\\subseteq A^+$ of bounded complexity\n(meaning $\\limsup p_S(n)<+\\infty).$ In general the cost of a language $L$\nreflects deeply the underlying combinatorial structure induced by the semigroup\nstructure on $A^*.$ For example, in contrast to the above characterisation of\nlanguages generated by words of sub-linear complexity, there exist non\nfactorial languages $L$ of complexity $p_L(n)=O(\\log n)$ (and hence of cost\nequal to $0)$ and of cost dimension $+\\infty.$ In this paper we investigate the\ncost and cost dimension of languages defined by infinite words of zero\ntopological entropy.\n", "versions": [{"version": "v1", "created": "Sat, 16 Jul 2016 11:42:29 GMT"}], "update_date": "2016-07-19", "authors_parsed": [["Cassaigne", "Julien", ""], ["Frid", "Anna E.", ""], ["Puzynina", "Svetlana", ""], ["Zamboni", "Luca Q.", ""]]}, {"id": "1607.04910", "submitter": "Shankara Narayanan Krishna", "authors": "Vrunda Dave, Shankara Narayanan Krishna, Ashutosh Trivedi", "title": "FO-definable transformations of infinite strings", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The theory of regular and aperiodic transformations of finite strings has\nrecently received a lot of interest. These classes can be equivalently defined\nusing logic (Monadic second-order logic and first-order logic), two-way\nmachines (regular two-way and aperiodic two-way transducers), and one-way\nregister machines (regular streaming string and aperiodic streaming string\ntransducers). These classes are known to be closed under operations such as\nsequential composition and regular (star-free) choice; and problems such as\nfunctional equivalence and type checking, are decidable for these classes. On\nthe other hand, for infinite strings these results are only known for\n$\\omega$-regular transformations: Alur, Filiot, and Trivedi studied\ntransformations of infinite strings and introduced an extension of streaming\nstring transducers over $\\omega$-strings and showed that they capture monadic\nsecond-order definable transformations for infinite strings. In this paper we\nextend their work to recover connection for infinite strings among first-order\nlogic definable transformations, aperiodic two-way transducers, and aperiodic\nstreaming string transducers.\n", "versions": [{"version": "v1", "created": "Sun, 17 Jul 2016 19:39:46 GMT"}], "update_date": "2016-07-20", "authors_parsed": [["Dave", "Vrunda", ""], ["Krishna", "Shankara Narayanan", ""], ["Trivedi", "Ashutosh", ""]]}, {"id": "1607.06106", "submitter": "Bj{\\o}rn Kjos-Hanssen", "authors": "Bj{\\o}rn Kjos-Hanssen", "title": "On the complexity of automatic complexity", "comments": null, "journal-ref": "Theory of Computing Systems 61 (2017), no. 4, 1427--1439", "doi": null, "report-no": null, "categories": "cs.FL math.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Generalizing the notion of automatic complexity of individual strings due to\nShallit and Wang, we define the automatic complexity $A(E)$ of an equivalence\nrelation $E$ on a finite set $S$ of strings.\n  We prove that the problem of determining whether $A(E)$ equals the number\n$|E|$ of equivalence classes of $E$ is $\\mathsf{NP}$-complete. The problem of\ndetermining whether $A(E) = |E| + k$ for a fixed $k\\ge 1$ is complete for the\nsecond level of the Boolean hierarchy for $\\mathsf{NP}$, i.e.,\n$\\mathsf{BH}_2$-complete.\n  Let $L$ be the language consisting of all strings of maximal nondeterministic\nautomatic complexity. We characterize the complexity of infinite subsets of $L$\nby showing that they can be co-context-free but not context-free, i.e., $L$ is\n$\\mathsf{CFL}$-immune, but not $\\mathsf{coCFL}$-immune.\n  We show that for each $\\epsilon>0$, $L_\\epsilon\\not\\in\\mathsf{coCFL}$, where\n$L_\\epsilon$ is the set of all strings whose deterministic automatic complexity\n$A(x)$ satisfies $A(x)\\ge |x|^{1/2-\\epsilon}$.\n", "versions": [{"version": "v1", "created": "Wed, 20 Jul 2016 20:08:34 GMT"}, {"version": "v2", "created": "Fri, 31 Jan 2020 18:34:35 GMT"}], "update_date": "2020-02-03", "authors_parsed": [["Kjos-Hanssen", "Bj\u00f8rn", ""]]}, {"id": "1607.06268", "submitter": "Matteo Sammartino", "authors": "Joshua Moerman and Matteo Sammartino and Alexandra Silva and Bartek\n  Klin and Micha{\\l} Szynwelski", "title": "Learning Nominal Automata", "comments": null, "journal-ref": null, "doi": "10.1145/3009837.3009879", "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We present an Angluin-style algorithm to learn nominal automata, which are\nacceptors of languages over infinite (structured) alphabets. The abstract\napproach we take allows us to seamlessly extend known variations of the\nalgorithm to this new setting. In particular we can learn a subclass of nominal\nnon-deterministic automata. An implementation using a recently developed\nHaskell library for nominal computation is provided for preliminary\nexperiments.\n", "versions": [{"version": "v1", "created": "Thu, 21 Jul 2016 11:16:47 GMT"}, {"version": "v2", "created": "Tue, 8 Nov 2016 00:54:36 GMT"}, {"version": "v3", "created": "Sat, 15 Dec 2018 09:03:56 GMT"}], "update_date": "2018-12-18", "authors_parsed": [["Moerman", "Joshua", ""], ["Sammartino", "Matteo", ""], ["Silva", "Alexandra", ""], ["Klin", "Bartek", ""], ["Szynwelski", "Micha\u0142", ""]]}, {"id": "1607.07797", "submitter": "Rafael Rodrigues da Silva", "authors": "Rafael Rodrigues da Silva, Bo Wu, Jin Dai and Hai Lin", "title": "Combined Top-Down and Bottom-Up Approaches to Performance-guaranteed\n  Integrated Task and Motion Planning of Cooperative Multi-agent Systems", "comments": "Submitted to Automatica", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.RO cs.FL cs.SY", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We propose a hierarchical design framework to automatically synthesize\ncoordination schemes and control policies for cooperative multi-agent systems\nto fulfill formal performance requirements, by associating a bottom-up reactive\nmotion controller with a top-down mission plan. On one hand, starting from a\nglobal mission that is specified as a regular language over all the agents'\nmission capabilities, a mission planning layer sits on the top of the proposed\nframework, decomposing the global mission into local tasks that are in\nconsistency with each agent's individual capabilities, and compositionally\njustifying whether the achievement of local tasks implies the satisfaction of\nthe global mission via an assume-guarantee paradigm. On the other hand,\nbottom-up motion plans associated with each agent are synthesized corresponding\nto the obtained local missions by composing basic motion primitives, which are\nverified safe by differential dynamic logic (d$\\mathcal{L}$), through a\nSatisfiability Modulo Theories (SMT) solver that searches feasible solutions in\nface of constraints imposed by local task requirements and the environment\ndescription. It is shown that the proposed framework can handle dynamical\nenvironments as the motion primitives possess reactive features, making the\nmotion plans adaptive to local environmental changes. Furthermore, on-line\nmission reconfiguration can be triggered by the motion planning layer once no\nfeasible solutions can be found through the SMT solver. The effectiveness of\nthe overall design framework is validated by an automated warehouse case study.\n", "versions": [{"version": "v1", "created": "Sat, 7 May 2016 18:23:07 GMT"}, {"version": "v2", "created": "Thu, 15 Dec 2016 16:40:30 GMT"}], "update_date": "2016-12-16", "authors_parsed": [["da Silva", "Rafael Rodrigues", ""], ["Wu", "Bo", ""], ["Dai", "Jin", ""], ["Lin", "Hai", ""]]}, {"id": "1607.08226", "submitter": "Bj{\\o}rn Kjos-Hanssen", "authors": "Bj{\\o}rn Kjos-Hanssen", "title": "Automatic complexity of shift register sequences", "comments": "Preliminary version: \"Shift registers fool finite automata\", Lecture\n  Notes in Computer Science 10388 (2017), 170-181, Workshop on Logic, Language,\n  Information and Computation (WoLLIC) 2017", "journal-ref": "Discrete Mathematics 341 (2018), no. 9, 2409--2417", "doi": "10.1016/j.disc.2018.05.015", "report-no": null, "categories": "cs.FL math.CO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Let $x$ be an $m$-sequence, a maximal length sequence produced by a linear\nfeedback shift register. We show that $x$ has maximal subword complexity\nfunction in the sense of Allouche and Shallit. We show that this implies that\nthe nondeterministic automatic complexity $A_N(x)$ is close to maximal:\n$n/2-A_N(x)=O(\\log^2n)$, where $n$ is the length of $x$. In contrast, Hyde has\nshown $A_N(y)\\le n/2+1$ for all sequences $y$ of length $n$.\n", "versions": [{"version": "v1", "created": "Wed, 27 Jul 2016 19:44:49 GMT"}, {"version": "v2", "created": "Thu, 30 Jan 2020 00:11:13 GMT"}], "update_date": "2020-01-31", "authors_parsed": [["Kjos-Hanssen", "Bj\u00f8rn", ""]]}, {"id": "1607.08363", "submitter": "J\\\"urgen Koslowski", "authors": "Davide Basile, Pierpaolo Degano, Gian-Luigi Ferrari (Universit\\`a di\n  Pisa, Italy)", "title": "Automata for Specifying and Orchestrating Service Contracts", "comments": null, "journal-ref": "Logical Methods in Computer Science, Volume 12, Issue 4 (April 27,\n  2017) lmcs:2618", "doi": "10.2168/LMCS-12(4:6)2016", "report-no": null, "categories": "cs.LO cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  An approach to the formal description of service contracts is presented in\nterms of automata. We focus on the basic property of guaranteeing that in the\nmulti-party composition of principals each of them gets his requests satisfied,\nso that the overall composition reaches its goal. Depending on whether requests\nare satisfied synchronously or asynchronously, we construct an orchestrator\nthat at static time either yields composed services enjoying the required\nproperties or detects the principals responsible for possible violations. To do\nthat in the asynchronous case we resort to Linear Programming techniques. We\nalso relate our automata with two logically based methods for specifying\ncontracts.\n", "versions": [{"version": "v1", "created": "Thu, 28 Jul 2016 08:56:12 GMT"}, {"version": "v2", "created": "Sun, 23 Oct 2016 17:45:41 GMT"}, {"version": "v3", "created": "Fri, 23 Dec 2016 09:25:45 GMT"}, {"version": "v4", "created": "Tue, 27 Dec 2016 20:48:29 GMT"}], "update_date": "2019-03-14", "authors_parsed": [["Basile", "Davide", "", "Universit\u00e0 di\n  Pisa, Italy"], ["Degano", "Pierpaolo", "", "Universit\u00e0 di\n  Pisa, Italy"], ["Ferrari", "Gian-Luigi", "", "Universit\u00e0 di\n  Pisa, Italy"]]}, {"id": "1607.08480", "submitter": "Ashutosh Trivedi", "authors": "Shibashis Guha and Marcin Jurdzinski and Krishna S. and Ashutosh\n  Trivedi", "title": "Mean-Payoff Games on Timed Automata", "comments": "29 pages, unpublished manuscript, submitted to FSTTCS", "journal-ref": null, "doi": "10.4230/LIPIcs.FSTTCS.2016.44", "report-no": null, "categories": "cs.GT cs.FL cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Mean-payoff games on timed automata are played on the infinite weighted graph\nof configurations of priced timed automata between two players, Player Min and\nPlayer Max, by moving a token along the states of the graph to form an infinite\nrun. The goal of Player Min is to minimize the limit average weight of the run,\nwhile the goal of the Player Max is the opposite. Brenguier, Cassez, and Raskin\nrecently studied a variation of these games and showed that mean-payoff games\nare undecidable for timed automata with five or more clocks. We refine this\nresult by proving the undecidability of mean-payoff games with three clocks. On\na positive side, we show the decidability of mean-payoff games on one-clock\ntimed automata with binary price-rates. A key contribution of this paper is the\napplication of dynamic programming based proof techniques applied in the\ncontext of average reward optimization on an uncountable state and action\nspace.\n", "versions": [{"version": "v1", "created": "Thu, 28 Jul 2016 14:36:30 GMT"}], "update_date": "2020-01-16", "authors_parsed": [["Guha", "Shibashis", ""], ["Jurdzinski", "Marcin", ""], ["S.", "Krishna", ""], ["Trivedi", "Ashutosh", ""]]}]