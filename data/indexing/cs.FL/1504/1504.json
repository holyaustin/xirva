[{"id": "1504.00169", "submitter": "Maximilien Gadouleau", "authors": "Florian Bridoux and Alonso Castillo-Ramirez and Maximilien Gadouleau", "title": "Complete Simulation of Automata Networks", "comments": "Vastly updated version of the paper previously known as \"Universal\n  simulation of automata networks.\" Florian Bridoux has joined the paper,\n  thanks to his significant contribution", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL cs.CC cs.DM math.GR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Consider a finite set $A$ and an integer $n \\geq 1$. This paper studies the\nconcept of complete simulation in the context of semigroups of transformations\nof $A^n$, also known as finite state-homogeneous automata networks. For $m \\geq\nn$, a transformation of $A^m$ is \\emph{$n$-complete of size $m$} if it may\nsimulate every transformation of $A^n$ by updating one coordinate (or register)\nat a time. Using tools from memoryless computation, it is established that\nthere is no $n$-complete transformation of size $n$, but there is such a\ntransformation of size $n+1$. By studying the the time of simulation of various\n$n$-complete transformations, it is conjectured that the maximal time of\nsimulation of any $n$-complete transformation is at least $2n$. A\ntransformation of $A^m$ is \\emph{sequentially $n$-complete of size $m$} if it\nmay sequentially simulate every finite sequence of transformations of $A^n$; in\nthis case, minimal examples and bounds for the size and time of simulation are\ndetermined. It is also shown that there is no $n$-complete transformation that\nupdates all the registers in parallel, but that there exists a sequentally\n$n$-complete transformation that updates all but one register in parallel. This\nillustrates the strengths and weaknesses of parallel models of computation,\nsuch as cellular automata.\n", "versions": [{"version": "v1", "created": "Wed, 1 Apr 2015 10:10:05 GMT"}, {"version": "v2", "created": "Tue, 28 Apr 2015 12:53:53 GMT"}, {"version": "v3", "created": "Fri, 9 Mar 2018 18:55:20 GMT"}], "update_date": "2018-03-12", "authors_parsed": [["Bridoux", "Florian", ""], ["Castillo-Ramirez", "Alonso", ""], ["Gadouleau", "Maximilien", ""]]}, {"id": "1504.01708", "submitter": "Guillermo P\\'erez", "authors": "Paul Hunter, Guillermo A. P\\'erez, Jean-Fran\\c{c}ois Raskin", "title": "Reactive Synthesis Without Regret", "comments": "Removed some text that was redundant", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.GT cs.FL cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Two-player zero-sum games of infinite duration and their quantitative\nversions are used in verification to model the interaction between a controller\n(Eve) and its environment (Adam). The question usually addressed is that of the\nexistence (and computability) of a strategy for Eve that can maximize her\npayoff against any strategy of Adam. In this work, we are interested in\nstrategies of Eve that minimize her regret, i.e. strategies that minimize the\ndifference between her actual payoff and the payoff she could have achieved if\nshe had known the strategy of Adam in advance. We give algorithms to compute\nthe strategies of Eve that ensure minimal regret against an adversary whose\nchoice of strategy is (i) unrestricted, (ii) limited to positional strategies,\nor (iii) limited to word strategies. We also establish relations between the\nlatter version and other problems studied in the literature.\n", "versions": [{"version": "v1", "created": "Tue, 7 Apr 2015 19:14:29 GMT"}, {"version": "v2", "created": "Mon, 4 May 2015 08:54:46 GMT"}, {"version": "v3", "created": "Tue, 15 Nov 2016 19:06:26 GMT"}, {"version": "v4", "created": "Sun, 8 Oct 2017 15:27:18 GMT"}, {"version": "v5", "created": "Mon, 19 Feb 2018 16:30:21 GMT"}], "update_date": "2018-02-20", "authors_parsed": [["Hunter", "Paul", ""], ["P\u00e9rez", "Guillermo A.", ""], ["Raskin", "Jean-Fran\u00e7ois", ""]]}, {"id": "1504.01709", "submitter": "Filip Mazowiecki sheriff", "authors": "Filip Mazowiecki, Cristian Riveros", "title": "Copyless Cost-Register Automata: Structure, Expressiveness, and Closure\n  Properties", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Cost register automata (CRA) and its subclass, copyless CRA, were recently\nproposed by Alur et al. as a new model for computing functions over strings. We\nstudy some structural properties, expressiveness, and closure properties of\ncopyless CRA. We show that copyless CRA are strictly less expressive than\nweighted automata and are not closed under reverse operation. To find a better\nclass we impose restrictions on copyless CRA, which ends successfully with a\nnew robust computational model that is closed under reverse and other\nextensions.\n", "versions": [{"version": "v1", "created": "Tue, 7 Apr 2015 19:15:30 GMT"}, {"version": "v2", "created": "Fri, 27 Apr 2018 13:08:49 GMT"}], "update_date": "2018-04-30", "authors_parsed": [["Mazowiecki", "Filip", ""], ["Riveros", "Cristian", ""]]}, {"id": "1504.01927", "submitter": "EPTCS", "authors": "Ugo Dal Lago, Russ Harmer", "title": "Proceedings Tenth International Workshop on Developments in\n  Computational Models", "comments": null, "journal-ref": "EPTCS 179, 2015", "doi": "10.4204/EPTCS.179", "report-no": null, "categories": "cs.LO cs.FL cs.PL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This volume contains the papers presented at the Tenth International Workshop\non Developments in Computational Models (DCM) held in Vienna, Austria on 13th\nJuly 2014, as part of the Vienna Summer of Logic.\n  Several new models of computation have emerged in the last years, and many\ndevelopments of traditional computational models have been proposed with the\naim of taking into account the new demands of computer systems users and the\nnew capabilities of computation engines. A new computational model, or a new\nfeature in a traditional one, usually is reflected in a new family of\nprogramming languages, and new paradigms of software development.\n  The aim of this workshop is to bring together researchers who are currently\ndeveloping new computational models or new features for traditional\ncomputational models, in order to foster their interaction, to provide a forum\nfor presenting new ideas and work in progress, and to enable newcomers to learn\nabout current activities in this area. Topics of interest include all abstract\nmodels of computation and their applications to the development of programming\nlanguages and systems.\n", "versions": [{"version": "v1", "created": "Wed, 8 Apr 2015 12:03:59 GMT"}], "update_date": "2015-04-09", "authors_parsed": [["Lago", "Ugo Dal", ""], ["Harmer", "Russ", ""]]}, {"id": "1504.02222", "submitter": "\\v{S}t\\v{e}p\\'an Holub", "authors": "\\v{S}t\\v{e}p\\'an Holub and Mike M\\\"uller", "title": "Fully bordered words", "comments": "A significantly expanded version", "journal-ref": "Theoretical Computer Science 684 (2017) 53-58", "doi": "10.1016/j.tcs.2016.10.020", "report-no": null, "categories": "cs.FL math.CO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We characterize binary words that have exactly two unbordered conjugates and\nshow that they can be expressed as a product of two palindromes.\n", "versions": [{"version": "v1", "created": "Thu, 9 Apr 2015 08:26:51 GMT"}, {"version": "v2", "created": "Sat, 4 Jun 2016 08:03:08 GMT"}], "update_date": "2019-12-18", "authors_parsed": [["Holub", "\u0160t\u011bp\u00e1n", ""], ["M\u00fcller", "Mike", ""]]}, {"id": "1504.02444", "submitter": "EPTCS", "authors": "Natalia Kushik (Tomsk State University), Nina Yevtushenko (Tomsk State\n  University)", "title": "Adaptive Homing is in P", "comments": "In Proceedings MBT 2015, arXiv:1504.01928", "journal-ref": "EPTCS 180, 2015, pp. 73-78", "doi": "10.4204/EPTCS.180.5", "report-no": null, "categories": "cs.FL cs.CC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Homing preset and adaptive experiments with Finite State Machines (FSMs) are\nwidely used when a non-initialized discrete event system is given for testing\nand thus, has to be set to the known state at the first step. The length of a\nshortest homing sequence is known to be exponential with respect to the number\nof states for a complete observable nondeterministic FSM while the problem of\nchecking the existence of such sequence (Homing problem) is PSPACE-complete. In\norder to decrease the complexity of related problems, one can consider adaptive\nexperiments when a next input to be applied to a system under experiment\ndepends on the output responses to the previous inputs. In this paper, we study\nthe problem of the existence of an adaptive homing experiment for complete\nobservable nondeterministic machines. We show that if such experiment exists\nthen it can be constructed with the use of a polynomial-time algorithm with\nrespect to the number of FSM states.\n", "versions": [{"version": "v1", "created": "Thu, 9 Apr 2015 19:30:58 GMT"}], "update_date": "2015-04-10", "authors_parsed": [["Kushik", "Natalia", "", "Tomsk State University"], ["Yevtushenko", "Nina", "", "Tomsk State\n  University"]]}, {"id": "1504.02651", "submitter": "Lorenzo Clemente Lorenzo Clemente", "authors": "Lorenzo Clemente, S{\\l}awomir Lasota", "title": "Reachability analysis of first-order definable pushdown systems", "comments": "to appear in CSL'15", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL cs.LO", "license": "http://creativecommons.org/licenses/by/4.0/", "abstract": "  We study pushdown systems where control states, stack alphabet, and\ntransition relation, instead of being finite, are first-order definable in a\nfixed countably-infinite structure. We show that the reachability analysis can\nbe addressed with the well-known saturation technique for the wide class of\noligomorphic structures. Moreover, for the more restrictive homogeneous\nstructures, we are able to give concrete complexity upper bounds. We show ample\napplicability of our technique by presenting several concrete examples of\nhomogeneous structures, subsuming, with optimal complexity, known results from\nthe literature. We show that infinitely many such examples of homogeneous\nstructures can be obtained with the classical wreath product construction.\n", "versions": [{"version": "v1", "created": "Fri, 10 Apr 2015 12:14:28 GMT"}, {"version": "v2", "created": "Fri, 17 Jul 2015 09:10:56 GMT"}], "update_date": "2015-07-20", "authors_parsed": [["Clemente", "Lorenzo", ""], ["Lasota", "S\u0142awomir", ""]]}, {"id": "1504.02692", "submitter": "Henning Urbat", "authors": "Liang-Ting Chen and Henning Urbat", "title": "A Fibrational Approach to Automata Theory", "comments": null, "journal-ref": "CALCO (2015) 50-65", "doi": "10.4230/LIPIcs.CALCO.2015.50", "report-no": null, "categories": "cs.FL math.CT", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  For predual categories C and D we establish isomorphisms between opfibrations\nrepresenting local varieties of languages in C, local pseudovarieties of\nD-monoids, and finitely generated profinite D-monoids. The global sections of\nthese opfibrations are shown to correspond to varieties of languages in C,\npseudovarieties of D-monoids, and profinite equational theories of D-monoids,\nrespectively. As an application, we obtain a new proof of Eilenberg's variety\ntheorem along with several related results, covering varieties of languages and\ntheir coalgebraic modifications, Straubing's C-varieties, fully invariant local\nvarieties, etc., within a single framework.\n", "versions": [{"version": "v1", "created": "Fri, 10 Apr 2015 14:39:17 GMT"}], "update_date": "2015-11-06", "authors_parsed": [["Chen", "Liang-Ting", ""], ["Urbat", "Henning", ""]]}, {"id": "1504.02694", "submitter": "Henning Urbat", "authors": "Jiri Adamek, Stefan Milius and Henning Urbat", "title": "Syntactic Monoids in a Category", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO cs.FL math.CT", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The syntactic monoid of a language is generalized to the level of a symmetric\nmonoidal closed category D. This allows for a uniform treatment of several\nnotions of syntactic algebras known in the literature, including the syntactic\nmonoids of Rabin and Scott (D = sets), the syntactic semirings of Polak (D =\nsemilattices), and the syntactic associative algebras of Reutenauer (D = vector\nspaces). Assuming that D is an entropic variety of algebras, we prove that the\nsyntactic D-monoid of a language L can be constructed as a quotient of a free\nD-monoid modulo the syntactic congruence of L, and that it is isomorphic to the\ntransition D-monoid of the minimal automaton for L in D. Furthermore, in case\nthe variety D is locally finite, we characterize the regular languages as\nprecisely the languages with finite syntactic D-monoids.\n", "versions": [{"version": "v1", "created": "Fri, 10 Apr 2015 14:44:26 GMT"}, {"version": "v2", "created": "Tue, 16 Jun 2015 12:49:26 GMT"}], "update_date": "2015-06-17", "authors_parsed": [["Adamek", "Jiri", ""], ["Milius", "Stefan", ""], ["Urbat", "Henning", ""]]}, {"id": "1504.02716", "submitter": "Vladimir Zamdzhiev", "authors": "Aleks Kissinger, Vladimir Zamdzhiev", "title": "Equational reasoning with context-free families of string diagrams", "comments": "International Conference on Graph Transformation, ICGT 2015. The\n  final publication is available at Springer via\n  http://dx.doi.org/10.1007/978-3-319-21145-9_9", "journal-ref": null, "doi": "10.1007/978-3-319-21145-9_9", "report-no": null, "categories": "cs.LO cs.FL math.CT", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  String diagrams provide an intuitive language for expressing networks of\ninteracting processes graphically. A discrete representation of string\ndiagrams, called string graphs, allows for mechanised equational reasoning by\ndouble-pushout rewriting. However, one often wishes to express not just single\nequations, but entire families of equations between diagrams of arbitrary size.\nTo do this we define a class of context-free grammars, called B-ESG grammars,\nthat are suitable for defining entire families of string graphs, and crucially,\nof string graph rewrite rules. We show that the language-membership and\nmatch-enumeration problems are decidable for these grammars, and hence that\nthere is an algorithm for rewriting string graphs according to B-ESG rewrite\npatterns. We also show that it is possible to reason at the level of grammars\nby providing a simple method for transforming a grammar by string graph\nrewriting, and showing admissibility of the induced B-ESG rewrite pattern.\n", "versions": [{"version": "v1", "created": "Fri, 10 Apr 2015 15:36:13 GMT"}, {"version": "v2", "created": "Tue, 13 Oct 2015 14:35:06 GMT"}], "update_date": "2015-10-14", "authors_parsed": [["Kissinger", "Aleks", ""], ["Zamdzhiev", "Vladimir", ""]]}, {"id": "1504.02947", "submitter": "Guillermo P\\'erez", "authors": "Paul Hunter, Guillermo A. P\\'erez, Jean-Fran\\c{c}ois Raskin", "title": "Looking at Mean-Payoff through Foggy Windows", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO cs.FL cs.GT", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Mean-payoff games (MPGs) are infinite duration two-player zero-sum games\nplayed on weighted graphs. Under the hypothesis of perfect information, they\nadmit memoryless optimal strategies for both players and can be solved in\nNP-intersect-coNP. MPGs are suitable quantitative models for open reactive\nsystems. However, in this context the assumption of perfect information is not\nalways realistic. For the partial-observation case, the problem that asks if\nthe first player has an observation-based winning strategy that enforces a\ngiven threshold on the mean-payoff, is undecidable. In this paper, we study the\nwindow mean-payoff objectives that were introduced recently as an alternative\nto the classical mean-payoff objectives. We show that, in sharp contrast to the\nclassical mean-payoff objectives, some of the window mean-payoff objectives are\ndecidable in games with partial-observation.\n", "versions": [{"version": "v1", "created": "Sun, 12 Apr 2015 09:25:13 GMT"}], "update_date": "2015-04-14", "authors_parsed": [["Hunter", "Paul", ""], ["P\u00e9rez", "Guillermo A.", ""], ["Raskin", "Jean-Fran\u00e7ois", ""]]}, {"id": "1504.03864", "submitter": "Isma\\\"el Jecker", "authors": "Isma\\\"el Jecker and Emmanuel Filiot", "title": "Multi-Sequential Word Relations", "comments": "23 pages", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Rational relations are binary relations of finite words that are realised by\nnon-deterministic finite state transducers (NFT). A particular kind of rational\nrelations is the sequential functions. Sequential functions are the functions\nthat can be realised by input-deterministic transducers. Some rational\nfunctions are not sequential. However, based on a property on transducers\ncalled the twinning property, it is decidable in PTime whether a rational\nfunction given by an NFT is sequential. In this paper, we investigate the\ngeneralisation of this result to multi-sequential relations, i.e. relations\nthat are equal to a finite union of sequential functions. We show that given an\nNFT, it is decidable in PTime whether the relation it defines is\nmulti-sequential, based on a property called the weak twinning property. If the\nweak twinning property is satisfied, we give a procedure that effectively\nconstructs a finite set of input-deterministic transducers whose union defines\nthe relation. This procedure generalises to arbitrary NFT the determinisation\nprocedure of functional NFT.\n", "versions": [{"version": "v1", "created": "Wed, 15 Apr 2015 11:32:25 GMT"}], "update_date": "2015-04-16", "authors_parsed": [["Jecker", "Isma\u00ebl", ""], ["Filiot", "Emmanuel", ""]]}, {"id": "1504.03880", "submitter": "Martin Zimmermann", "authors": "Peter Faymonville and Martin Zimmermann", "title": "Parametric Linear Dynamic Logic (full version)", "comments": "Accepted for publication at Information and Computation. A\n  preliminary version of this work appeared in GandALF 2014 (arXiv:1408.5957)", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We introduce Parametric Linear Dynamic Logic (PLDL), which extends Linear\nDynamic Logic (LDL) by temporal operators equipped with parameters that bound\ntheir scope. LDL itself was proposed as an extension of Linear Temporal Logic\n(LTL) that is able to express all omega-regular specifications while still\nmaintaining many of LTL's desirable properties like intuitive syntax and\nsemantics and a translation into non-deterministic B\\\"uchi automata of\nexponential size. But LDL lacks capabilities to express timing constraints. By\nadding parameterized operators to LDL, we obtain a logic that is able to\nexpress all omega-regular properties and that subsumes parameterized extensions\nof LTL like Parametric LTL and PROMPT-LTL.\n  Our main technical contribution is a translation of PLDL formulas into\nnon-deterministic B\\\"uchi automata of exponential size via alternating\nautomata. This yields polynomial space algorithms for model checking and\nassume-guarantee model checking and a realizability algorithm with\ndoubly-exponential running time. All three problems are also shown to be\ncomplete for these complexity classes. Moreover, we give tight upper and lower\nbounds on optimal parameter values for model checking and realizability. Using\nthese bounds, we present a polynomial space procedure for model checking\noptimization and an algorithm with triply-exponential running time for\nrealizability optimization. Our results show that PLDL model checking and\nrealizability are no harder than their respective (parametric) LTL\ncounterparts.\n", "versions": [{"version": "v1", "created": "Wed, 15 Apr 2015 12:19:52 GMT"}, {"version": "v2", "created": "Mon, 7 Dec 2015 14:57:53 GMT"}], "update_date": "2015-12-08", "authors_parsed": [["Faymonville", "Peter", ""], ["Zimmermann", "Martin", ""]]}, {"id": "1504.04136", "submitter": "Nathana", "authors": "Nathana\\\"el Fijalkow (LIAFA, Universit\\'e Paris 7 - Denis Diderot and\n  University of Warsaw), Hugo Gimbert (LaBRI, CNRS, Bordeaux), Edon Kelmendi\n  (LaBRI, Bordeaux), Youssouf Oualhadj (LIF, Marseille)", "title": "Deciding the value 1 problem for probabilistic leaktight automata", "comments": null, "journal-ref": "Logical Methods in Computer Science, Volume 11, Issue 2 (June 23,\n  2015) lmcs:1572", "doi": "10.2168/LMCS-11(2:12)2015", "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The value 1 problem is a decision problem for probabilistic automata over\nfinite words: given a probabilistic automaton, are there words accepted with\nprobability arbitrarily close to 1? This problem was proved undecidable\nrecently; to overcome this, several classes of probabilistic automata of\ndifferent nature were proposed, for which the value 1 problem has been shown\ndecidable. In this paper, we introduce yet another class of probabilistic\nautomata, called leaktight automata, which strictly subsumes all classes of\nprobabilistic automata whose value 1 problem is known to be decidable. We prove\nthat for leaktight automata, the value 1 problem is decidable (in fact,\nPSPACE-complete) by constructing a saturation algorithm based on the\ncomputation of a monoid abstracting the behaviours of the automaton. We rely on\nalgebraic techniques developed by Simon to prove that this abstraction is\ncomplete. Furthermore, we adapt this saturation algorithm to decide whether an\nautomaton is leaktight. Finally, we show a reduction allowing to extend our\ndecidability results from finite words to infinite ones, implying that the\nvalue 1 problem for probabilistic leaktight parity automata is decidable.\n", "versions": [{"version": "v1", "created": "Thu, 16 Apr 2015 08:28:54 GMT"}, {"version": "v2", "created": "Fri, 17 Apr 2015 16:37:19 GMT"}, {"version": "v3", "created": "Mon, 22 Jun 2015 00:10:36 GMT"}], "update_date": "2017-01-11", "authors_parsed": [["Fijalkow", "Nathana\u00ebl", "", "LIAFA, Universit\u00e9 Paris 7 - Denis Diderot and\n  University of Warsaw"], ["Gimbert", "Hugo", "", "LaBRI, CNRS, Bordeaux"], ["Kelmendi", "Edon", "", "LaBRI, Bordeaux"], ["Oualhadj", "Youssouf", "", "LIF, Marseille"]]}, {"id": "1504.04541", "submitter": "Mathieu Sassolas", "authors": "B\\'eatrice B\\'erard and Serge Haddad and Claudine Picaronny and Mohab\n  Safey El Din and Mathieu Sassolas", "title": "Polynomial Interrupt Timed Automata", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Interrupt Timed Automata (ITA) form a subclass of stopwatch automata where\nreachability and some variants of timed model checking are decidable even in\npresence of parameters. They are well suited to model and analyze real-time\noperating systems. Here we extend ITA with polynomial guards and updates,\nleading to the class of polynomial ITA (PolITA). We prove the decidability of\nthe reachability and model checking of a timed version of CTL by an adaptation\nof the cylindrical decomposition method for the first-order theory of reals.\nCompared to previous approaches, our procedure handles parameters and clocks in\na unified way. Moreover, we show that PolITA are incomparable with stopwatch\nautomata. Finally additional features are introduced while preserving\ndecidability.\n", "versions": [{"version": "v1", "created": "Fri, 17 Apr 2015 15:34:37 GMT"}], "update_date": "2015-04-20", "authors_parsed": [["B\u00e9rard", "B\u00e9atrice", ""], ["Haddad", "Serge", ""], ["Picaronny", "Claudine", ""], ["Din", "Mohab Safey El", ""], ["Sassolas", "Mathieu", ""]]}, {"id": "1504.04715", "submitter": "Nelma Moreira", "authors": "Stavros Konstantinidis, Casey Meijer, Nelma Moreira, Rog\\'erio Reis", "title": "Symbolic Manipulation of Code Properties", "comments": "Extended version of the CIAA 2016 paper, \"Implementation of Code\n  Properties via Transducers\", LNCS 9705, pp. 189-201, Springer, 2016", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The FAdo system is a symbolic manipulator of formal languages objects,\nimplemented in Python. In this work, we extend its capabilities by implementing\nmethods to manipulate transducers and we go one level higher than existing\nformal language systems and implement methods to manipulate objects\nrepresenting classes of independent languages (widely known as code\nproperties). Our methods allow users to define their own code properties and\ncombine them between themselves or with fixed properties such as prefix codes,\nsuffix codes, error detecting codes, etc. The satisfaction and maximality\ndecision questions are solvable for any of the definable properties. The new\nonline system LaSer allows to query about code properties and obtain the answer\nin a batch mode. Our work is founded on independence theory as well as the\ntheory of rational relations and transducers and contributes with improveded\nalgorithms on these objects.\n", "versions": [{"version": "v1", "created": "Sat, 18 Apr 2015 13:19:49 GMT"}, {"version": "v2", "created": "Mon, 1 Aug 2016 10:16:26 GMT"}], "update_date": "2016-08-02", "authors_parsed": [["Konstantinidis", "Stavros", ""], ["Meijer", "Casey", ""], ["Moreira", "Nelma", ""], ["Reis", "Rog\u00e9rio", ""]]}, {"id": "1504.04859", "submitter": "\\\"Ozlem Salehi", "authors": "\\\"Ozlem Salehi, A.C. Cem Say", "title": "Homing Vector Automata", "comments": "NCMA'15", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We introduce homing vector automata, which are finite automata augmented by a\nvector that is multiplied at each step by a matrix determined by the current\ntransition, and have to return the vector to its original setting in order to\naccept the input. The computational power of the deterministic,\nnondeterministic and blind versions of these real-time machines are examined\nand compared to various related types of automata. A generalized version of the\nStern-Brocot encoding method, suitable for representing strings on arbitrary\nalphabets, is also developed.\n", "versions": [{"version": "v1", "created": "Sun, 19 Apr 2015 17:04:31 GMT"}, {"version": "v2", "created": "Fri, 18 Sep 2015 09:41:08 GMT"}], "update_date": "2015-09-21", "authors_parsed": [["Salehi", "\u00d6zlem", ""], ["Say", "A. C. Cem", ""]]}, {"id": "1504.05159", "submitter": "Marek Szyku{\\l}a", "authors": "Janusz Brzozowski, Marek Szyku{\\l}a", "title": "Complexity of Suffix-Free Regular Languages", "comments": "27 pages, 7 figures, 2 tables", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We study various complexity properties of suffix-free regular languages. The\nquotient complexity of a regular language $L$ is the number of left quotients\nof $L$; this is the same as the state complexity of $L$. A regular language\n$L'$ is a dialect of a regular language $L$ if it differs only slightly from\n$L$. The quotient complexity of an operation on regular languages is the\nmaximal quotient complexity of the result of the operation expressed as a\nfunction of the quotient complexities of the operands. A sequence\n$(L_k,L_{k+1},\\dots)$ of regular languages in some class ${\\mathcal C}$, where\n$n$ is the quotient complexity of $L_n$, is called a stream. A stream is most\ncomplex in class ${\\mathcal C}$ if its languages $L_n$ meet the complexity\nupper bounds for all basic measures. It is known that there exist such most\ncomplex streams in the class of regular languages, in the class of prefix-free\nlanguages, and also in the classes of right, left, and two-sided ideals. In\ncontrast to this, we prove that there does not exist a most complex stream in\nthe class of suffix-free regular languages. However, we do exhibit one ternary\nsuffix-free stream that meets the bound for product and whose restrictions to\nbinary alphabets meet the bounds for star and boolean operations. We also\nexhibit a quinary stream that meets the bounds for boolean operations,\nreversal, size of syntactic semigroup, and atom complexities. Moreover, we\nsolve an open problem about the bound for the product of two languages of\nquotient complexities $m$ and $n$ in the binary case by showing that it can be\nmet for infinitely many $m$ and $n$.\n", "versions": [{"version": "v1", "created": "Mon, 20 Apr 2015 19:09:34 GMT"}, {"version": "v2", "created": "Fri, 24 Apr 2015 09:45:27 GMT"}, {"version": "v3", "created": "Wed, 18 Nov 2015 20:23:35 GMT"}, {"version": "v4", "created": "Mon, 12 Dec 2016 17:23:16 GMT"}], "update_date": "2016-12-13", "authors_parsed": [["Brzozowski", "Janusz", ""], ["Szyku\u0142a", "Marek", ""]]}, {"id": "1504.05513", "submitter": "Chih-Hong Cheng", "authors": "Chih-Hong Cheng, Lacramioara Astefanoaei, Harald Ruess, Souha Ben\n  Rayana, Saddek Bensalem", "title": "Timed Orchestration for Component-based Systems", "comments": "Timestamp of the work, with evaluation added by creating MES\n  orchestration examples. (v3): typo fix and bring back definition and citation\n  in en^t as in v1", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL cs.LO cs.SC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Individual machines in flexible production lines explicitly expose\ncapabilities at their interfaces by means of parametric skills. Given such a\nset of configurable machines, a line integrator is faced with the problem of\nfinding and tuning parameters for each machine such that the overall production\nline implements given safety and temporal requirements in an optimized and\nrobust fashion. We formalize this problem of configuring and orchestrating\nflexible production lines as a parameter synthesis problem for systems of\nparametric timed automata, where interactions are based on skills. Parameter\nsynthesis problems for interaction-level LTL properties are translated to\nparameter synthesis problems for state-based safety properties. For safety\nproperties, synthesis problems are solved by checking satisfiability of\n$\\exists\\forall$SMT constraints. For constraint generation, we provide a set of\ncomputationally cheap over-approximations of the set of reachable states,\ntogether with fence constructions as sufficient conditions for safety formulas.\nWe demonstrate the feasibility of our approach by solving typical machine\nconfiguration problems as encountered in industrial automation.\n", "versions": [{"version": "v1", "created": "Tue, 21 Apr 2015 17:14:37 GMT"}, {"version": "v2", "created": "Sun, 11 Oct 2015 00:36:27 GMT"}, {"version": "v3", "created": "Fri, 20 May 2016 11:55:40 GMT"}], "update_date": "2016-05-23", "authors_parsed": [["Cheng", "Chih-Hong", ""], ["Astefanoaei", "Lacramioara", ""], ["Ruess", "Harald", ""], ["Rayana", "Souha Ben", ""], ["Bensalem", "Saddek", ""]]}, {"id": "1504.05535", "submitter": "Markus Lohrey", "authors": "Moses Ganardi, Danny Hucke, Markus Lohrey, and Eric Noeth", "title": "Tree compression using string grammars", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL cs.DS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We study the compressed representation of a ranked tree by a (string)\nstraight-line program (SLP) for its preorder traversal, and compare it with the\nwell-studied representation by straight-line context free tree grammars (which\nare also known as tree straight-line programs or TSLPs). Although SLPs turn out\nto be exponentially more succinct than TSLPs, we show that many simple tree\nqueries can still be performed efficiently on SLPs, such as computing the\nheight and Horton-Strahler number of a tree, tree navigation, or evaluation of\nBoolean expressions. Other problems on tree traversals turn out to be\nintractable, e.g. pattern matching and evaluation of tree automata.\n", "versions": [{"version": "v1", "created": "Tue, 21 Apr 2015 18:25:29 GMT"}, {"version": "v2", "created": "Mon, 28 Sep 2015 04:12:34 GMT"}], "update_date": "2015-09-29", "authors_parsed": [["Ganardi", "Moses", ""], ["Hucke", "Danny", ""], ["Lohrey", "Markus", ""], ["Noeth", "Eric", ""]]}, {"id": "1504.06117", "submitter": "Jan Otop", "authors": "Krishnendu Chatterjee, Thomas A. Henzinger and Jan Otop", "title": "Nested Weighted Automata", "comments": "The full version of the paper \"Nested Weighted Automata\" accepted to\n  LICS 2015", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Recently there has been a significant effort to handle quantitative\nproperties in formal verification and synthesis. While weighted automata over\nfinite and infinite words provide a natural and flexible framework to express\nquantitative properties, perhaps surprisingly, some basic system properties\nsuch as average response time cannot be expressed using weighted automata, nor\nin any other know decidable formalism. In this work, we introduce nested\nweighted automata as a natural extension of weighted automata which makes it\npossible to express important quantitative properties such as average response\ntime. In nested weighted automata, a master automaton spins off and collects\nresults from weighted slave automata, each of which computes a quantity along a\nfinite portion of an infinite word. Nested weighted automata can be viewed as\nthe quantitative analogue of monitor automata, which are used in run-time\nverification. We establish an almost complete decidability picture for the\nbasic decision problems about nested weighted automata, and illustrate their\napplicability in several domains. In particular, nested weighted automata can\nbe used to decide average response time properties.\n", "versions": [{"version": "v1", "created": "Thu, 23 Apr 2015 10:19:46 GMT"}], "update_date": "2015-04-24", "authors_parsed": [["Chatterjee", "Krishnendu", ""], ["Henzinger", "Thomas A.", ""], ["Otop", "Jan", ""]]}, {"id": "1504.06238", "submitter": "Xing Shi Cai", "authors": "Xing Shi Cai, Luc Devroye", "title": "The graph structure of a deterministic automaton chosen at random: full\n  version", "comments": "48 pages, 7 figures", "journal-ref": null, "doi": "10.1002/rsa.20707", "report-no": null, "categories": "math.PR cs.FL math.CO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  A deterministic finite automaton (DFA) of $n$ states over a $k$-letter\nalphabet can be seen as a digraph with $n$ vertices which all have exactly $k$\nlabeled out-arcs ($k$-out digraph). In 1973 Grusho first proved that with high\nprobability (whp) in a random $k$-out digraph there is a strongly connected\ncomponent (SCC) of linear size that is reachable from all vertices, i.e., a\ngiant. He also proved that the size of the giant follows a central limit law.\nWe show that whp the part outside the giant contains at most a few short cycles\nand mostly consists of overlapping tree-like structures. Thus the directed\nacyclic graph (DAG) of a random $k$-out digraph is almost the same as the\ndigraph with the giant contracted into one vertex. These findings lead to a\nnew, concise and self-contained proof of Grusho's theorem. This work also\ncontains some other results including the structure outside the giant, the\nphase transition phenomenon in strong connectivity, the typical distance, and\nan extension to simple digraphs.\n", "versions": [{"version": "v1", "created": "Thu, 23 Apr 2015 16:10:30 GMT"}, {"version": "v2", "created": "Tue, 9 Aug 2016 20:58:47 GMT"}], "update_date": "2020-04-21", "authors_parsed": [["Cai", "Xing Shi", ""], ["Devroye", "Luc", ""]]}, {"id": "1504.06240", "submitter": "Hector Zenil", "authors": "Fernando Soler-Toscano and Hector Zenil", "title": "A Computable Measure of Algorithmic Probability by Finite Approximations\n  with an Application to Integer Sequences", "comments": "As accepted by the journal Complexity (Wiley/Hindawi)", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.IT cs.CC cs.FL math.IT", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Given the widespread use of lossless compression algorithms to approximate\nalgorithmic (Kolmogorov-Chaitin) complexity, and that lossless compression\nalgorithms fall short at characterizing patterns other than statistical ones\nnot different to entropy estimations, here we explore an alternative and\ncomplementary approach. We study formal properties of a Levin-inspired measure\n$m$ calculated from the output distribution of small Turing machines. We\nintroduce and justify finite approximations $m_k$ that have been used in some\napplications as an alternative to lossless compression algorithms for\napproximating algorithmic (Kolmogorov-Chaitin) complexity. We provide proofs of\nthe relevant properties of both $m$ and $m_k$ and compare them to Levin's\nUniversal Distribution. We provide error estimations of $m_k$ with respect to\n$m$. Finally, we present an application to integer sequences from the Online\nEncyclopedia of Integer Sequences which suggests that our AP-based measures may\ncharacterize non-statistical patterns, and we report interesting correlations\nwith textual, function and program description lengths of the said sequences.\n", "versions": [{"version": "v1", "created": "Thu, 23 Apr 2015 16:20:58 GMT"}, {"version": "v2", "created": "Sat, 24 Jun 2017 19:28:55 GMT"}, {"version": "v3", "created": "Mon, 14 Aug 2017 14:14:45 GMT"}], "update_date": "2017-08-15", "authors_parsed": [["Soler-Toscano", "Fernando", ""], ["Zenil", "Hector", ""]]}, {"id": "1504.06534", "submitter": "Benedikt Bollig", "authors": "C. Aiswarya, Benedikt Bollig, Paul Gastin", "title": "An Automata-Theoretic Approach to the Verification of Distributed\n  Algorithms", "comments": "26 pages, 6 figures", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We introduce an automata-theoretic method for the verification of distributed\nalgorithms running on ring networks. In a distributed algorithm, an arbitrary\nnumber of processes cooperate to achieve a common goal (e.g., elect a leader).\nProcesses have unique identifiers (pids) from an infinite, totally ordered\ndomain. An algorithm proceeds in synchronous rounds, each round allowing a\nprocess to perform a bounded sequence of actions such as send or receive a pid,\nstore it in some register, and compare register contents wrt. the associated\ntotal order. An algorithm is supposed to be correct independently of the number\nof processes. To specify correctness properties, we introduce a logic that can\nreason about processes and pids. Referring to leader election, it may say that,\nat the end of an execution, each process stores the maximum pid in some\ndedicated register. Since the verification of distributed algorithms is\nundecidable, we propose an underapproximation technique, which bounds the\nnumber of rounds. This is an appealing approach, as the number of rounds needed\nby a distributed algorithm to conclude is often exponentially smaller than the\nnumber of processes. We provide an automata-theoretic solution, reducing model\nchecking to emptiness for alternating two-way automata on words. Overall, we\nshow that round-bounded verification of distributed algorithms over rings is\nPSPACE-complete.\n", "versions": [{"version": "v1", "created": "Fri, 24 Apr 2015 15:03:08 GMT"}], "update_date": "2015-04-27", "authors_parsed": [["Aiswarya", "C.", ""], ["Bollig", "Benedikt", ""], ["Gastin", "Paul", ""]]}, {"id": "1504.07838", "submitter": "Peter  Bezd\\u{e}k", "authors": "Nikola Bene\\v{s}, Peter Bezd\\v{e}k, Kim G. Larsen, Ji\\v{r}\\'i Srba", "title": "Language Emptiness of Continuous-Time Parametric Timed Automata", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Parametric timed automata extend the standard timed automata with the\npossibility to use parameters in the clock guards. In general, if the\nparameters are real-valued, the problem of language emptiness of such automata\nis undecidable even for various restricted subclasses. We thus focus on the\ncase where parameters are assumed to be integer-valued, while the time still\nremains continuous. On the one hand, we show that the problem remains\nundecidable for parametric timed automata with three clocks and one parameter.\nOn the other hand, for the case with arbitrary many clocks where only one of\nthese clocks is compared with (an arbitrary number of) parameters, we show that\nthe parametric language emptiness is decidable. The undecidability result\ntightens the bounds of a previous result which assumed six parameters, while\nthe decidability result extends the existing approaches that deal with\ndiscrete-time semantics only. To the best of our knowledge, this is the first\npositive result in the case of continuous-time and unbounded integer\nparameters, except for the rather simple case of single-clock automata.\n", "versions": [{"version": "v1", "created": "Wed, 29 Apr 2015 12:51:03 GMT"}], "update_date": "2016-08-08", "authors_parsed": [["Bene\u0161", "Nikola", ""], ["Bezd\u011bk", "Peter", ""], ["Larsen", "Kim G.", ""], ["Srba", "Ji\u0159\u00ed", ""]]}, {"id": "1504.08259", "submitter": "J\\\"urgen Koslowski", "authors": "Krishnendu Chatterjee, Thomas A. Henzinger, Rasmus Ibsen-Jensen and\n  Jan Otop", "title": "Edit Distance for Pushdown Automata", "comments": "An extended version of a paper accepted to ICALP 2015 with the same\n  title. The paper has been accepted to the LMCS journal", "journal-ref": "Logical Methods in Computer Science, Volume 13, Issue 3 (September\n  13, 2017) lmcs:3927", "doi": "10.23638/LMCS-13(3:23)2017", "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The edit distance between two words $w_1, w_2$ is the minimal number of word\noperations (letter insertions, deletions, and substitutions) necessary to\ntransform $w_1$ to $w_2$. The edit distance generalizes to languages\n$\\mathcal{L}_1, \\mathcal{L}_2$, where the edit distance from $\\mathcal{L}_1$ to\n$\\mathcal{L}_2$ is the minimal number $k$ such that for every word from\n$\\mathcal{L}_1$ there exists a word in $\\mathcal{L}_2$ with edit distance at\nmost $k$. We study the edit distance computation problem between pushdown\nautomata and their subclasses. The problem of computing edit distance to a\npushdown automaton is undecidable, and in practice, the interesting question is\nto compute the edit distance from a pushdown automaton (the implementation, a\nstandard model for programs with recursion) to a regular language (the\nspecification). In this work, we present a complete picture of decidability and\ncomplexity for the following problems: (1)~deciding whether, for a given\nthreshold $k$, the edit distance from a pushdown automaton to a finite\nautomaton is at most $k$, and (2)~deciding whether the edit distance from a\npushdown automaton to a finite automaton is finite.\n", "versions": [{"version": "v1", "created": "Thu, 30 Apr 2015 14:56:25 GMT"}, {"version": "v2", "created": "Wed, 1 Mar 2017 17:21:29 GMT"}, {"version": "v3", "created": "Tue, 12 Sep 2017 14:56:23 GMT"}, {"version": "v4", "created": "Fri, 22 Sep 2017 11:59:32 GMT"}], "update_date": "2019-03-14", "authors_parsed": [["Chatterjee", "Krishnendu", ""], ["Henzinger", "Thomas A.", ""], ["Ibsen-Jensen", "Rasmus", ""], ["Otop", "Jan", ""]]}, {"id": "1504.08342", "submitter": "Shay Cohen", "authors": "Shay B. Cohen and Daniel Gildea", "title": "Parsing Linear Context-Free Rewriting Systems with Fast Matrix\n  Multiplication", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.CL cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We describe a matrix multiplication recognition algorithm for a subset of\nbinary linear context-free rewriting systems (LCFRS) with running time\n$O(n^{\\omega d})$ where $M(m) = O(m^{\\omega})$ is the running time for $m\n\\times m$ matrix multiplication and $d$ is the \"contact rank\" of the LCFRS --\nthe maximal number of combination and non-combination points that appear in the\ngrammar rules. We also show that this algorithm can be used as a subroutine to\nget a recognition algorithm for general binary LCFRS with running time\n$O(n^{\\omega d + 1})$. The currently best known $\\omega$ is smaller than\n$2.38$. Our result provides another proof for the best known result for parsing\nmildly context sensitive formalisms such as combinatory categorial grammars,\nhead grammars, linear indexed grammars, and tree adjoining grammars, which can\nbe parsed in time $O(n^{4.76})$. It also shows that inversion transduction\ngrammars can be parsed in time $O(n^{5.76})$. In addition, binary LCFRS\nsubsumes many other formalisms and types of grammars, for some of which we also\nimprove the asymptotic complexity of parsing.\n", "versions": [{"version": "v1", "created": "Thu, 30 Apr 2015 18:53:06 GMT"}, {"version": "v2", "created": "Sun, 14 Jun 2015 20:02:41 GMT"}, {"version": "v3", "created": "Tue, 8 Mar 2016 20:29:08 GMT"}], "update_date": "2016-03-09", "authors_parsed": [["Cohen", "Shay B.", ""], ["Gildea", "Daniel", ""]]}]