[{"id": "1510.00208", "submitter": "M\\'ark F\\\"uzesdi", "authors": "Mark F\\\"uzesdi", "title": "Boolean-type Retractable State-finite Automata Without Outputs", "comments": "12 pages", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  An automaton $\\bf A$ is called a retractable automaton if, for every\nsubautomaton $\\bf B$ of $\\bf A$, there is at least one homomorphism of $\\bf A$\nonto $\\bf B$ which leaves the elements of $B$ fixed (such homomorphism is\ncalled a retract homomorphism of $\\bf A$ onto $\\bf B$). We say that a\nretractable automaton ${\\bf A}$=(A,X,$\\delta$) is Boolean-type if there exists\na family $\\{\\lambda_B \\mid \\textrm{ B is a subautomaton of A } \\}$ of retract\nhomomorphisms $\\lambda _B$ of $\\bf A$ such that, for arbitrary subautomata\n${\\bf B}_1$ and ${\\bf B}_2$ of $\\bf A$, the condition $B_1\\subseteq B_2$\nimplies $Ker\\lambda _{B_2}\\subseteq Ker\\lambda _{B_1}$. In this paper we\ndescribe the Boolean-type retractable state-finite automata without outputs.\n", "versions": [{"version": "v1", "created": "Thu, 1 Oct 2015 13:02:22 GMT"}, {"version": "v2", "created": "Mon, 5 Oct 2015 14:10:04 GMT"}], "update_date": "2015-10-06", "authors_parsed": [["F\u00fczesdi", "Mark", ""]]}, {"id": "1510.00634", "submitter": "Gabriele Fici", "authors": "Gabriele Fici, Thierry Lecroq, Arnaud Lefebvre, \\'Elise Prieur-Gaston,\n  William F. Smyth", "title": "A Note on Easy and Efficient Computation of Full Abelian Periods of a\n  Word", "comments": "Accepted for publication in Discrete Applied Mathematics", "journal-ref": "Discrete Applied Mathematics, 212: 88-95, 2016", "doi": "10.1016/j.dam.2015.09.024", "report-no": null, "categories": "cs.DS cs.DM cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Constantinescu and Ilie (Bulletin of the EATCS 89, 167-170, 2006) introduced\nthe idea of an Abelian period with head and tail of a finite word. An Abelian\nperiod is called full if both the head and the tail are empty. We present a\nsimple and easy-to-implement $O(n\\log\\log n)$-time algorithm for computing all\nthe full Abelian periods of a word of length $n$ over a constant-size alphabet.\nExperiments show that our algorithm significantly outperforms the $O(n)$\nalgorithm proposed by Kociumaka et al. (Proc. of STACS, 245-256, 2013) for the\nsame problem.\n", "versions": [{"version": "v1", "created": "Fri, 2 Oct 2015 16:17:11 GMT"}], "update_date": "2017-01-02", "authors_parsed": [["Fici", "Gabriele", ""], ["Lecroq", "Thierry", ""], ["Lefebvre", "Arnaud", ""], ["Prieur-Gaston", "\u00c9lise", ""], ["Smyth", "William F.", ""]]}, {"id": "1510.00911", "submitter": "Attila Nagy", "authors": "Attila Nagy", "title": "Retractable state-finite automata without outputs", "comments": "12 pages", "journal-ref": "Acta Cybernetica 16(3): 399-409 (2004),", "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  A homomorphism of an automaton ${\\bf A}$ without outputs onto a subautomaton\n${\\bf B}$ of ${\\bf A}$ is called a retract homomorphism if it leaves the\nelements of $B$ fixed. An automaton ${\\bf A}$ is called a retractable automaton\nif, for every subautomaton ${\\bf B}$ of ${\\bf A}$, there is a retract\nhomomorphism of ${\\bf A}$ onto ${\\bf B}$. In [1] and [3], special retractable\nautomata are examined. The purpose of this paper is to give a complete\ndescription of state-finite retractable automata without outputs.\n", "versions": [{"version": "v1", "created": "Sun, 4 Oct 2015 08:05:41 GMT"}], "update_date": "2015-10-06", "authors_parsed": [["Nagy", "Attila", ""]]}, {"id": "1510.01574", "submitter": "Gabriele Fici", "authors": "Luc Boasson, Paola Bonizzoni, Clelia De Felice, Isabelle Fagnot,\n  Gabriele Fici, Rocco Zaccagnino, Rosalba Zizza", "title": "Splicing Systems from Past to Future: Old and New Challenges", "comments": "Appeared in: Discrete Mathematics and Computer Science. Papers in\n  Memoriam Alexandru Mateescu (1952-2005). The Publishing House of the Romanian\n  Academy, 2014. arXiv admin note: text overlap with arXiv:1112.4897 by other\n  authors", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL cs.DM", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  A splicing system is a formal model of a recombinant behaviour of sets of\ndouble stranded DNA molecules when acted on by restriction enzymes and ligase.\nIn this survey we will concentrate on a specific behaviour of a type of\nsplicing systems, introduced by P\\u{a}un and subsequently developed by many\nresearchers in both linear and circular case of splicing definition. In\nparticular, we will present recent results on this topic and how they stimulate\nnew challenging investigations.\n", "versions": [{"version": "v1", "created": "Tue, 6 Oct 2015 13:49:45 GMT"}], "update_date": "2015-10-07", "authors_parsed": [["Boasson", "Luc", ""], ["Bonizzoni", "Paola", ""], ["De Felice", "Clelia", ""], ["Fagnot", "Isabelle", ""], ["Fici", "Gabriele", ""], ["Zaccagnino", "Rocco", ""], ["Zizza", "Rosalba", ""]]}, {"id": "1510.01640", "submitter": "Henryk Michalewski", "authors": "Henryk Michalewski, Matteo Mio", "title": "On the Problem of Computing the Probability of Regular Sets of Trees", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We consider the problem of computing the probability of regular languages of\ninfinite trees with respect to the natural coin-flipping measure. We propose an\nalgorithm which computes the probability of languages recognizable by\n\\emph{game automata}. In particular this algorithm is applicable to all\ndeterministic automata. We then use the algorithm to prove through examples\nthree properties of measure: (1) there exist regular sets having irrational\nprobability, (2) there exist comeager regular sets having probability $0$ and\n(3) the probability of \\emph{game languages} $W_{i,k}$, from automata theory,\nis $0$ if $k$ is odd and is $1$ otherwise.\n", "versions": [{"version": "v1", "created": "Tue, 6 Oct 2015 16:07:18 GMT"}], "update_date": "2015-10-07", "authors_parsed": [["Michalewski", "Henryk", ""], ["Mio", "Matteo", ""]]}, {"id": "1510.01671", "submitter": "Hector Zenil", "authors": "J\\\"urgen Riedel and Hector Zenil", "title": "Cross-boundary Behavioural Reprogrammability Reveals Evidence of\n  Pervasive Universality", "comments": "22 pages, 51 pages including Supplemental, 10 figures, code available\n  online at URL in the paper", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL cs.CC nlin.CG", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We exhaustively explore the reprogrammability capabilities and the intrinsic\nuniversality of the Cartesian product $P \\times C$ of the space $P$ of all\npossible computer programs of increasing size and the space $C$ of all possible\ncompilers of increasing length such that $p \\in P$ emulates $p^\\prime \\in P$\nwith $T|p^\\prime|=|p|$ under a coarse-graining transformation $T$. Our approach\nyields a novel perspective on the complexity, controllability, causality and\n(re)programmability discrete dynamical systems. We find evidence that the\ndensity of (qualitatively different) computer programs that can be reprogrammed\ngrows asymptotically as a function of program and compiler size. To illustrate\nthese findings we show a series of behavioural boundary crossing results,\nincluding emulations (for all initial conditions) of Wolfram class 2 Elementary\nCellular Automata (ECA) by Class 1 ECA, emulations of Classes 1, 2 and 3 ECA by\nClass 2 and 3 ECA, and of Classes 1, 2 and 3 by Class 3 ECA, along with results\nof even greater emulability for general CA (neighbourhood $r=3/2$), including\nClass 1 CA emulating Classes 2 and 3, and Classes 3 and 4 emulating all other\nclasses (1, 2, 3 and 4). The emulations occur with only a linear overhead and\ncan be considered computationally efficient. We also found that there is no\nhacking strategy to compress the search space based on compiler profiling in\nterms of e.g. similarity or complexity, suggesting that no strategy other than\nexhaustive search is viable. We also introduce emulation networks, derive a\ntopologically-based measure of complexity based upon out- and in-degree\nconnectivity, and establish bridges to fundamental ideas of complexity,\nuniversality, causality and dynamical systems.\n", "versions": [{"version": "v1", "created": "Tue, 6 Oct 2015 17:21:17 GMT"}, {"version": "v10", "created": "Mon, 23 Nov 2015 16:45:11 GMT"}, {"version": "v11", "created": "Tue, 24 Nov 2015 20:30:14 GMT"}, {"version": "v12", "created": "Mon, 7 Dec 2015 08:26:18 GMT"}, {"version": "v13", "created": "Sat, 9 Jan 2016 19:04:10 GMT"}, {"version": "v14", "created": "Fri, 6 Jan 2017 14:10:55 GMT"}, {"version": "v15", "created": "Thu, 1 Feb 2018 16:34:22 GMT"}, {"version": "v2", "created": "Wed, 7 Oct 2015 16:03:53 GMT"}, {"version": "v3", "created": "Thu, 8 Oct 2015 10:33:13 GMT"}, {"version": "v4", "created": "Wed, 14 Oct 2015 17:54:56 GMT"}, {"version": "v5", "created": "Thu, 15 Oct 2015 12:18:52 GMT"}, {"version": "v6", "created": "Fri, 16 Oct 2015 11:24:58 GMT"}, {"version": "v7", "created": "Thu, 22 Oct 2015 00:15:24 GMT"}, {"version": "v8", "created": "Fri, 23 Oct 2015 04:50:48 GMT"}, {"version": "v9", "created": "Thu, 29 Oct 2015 16:03:02 GMT"}], "update_date": "2018-02-02", "authors_parsed": [["Riedel", "J\u00fcrgen", ""], ["Zenil", "Hector", ""]]}, {"id": "1510.02036", "submitter": "Joost Engelfriet", "authors": "Joost Engelfriet", "title": "Tree Automata and Tree Grammars", "comments": "76 pages, slightly revised version of lecture notes from 1975", "journal-ref": null, "doi": null, "report-no": "DAIMI FN-10", "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Lecture notes on tree language theory, in particular recognizable tree\nlanguages and finite state tree transformations.\n", "versions": [{"version": "v1", "created": "Wed, 7 Oct 2015 17:33:06 GMT"}], "update_date": "2015-10-08", "authors_parsed": [["Engelfriet", "Joost", ""]]}, {"id": "1510.02070", "submitter": "Kumar Sankar Ray", "authors": "Kingshuk Chatterjee, Kumar Sankar Ray", "title": "Non-regular unary language and parallel communicating Watson-Crick\n  automata systems", "comments": "arXiv admin note: text overlap with arXiv:1507.05284", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In 2006, Czeizler et.al. introduced parallel communicating Watson-Crick\nautomata system. They showed that parallel communicating Watson-Crick automata\nsystem can accept the non-regular unary language L={a^(n^2 ),where n>1} using\nnon-injective complementarity relation and three components. In this paper, we\nimprove on Czeizler et.al. work by showing that parallel communicating\nWatson-Crick automata system can accept the same language L using just two\ncomponents.\n", "versions": [{"version": "v1", "created": "Wed, 7 Oct 2015 19:35:48 GMT"}], "update_date": "2015-10-08", "authors_parsed": [["Chatterjee", "Kingshuk", ""], ["Ray", "Kumar Sankar", ""]]}, {"id": "1510.02393", "submitter": "Micha\\\"el Cadilhac", "authors": "Micha\\\"el Cadilhac, Andreas Krebs, Nutan Limaye", "title": "Value Automata with Filters", "comments": "8 pages, presented in the short track of NCMA'15, work in progress", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We propose to study value automata with filters, a natural generalization of\nregular cost automata to nondeterminism. Models such as weighted automata and\nParikh automata appear naturally as specializations. Results on the\nexpressiveness of this model offer a general understanding of the behavior of\nthe models that arise as special cases. A landscape of such restrictions is\ndrawn.\n", "versions": [{"version": "v1", "created": "Thu, 8 Oct 2015 16:33:53 GMT"}], "update_date": "2015-10-09", "authors_parsed": [["Cadilhac", "Micha\u00ebl", ""], ["Krebs", "Andreas", ""], ["Limaye", "Nutan", ""]]}, {"id": "1510.02637", "submitter": "Jakub Radoszewski", "authors": "Tomasz Kociumaka, Jakub Radoszewski, Wojciech Rytter", "title": "Efficient Ranking of Lyndon Words and Decoding Lexicographically Minimal\n  de Bruijn Sequence", "comments": "Improved version of a paper presented at CPM 2014", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DS cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We give efficient algorithms for ranking Lyndon words of length n over an\nalphabet of size {\\sigma}. The rank of a Lyndon word is its position in the\nsequence of lexicographically ordered Lyndon words of the same length. The\noutputs are integers of exponential size, and complexity of arithmetic\noperations on such large integers cannot be ignored. Our model of computations\nis the word-RAM, in which basic arithmetic operations on (large) numbers of\nsize at most {\\sigma}^n take O(n) time. Our algorithm for ranking Lyndon words\nmakes O(n^2) arithmetic operations (this would imply directly cubic time on\nword-RAM). However, using an algebraic approach we are able to reduce the total\ntime complexity on the word-RAM to O(n^2 log {\\sigma}). We also present an\nO(n^3 log^2 {\\sigma})-time algorithm that generates the Lyndon word of a given\nlength and rank in lexicographic order. Finally we use the connections between\nLyndon words and lexicographically minimal de Bruijn sequences (theorem of\nFredricksen and Maiorana) to develop the first polynomial-time algorithm for\ndecoding minimal de Bruijn sequence of any rank n (it determines the position\nof an arbitrary word of length n within the de Bruijn sequence).\n", "versions": [{"version": "v1", "created": "Fri, 9 Oct 2015 11:28:49 GMT"}], "update_date": "2015-10-12", "authors_parsed": [["Kociumaka", "Tomasz", ""], ["Radoszewski", "Jakub", ""], ["Rytter", "Wojciech", ""]]}, {"id": "1510.02638", "submitter": "Daniel Bennett", "authors": "Daniel Bennett and Collin Bleak", "title": "A dynamical definition of f.g. virtually free groups", "comments": "13 pp, 6 figures", "journal-ref": null, "doi": "10.1142/S0218196716500053", "report-no": null, "categories": "math.GR cs.FL math.DS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We show that the class of finitely generated virtually free groups is\nprecisely the class of demonstrable subgroups for R. Thompson's group $V$. The\nclass of demonstrable groups for $V$ consists of all groups which can embed\ninto $V$ with a natural dynamical behaviour in their induced actions on the\nCantor space $\\mathfrak{C}_2 := \\left\\{0,1\\right\\}^\\omega$. There are also\nconnections with formal language theory, as the class of groups with\ncontext-free word problem is also the class of finitely generated virtually\nfree groups, while R. Thompson's group $V$ is a candidate as a universal\n$co\\mathcal{CF}$ group by Lehnert's conjecture, corresponding to the class of\ngroups with context free co-word problem (as introduced by Holt, Rees, R\\\"over,\nand Thomas). Our main reults answers a question of Berns-Zieze, Fry, Gillings,\nHoganson, and Matthews, and separately of Bleak and Salazar-D\\'iaz, and it fits\ninto the larger exploration of the class of $co\\mathcal{CF}$ groups as it shows\nthat all four of the known closure properties of the class of $co\\mathcal{CF}$\ngroups hold for the set of finitely generated subgroups of $V.$\n", "versions": [{"version": "v1", "created": "Fri, 9 Oct 2015 11:32:42 GMT"}, {"version": "v2", "created": "Mon, 18 Jan 2016 09:33:52 GMT"}], "update_date": "2016-01-19", "authors_parsed": [["Bennett", "Daniel", ""], ["Bleak", "Collin", ""]]}, {"id": "1510.03227", "submitter": "Pavel Semukhin", "authors": "Igor Potapov and Pavel Semukhin", "title": "Vector Reachability Problem in $\\mathrm{SL}(2,\\mathbb{Z})$", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL cs.CC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The decision problems on matrices were intensively studied for many decades\nas matrix products play an essential role in the representation of various\ncomputational processes. However, many computational problems for matrix\nsemigroups are inherently difficult to solve even for problems in low\ndimensions and most matrix semigroup problems become undecidable in general\nstarting from dimension three or four.\n  This paper solves two open problems about the decidability of the vector\nreachability problem over a finitely generated semigroup of matrices from\n$\\mathrm{SL}(2,\\mathbb{Z})$ and the point to point reachability (over rational\nnumbers) for fractional linear transformations, where associated matrices are\nfrom $\\mathrm{SL}(2,\\mathbb{Z})$. The approach to solving reachability problems\nis based on the characterization of reachability paths between points which is\nfollowed by the translation of numerical problems on matrices into\ncomputational and combinatorial problems on words and formal languages. We also\ngive a geometric interpretation of reachability paths and extend the\ndecidability results to matrix products represented by arbitrary labelled\ndirected graphs. Finally, we will use this technique to prove that a special\ncase of the scalar reachability problem is decidable.\n", "versions": [{"version": "v1", "created": "Mon, 12 Oct 2015 11:09:14 GMT"}, {"version": "v2", "created": "Wed, 27 Apr 2016 13:10:59 GMT"}], "update_date": "2016-04-28", "authors_parsed": [["Potapov", "Igor", ""], ["Semukhin", "Pavel", ""]]}, {"id": "1510.03231", "submitter": "Olena Prianychnykova", "authors": "Igor Potapov, Olena Prianychnykova, Sergey Verlan", "title": "On insertion-deletion systems over relational words", "comments": "24 pages, 8 figures", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We introduce a new notion of a relational word as a finite totally ordered\nset of positions endowed with three binary relations that describe which\npositions are labeled by equal data, by unequal data and those having an\nundefined relation between their labels. We define the operations of insertion\nand deletion on relational words generalizing corresponding operations on\nstrings. We prove that the transitive and reflexive closure of these operations\nhas a decidable membership problem for the case of short insertion-deletion\nrules (of size two/three and three/two). At the same time, we show that in the\ngeneral case such systems can produce a coding of any recursively enumerable\nlanguage leading to undecidabilty of reachability questions.\n", "versions": [{"version": "v1", "created": "Mon, 12 Oct 2015 11:14:51 GMT"}], "update_date": "2015-10-13", "authors_parsed": [["Potapov", "Igor", ""], ["Prianychnykova", "Olena", ""], ["Verlan", "Sergey", ""]]}, {"id": "1510.03278", "submitter": "Lorenzo Clemente Lorenzo Clemente", "authors": "Lorenzo Clemente, Pawe{\\l} Parys, Sylvain Salvati, Igor Walukiewicz", "title": "Ordered Tree-Pushdown Systems", "comments": "full technical report of FST-TCS'15 paper", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://creativecommons.org/licenses/by/4.0/", "abstract": "  We define a new class of pushdown systems where the pushdown is a tree\ninstead of a word. We allow a limited form of lookahead on the pushdown\nconforming to a certain ordering restriction, and we show that the resulting\nclass enjoys a decidable reachability problem. This follows from a preservation\nof recognizability result for the backward reachability relation of such\nsystems. As an application, we show that our simple model can encode several\nformalisms generalizing pushdown systems, such as ordered multi-pushdown\nsystems, annotated higher-order pushdown systems, the Krivine machine, and\nordered annotated multi-pushdown systems. In each case, our procedure yields\ntight complexity.\n", "versions": [{"version": "v1", "created": "Mon, 12 Oct 2015 13:38:25 GMT"}], "update_date": "2015-10-13", "authors_parsed": [["Clemente", "Lorenzo", ""], ["Parys", "Pawe\u0142", ""], ["Salvati", "Sylvain", ""], ["Walukiewicz", "Igor", ""]]}, {"id": "1510.03994", "submitter": "Prateek Karandikar", "authors": "Prateek Karandikar and Philippe Schnoebelen", "title": "Decidability in the logic of subsequences and supersequences", "comments": null, "journal-ref": "35th IARCS Annual Conference on Foundations of Software Technology\n  and Theoretical Computer Science (FSTTCS 2015)", "doi": "10.4230/LIPIcs.FSTTCS.2015.84", "report-no": null, "categories": "cs.LO cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We consider first-order logics of sequences ordered by the subsequence\nordering, aka sequence embedding. We show that the \\Sigma_2 theory is\nundecidable, answering a question left open by Kuske. Regarding fragments with\na bounded number of variables, we show that the FO2 theory is decidable while\nthe FO3 theory is undecidable.\n", "versions": [{"version": "v1", "created": "Wed, 14 Oct 2015 08:21:47 GMT"}], "update_date": "2016-07-07", "authors_parsed": [["Karandikar", "Prateek", ""], ["Schnoebelen", "Philippe", ""]]}, {"id": "1510.04000", "submitter": "Olivier Serre", "authors": "Arnaud Carayol and Olivier Serre", "title": "Marking Shortest Paths On Pushdown Graphs Does Not Preserve MSO\n  Decidability", "comments": "11 pages, 2 figures", "journal-ref": "Information Processing Letters, Elsevier, 2016, 116 (10),\n  pp.638-643", "doi": "10.1016/j.ipl.2016.04.015", "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In this paper we consider pushdown graphs, i.e. infinite graphs that can be\ndescribed as transition graphs of deterministic real-time pushdown automata. We\nconsider the case where some vertices are designated as being final and we\nbuilt, in a breadth-first manner, a marking of edges that lead to such vertices\n(i.e., for every vertex that can reach a final one, we mark all out-going edges\nlaying on some shortest path to a final vertex).\n  Our main result is that the edge-marked version of a pushdown graph may\nitself no longer be a pushdown graph, as we prove that this enrich graph may\nhave an undecidable MSO theory.\n  In this paper we consider pushdown graphs, i.e. infinite graphs that can be\ndescribed as transition graphs of deterministic real-time pushdown automata. We\nconsider the case where some vertices are designated as being final and we\nbuild, in a breadth-first manner, a marking of edges that lead to such vertices\n(i.e., for every vertex that can reach a final one, we mark all out-going edges\nlaying on some shortest path to a final vertex).\n  Our main result is that the edge-marked version of a pushdown graph may\nitself no longer be a pushdown graph, as we prove that the MSO theory of this\nenriched graph may be undecidable.\n", "versions": [{"version": "v1", "created": "Wed, 14 Oct 2015 08:34:02 GMT"}, {"version": "v2", "created": "Thu, 10 Mar 2016 13:14:31 GMT"}], "update_date": "2020-10-14", "authors_parsed": [["Carayol", "Arnaud", ""], ["Serre", "Olivier", ""]]}, {"id": "1510.04016", "submitter": "Kumar Sankar Ray", "authors": "Kingshuk Chatterjee, Kumar Sankar Ray", "title": "Multi-head Watson-Crick automata", "comments": "arXiv admin note: text overlap with arXiv:1507.05284,\n  arXiv:1510.02070", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Inspired by multi-head finite automata and Watson-Crick automata in this\npaper, we introduce new structure namely multi-head Watson-Crick automata where\nwe replace the single tape of multi-head finite automaton by a DNA double\nstrand. The content of the second tape is determined using a complementarity\nrelation similar to Watson-Crick complementarity relation. We establish the\nsuperiority of our model over multi-head finite automata and also show that\nboth the deterministic and non-deterministic variant of the model can accept\nnon-regular unary languages. We also compare our model with parallel\ncommunicating Watson-Crick automata systems and prove that both of them have\nthe same computational power.\n", "versions": [{"version": "v1", "created": "Wed, 14 Oct 2015 09:21:33 GMT"}, {"version": "v2", "created": "Wed, 9 Dec 2015 07:46:00 GMT"}], "update_date": "2015-12-10", "authors_parsed": [["Chatterjee", "Kingshuk", ""], ["Ray", "Kumar Sankar", ""]]}, {"id": "1510.04336", "submitter": "Avinash Malik", "authors": "Avinash Malik, Partha S Roop, Sidharta Andalam, Eugene Yip, and Mark\n  Trew", "title": "A synchronous rendering of hybrid systems for designing Plant-on-a-Chip\n  (PoC)", "comments": "18 pages", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL cs.SY", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Hybrid systems are discrete controllers that are used for controlling a\nphysical process (plant) exhibiting continuous dynamics. A hybrid automata (HA)\nis a well known and widely used formal model for the specification of such\nsystems. While many methods exist for simulating hybrid automata, there are no\nknown approaches for the automatic code generation from HA that are semantic\npreserving. If this were feasible, it would enable the design of a\nplant-on-a-chip (PoC) system that could be used for the emulation of the plant\nto validate discrete controllers. Such an approach would need to be\nmathematically sound and should not rely on numerical solvers. We propose a\nmethod of PoC design for plant emulation, not possible before. The approach\nrestricts input/output (I/O) HA models using a set of criteria for\nwell-formedness which are statically verified. Following verification, we use\nan abstraction based on a synchronous approach to facilitate code generation.\nThis is feasible through a sound transformation to synchronous HA. We compare\nour method (the developed tool called Piha) to the widely used Simulink R\nsimulation framework and show that our method is superior in both execution\ntime and code size. Our approach to the PoC problem paves the way for the\nemulation of physical plants in diverse domains such as robotics, automation,\nmedical devices, and intelligent transportation systems.\n", "versions": [{"version": "v1", "created": "Wed, 14 Oct 2015 22:24:00 GMT"}], "update_date": "2015-10-16", "authors_parsed": [["Malik", "Avinash", ""], ["Roop", "Partha S", ""], ["Andalam", "Sidharta", ""], ["Yip", "Eugene", ""], ["Trew", "Mark", ""]]}, {"id": "1510.04748", "submitter": "Marcus Ramos", "authors": "Marcus V. M. Ramos, Ruy J. G. B. de Queiroz, Nelma Moreira, Jos\\'e\n  Carlos Bacelar Almeida", "title": "Formalization of the pumping lemma for context-free languages", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Context-free languages (CFLs) are highly important in computer language\nprocessing technology as well as in formal language theory. The Pumping Lemma\nis a property that is valid for all context-free languages, and is used to show\nthe existence of non context-free languages. This paper presents a\nformalization, using the Coq proof assistant, of the Pumping Lemma for\ncontext-free languages.\n", "versions": [{"version": "v1", "created": "Fri, 16 Oct 2015 00:02:47 GMT"}], "update_date": "2015-10-19", "authors_parsed": [["Ramos", "Marcus V. M.", ""], ["de Queiroz", "Ruy J. G. B.", ""], ["Moreira", "Nelma", ""], ["Almeida", "Jos\u00e9 Carlos Bacelar", ""]]}, {"id": "1510.04881", "submitter": "Johannes Osterholzer", "authors": "Johannes Osterholzer, Toni Dietze, Luisa Herrmann", "title": "Linear Context-Free Tree Languages and Inverse Homomorphisms", "comments": "30 pages, 1 figure; fixed a variable collision (t') in Section 7", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We prove that the class of linear context-free tree languages is not closed\nunder inverse linear tree homomorphisms. The proof is by contradiction: we\nencode Dyck words into a context-free tree language and prove that its preimage\nunder a certain linear tree homomorphism cannot be generated by any\ncontext-free tree grammar. A positive result can still be obtained: the linear\nmonadic context-free tree languages are closed under inverse linear tree\nhomomorphisms.\n", "versions": [{"version": "v1", "created": "Fri, 16 Oct 2015 13:42:13 GMT"}, {"version": "v2", "created": "Mon, 19 Oct 2015 12:43:57 GMT"}], "update_date": "2015-10-20", "authors_parsed": [["Osterholzer", "Johannes", ""], ["Dietze", "Toni", ""], ["Herrmann", "Luisa", ""]]}, {"id": "1510.05460", "submitter": "Thorsten Wissmann", "authors": "Dmitry Chistikov, Wojciech Czerwi\\'nski, Piotr Hofman, Micha{\\l}\n  Pilipczuk, Michael Wehar", "title": "Shortest paths in one-counter systems", "comments": "28 pages, 2 figures", "journal-ref": "Logical Methods in Computer Science, Volume 15, Issue 1 (March 5,\n  2019) lmcs:5251", "doi": "10.23638/LMCS-15(1:19)2019", "report-no": null, "categories": "cs.FL cs.LO", "license": "http://creativecommons.org/licenses/by/4.0/", "abstract": "  We show that any one-counter automaton with $n$ states, if its language is\nnon-empty, accepts some word of length at most $O(n^2)$. This closes the gap\nbetween the previously known upper bound of $O(n^3)$ and lower bound of\n$\\Omega(n^2)$. More generally, we prove a tight upper bound on the length of\nshortest paths between arbitrary configurations in one-counter transition\nsystems (weaker bounds have previously appeared in the literature).\n", "versions": [{"version": "v1", "created": "Mon, 19 Oct 2015 13:21:29 GMT"}, {"version": "v2", "created": "Mon, 30 Oct 2017 17:06:57 GMT"}, {"version": "v3", "created": "Tue, 4 Sep 2018 16:45:05 GMT"}, {"version": "v4", "created": "Thu, 6 Sep 2018 12:06:54 GMT"}, {"version": "v5", "created": "Mon, 4 Mar 2019 11:38:20 GMT"}], "update_date": "2019-04-29", "authors_parsed": [["Chistikov", "Dmitry", ""], ["Czerwi\u0144ski", "Wojciech", ""], ["Hofman", "Piotr", ""], ["Pilipczuk", "Micha\u0142", ""], ["Wehar", "Michael", ""]]}, {"id": "1510.05724", "submitter": "Michael Blondin", "authors": "Michael Blondin, Alain Finkel, Christoph Haase, Serge Haddad", "title": "Approaching the Coverability Problem Continuously", "comments": "18 pages, 4 figures", "journal-ref": null, "doi": "10.1007/978-3-662-49674-9_28", "report-no": null, "categories": "cs.LO cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The coverability problem for Petri nets plays a central role in the\nverification of concurrent shared-memory programs. However, its high\nEXPSPACE-complete complexity poses a challenge when encountered in real-world\ninstances. In this paper, we develop a new approach to this problem which is\nprimarily based on applying forward coverability in continuous Petri nets as a\npruning criterion inside a backward coverability framework. A cornerstone of\nour approach is the efficient encoding of a recently developed polynomial-time\nalgorithm for reachability in continuous Petri nets into SMT. We demonstrate\nthe effectiveness of our approach on standard benchmarks from the literature,\nwhich shows that our approach decides significantly more instances than any\nexisting tool and is in addition often much faster, in particular on large\ninstances.\n", "versions": [{"version": "v1", "created": "Tue, 20 Oct 2015 00:02:48 GMT"}, {"version": "v2", "created": "Sat, 9 Jan 2016 20:31:45 GMT"}], "update_date": "2017-03-24", "authors_parsed": [["Blondin", "Michael", ""], ["Finkel", "Alain", ""], ["Haase", "Christoph", ""], ["Haddad", "Serge", ""]]}, {"id": "1510.07293", "submitter": "Peter Thiemann", "authors": "Martin Sulzmann and Peter Thiemann", "title": "Forkable Regular Expressions", "comments": "12 pages plus technical appendix, to appear in LATA 2016", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL cs.LO cs.PL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We consider forkable regular expressions, which enrich regular expressions\nwith a fork operator, to establish a formal basis for static and dynamic\nanalysis of the communication behavior of concurrent programs. We define a\nnovel compositional semantics for forkable expressions, establish their\nfundamental properties, and define derivatives for them as a basis for the\ngeneration of automata, for matching, and for language containment tests.\nForkable expressions may give rise to non-regular languages, in general, but we\nidentify sufficient conditions on expressions that guarantee finiteness of the\nautomata construction via derivatives.\n", "versions": [{"version": "v1", "created": "Sun, 25 Oct 2015 19:42:43 GMT"}, {"version": "v2", "created": "Tue, 8 Dec 2015 20:23:31 GMT"}], "update_date": "2015-12-09", "authors_parsed": [["Sulzmann", "Martin", ""], ["Thiemann", "Peter", ""]]}, {"id": "1510.07402", "submitter": "Magnus Steinby", "authors": "Magnus Steinby, Eija Jurvanen and Antonio Cano", "title": "Varieties of Unranked Tree Languages", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We study varieties that contain unranked tree languages over all alphabets.\nTrees are labeled with symbols from two alphabets, an unranked operator\nalphabet and an alphabet used for leaves only. Syntactic algebras of unranked\ntree languages are defined similarly as for ranked tree languages, and an\nunranked tree language is shown to be recognizable iff its syntactic algebra is\nregular, i.e., a finite unranked algebra in which the operations are defined by\nregular languages over its set of elements. We establish a bijective\ncorrespondence between varieties of unranked tree languages and varieties of\nregular algebras. For this, we develop a basic theory of unranked algebras in\nwhich algebras over all operator alphabets are considered together. Finally, we\nshow that the natural unranked counterparts of several general varieties of\nranked tree languages form varieties in our sense.\n  This work parallels closely the theory of general varieties of ranked tree\nlanguages and general varieties of finite algebras, but many nontrivial\nmodifications are required. For example, principal varieties as the basic\nbuilding blocks of varieties of tree languages have to be replaced by what we\ncall quasi-principal varieties, and we device a general scheme for defining\nthese by certain systems of congruences.\n", "versions": [{"version": "v1", "created": "Mon, 26 Oct 2015 08:45:17 GMT"}], "update_date": "2015-10-27", "authors_parsed": [["Steinby", "Magnus", ""], ["Jurvanen", "Eija", ""], ["Cano", "Antonio", ""]]}, {"id": "1510.08114", "submitter": "Anna Frid", "authors": "Anna E. Frid", "title": "Words containing all permutations of a family of factors", "comments": "Short 3-page note generalizing a lemma by de Luca and Zamboni", "journal-ref": null, "doi": null, "report-no": null, "categories": "math.CO cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We prove that if a uniformly recurrent infinite word contains as a factor any\nfinite permutation of words from an infinite family, then either this word is\nperiodic, or its complexity (that is, the number of factors) grows faster than\nlinearly. This result generalizes one of the lemmas of a recent paper by de\nLuca and Zamboni, where it was proved that such an infinite word cannot be\nSturmian.\n", "versions": [{"version": "v1", "created": "Tue, 27 Oct 2015 22:22:45 GMT"}], "update_date": "2015-10-29", "authors_parsed": [["Frid", "Anna E.", ""]]}, {"id": "1510.08149", "submitter": "Pierre Guillot", "authors": "Pierre Guillot", "title": "Cayley graphs and automatic sequences", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "math.CO cs.FL math.GR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We study those automatic sequences which are produced by an automaton whose\nunderlying graph is the Cayley graph of a finite group. For $2$-automatic\nsequences, we find a characterization in terms of what we call homogeneity, and\namong homogeneous sequences, we single out those enjoying what we call\nself-similarity. It turns out that self-similar $2$-automatic sequences (viewed\nup to a permutation of their alphabet) are in bijection with many interesting\nobjects, for example dessins d'enfants (covers of the Riemann sphere with three\npoints removed).\n  For any $p$ we show that, in the case of an automatic sequence produced \"by a\nCayley graph\", the group and indeed the automaton can be recovered canonically\nfrom the sequence.\n  Further, we show that a rational fraction may be associated to any automatic\nsequence. To compute this fraction explicitly, knowledge of a certain graph is\nrequired. We prove that for the sequences studied in the first part, the graph\nis simply the Cayley graph that we start from, and so calculations are\npossible.\n  We give applications to the study of the frequencies of letters.\n", "versions": [{"version": "v1", "created": "Wed, 28 Oct 2015 01:12:49 GMT"}], "update_date": "2015-10-29", "authors_parsed": [["Guillot", "Pierre", ""]]}, {"id": "1510.08748", "submitter": "Frederik Rye Skjoldjensen", "authors": "Philip Bille, Inge Li G{\\o}rtz, Frederik Rye Skjoldjensen", "title": "Subsequence Automata with Default Transitions", "comments": "Corrected typos", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL cs.DS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Let $S$ be a string of length $n$ with characters from an alphabet of size\n$\\sigma$. The \\emph{subsequence automaton} of $S$ (often called the\n\\emph{directed acyclic subsequence graph}) is the minimal deterministic finite\nautomaton accepting all subsequences of $S$. A straightforward construction\nshows that the size (number of states and transitions) of the subsequence\nautomaton is $O(n\\sigma)$ and that this bound is asymptotically optimal.\n  In this paper, we consider subsequence automata with \\emph{default\ntransitions}, that is, special transitions to be taken only if none of the\nregular transitions match the current character, and which do not consume the\ncurrent character. We show that with default transitions, much smaller\nsubsequence automata are possible, and provide a full trade-off between the\nsize of the automaton and the \\emph{delay}, i.e., the maximum number of\nconsecutive default transitions followed before consuming a character.\n  Specifically, given any integer parameter $k$, $1 < k \\leq \\sigma$, we\npresent a subsequence automaton with default transitions of size\n$O(nk\\log_{k}\\sigma)$ and delay $O(\\log_k \\sigma)$. Hence, with $k = 2$ we\nobtain an automaton of size $O(n \\log \\sigma)$ and delay $O(\\log \\sigma)$. On\nthe other extreme, with $k = \\sigma$, we obtain an automaton of size $O(n\n\\sigma)$ and delay $O(1)$, thus matching the bound for the standard subsequence\nautomaton construction. Finally, we generalize the result to multiple strings.\nThe key component of our result is a novel hierarchical automata construction\nof independent interest.\n", "versions": [{"version": "v1", "created": "Thu, 29 Oct 2015 15:47:24 GMT"}, {"version": "v2", "created": "Tue, 19 Jan 2016 09:42:20 GMT"}], "update_date": "2016-01-20", "authors_parsed": [["Bille", "Philip", ""], ["G\u00f8rtz", "Inge Li", ""], ["Skjoldjensen", "Frederik Rye", ""]]}, {"id": "1510.09092", "submitter": "Marcus Ramos", "authors": "Marcus V. M. Ramos, Ruy J. G. B. de Queiroz, Nelma Moreira, Jos\\'e\n  Carlos Bacelar Almeida", "title": "Formalization of context-free language theory", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Context-free language theory is a subject of high importance in computer\nlanguage processing technology as well as in formal language theory. This paper\npresents a formalization, using the Coq proof assistant, of fundamental results\nrelated to context-free grammars and languages. These include closure\nproperties (union, concatenation and Kleene star), grammar simplification\n(elimination of useless symbols inaccessible symbols, empty rules and unit\nrules) and the existence of a Chomsky Normal Form for context-free grammars.\n", "versions": [{"version": "v1", "created": "Fri, 30 Oct 2015 13:59:52 GMT"}], "update_date": "2015-11-02", "authors_parsed": [["Ramos", "Marcus V. M.", ""], ["de Queiroz", "Ruy J. G. B.", ""], ["Moreira", "Nelma", ""], ["Almeida", "Jos\u00e9 Carlos Bacelar", ""]]}]