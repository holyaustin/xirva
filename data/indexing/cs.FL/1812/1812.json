[{"id": "1812.01204", "submitter": "Zhiyu Liu", "authors": "Zhiyu Liu, Bo Wu, Jin Dai, Hai Lin", "title": "Distributed Communication-aware Motion Planning for Networked Mobile\n  Robots under Formal Specifications", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.SY cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Control and communication are often tightly coupled in motion planning of\nnetworked mobile robots, due to the fact that robotic motions will affect the\noverall communication quality, and the quality of service (QoS) of the\ncommunication among the robots will in turn affect their coordination\nperformance. In this paper, we propose a control theoretical motion planning\nframework for a team of networked mobile robots in order to accomplish\nhigh-level spatial and temporal motion objectives while optimizing\ncommunication QoS. Desired motion specifications are formulated as Signal\nTemporal Logic (STL), whereas the communication performances to be optimized\nare captured by recently proposed Spatial Temporal Reach and Escape Logic\n(STREL) formulas. Both the STL and STREL specifications are encoded as mixed\ninteger linear constraints posed on the system and/or environment state\nvariables of the mobile robot network, where satisfactory control strategies\ncan be computed by exploiting a distributed model predictive control (MPC)\napproach. To the best of the authors' knowledge, we are the first to study\ncontroller synthesis for STREL specifications. A two-layer hierarchical MPC\nprocedure is proposed to efficiently solve the problem, whose soundness and\ncompleteness are formally ensured. The effectiveness of the proposed framework\nis validated by simulation examples.\n", "versions": [{"version": "v1", "created": "Tue, 4 Dec 2018 03:53:45 GMT"}], "update_date": "2018-12-05", "authors_parsed": [["Liu", "Zhiyu", ""], ["Wu", "Bo", ""], ["Dai", "Jin", ""], ["Lin", "Hai", ""]]}, {"id": "1812.01674", "submitter": "Martin Beaudry", "authors": "Martin Beaudry", "title": "Proving that a Tree Language is not First-Order Definable", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We explore from an algebraic viewpoint the properties of the tree languages\ndefinable with a first-order formula involving the ancestor predicate, using\nthe description of these languages as those recognized by iterated block\nproducts of forest algebras defined from finite counter monoids. Proofs of\nnondefinability are infinite sequences of sets of forests, one for each level\nof the hierarchy of quantification levels that defines the corresponding\nvariety of languages. The forests at a given level are built recursively by\ninserting forests from previous level at the ports of a suitable set of\nmulticontexts. We show that a recursive proof exists for the syntactic algebra\nof every non-definable language. We also investigate certain types of uniform\nrecursive proofs. For this purpose, we define from a forest algebra an algebra\nof mappings and an extended algebra, which we also use to redefine the notion\nof aperiodicity in a way that generalizes the existing ones.\n", "versions": [{"version": "v1", "created": "Tue, 4 Dec 2018 20:45:43 GMT"}], "update_date": "2018-12-06", "authors_parsed": [["Beaudry", "Martin", ""]]}, {"id": "1812.01921", "submitter": "C\\'elia Borlido", "authors": "C\\'elia Borlido and Mai Gehrke and Andreas Krebs and Howard Straubing", "title": "Difference hierarchies and duality with an application to formal\n  languages", "comments": "31 pages", "journal-ref": null, "doi": null, "report-no": null, "categories": "math.GN cs.FL math.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The notion of a difference hierarchy, first introduced by Hausdorff, plays an\nimportant role in many areas of mathematics, logic and theoretical computer\nscience such as descriptive set theory, complexity theory, and the theory of\nregular languages and automata. From a lattice theoretic point of view, the\ndifference hierarchy over a bounded distributive lattice stratifies the Boolean\nalgebra generated by it according to the minimum length of difference chains\nrequired to describe the Boolean elements. While each Boolean element is given\nby a finite difference chain, there is no canonical such writing in general. We\nshow that, relative to the filter completion, or equivalently, the lattice of\nclosed upsets of the dual Priestley space, each Boolean element over the\nlattice has a canonical minimum length decomposition into a Hausdorff\ndifference. As a corollary each Boolean element over a (co-)Heyting algebra has\na canonical difference chain. With a further generalization of this result\ninvolving a directed family of adjunctions with meet-semilattices, we give an\nelementary proof of the fact that a regular language is given by a Boolean\ncombination of purely universal sentences using arbitrary numerical predicates\nif and only if it is given by a Boolean combination of purely universal\nsentences using only regular numerical predicates.\n", "versions": [{"version": "v1", "created": "Wed, 5 Dec 2018 11:22:26 GMT"}], "update_date": "2018-12-06", "authors_parsed": [["Borlido", "C\u00e9lia", ""], ["Gehrke", "Mai", ""], ["Krebs", "Andreas", ""], ["Straubing", "Howard", ""]]}, {"id": "1812.02600", "submitter": "Ryoma Sin'ya", "authors": "Ryoma Sin'ya", "title": "Note on the Infiniteness and Equivalence Problems for Word-MIX Languages", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In this note we provide a (decidable) graph-structural characterisation of\nthe infiniteness of $L(w_1, ..., w_k)$, where $L(w_1, ..., w_k) = \\{w \\in A^* |\n|w|_{w_1} = \\cdots = |w|_{w_k}\\}$ is the set of all words that contain the same\nnumber of subword occurrences of parameter words $w_1, ..., w_k$. We also\nprovide the decidable characterisation of the equivalence for those languages.\nAlthough those two decidability results are also obtained from more general\nknown decidability results on unambiguous constrained automata, this note tries\nto give a self-contained (without the knowledge about constrained automata)\nproof of the decidability.\n", "versions": [{"version": "v1", "created": "Thu, 6 Dec 2018 15:27:23 GMT"}, {"version": "v2", "created": "Fri, 7 Dec 2018 05:21:55 GMT"}, {"version": "v3", "created": "Sun, 27 Oct 2019 06:58:00 GMT"}], "update_date": "2019-10-29", "authors_parsed": [["Sin'ya", "Ryoma", ""]]}, {"id": "1812.03058", "submitter": "Tobias Kapp\\'e", "authors": "Tobias Kapp\\'e and Paul Brunet and Bas Luttik and Alexandra Silva and\n  Fabio Zanasi", "title": "On Series-Parallel Pomset Languages: Rationality, Context-Freeness and\n  Automata", "comments": "Accepted manuscript", "journal-ref": null, "doi": "10.1016/j.jlamp.2018.12.001", "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Concurrent Kleene Algebra (CKA) is a formalism to study concurrent programs.\nLike previous Kleene Algebra extensions, developing a correspondence between\ndenotational and operational perspectives is important, for both foundations\nand applications. This paper takes an important step towards such a\ncorrespondence, by precisely relating bi-Kleene Algebra (BKA), a fragment of\nCKA, to a novel type of automata, pomset automata (PAs). We show that PAs can\nimplement the BKA semantics of series-parallel rational expressions, and that a\nclass of PAs can be translated back to these expressions. We also characterise\nthe behavior of general PAs in terms of context-free pomset grammars;\nconsequently, universality, equivalence and series-parallel rationality of\ngeneral PAs are undecidable.\n", "versions": [{"version": "v1", "created": "Fri, 7 Dec 2018 15:04:39 GMT"}, {"version": "v2", "created": "Fri, 14 Dec 2018 10:51:49 GMT"}], "update_date": "2018-12-17", "authors_parsed": [["Kapp\u00e9", "Tobias", ""], ["Brunet", "Paul", ""], ["Luttik", "Bas", ""], ["Silva", "Alexandra", ""], ["Zanasi", "Fabio", ""]]}, {"id": "1812.03518", "submitter": "Petr Jancar", "authors": "Petr Jancar", "title": "Equivalence of pushdown automata via first-order grammars", "comments": "version accepted to JCSS", "journal-ref": null, "doi": "10.1016/j.jcss.2020.07.004", "report-no": null, "categories": "cs.LO cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  A decidability proof for bisimulation equivalence of first-order grammars is\ngiven. It is an alternative proof for a result by S\\'enizergues (1998, 2005)\nthat subsumes his affirmative solution of the famous decidability question for\ndeterministic pushdown automata. The presented proof is conceptually simpler,\nand a particular novelty is that it is not given as two semidecision procedures\nbut it provides an explicit algorithm that might be amenable to a complexity\nanalysis.\n", "versions": [{"version": "v1", "created": "Sun, 9 Dec 2018 16:44:37 GMT"}, {"version": "v2", "created": "Mon, 17 Aug 2020 11:22:53 GMT"}], "update_date": "2020-08-18", "authors_parsed": [["Jancar", "Petr", ""]]}, {"id": "1812.03882", "submitter": "Maurice Margenstern", "authors": "Maurice Margenstern", "title": "A decidability result for the halting problem of cellular automata in\n  the pentagrid", "comments": "18 pages, 10 figures", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL nlin.CG", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In this paper, we investigate the halting problem for deterministic cellula\nautomata in the pentagrid. We prove that the problem is decidable when the\ncellular automaton starts its computation from a finite configuration and when\nit has at most two states, one of them being a quiescent state.\n", "versions": [{"version": "v1", "created": "Mon, 10 Dec 2018 15:43:20 GMT"}], "update_date": "2018-12-11", "authors_parsed": [["Margenstern", "Maurice", ""]]}, {"id": "1812.03923", "submitter": "\\'I\\~nigo \\'Incer Romeo", "authors": "\\'I\\~nigo \\'Incer Romeo, Marten Lohstroh, Antonio Iannopollo, Edward\n  A. Lee, Alberto Sangiovanni-Vincentelli", "title": "A Metric for Linear Temporal Logic", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We propose a measure and a metric on the sets of infinite traces generated by\na set of atomic propositions. To compute these quantities, we first map\nproperties to subsets of the real numbers and then take the Lebesgue measure of\nthe resulting sets. We analyze how this measure is computed for Linear Temporal\nLogic (LTL) formulas. An implementation for computing the measure of bounded\nLTL properties is provided and explained. This implementation leverages SAT\nmodel counting and effects independence checks on subexpressions to compute the\nmeasure and metric compositionally.\n", "versions": [{"version": "v1", "created": "Fri, 30 Nov 2018 22:24:14 GMT"}], "update_date": "2018-12-11", "authors_parsed": [["Romeo", "\u00cd\u00f1igo \u00cdncer", ""], ["Lohstroh", "Marten", ""], ["Iannopollo", "Antonio", ""], ["Lee", "Edward A.", ""], ["Sangiovanni-Vincentelli", "Alberto", ""]]}, {"id": "1812.04050", "submitter": "Henk Don", "authors": "Henk Don, Hans Zantema", "title": "Counting symbol switches in synchronizing automata", "comments": "26 pages", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Instead of looking at the lengths of synchronizing words as in \\v{C}ern\\'y's\nconjecture, we look at the switch count of such words, that is, we only count\nthe switches from one letter to another. Where the synchronizing words of the\n\\v{C}ern\\'y automata $\\mathcal{C}_n$ have switch count linear in $n$, we wonder\nwhether synchronizing automata exist for which every synchronizing word has\nquadratic switch count. The answer is positive: we prove that switch count has\nthe same complexity as synchronizing word length. We give some series of\nsynchronizing automata yielding quadratic switch count, the best one reaching\n$\\frac{2}{3} n^2 + O(n)$ as switch count.\n  We investigate all binary automata on at most 9 states and determine the\nmaximal possible switch count. For all $3\\leq n\\leq 9$, a strictly higher\nswitch count can be reached by allowing more symbols. This behaviour differs\nfrom length, where for every $n$, no automata are known with higher\nsynchronization length than $\\mathcal{C}_n$, which has only two symbols. It is\nnot clear if this pattern extends to larger $n$. For $n\\geq 12$, our best\nconstruction only has two symbols.\n", "versions": [{"version": "v1", "created": "Mon, 10 Dec 2018 19:38:38 GMT"}], "update_date": "2018-12-12", "authors_parsed": [["Don", "Henk", ""], ["Zantema", "Hans", ""]]}, {"id": "1812.06347", "submitter": "Antonio Molina Lovett", "authors": "Antonio Molina Lovett and Jeffrey Shallit", "title": "Optimal Regular Expressions for Permutations", "comments": "14 pages", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The permutation language $P_n$ consists of all words that are permutations of\na fixed alphabet of size $n$. Using divide-and-conquer, we construct a regular\nexpression $R_n$ that specifies $P_n$. We then give explicit bounds for the\nlength of $R_n$, which we find to be $4^n n^{-(\\lg n)/4+\\Theta(1)}$, and use\nthese bounds to show that $R_n$ has minimum size over all regular expressions\nspecifying $P_n$.\n", "versions": [{"version": "v1", "created": "Sat, 15 Dec 2018 20:22:31 GMT"}], "update_date": "2018-12-18", "authors_parsed": [["Lovett", "Antonio Molina", ""], ["Shallit", "Jeffrey", ""]]}, {"id": "1812.06569", "submitter": "Suguman Bansal", "authors": "Suguman Bansal, Swarat Chaudhuri, and Moshe Y. Vardi", "title": "Comparator automata in quantitative verification", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL cs.LO", "license": "http://creativecommons.org/licenses/by/4.0/", "abstract": "  The notion of comparison between system runs is fundamental in formal\nverification. This concept is implicitly present in the verification of\nqualitative systems, and is more pronounced in the verification of quantitative\nsystems. In this work, we identify a novel mode of comparison in quantitative\nsystems: the online comparison of the aggregate values of two sequences of\nquantitative weights. This notion is embodied by {\\em comparator automata}\n({\\em comparators}, in short), a new class of automata that read two infinite\nsequences of weights synchronously and relate their aggregate values.\n  We show that {aggregate functions} that can be represented with B\\\"uchi\nautomaton result in comparators that are finite-state and accept by the B\\\"uchi\ncondition as well. Such {\\em $\\omega$-regular comparators} further lead to\ngeneric algorithms for a number of well-studied problems, including the\nquantitative inclusion and winning strategies in quantitative graph games with\nincomplete information, as well as related non-decision problems, such as\nobtaining a finite representation of all counterexamples in the quantitative\ninclusion problem.\n  We study comparators for two aggregate functions: discounted-sum and\nlimit-average. We prove that the discounted-sum comparator is $\\omega$-regular\niff the discount-factor is an integer. Not every aggregate function, however,\nhas an $\\omega$-regular comparator. Specifically, we show that the language of\nsequence-pairs for which limit-average aggregates exist is neither\n$\\omega$-regular nor $\\omega$-context-free. Given this result, we introduce the\nnotion of {\\em prefix-average} as a relaxation of limit-average aggregation,\nand show that it admits $\\omega$-context-free comparators.\n", "versions": [{"version": "v1", "created": "Mon, 17 Dec 2018 01:04:01 GMT"}], "update_date": "2018-12-18", "authors_parsed": [["Bansal", "Suguman", ""], ["Chaudhuri", "Swarat", ""], ["Vardi", "Moshe Y.", ""]]}, {"id": "1812.07072", "submitter": "Nathana\\\"el Fijalkow", "authors": "Nathana\\\"el Fijalkow and Pawe{\\l} Gawrychowski and Pierre Ohlmann", "title": "The complexity of mean payoff games using universal graphs", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.GT cs.FL cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We study the computational complexity of solving mean payoff games. This\nclass of games can be seen as an extension of parity games, and they have\nsimilar complexity status: in both cases solving them is in $\\textbf{NP} \\cap\n\\textbf{coNP}$ and not known to be in $\\textbf{P}$. In a breakthrough result\nCalude, Jain, Khoussainov, Li, and Stephan constructed in 2017 a\nquasipolynomial time algorithm for solving parity games, which was quickly\nfollowed by two other algorithms with the same complexity. Our objective is to\ninvestigate how these techniques can be extended to the study of mean payoff\ngames.\n  The starting point is the notion of separating automata, which has been used\nto present all three quasipolynomial time algorithms for parity games and gives\nthe best complexity to date. The notion naturally extends to mean payoff games\nand yields a class of algorithms for solving mean payoff games. The\ncontribution of this paper is to prove tight bounds on the complexity of\nalgorithms in this class. We construct two new algorithms for solving mean\npayoff games. Our first algorithm depends on the largest weight $N$ (in\nabsolute value) appearing in the graph and runs in sublinear time in $N$,\nimproving over the previously known linear dependence in $N$. Our second\nalgorithm runs in polynomial time for a fixed number $k$ of weights.\n  We complement our upper bounds by providing in both cases almost matching\nlower bounds, showing the limitations of the separating automata approach. We\nshow that we cannot hope to improve on the dependence in $N$ nor break the\nlinear dependence in the exponent in the number $k$ of weights. In particular,\nthis shows that separating automata do not yield a quasipolynomial algorithm\nfor solving mean payoff games.\n", "versions": [{"version": "v1", "created": "Mon, 17 Dec 2018 22:13:33 GMT"}, {"version": "v2", "created": "Mon, 4 Feb 2019 19:04:26 GMT"}], "update_date": "2019-02-06", "authors_parsed": [["Fijalkow", "Nathana\u00ebl", ""], ["Gawrychowski", "Pawe\u0142", ""], ["Ohlmann", "Pierre", ""]]}, {"id": "1812.07334", "submitter": "Claudio Di Ciccio", "authors": "Artem Polyvyanyy, Andreas Solti, Matthias Weidlich, Claudio Di Ciccio,\n  Jan Mendling", "title": "Monotone Precision and Recall Measures for Comparing Executions and\n  Specifications of Dynamic Systems", "comments": null, "journal-ref": null, "doi": "10.1145/3387909", "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The behavioural comparison of systems is an important concern of software\nengineering research. For example, the areas of specification discovery and\nspecification mining are concerned with measuring the consistency between a\ncollection of execution traces and a program specification. This problem is\nalso tackled in process mining with the help of measures that describe the\nquality of a process specification automatically discovered from execution\nlogs. Though various measures have been proposed, it was recently demonstrated\nthat they neither fulfil essential properties, such as monotonicity, nor can\nthey handle infinite behaviour. In this paper, we address this research problem\nby introducing a new framework for the definition of behavioural quotients. We\nproof that corresponding quotients guarantee desired properties that existing\nmeasures have failed to support. We demonstrate the application of the\nquotients for capturing precision and recall measures between a collection of\nrecorded executions and a system specification. We use a prototypical\nimplementation of these measures to contrast their monotonic assessment with\nmeasures that have been defined in prior research.\n", "versions": [{"version": "v1", "created": "Tue, 18 Dec 2018 12:46:54 GMT"}, {"version": "v2", "created": "Sat, 25 Apr 2020 16:17:50 GMT"}], "update_date": "2020-04-28", "authors_parsed": [["Polyvyanyy", "Artem", ""], ["Solti", "Andreas", ""], ["Weidlich", "Matthias", ""], ["Di Ciccio", "Claudio", ""], ["Mendling", "Jan", ""]]}, {"id": "1812.07359", "submitter": "Jan Philipp W\\\"achter", "authors": "Daniele D'Angeli, Emanuele Rodaro and Jan Philipp W\\\"achter", "title": "Orbit Expandability of Automaton Semigroups and Groups", "comments": null, "journal-ref": "Theoretical Computer Science 809 (2020) 418-429", "doi": "10.1016/j.tcs.2019.12.037", "report-no": null, "categories": "cs.FL math.GR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We introduce the notion of expandability in the context of automaton\nsemigroups and groups: a word is k-expandable if one can append a suffix to it\nsuch that the size of the orbit under the action of the automaton increases by\nat least k. This definition is motivated by the question which {\\omega}-words\nadmit infinite orbits: for such a word, every prefix is expandable.\n  In this paper, we show that, on input of a word u, an automaton T and a\nnumber k, it is decidable to check whether u is k-expandable with respect to\nthe action of T. In fact, this can be done in exponential nondeterministic\nspace. From this nondeterministic algorithm, we obtain a bound on the length of\na potential orbit-increasing suffix x. Moreover, we investigate the situation\nif the automaton is invertible and generates a group. In this case, we give an\nalgebraic characterization for the expandability of a word based on its shifted\nstabilizer. We also give a more efficient algorithm to decide expandability of\na word in the case of automaton groups, which allows us to improve the upper\nbound on the maximal orbit-increasing suffix length. Then, we investigate the\nsituation for reversible (and complete) automata and obtain that every word is\nexpandable with respect to these automata. Finally, we give a lower bound\nexample for the length of an orbit-increasing suffix.\n", "versions": [{"version": "v1", "created": "Tue, 18 Dec 2018 13:44:19 GMT"}, {"version": "v2", "created": "Wed, 15 Jan 2020 12:50:23 GMT"}], "update_date": "2020-01-28", "authors_parsed": [["D'Angeli", "Daniele", ""], ["Rodaro", "Emanuele", ""], ["W\u00e4chter", "Jan Philipp", ""]]}, {"id": "1812.07844", "submitter": "Eraldo Marinho", "authors": "Eraldo Pereira Marinho", "title": "Beyond z=0. The Deutsch-Jozsa decided monochromatic languages", "comments": "25 pages, 13 figures, minor changes on the previous version before\n  submitting to International Journal of Quantum Information", "journal-ref": null, "doi": null, "report-no": null, "categories": "quant-ph cs.CC cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The present work points out that the Deutsch-Jozsa algorithm was the first\nformal description of a quantum decider. In particular, it is studied here the\nclass of languages whose indicator functions allow the Deutsch-Jozsa algorithm\nto output a monochromatic result, beyond the trivial case z = 0 for constant\nindicator functions. To illustrate examples of randomly balanced languages and\nsome monochromatic cases, it was performed classical computational simulations\nof the Deutsch-Jozsa quantum algorithm for the specific cases of 4 and 6\nqubits, respectively. The general case of the Deutsch-Jozsa decided languages\nare named balanced languages, and their outcomes from the simulation suggest\nthat such languages are equivalent to the quantum superposition of the\nmonochromatic cases.\n", "versions": [{"version": "v1", "created": "Wed, 19 Dec 2018 09:48:22 GMT"}, {"version": "v2", "created": "Fri, 18 Jan 2019 11:35:48 GMT"}, {"version": "v3", "created": "Fri, 8 Feb 2019 17:46:22 GMT"}, {"version": "v4", "created": "Thu, 19 Sep 2019 17:03:22 GMT"}], "update_date": "2019-09-20", "authors_parsed": [["Marinho", "Eraldo Pereira", ""]]}, {"id": "1812.08269", "submitter": "Alexis Linard", "authors": "Alexis Linard, Colin de la Higuera and Frits Vaandrager", "title": "Learning Unions of k-Testable Languages", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  A classical problem in grammatical inference is to identify a language from a\nset of examples. In this paper, we address the problem of identifying a union\nof languages from examples that belong to several different unknown languages.\nIndeed, decomposing a language into smaller pieces that are easier to represent\nshould make learning easier than aiming for a too generalized language. In\nparticular, we consider k-testable languages in the strict sense (k-TSS). These\nare defined by a set of allowed prefixes, infixes (sub-strings) and suffixes\nthat words in the language may contain. We establish a Galois connection\nbetween the lattice of all languages over alphabet {\\Sigma}, and the lattice of\nk-TSS languages over {\\Sigma}. We also define a simple metric on k-TSS\nlanguages. The Galois connection and the metric allow us to derive an efficient\nalgorithm to learn the union of k-TSS languages. We evaluate our algorithm on\nan industrial dataset and thus demonstrate the relevance of our approach.\n", "versions": [{"version": "v1", "created": "Wed, 19 Dec 2018 22:09:42 GMT"}], "update_date": "2018-12-21", "authors_parsed": [["Linard", "Alexis", ""], ["de la Higuera", "Colin", ""], ["Vaandrager", "Frits", ""]]}, {"id": "1812.08948", "submitter": "\\'Etienne Andr\\'e", "authors": "\\'Etienne Andr\\'e and Shang-Wei Lin", "title": "The language preservation problem is undecidable for parametric\n  event-recording automata", "comments": "This is the author version of the article of the same name published\n  in Information Processing Letters, volume 136, pages 17--20 (2018)", "journal-ref": "Information Processing Letters 136: 17-20 (2018)", "doi": "10.1016/j.ipl.2018.03.013", "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Parametric timed automata (PTA) extend timed automata with unknown constants\n(\"parameters\"), at the price of undecidability of most interesting problems.\nThe (untimed) language preservation problem (\"given a parameter valuation, can\nwe find at least one other valuation with the same untimed language?\") is\nundecidable for PTAs. We prove that this problem remains undecidable for\nparametric event-recording automata (PERAs), a subclass of PTAs that\nconsiderably restrains the way the language can be used; we also show it\nremains undecidable even for slightly different definitions of the language,\ni.e., finite sequences of actions ending in or passing infinitely often through\naccepting locations, or just all finite untimed words (without accepting\nlocations).\n", "versions": [{"version": "v1", "created": "Fri, 21 Dec 2018 05:02:48 GMT"}], "update_date": "2018-12-24", "authors_parsed": [["Andr\u00e9", "\u00c9tienne", ""], ["Lin", "Shang-Wei", ""]]}, {"id": "1812.09519", "submitter": "Antoine Amarilli", "authors": "Antoine Amarilli, Pierre Bourhis, Stefan Mengel, Matthias Niewerth", "title": "Enumeration on Trees with Tractable Combined Complexity and Efficient\n  Updates", "comments": "16 pages of main material, 37 references, 11 pages of appendix. This\n  is the extended version with proofs of the PODS'19 paper. Except for minor\n  rephrasings and formatting differences, the contents are exactly the same as\n  the version published in the PODS'19 proceedings", "journal-ref": null, "doi": "10.1145/3294052.3319702", "report-no": null, "categories": "cs.DB cs.DS cs.FL cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We give an algorithm to enumerate the results on trees of monadic\nsecond-order (MSO) queries represented by nondeterministic tree automata. After\nlinear time preprocessing (in the input tree), we can enumerate answers with\nlinear delay (in each answer). We allow updates on the tree to take place at\nany time, and we can then restart the enumeration after logarithmic time in the\ntree. Further, all our combined complexities are polynomial in the automaton.\n  Our result follows our previous circuit-based enumeration algorithms based on\ndeterministic tree automata, and is also inspired by our earlier result on\nwords and nondeterministic sequential extended variable-set automata in the\ncontext of document spanners. We extend these results and combine them with a\nrecent tree balancing scheme by Niewerth, so that our enumeration structure\nsupports updates to the underlying tree in logarithmic time (with leaf\ninsertions, leaf deletions, and node relabelings). Our result implies that, for\nMSO queries with free first-order variables, we can enumerate the results with\nlinear preprocessing and constant-delay and update the underlying tree in\nlogarithmic time, which improves on several known results for words and trees.\n  Building on lower bounds from data structure research, we also show\nunconditionally that up to a doubly logarithmic factor the update time of our\nalgorithm is optimal. Thus, unlike other settings, there can be no algorithm\nwith constant update time.\n", "versions": [{"version": "v1", "created": "Sat, 22 Dec 2018 12:16:35 GMT"}, {"version": "v2", "created": "Tue, 27 Aug 2019 16:14:02 GMT"}], "update_date": "2019-08-28", "authors_parsed": [["Amarilli", "Antoine", ""], ["Bourhis", "Pierre", ""], ["Mengel", "Stefan", ""], ["Niewerth", "Matthias", ""]]}, {"id": "1812.11119", "submitter": "Arseny Shur", "authors": "Elena A. Petrova and Arseny M. Shur", "title": "Transition Property For Cube-Free Words", "comments": "14 pages, 5 figures", "journal-ref": null, "doi": "10.1007/978-3-030-19955-5\\_27", "report-no": null, "categories": "cs.FL math.CO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We study cube-free words over arbitrary non-unary finite alphabets and prove\nthe following structural property: for every pair $(u,v)$ of $d$-ary cube-free\nwords, if $u$ can be infinitely extended to the right and $v$ can be infinitely\nextended to the left respecting the cube-freeness property, then there exists a\n\"transition\" word $w$ over the same alphabet such that $uwv$ is cube free. The\ncrucial case is the case of the binary alphabet, analyzed in the central part\nof the paper.\n  The obtained \"transition property\", together with the developed technique,\nallowed us to solve cube-free versions of three old open problems by Restivo\nand Salemi. Besides, it has some further implications for combinatorics on\nwords; e.g., it implies the existence of infinite cube-free words of very big\nsubword (factor) complexity.\n", "versions": [{"version": "v1", "created": "Fri, 28 Dec 2018 17:16:27 GMT"}], "update_date": "2020-07-07", "authors_parsed": [["Petrova", "Elena A.", ""], ["Shur", "Arseny M.", ""]]}, {"id": "1812.11549", "submitter": "Moses Ganardi", "authors": "Moses Ganardi", "title": "Visibly Pushdown Languages over Sliding Windows", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://creativecommons.org/licenses/by/4.0/", "abstract": "  We investigate the class of visibly pushdown languages in the sliding window\nmodel. A sliding window algorithm for a language $L$ receives a stream of\nsymbols and has to decide at each time step whether the suffix of length $n$\nbelongs to $L$ or not. The window size $n$ is either a fixed number (in the\nfixed-size model) or can be controlled by an adversary in a limited way (in the\nvariable-size model). The main result of this paper states that for every\nvisibly pushdown language the space complexity in the variable-size sliding\nwindow model is either constant, logarithmic or linear in the window size. This\nextends previous results for regular languages.\n", "versions": [{"version": "v1", "created": "Sun, 30 Dec 2018 15:04:37 GMT"}], "update_date": "2019-01-01", "authors_parsed": [["Ganardi", "Moses", ""]]}, {"id": "1812.11597", "submitter": "James P. Crutchfield", "authors": "Adam Rupe and James P. Crutchfield", "title": "Spacetime Symmetries, Invariant Sets, and Additive Subdynamics of\n  Cellular Automata", "comments": "24 pages, 9 figures, 5 tables;\n  http://csc.ucdavis.edu/~cmg/compmech/pubs/ssisad.htm", "journal-ref": null, "doi": null, "report-no": null, "categories": "cond-mat.stat-mech cs.FL nlin.CG nlin.PS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Cellular automata are fully-discrete, spatially-extended dynamical systems\nthat evolve by simultaneously applying a local update function. Despite their\nsimplicity, the induced global dynamic produces a stunning array of\nrichly-structured, complex behaviors. These behaviors present a challenge to\ntraditional closed-form analytic methods. In certain cases, specifically when\nthe local update is additive, powerful techniques may be brought to bear,\nincluding characteristic polynomials, the ergodic theorem with Fourier\nanalysis, and endomorphisms of compact Abelian groups. For general dynamics,\nthough, where such analytics generically do not apply, behavior-driven analysis\nshows great promise in directly monitoring the emergence of structure and\ncomplexity in cellular automata. Here we detail a surprising connection between\ngeneralized symmetries in the spacetime fields of configuration orbits as\nrevealed by the behavior-driven local causal states, invariant sets of spatial\nconfigurations, and additive subdynamics which allow for closed-form analytic\nmethods.\n", "versions": [{"version": "v1", "created": "Sun, 30 Dec 2018 20:02:19 GMT"}], "update_date": "2019-01-01", "authors_parsed": [["Rupe", "Adam", ""], ["Crutchfield", "James P.", ""]]}, {"id": "1812.11927", "submitter": "Mark Minas", "authors": "Frank Drewes, Berthold Hoffmann, Mark Minas", "title": "Formalization and Correctness of Predictive Shift-Reduce Parsers for\n  Graph Grammars based on Hyperedge Replacement", "comments": "63 pages; fixed wrong email address of one of the authors and some\n  typos", "journal-ref": "Journal of Logical and Algebraic Methods in Programming, vol. 104,\n  April 2019, pp. 303-341", "doi": "10.1016/j.jlamp.2018.12.006", "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Hyperedge replacement (HR) grammars can generate NP-complete graph languages,\nwhich makes parsing hard even for fixed HR languages. Therefore, we study\npredictive shift-reduce (PSR) parsing that yields efficient parsers for a\nsubclass of HR grammars, by generalizing the concepts of SLR(1) string parsing\nto graphs. We formalize the construction of PSR parsers and show that it is\ncorrect. PSR parsers run in linear space and time, and are more efficient than\nthe predictive top-down (PTD) parsers recently developed by the authors.\n", "versions": [{"version": "v1", "created": "Mon, 31 Dec 2018 18:10:37 GMT"}, {"version": "v2", "created": "Mon, 14 Jan 2019 09:39:32 GMT"}], "update_date": "2019-03-12", "authors_parsed": [["Drewes", "Frank", ""], ["Hoffmann", "Berthold", ""], ["Minas", "Mark", ""]]}]