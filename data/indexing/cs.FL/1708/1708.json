[{"id": "1708.00639", "submitter": "Pawel Gawrychowski", "authors": "Mika Amit and Pawe{\\l} Gawrychowski", "title": "Distinct Squares in Circular Words", "comments": "to appear in SPIRE 2017", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  A circular word, or a necklace, is an equivalence class under conjugation of\na word. A fundamental question concerning regularities in standard words is\nbounding the number of distinct squares in a word of length $n$. The famous\nconjecture attributed to Fraenkel and Simpson is that there are at most $n$\nsuch distinct squares, yet the best known upper bound is $1.84n$ by Deza et al.\n[Discr. Appl. Math. 180, 52-69 (2015)]. We consider a natural generalization of\nthis question to circular words: how many distinct squares can there be in all\ncyclic rotations of a word of length $n$? We prove an upper bound of $3.14n$.\nThis is complemented with an infinite family of words implying a lower bound of\n$1.25n$.\n", "versions": [{"version": "v1", "created": "Wed, 2 Aug 2017 08:22:34 GMT"}], "update_date": "2017-08-03", "authors_parsed": [["Amit", "Mika", ""], ["Gawrychowski", "Pawe\u0142", ""]]}, {"id": "1708.03603", "submitter": "Miko{\\l}aj Boja\\'nczyk", "authors": "Mikolaj Bojanczyk", "title": "Star Height via Games", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This paper proposes a new algorithm deciding the star height problem. As\nshown by Kirsten, the star height problem reduces to a problem concerning\nautomata with counters, called limitedness. The new contribution is a different\nalgorithm for the limitedness problem, which reduces it to solving a\nGale-Stewart game with an {\\omega}-regular winning condition.\n", "versions": [{"version": "v1", "created": "Fri, 11 Aug 2017 16:26:39 GMT"}], "update_date": "2017-08-14", "authors_parsed": [["Bojanczyk", "Mikolaj", ""]]}, {"id": "1708.04864", "submitter": "Emanuele Rodaro", "authors": "Emanuele Rodaro", "title": "Synchronizing automata and the language of minimal reset words", "comments": "17 pages", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL math.CO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We study a connection between synchronizing automata and its set $M$ of\nminimal reset words, i.e., such that no proper factor is a reset word. We first\nshow that any synchronizing automaton having the set of minimal reset words\nwhose set of factors does not contain a word of length at most\n$\\frac{1}{4}\\min\\{|u|: u\\in I\\}+\\frac{1}{16}$ has a reset word of length at\nmost $(n-\\frac{1}{2})^{2}$ In the last part of the paper we focus on the\nexistence of synchronizing automata with a given ideal $I$ that serves as the\nset of reset words. To this end, we introduce the notion of the tail structure\nof the (not necessarily regular) ideal $I=\\Sigma^{*}M\\Sigma^{*}$. With this\ntool, we first show the existence of an infinite strongly connected\nsynchronizing automaton $\\mathcal{A}$ having $I$ as the set of reset words and\nsuch that every other strongly connected synchronizing automaton having $I$ as\nthe set of reset words is an homomorphic image of $\\mathcal{A}$. Finally, we\nshow that for any non-unary regular ideal $I$ there is a strongly connected\nsynchronizing automaton having $I$ as the set of reset words with at most\n$(km^{k})2^{km^{k}n}$ states, where $k=|\\Sigma|$, $m$ is the length of a\nshortest word in $M$, and $n$ is the dimension of the smallest automaton\nrecognizing $M$ (state complexity of $M$). This automaton is computable and we\nshow an algorithm to compute it in time $\\mathcal{O}((k^{2}m^{k})2^{km^{k}n})$.\n", "versions": [{"version": "v1", "created": "Wed, 16 Aug 2017 12:52:47 GMT"}], "update_date": "2017-08-17", "authors_parsed": [["Rodaro", "Emanuele", ""]]}, {"id": "1708.05063", "submitter": "Shankara Narayanan Krishna", "authors": "Parosh Aziz Abdulla, Mohamed Faouzi Atig and S. Krishna", "title": "Communicating Timed Processes with Perfect Timed Channels", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We introduce the model of communicating timed automata (CTA) that extends the\nclassical models of finite-state processes communicating through FIFO perfect\nchannels and timed automata, in the sense that the finite-state processes are\nreplaced by timed automata, and messages inside the perfect channels are\nequipped with clocks representing their ages. In addition to the standard\noperations (resetting clocks, checking guards of clocks) each automaton can\neither (1) append a message to the tail of a channel with an initial age or (2)\nreceive the message at the head of a channel if its age satisfies a set of\ngiven constraints. In this paper, we show that the reachability problem is\nundecidable even in the case of two timed automata connected by one\nunidirectional timed channel if one allows global clocks (that the two automata\ncan check and manipulate). We prove that this undecidability still holds even\nfor CTA consisting of three timed automata and two unidirectional timed\nchannels (and without any global clock). However, the reachability problem\nbecomes decidable (in $\\mathsf{EXPTIME}$) in the case of two automata linked\nwith one unidirectional timed channel and with no global clock. Finally, we\nconsider the bounded-context case, where in each context, only one timed\nautomaton is allowed to receive messages from one channel while being able to\nsend messages to all the other timed channels. In this case we show that the\nreachability problem is decidable.\n", "versions": [{"version": "v1", "created": "Thu, 10 Aug 2017 05:21:40 GMT"}, {"version": "v2", "created": "Mon, 23 Oct 2017 05:19:22 GMT"}, {"version": "v3", "created": "Thu, 8 Feb 2018 18:05:11 GMT"}, {"version": "v4", "created": "Sun, 18 Mar 2018 12:02:56 GMT"}], "update_date": "2018-03-20", "authors_parsed": [["Abdulla", "Parosh Aziz", ""], ["Atig", "Mohamed Faouzi", ""], ["Krishna", "S.", ""]]}, {"id": "1708.06173", "submitter": "Ines Klimann", "authors": "Ines Klimann (IRIF)", "title": "To Infinity and Beyond", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL math.GR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We prove that if a group generated by a bireversible Mealy automaton contains\nan element of infinite order, its growth blows up and is necessarily\nexponential. As a direct consequence, no infinite virtually nilpotent group can\nbe generated by a bireversible Mealy automaton.\n", "versions": [{"version": "v1", "created": "Mon, 21 Aug 2017 12:15:33 GMT"}, {"version": "v2", "created": "Mon, 4 Sep 2017 12:24:38 GMT"}], "update_date": "2017-09-05", "authors_parsed": [["Klimann", "Ines", "", "IRIF"]]}, {"id": "1708.06226", "submitter": "EPTCS", "authors": "Erzs\\'ebet Csuhaj-Varj\\'u, P\\'al D\\\"om\\\"osi, Gy\\\"orgy Vaszil", "title": "Proceedings 15th International Conference on Automata and Formal\n  Languages", "comments": null, "journal-ref": "EPTCS 252, 2017", "doi": "10.4204/EPTCS.252", "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The 15th International Conference on Automata and Formal Languages (AFL 2017)\nwas held in Debrecen, Hungary, from September 4 to 6, 2017. The conference was\norganized by the Faculty of Informatics of the University of Debrecen and the\nFaculty of Informatics of the E\\\"otv\\\"os Lor\\'and University of Budapest.\nTopics of interest covered all aspects of automata and formal languages,\nincluding theory and applications.\n", "versions": [{"version": "v1", "created": "Mon, 21 Aug 2017 13:55:30 GMT"}], "update_date": "2017-08-22", "authors_parsed": [["Csuhaj-Varj\u00fa", "Erzs\u00e9bet", ""], ["D\u00f6m\u00f6si", "P\u00e1l", ""], ["Vaszil", "Gy\u00f6rgy", ""]]}, {"id": "1708.06228", "submitter": "Victor Marsault", "authors": "Victor Marsault", "title": "An efficient algorithm to decide periodicity of $b$-recognisable sets\n  using LSDF convention", "comments": null, "journal-ref": "Logical Methods in Computer Science, Volume 15, Issue 3 (July 31,\n  2019) lmcs:5656", "doi": "10.23638/LMCS-15(3:8)2019", "report-no": null, "categories": "cs.FL cs.LO", "license": "http://creativecommons.org/licenses/by/4.0/", "abstract": "  Let $b$ be an integer strictly greater than $1$. Each set of nonnegative\nintegers is represented in base $b$ by a language over $\\{0, 1, \\dots, b -\n1\\}$. The set is said to be $b$-recognisable if it is represented by a regular\nlanguage. It is known that ultimately periodic sets are $b$-recognisable, for\nevery base $b$, and Cobham's theorem implies the converse: no other set is\n$b$-recognisable in every base $b$.\n  We consider the following decision problem: let $S$ be a set of nonnegative\nintegers that is $b$-recognisable, given as a finite automaton over $\\{0,1,\n\\dots, b - 1\\}$, is $S$ periodic? Honkala showed in 1986 that this problem is\ndecidable. Later on, Leroux used in 2005 the convention to write number\nrepresentations with the least significant digit first (LSDF), and designed a\nquadratic algorithm to solve a more general problem.\n  We use here LSDF convention as well and give a structural description of the\nminimal automata that accept periodic sets. Then, we show that it can be\nverified in linear time if a minimal automaton meets this description. In\ngeneral, this yields a $O(b \\log(n))$ procedure to decide whether an automaton\nwith $n$ states accepts an ultimately periodic set of nonnegative integers.\n", "versions": [{"version": "v1", "created": "Mon, 21 Aug 2017 14:03:03 GMT"}, {"version": "v2", "created": "Mon, 7 May 2018 08:33:47 GMT"}, {"version": "v3", "created": "Wed, 9 May 2018 10:52:19 GMT"}, {"version": "v4", "created": "Fri, 26 Oct 2018 10:24:51 GMT"}, {"version": "v5", "created": "Wed, 19 Dec 2018 16:13:22 GMT"}, {"version": "v6", "created": "Tue, 30 Jul 2019 08:32:52 GMT"}], "update_date": "2019-10-23", "authors_parsed": [["Marsault", "Victor", ""]]}, {"id": "1708.06458", "submitter": "EPTCS", "authors": "Artiom Alhazov (Institute of Mathematics and Computer Science, Academy\n  of Sciences of Moldova), Rudolf Freund (Faculty of Informatics, TU Wien),\n  Sergiu Ivanov (TIMC-IMAG/DyCTiM, Faculty of Medicine of Grenoble), Sergey\n  Verlan (Laboratoire d'Algorithmique, Complexit\\'e et Logique, Universit\\'e\n  Paris Est Cr\\'eteil)", "title": "(Tissue) P Systems with Vesicles of Multisets", "comments": "In Proceedings AFL 2017, arXiv:1708.06226", "journal-ref": "EPTCS 252, 2017, pp. 11-25", "doi": "10.4204/EPTCS.252.6", "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We consider tissue P systems working on vesicles of multisets with the very\nsimple operations of insertion, deletion, and substitution of single objects.\nWith the whole multiset being enclosed in a vesicle, sending it to a target\ncell can be indicated in those simple rules working on the multiset. As\nderivation modes we consider the sequential mode, where exactly one rule is\napplied in a derivation step, and the set maximal mode, where in each\nderivation step a non-extendable set of rules is applied. With the set maximal\nmode, computational completeness can already be obtained with tissue P systems\nhaving a tree structure, whereas tissue P systems even with an arbitrary\ncommunication structure are not computationally complete when working in the\nsequential mode. Adding polarizations (-1, 0, 1 are sufficient) allows for\nobtaining computational completeness even for tissue P systems working in the\nsequential mode.\n", "versions": [{"version": "v1", "created": "Tue, 22 Aug 2017 00:47:36 GMT"}], "update_date": "2017-08-23", "authors_parsed": [["Alhazov", "Artiom", "", "Institute of Mathematics and Computer Science, Academy\n  of Sciences of Moldova"], ["Freund", "Rudolf", "", "Faculty of Informatics, TU Wien"], ["Ivanov", "Sergiu", "", "TIMC-IMAG/DyCTiM, Faculty of Medicine of Grenoble"], ["Verlan", "Sergey", "", "Laboratoire d'Algorithmique, Complexit\u00e9 et Logique, Universit\u00e9\n  Paris Est Cr\u00e9teil"]]}, {"id": "1708.06459", "submitter": "EPTCS", "authors": "Joey Becker (Department of Mathematics, University of Nebraska), F.\n  Blanchet-Sadri (Department of Computer Science, University of North\n  Carolina), Laure Flapan (Department of Mathematics, Yale University), Stephen\n  Watkins (Department of Mathematics, Vanderbilt University)", "title": "Unavoidable Sets of Partial Words of Uniform Length", "comments": "In Proceedings AFL 2017, arXiv:1708.06226", "journal-ref": "EPTCS 252, 2017, pp. 26-40", "doi": "10.4204/EPTCS.252.7", "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  A set X of partial words over a finite alphabet A is called unavoidable if\nevery two-sided infinite word over A has a factor compatible with an element of\nX. Unlike the case of a set of words without holes, the problem of deciding\nwhether or not a given finite set of n partial words over a k-letter alphabet\nis avoidable is NP-hard, even when we restrict to a set of partial words of\nuniform length. So classifying such sets, with parameters k and n, as avoidable\nor unavoidable becomes an interesting problem. In this paper, we work towards\nthis classification problem by investigating the maximum number of holes we can\nfill in unavoidable sets of partial words of uniform length over an alphabet of\nany fixed size, while maintaining the unavoidability property.\n", "versions": [{"version": "v1", "created": "Tue, 22 Aug 2017 00:47:56 GMT"}], "update_date": "2017-08-23", "authors_parsed": [["Becker", "Joey", "", "Department of Mathematics, University of Nebraska"], ["Blanchet-Sadri", "F.", "", "Department of Computer Science, University of North\n  Carolina"], ["Flapan", "Laure", "", "Department of Mathematics, Yale University"], ["Watkins", "Stephen", "", "Department of Mathematics, Vanderbilt University"]]}, {"id": "1708.06460", "submitter": "EPTCS", "authors": "Simon Beier (Institut f\\\"ur Informatik, Universit\\\"at Giessen), Markus\n  Holzer (Institut f\\\"ur Informatik, Universit\\\"at Giessen), Martin Kutrib\n  (Institut f\\\"ur Informatik, Universit\\\"at Giessen)", "title": "On the Descriptional Complexity of Operations on Semilinear Sets", "comments": "In Proceedings AFL 2017, arXiv:1708.06226", "journal-ref": "EPTCS 252, 2017, pp. 41-55", "doi": "10.4204/EPTCS.252.8", "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We investigate the descriptional complexity of operations on semilinear sets.\nRoughly speaking, a semilinear set is the finite union of linear sets, which\nare built by constant and period vectors. The interesting parameters of a\nsemilinear set are: (i) the maximal value that appears in the vectors of\nperiods and constants and (ii) the number of such sets of periods and constants\nnecessary to describe the semilinear set under consideration. More precisely,\nwe prove upper bounds on the union, intersection, complementation, and inverse\nhomomorphism. In particular, our result on the complementation upper bound\nanswers an open problem from [G. J. LAVADO, G. PIGHIZZINI, S. SEKI: Operational\nState Complexity of Parikh Equivalence, 2014].\n", "versions": [{"version": "v1", "created": "Tue, 22 Aug 2017 00:48:14 GMT"}], "update_date": "2017-08-23", "authors_parsed": [["Beier", "Simon", "", "Institut f\u00fcr Informatik, Universit\u00e4t Giessen"], ["Holzer", "Markus", "", "Institut f\u00fcr Informatik, Universit\u00e4t Giessen"], ["Kutrib", "Martin", "", "Institut f\u00fcr Informatik, Universit\u00e4t Giessen"]]}, {"id": "1708.06461", "submitter": "EPTCS", "authors": "F. Blanchet-Sadri (Department of Computer Science, University of North\n  Carolina), Kun Chen (Department of Computer Science, University of North\n  Carolina), Kenneth Hawes (Department of Mathematics, University of Virginia)", "title": "Dyck Words, Lattice Paths, and Abelian Borders", "comments": "In Proceedings AFL 2017, arXiv:1708.06226", "journal-ref": "EPTCS 252, 2017, pp. 56-70", "doi": "10.4204/EPTCS.252.9", "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We use results on Dyck words and lattice paths to derive a formula for the\nexact number of binary words of a given length with a given minimal abelian\nborder length, tightening a bound on that number from Christodoulakis et al.\n(Discrete Applied Mathematics, 2014). We also extend to any number of distinct\nabelian borders a result of Rampersad et al. (Developments in Language Theory,\n2013) on the exact number of binary words of a given length with no abelian\nborders. Furthermore, we generalize these results to partial words.\n", "versions": [{"version": "v1", "created": "Tue, 22 Aug 2017 00:48:32 GMT"}], "update_date": "2017-08-23", "authors_parsed": [["Blanchet-Sadri", "F.", "", "Department of Computer Science, University of North\n  Carolina"], ["Chen", "Kun", "", "Department of Computer Science, University of North\n  Carolina"], ["Hawes", "Kenneth", "", "Department of Mathematics, University of Virginia"]]}, {"id": "1708.06462", "submitter": "EPTCS", "authors": "F. Blanchet-Sadri (Department of Computer Science, University of North\n  Carolina), S. Osborne (Department of Computer Science, University of North\n  Carolina)", "title": "Constructing Words with High Distinct Square Densities", "comments": "In Proceedings AFL 2017, arXiv:1708.06226", "journal-ref": "EPTCS 252, 2017, pp. 71-85", "doi": "10.4204/EPTCS.252.10", "report-no": null, "categories": "cs.FL math.CO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Fraenkel and Simpson showed that the number of distinct squares in a word of\nlength n is bounded from above by 2n, since at most two distinct squares have\ntheir rightmost, or last, occurrence begin at each position. Improvements by\nIlie to $2n-\\Theta(\\log n)$ and by Deza et al. to 11n/6 rely on the study of\ncombinatorics of FS-double-squares, when the maximum number of two last\noccurrences of squares begin. In this paper, we first study how to maximize\nruns of FS-double-squares in the prefix of a word. We show that for a given\npositive integer m, the minimum length of a word beginning with m\nFS-double-squares, whose lengths are equal, is 7m+3. We construct such a word\nand analyze its distinct-square-sequence as well as its\ndistinct-square-density. We then generalize our construction. We also construct\nwords with high distinct-square-densities that approach 5/6.\n", "versions": [{"version": "v1", "created": "Tue, 22 Aug 2017 00:48:55 GMT"}], "update_date": "2017-08-23", "authors_parsed": [["Blanchet-Sadri", "F.", "", "Department of Computer Science, University of North\n  Carolina"], ["Osborne", "S.", "", "Department of Computer Science, University of North\n  Carolina"]]}, {"id": "1708.06463", "submitter": "EPTCS", "authors": "Manfred Droste (Universit\\\"at Leipzig, Institut f\\\"ur Informatik),\n  Zolt\\'an \\'Esik (University of Szeged, Department of Foundations of Computer\n  Science), Werner Kuich (Technische Universit\\\"at Wien, Institut f\\\"ur\n  Diskrete Mathematik und Geometrie)", "title": "The Triple-Pair Construction for Weighted $\\omega$-Pushdown Automata", "comments": "In Proceedings AFL 2017, arXiv:1708.06226. The article was prepared\n  as a joint work with the late Zolt\\'an \\'Esik (1951-2016) whose definite\n  intention was to publish the results", "journal-ref": "EPTCS 252, 2017, pp. 101-113", "doi": "10.4204/EPTCS.252.12", "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Let S be a complete star-omega semiring and Sigma be an alphabet. For a\nweighted omega-pushdown automaton P with stateset 1...n, n greater or equal to\n1, we show that there exists a mixed algebraic system over a complete\nsemiring-semimodule pair ((S<<Sigma*>>)^nxn, (S<<Sigma^omega>>)^n) such that\nthe behavior ||P|| of P is a component of a solution of this system. In case\nthe basic semiring is the Boolean semiring or the semiring of natural numbers\n(augmented with infinity), we show that there exists a mixed context-free\ngrammar that generates ||P||. The construction of the mixed context-free\ngrammar from P is a generalization of the well known triple construction and is\ncalled now triple-pair construction for omega-pushdown automata.\n", "versions": [{"version": "v1", "created": "Tue, 22 Aug 2017 00:49:39 GMT"}], "update_date": "2017-08-23", "authors_parsed": [["Droste", "Manfred", "", "Universit\u00e4t Leipzig, Institut f\u00fcr Informatik"], ["\u00c9sik", "Zolt\u00e1n", "", "University of Szeged, Department of Foundations of Computer\n  Science"], ["Kuich", "Werner", "", "Technische Universit\u00e4t Wien, Institut f\u00fcr\n  Diskrete Mathematik und Geometrie"]]}, {"id": "1708.06464", "submitter": "EPTCS", "authors": "Markus Holzer (Institut f\\\"ur Informatik, Universit\\\"at Giessen),\n  Martin Kutrib (Institut f\\\"ur Informatik, Universit\\\"at Giessen), Andreas\n  Malcher (Institut f\\\"ur Informatik, Universit\\\"at Giessen), Matthias\n  Wendlandt (Institut f\\\"ur Informatik, Universit\\\"at Giessen)", "title": "Input-Driven Double-Head Pushdown Automata", "comments": "In Proceedings AFL 2017, arXiv:1708.06226", "journal-ref": "EPTCS 252, 2017, pp. 128-142", "doi": "10.4204/EPTCS.252.14", "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We introduce and study input-driven deterministic and nondeterministic\ndouble-head pushdown automata. A double-head pushdown automaton is a slight\ngeneralization of an ordinary pushdown automaton working with two input heads\nthat move in opposite directions on the common input tape. In every step one\nhead is moved and the automaton decides on acceptance if the heads meet.\nDemanding the automaton to work input-driven it is required that every input\nsymbol uniquely defines the action on the pushdown store (push, pop, state\nchange). Normally this is modeled by a partition of the input alphabet and is\ncalled a signature. Since our automaton model works with two heads either both\nheads respect the same signature or each head owes its own signature. This\nresults in two variants of input-driven double-head pushdown automata. The\ninduced language families on input-driven double-head pushdown automata are\nstudied from the perspectives of their language describing capability, their\nclosure properties, and decision problems.\n", "versions": [{"version": "v1", "created": "Tue, 22 Aug 2017 00:50:23 GMT"}], "update_date": "2017-08-23", "authors_parsed": [["Holzer", "Markus", "", "Institut f\u00fcr Informatik, Universit\u00e4t Giessen"], ["Kutrib", "Martin", "", "Institut f\u00fcr Informatik, Universit\u00e4t Giessen"], ["Malcher", "Andreas", "", "Institut f\u00fcr Informatik, Universit\u00e4t Giessen"], ["Wendlandt", "Matthias", "", "Institut f\u00fcr Informatik, Universit\u00e4t Giessen"]]}, {"id": "1708.06465", "submitter": "EPTCS", "authors": "Giovanna J. Lavado (Dipartimento di Informatica, Universit\\`a degli\n  Studi di Milano), Giovanni Pighizzini (Dipartimento di Informatica,\n  Universit\\`a degli Studi di Milano), Luca Prigioniero (Dipartimento di\n  Informatica, Universit\\`a degli Studi di Milano)", "title": "Weakly and Strongly Irreversible Regular Languages", "comments": "In Proceedings AFL 2017, arXiv:1708.06226", "journal-ref": "EPTCS 252, 2017, pp. 143-156", "doi": "10.4204/EPTCS.252.15", "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Finite automata whose computations can be reversed, at any point, by knowing\nthe last k symbols read from the input, for a fixed k, are considered. These\ndevices and their accepted languages are called k-reversible automata and\nk-reversible languages, respectively. The existence of k-reversible languages\nwhich are not (k-1)-reversible is known, for each k>1. This gives an infinite\nhierarchy of weakly irreversible languages, i.e., languages which are\nk-reversible for some k. Conditions characterizing the class of k-reversible\nlanguages, for each fixed k, and the class of weakly irreversible languages are\nobtained. From these conditions, a procedure that given a finite automaton\ndecides if the accepted language is weakly or strongly (i.e., not weakly)\nirreversible is described. Furthermore, a construction which allows to\ntransform any finite automaton which is not k-reversible, but which accepts a\nk-reversible language, into an equivalent k-reversible finite automaton, is\npresented.\n", "versions": [{"version": "v1", "created": "Tue, 22 Aug 2017 00:50:39 GMT"}], "update_date": "2017-08-23", "authors_parsed": [["Lavado", "Giovanna J.", "", "Dipartimento di Informatica, Universit\u00e0 degli\n  Studi di Milano"], ["Pighizzini", "Giovanni", "", "Dipartimento di Informatica,\n  Universit\u00e0 degli Studi di Milano"], ["Prigioniero", "Luca", "", "Dipartimento di\n  Informatica, Universit\u00e0 degli Studi di Milano"]]}, {"id": "1708.06466", "submitter": "EPTCS", "authors": "Laurette Marais (Department of Computer Science, Stellenbosch\n  University and Meraka Institute, CSIR), Lynette van Zijl (Department of\n  Computer Science, Stellenbosch University)", "title": "Descriptional Complexity of Non-Unary Self-Verifying Symmetric\n  Difference Automata", "comments": "In Proceedings AFL 2017, arXiv:1708.06226", "journal-ref": "EPTCS 252, 2017, pp. 157-169", "doi": "10.4204/EPTCS.252.16", "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Previously, self-verifying symmetric difference automata were defined and a\ntight bound of 2^n-1-1 was shown for state complexity in the unary case. We now\nconsider the non-unary case and show that, for every n at least 2, there is a\nregular language L_n accepted by a non-unary self-verifying symmetric\ndifference nondeterministic automaton with n states, such that its equivalent\nminimal deterministic finite automaton has 2^n-1 states. Also, given any\nSV-XNFA with n states, it is possible, up to isomorphism, to find at most\nanother |GL(n,Z_2)|-1 equivalent SV-XNFA.\n", "versions": [{"version": "v1", "created": "Tue, 22 Aug 2017 00:50:55 GMT"}], "update_date": "2017-08-23", "authors_parsed": [["Marais", "Laurette", "", "Department of Computer Science, Stellenbosch\n  University and Meraka Institute, CSIR"], ["van Zijl", "Lynette", "", "Department of\n  Computer Science, Stellenbosch University"]]}, {"id": "1708.06467", "submitter": "EPTCS", "authors": "Alexander Meduna (Department of Information Systems, Faculty of\n  Information Technology, Brno University of Technology), Jakub Marti\\v{s}ko\n  (Department of Information Systems, Faculty of Information Technology, Brno\n  University of Technology)", "title": "CD Grammar Systems with Two Propagating Scattered Context Components\n  Characterize the Family of Context Sensitive Languages", "comments": "In Proceedings AFL 2017, arXiv:1708.06226", "journal-ref": "EPTCS 252, 2017, pp. 170-179", "doi": "10.4204/EPTCS.252.17", "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The L(PSCG)=L(CS) problem asks whether propagating scattered context grammars\nand context sensitive grammars are equivalent. The presented paper reformulates\nand answers this problem in terms of CD grammar systems. More specifically, it\ncharacterizes the family of context sensitive languages by two-component CD\ngrammar systems with propagating scattered context rules.\n", "versions": [{"version": "v1", "created": "Tue, 22 Aug 2017 00:51:21 GMT"}], "update_date": "2017-08-23", "authors_parsed": [["Meduna", "Alexander", "", "Department of Information Systems, Faculty of\n  Information Technology, Brno University of Technology"], ["Marti\u0161ko", "Jakub", "", "Department of Information Systems, Faculty of Information Technology, Brno\n  University of Technology"]]}, {"id": "1708.06469", "submitter": "EPTCS", "authors": "Benedek Nagy (Department of Mathematics, Faculty of Arts and Sciences,\n  Eastern Mediterranean University), Shaghayegh Parchami (Department of\n  Mathematics, Faculty of Arts and Sciences, Eastern Mediterranean University),\n  Hamid Mir-Mohammad-Sadeghi (Department of Mathematics, Faculty of Arts and\n  Sciences, Eastern Mediterranean University)", "title": "A New Sensing 5'-->3' Watson-Crick Automata Concept", "comments": "In Proceedings AFL 2017, arXiv:1708.06226", "journal-ref": "EPTCS 252, 2017, pp. 195-204", "doi": "10.4204/EPTCS.252.19", "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Watson-Crick (WK) finite automata are working on a Watson-Crick tape, that\nis, on a DNA molecule. Therefore, it has two reading heads. While in\ntraditional WK automata both heads read the whole input in the same physical\ndirection, in 5'->3' WK automata the heads start from the two extremes and read\nthe input in opposite direction. In sensing 5'->3' WK automata the process on\nthe input is finished when the heads meet. Since the heads of a WK automaton\nmay read longer strings in a transition, in previous models a so-called sensing\nparameter took care for the proper meeting of the heads (not allowing to read\nthe same positions of the input in the last step). In this paper, a new model\nis investigated, which works without the sensing parameter (it is done by an\nappropriate change of the concept of configuration). Consequently, the accepted\nlanguage classes of the variants are also changed. Various hierarchy results\nare proven in the paper.\n", "versions": [{"version": "v1", "created": "Tue, 22 Aug 2017 00:52:08 GMT"}], "update_date": "2017-08-23", "authors_parsed": [["Nagy", "Benedek", "", "Department of Mathematics, Faculty of Arts and Sciences,\n  Eastern Mediterranean University"], ["Parchami", "Shaghayegh", "", "Department of\n  Mathematics, Faculty of Arts and Sciences, Eastern Mediterranean University"], ["Mir-Mohammad-Sadeghi", "Hamid", "", "Department of Mathematics, Faculty of Arts and\n  Sciences, Eastern Mediterranean University"]]}, {"id": "1708.06470", "submitter": "EPTCS", "authors": "Martin Pl\\'atek (Charles University, Department of Computer Science),\n  Friedrich Otto (Universit\\\"at Kassel, Fachbereich Elektrotechnik/Informatik)", "title": "On h-Lexicalized Restarting Automata", "comments": "In Proceedings AFL 2017, arXiv:1708.06226", "journal-ref": "EPTCS 252, 2017, pp. 219-233", "doi": "10.4204/EPTCS.252.21", "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Following some previous studies on restarting automata, we introduce a\nrefined model - the h-lexicalized restarting automaton (h-RLWW). We argue that\nthis model is useful for expressing lexicalized syntax in computational\nlinguistics. We compare the input languages, which are the languages\ntraditionally considered in automata theory, to the so-called basic and\nh-proper languages, which are (implicitly) used by categorial grammars, the\noriginal tool for the description of lexicalized syntax. The basic and h-proper\nlanguages allow us to stress several nice properties of h-lexicalized\nrestarting automata, and they are suitable for modeling the analysis by\nreduction and, subsequently, for the development of categories of a lexicalized\nsyntax. Based on the fact that a two-way deterministic monotone restarting\nautomaton can be transformed into an equivalent deterministic monotone\nRL-automaton in (Marcus) contextual form, we obtain a transformation from\nmonotone RLWW-automata that recognize the class CFL of context-free languages\nas their input languages to deterministic monotone h-RLWW-automata that\nrecognize CFL through their h-proper languages. Through this transformation we\nobtain automata with the complete correctness preserving property and an\ninfinite hierarchy within CFL, based on the size of the read/write window.\nAdditionally, we consider h-RLWW-automata that are allowed to perform multiple\nrewrite steps per cycle, and we establish another infinite hierarchy above CFL\nthat is based on the number of rewrite steps that may be executed within a\ncycle. The corresponding separation results and their proofs illustrate the\ntransparency of h-RLWW-automata that work with the (complete or cyclic)\ncorrectness preserving property\n", "versions": [{"version": "v1", "created": "Tue, 22 Aug 2017 00:52:31 GMT"}], "update_date": "2017-08-23", "authors_parsed": [["Pl\u00e1tek", "Martin", "", "Charles University, Department of Computer Science"], ["Otto", "Friedrich", "", "Universit\u00e4t Kassel, Fachbereich Elektrotechnik/Informatik"]]}, {"id": "1708.07233", "submitter": "EPTCS", "authors": "Ian Cassar (Reykjavik University), Adrian Francalanza (University of\n  Malta), Claudio Antares Mezzina (IMT School for Advanced Studies Lucca,\n  Italy), Emilio Tuosto (University of Leicester, UK)", "title": "Reliability and Fault-Tolerance by Choreographic Design", "comments": "In Proceedings PrePost 2017, arXiv:1708.06889", "journal-ref": "EPTCS 254, 2017, pp. 69-80", "doi": "10.4204/EPTCS.254.6", "report-no": null, "categories": "cs.PL cs.DC cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Distributed programs are hard to get right because they are required to be\nopen, scalable, long-running, and tolerant to faults. In particular, the recent\napproaches to distributed software based on (micro-)services where different\nservices are developed independently by disparate teams exacerbate the problem.\nIn fact, services are meant to be composed together and run in open context\nwhere unpredictable behaviours can emerge. This makes it necessary to adopt\nsuitable strategies for monitoring the execution and incorporate recovery and\nadaptation mechanisms so to make distributed programs more flexible and robust.\nThe typical approach that is currently adopted is to embed such mechanisms in\nthe program logic, which makes it hard to extract, compare and debug. We\npropose an approach that employs formal abstractions for specifying failure\nrecovery and adaptation strategies. Although implementation agnostic, these\nabstractions would be amenable to algorithmic synthesis of code, monitoring and\ntests. We consider message-passing programs (a la Erlang, Go, or MPI) that are\ngaining momentum both in academia and industry. Our research agenda consists of\n(1) the definition of formal behavioural models encompassing failures, (2) the\nspecification of the relevant properties of adaptation and recovery strategy,\n(3) the automatic generation of monitoring, recovery, and adaptation logic in\ntarget languages of interest.\n", "versions": [{"version": "v1", "created": "Thu, 24 Aug 2017 00:39:55 GMT"}], "update_date": "2017-08-25", "authors_parsed": [["Cassar", "Ian", "", "Reykjavik University"], ["Francalanza", "Adrian", "", "University of\n  Malta"], ["Mezzina", "Claudio Antares", "", "IMT School for Advanced Studies Lucca,\n  Italy"], ["Tuosto", "Emilio", "", "University of Leicester, UK"]]}, {"id": "1708.07366", "submitter": "Martin Sulzmann", "authors": "Martin Sulzmann and Peter Thiemann", "title": "A Computational Interpretation of Context-Free Expressions", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL cs.LO cs.PL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We phrase parsing with context-free expressions as a type inhabitation\nproblem where values are parse trees and types are context-free expressions. We\nfirst show how containment among context-free and regular expressions can be\nreduced to a reachability problem by using a canonical representation of\nstates. The proofs-as-programs principle yields a computational interpretation\nof the reachability problem in terms of a coercion that transforms the parse\ntree for a context-free expression into a parse tree for a regular expression.\nIt also yields a partial coercion from regular parse trees to context-free\nones. The partial coercion from the trivial language of all words to a\ncontext-free expression corresponds to a predictive parser for the expression.\n", "versions": [{"version": "v1", "created": "Thu, 24 Aug 2017 12:02:28 GMT"}], "update_date": "2017-08-25", "authors_parsed": [["Sulzmann", "Martin", ""], ["Thiemann", "Peter", ""]]}, {"id": "1708.08118", "submitter": "Samuel J. van Gool", "authors": "Samuel J. v. Gool and Benjamin Steinberg", "title": "Merge decompositions, two-sided Krohn-Rhodes, and aperiodic pointlikes", "comments": "8 pages", "journal-ref": null, "doi": null, "report-no": null, "categories": "math.GR cs.FL math.RA", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This paper provides short proofs of two fundamental theorems of finite\nsemigroup theory whose previous proofs were significantly longer, namely the\ntwo-sided Krohn-Rhodes decomposition theorem and Henckell's aperiodic pointlike\ntheorem, using a new algebraic technique that we call the merge decomposition.\nA prototypical application of this technique decomposes a semigroup $T$ into a\ntwo-sided semidirect product whose components are built from two subsemigroups\n$T_1,T_2$, which together generate $T$, and the subsemigroup generated by their\nsetwise product $T_1T_2$. In this sense we decompose $T$ by merging the\nsubsemigroups $T_1$ and $T_2$. More generally, our technique merges semigroup\nhomomorphisms from free semigroups.\n", "versions": [{"version": "v1", "created": "Sun, 27 Aug 2017 18:20:21 GMT"}], "update_date": "2017-08-29", "authors_parsed": [["Gool", "Samuel J. v.", ""], ["Steinberg", "Benjamin", ""]]}, {"id": "1708.08731", "submitter": "Matthias H\\\"oschele", "authors": "Matthias H\\\"oschele, Alexander Kampmann, Andreas Zeller", "title": "Active Learning of Input Grammars", "comments": "12 pages", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.PL cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Knowing the precise format of a program's input is a necessary prerequisite\nfor systematic testing. Given a program and a small set of sample inputs, we\n(1) track the data flow of inputs to aggregate input fragments that share the\nsame data flow through program execution into lexical and syntactic entities;\n(2) assign these entities names that are based on the associated variable and\nfunction identifiers; and (3) systematically generalize production rules by\nmeans of membership queries. As a result, we need only a minimal set of sample\ninputs to obtain human-readable context-free grammars that reflect valid input\nstructure. In our evaluation on inputs like URLs, spreadsheets, or\nconfiguration files, our AUTOGRAM prototype obtains input grammars that are\nboth accurate and very readable - and that can be directly fed into test\ngenerators for comprehensive automated testing.\n", "versions": [{"version": "v1", "created": "Tue, 29 Aug 2017 13:02:44 GMT"}], "update_date": "2017-08-30", "authors_parsed": [["H\u00f6schele", "Matthias", ""], ["Kampmann", "Alexander", ""], ["Zeller", "Andreas", ""]]}, {"id": "1708.09073", "submitter": "Arlen Cox", "authors": "Arlen Cox and Jason Leasure", "title": "Model Checking Regular Language Constraints", "comments": "16 pages", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO cs.FL cs.SC", "license": "http://creativecommons.org/licenses/by/4.0/", "abstract": "  Even the fastest SMT solvers have performance problems with regular\nexpressions from real programs. Because these performance issues often arise\nfrom the problem representation (e.g. non-deterministic finite automata get\ndeterminized and regular expressions get unrolled), we revisit Boolean finite\nautomata, which allow for the direct and natural representation of any Boolean\ncombination of regular languages. By applying the IC3 model checking algorithm\nto Boolean finite automata, not only can we efficiently answer emptiness and\nuniversality problems, but through an extension, we can decide satisfiability\nof multiple variable string membership problems. We demonstrate the resulting\nsystem's effectiveness on a number of popular benchmarks and regular\nexpressions.\n", "versions": [{"version": "v1", "created": "Wed, 30 Aug 2017 01:10:03 GMT"}], "update_date": "2017-08-31", "authors_parsed": [["Cox", "Arlen", ""], ["Leasure", "Jason", ""]]}, {"id": "1708.09253", "submitter": "Dominik Velan", "authors": "Tom\\'a\\v{s} Br\\'azdil, Krishnendu Chatterjee, Anton\\'in Ku\\v{c}era,\n  Petr Novotn\\'y, Dominik Velan", "title": "Efficient Algorithms for Checking Fast Termination in VASS", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO cs.CC cs.DS cs.FL", "license": "http://creativecommons.org/publicdomain/zero/1.0/", "abstract": "  Vector Addition Systems with States (VASS) consists of a finite state space\nequipped with d counters, where in each transition every counter is\nincremented, decremented, or left unchanged. VASS provide a fundamental model\nfor analysis of concurrent processes, parametrized systems, and they are also\nused as abstract models for programs for bounds analysis. While termination is\nthe basic liveness property that asks the qualitative question of whether a\ngiven model always terminates or not, the more general quantitative question\nasks for bounds on the number of steps to termination. In the realm of\nquantitative bounds a fundamental problem is to obtain asymptotic bounds on\ntermination time. Large asymptotic bounds such as exponential or higher already\nsuggest that either there is some error in modeling, or the model is not useful\nin practice. Hence we focus on polynomial asymptotic bounds for VASS. While\nsome well-known approaches (e.g., lexicographic ranking functions) are neither\nsound nor complete with respect to polynomial bounds, other approaches only\npresent sound methods for upper bounds. In this work our main contributions are\nas follows: First, for linear asymptotic bounds we present a sound and complete\nmethod for VASS, and moreover, our algorithm runs in polynomial time. Second,\nwe classify VASS according the normals of the vectors of the cycles. We show\nthat singularities in the normal are the key reason for asymptotic bounds such\nas exponential and non-elementary for VASS. In absence of singularities, we\nshow that the asymptotic complexity bound is always polynomial and of the form\n${\\Theta}(n^k)$, for some k $\\leq$ d. We present an algorithm, with time\ncomplexity polynomial in the size of the VASS and exponential in dimension d,\nto compute the optimal k.\n", "versions": [{"version": "v1", "created": "Tue, 29 Aug 2017 12:29:41 GMT"}], "update_date": "2017-08-31", "authors_parsed": [["Br\u00e1zdil", "Tom\u00e1\u0161", ""], ["Chatterjee", "Krishnendu", ""], ["Ku\u010dera", "Anton\u00edn", ""], ["Novotn\u00fd", "Petr", ""], ["Velan", "Dominik", ""]]}, {"id": "1708.09658", "submitter": "Micha{\\l} Skrzypczak", "authors": "Micha{\\l} Skrzypczak", "title": "B\\\"uchi VASS recognise w-languages that are Sigma^1_1 - complete", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This short note exhibits an example of a Sigma^1_1-complete language that can\nbe recognised by a one blind counter B\\\"uchi automaton (or equivalently a\nB\\\"uchi VASS with only one place).\n", "versions": [{"version": "v1", "created": "Thu, 31 Aug 2017 10:39:04 GMT"}, {"version": "v2", "created": "Mon, 9 Oct 2017 16:09:22 GMT"}], "update_date": "2017-10-10", "authors_parsed": [["Skrzypczak", "Micha\u0142", ""]]}, {"id": "1708.09765", "submitter": "Thorsten Wissmann", "authors": "Miko{\\l}aj Boja\\'nczyk, Thomas Colcombet", "title": "Boundedness in languages of infinite words", "comments": null, "journal-ref": "Logical Methods in Computer Science, Volume 13, Issue 4 (October\n  26, 2017) lmcs:4016", "doi": "10.23638/LMCS-13(4:3)2017", "report-no": null, "categories": "cs.LO cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We define a new class of languages of $\\omega$-words, strictly extending\n$\\omega$-regular languages.\n  One way to present this new class is by a type of regular expressions. The\nnew expressions are an extension of $\\omega$-regular expressions where two new\nvariants of the Kleene star $L^*$ are added: $L^B$ and $L^S$. These new\nexponents are used to say that parts of the input word have bounded size, and\nthat parts of the input can have arbitrarily large sizes, respectively. For\ninstance, the expression $(a^Bb)^\\omega$ represents the language of infinite\nwords over the letters $a,b$ where there is a common bound on the number of\nconsecutive letters $a$. The expression $(a^Sb)^\\omega$ represents a similar\nlanguage, but this time the distance between consecutive $b$'s is required to\ntend toward the infinite.\n  We develop a theory for these languages, with a focus on decidability and\nclosure. We define an equivalent automaton model, extending B\\\"uchi automata.\nThe main technical result is a complementation lemma that works for languages\nwhere only one type of exponent---either $L^B$ or $L^S$---is used.\n  We use the closure and decidability results to obtain partial decidability\nresults for the logic MSOLB, a logic obtained by extending monadic second-order\nlogic with new quantifiers that speak about the size of sets.\n", "versions": [{"version": "v1", "created": "Thu, 31 Aug 2017 15:06:22 GMT"}, {"version": "v2", "created": "Wed, 25 Oct 2017 14:33:16 GMT"}], "update_date": "2018-01-03", "authors_parsed": [["Boja\u0144czyk", "Miko\u0142aj", ""], ["Colcombet", "Thomas", ""]]}]