[{"id": "1007.1045", "submitter": "Edoardo Carta-Gerardino", "authors": "Edoardo Carta-Gerardino, Parisa Babaali", "title": "Weighted Automata and Recurrence Equations for Regular Languages", "comments": "14 pages, 6 figures", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL cs.DM math.CO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Let $\\mathcal{P}(\\Sigma^*)$ be the semiring of languages, and consider its\nsubset $\\mathcal{P}(\\Sigma)$. In this paper we define the language recognized\nby a weighted automaton over $\\mathcal{P}(\\Sigma)$ and a one-letter alphabet.\nSimilarly, we introduce the notion of language recognition by linear recurrence\nequations with coefficients in $\\mathcal{P}(\\Sigma)$. As we will see, these two\ndefinitions coincide. We prove that the languages recognized by linear\nrecurrence equations with coefficients in $\\mathcal{P}(\\Sigma)$ are precisely\nthe regular languages, thus providing an alternative way to present these\nlanguages. A remarkable consequence of this kind of recognition is that it\ninduces a partition of the language into its cross-sections, where the $n$th\ncross-section contains all the words of length $n$ in the language. Finally, we\nshow how to use linear recurrence equations to calculate the density function\nof a regular language, which assigns to every $n$ the number of words of length\n$n$ in the language. We also show how to count the number of successful paths\nof a weighted automaton.\n", "versions": [{"version": "v1", "created": "Wed, 7 Jul 2010 04:27:59 GMT"}, {"version": "v2", "created": "Mon, 26 Jul 2010 17:02:32 GMT"}], "update_date": "2010-07-27", "authors_parsed": [["Carta-Gerardino", "Edoardo", ""], ["Babaali", "Parisa", ""]]}, {"id": "1007.1054", "submitter": "Larissa Meinicke", "authors": "Annabelle McIver and Larissa Meinicke and Carroll Morgan", "title": "Compositional closure for Bayes Risk in probabilistic noninterference", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We give a sequential model for noninterference security including probability\n(but not demonic choice), thus supporting reasoning about the likelihood that\nhigh-security values might be revealed by observations of low-security\nactivity. Our novel methodological contribution is the definition of a\nrefinement order and its use to compare security measures between\nspecifications and (their supposed) implementations. This contrasts with the\nmore common practice of evaluating the security of individual programs in\nisolation.\n  The appropriateness of our model and order is supported by our showing that\nour refinement order is the greatest compositional relation --the compositional\nclosure-- with respect to our semantics and an \"elementary\" order based on\nBayes Risk --- a security measure already in widespread use. We also relate\nrefinement to other measures such as Shannon Entropy.\n  By applying the approach to a non-trivial example, the anonymous-majority\nThree-Judges protocol, we demonstrate by example that correctness arguments can\nbe simplified by the sort of layered developments --through levels of\nincreasing detail-- that are allowed and encouraged by compositional semantics.\n", "versions": [{"version": "v1", "created": "Wed, 7 Jul 2010 05:21:00 GMT"}], "update_date": "2010-07-08", "authors_parsed": [["McIver", "Annabelle", ""], ["Meinicke", "Larissa", ""], ["Morgan", "Carroll", ""]]}, {"id": "1007.1333", "submitter": "Sven Schewe", "authors": "Sven Schewe", "title": "Minimisation of Deterministic Parity and Buchi Automata and Relative\n  Minimisation of Deterministic Finite Automata", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In this report we study the problem of minimising deterministic automata over\nfinite and infinite words. Deterministic finite automata are the simplest\ndevices to recognise regular languages, and deterministic Buchi, Co-Buchi, and\nparity automata play a similar role in the recognition of \\omega-regular\nlanguages. While it is well known that the minimisation of deterministic finite\nand weak automata is cheap, the complexity of minimising deterministic Buchi\nand parity automata has remained an open challenge. We establish the\nNP-completeness of these problems. A second contribution of this report is the\nintroduction of relaxed minimisation of deterministic finite automata. Like\nhyper-minimisation, relaxed minimisation allows for some changes in the\nlanguage of the automaton: We seek a smallest automaton that, when used as a\nmonitor, provides a wrong answer only a bounded number of times in any run of a\nsystem. We argue that minimisation of finite automata, hyper-minimisation,\nrelaxed minimisation, and the minimisation of deterministic Buchi (or Co-Buchi)\nautomata are operations of increasing reduction power, as the respective\nequivalence relations on automata become coarser from left to right. When we\nallow for minor changes in the language, relaxed minimisation can therefore be\nconsidered as a more powerful minimisation technique than hyper-minimisation\nfrom the perspective of finite automata. From the perspective of Buchi and\nCo-Buchi automata, we gain a cheap algorithm for state-space reduction that\nalso turns out to be beneficial for further heuristic or exhaustive state-space\nreductions put on top of it.\n", "versions": [{"version": "v1", "created": "Thu, 8 Jul 2010 10:18:05 GMT"}, {"version": "v2", "created": "Mon, 14 Mar 2011 15:59:24 GMT"}], "update_date": "2011-03-15", "authors_parsed": [["Schewe", "Sven", ""]]}, {"id": "1007.1710", "submitter": "Tomas Brazdil", "authors": "Tomas Brazdil, Stefan Kiefer, Antonin Kucera, Ivana Hutarova Varekova", "title": "Runtime Analysis of Probabilistic Programs with Unbounded Recursion", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We study termination time and recurrence time in programs with unbounded\nrecursion, which are either randomized or operate on some statistically\nquantified inputs. As the underlying formal model for such programs we use\nprobabilistic pushdown automata (pPDA) which are equivalent to probabilistic\nrecursive state machines. We obtain tail bounds for the distribution of\ntermination time for pPDA. We also study the recurrence time for probabilistic\nrecursive programs that are not supposed to terminate (such as system daemons,\nnetwork servers, etc.). Typically, such programs react to certain requests\ngenerated by their environment, and hence operate in finite request-service\ncycles. We obtain bounds for the frequency of long request-service cycles.\n", "versions": [{"version": "v1", "created": "Sat, 10 Jul 2010 09:49:19 GMT"}, {"version": "v2", "created": "Thu, 31 May 2012 09:09:25 GMT"}], "update_date": "2012-06-01", "authors_parsed": [["Brazdil", "Tomas", ""], ["Kiefer", "Stefan", ""], ["Kucera", "Antonin", ""], ["Varekova", "Ivana Hutarova", ""]]}, {"id": "1007.2131", "submitter": "Soumyadip Bandyopadhyay", "authors": "S. Bandyopadhyay, D. Sarkar, C. R. Mandal", "title": "Equivalence Checking in Embedded Systems Design Verification", "comments": "This paper has been withdrawn by the author. I want to modify this\n  technical report. Please see arXiv:1010.4953", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In this report we focus on some aspects related to modeling and formal\nverification of embedded systems. Many models have been proposed to represent\nembedded systems. These models encompass a broad range of styles,\ncharacteristics, and application domains and include the extensions of finite\nstate machines, data flow graphs, communication processes and Petri nets. In\nthis report, we have used a PRES+ model (Petri net based Representation for\nEmbedded Systems) as an extension of classical Petri net model that captures\nconcurrency, timing behaviour of embedded systems; it allows systems to be\nrepresentative in different levels of abstraction and improves expressiveness\nby allowing the token to carry information. Modeling using PRES+, as discussed\nabove, may be convenient for specifying the input behaviour because it supports\nconcurrency. However, there is no equivalence checking method reported in the\nliterature for PRES+ models to the best of our knowledge. In contrast,\nequivalence checking of FSMD models exist. As a first step, therefore, we seek\nto devise an algorithm to translate PRES+ models to FSMD models.\n", "versions": [{"version": "v1", "created": "Tue, 13 Jul 2010 16:03:11 GMT"}, {"version": "v2", "created": "Wed, 14 Jul 2010 09:06:56 GMT"}, {"version": "v3", "created": "Wed, 18 Aug 2010 20:34:38 GMT"}, {"version": "v4", "created": "Fri, 20 Aug 2010 18:10:26 GMT"}], "update_date": "2010-10-26", "authors_parsed": [["Bandyopadhyay", "S.", ""], ["Sarkar", "D.", ""], ["Mandal", "C. R.", ""]]}, {"id": "1007.2353", "submitter": "Aleksei Kurgansky", "authors": "Oleksiy Kurganskyy and Igor Potapov", "title": "A measure of state transition of collective of stateless automata in\n  discrete environment", "comments": "13 pages, 3 figures", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL cs.DC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In this work a collective of interacting stateless automata in a discrete\ngeometric environment is considered as an integral automata-like computational\ndynamic object. For such distributed on the environment object different\napproaches to definition of the measure of state transition are possible. We\npropose a geometric approach for defining what a state is.\n", "versions": [{"version": "v1", "created": "Wed, 14 Jul 2010 15:16:27 GMT"}], "update_date": "2010-07-15", "authors_parsed": [["Kurganskyy", "Oleksiy", ""], ["Potapov", "Igor", ""]]}, {"id": "1007.2707", "submitter": "Tomas Masopust", "authors": "Jan Komenda, Tomas Masopust, Jan H. van Schuppen", "title": "Supervisory Control Synthesis of Discrete-Event Systems using\n  Coordination Scheme", "comments": "29 pages, 11 figures", "journal-ref": null, "doi": "10.1016/j.automatica.2011.07.008", "report-no": null, "categories": "math.OC cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Supervisory control of discrete-event systems with a global safety\nspecification and with only local supervisors is a difficult problem. For\nglobal specifications the equivalent conditions for local control synthesis to\nequal global control synthesis may not be met. This paper formulates and solves\na control synthesis problem for a generator with a global specification and\nwith a combination of a coordinator and local controllers. Conditional\ncontrollability is proven to be an equivalent condition for the existence of\nsuch a coordinated controller. A procedure to compute the least restrictive\nsolution is also provided in this paper and conditions are stated under which\nthe result of our procedure coincides with the supremal controllable\nsublanguage.\n", "versions": [{"version": "v1", "created": "Fri, 16 Jul 2010 07:13:39 GMT"}], "update_date": "2012-03-22", "authors_parsed": [["Komenda", "Jan", ""], ["Masopust", "Tomas", ""], ["van Schuppen", "Jan H.", ""]]}, {"id": "1007.2783", "submitter": "Pavel Krcal", "authors": "Pavel Krcal, Parosh Aziz Abdulla (Uppsala University), Wang Yi\n  (Uppsala University)", "title": "Sampled Semantics of Timed Automata", "comments": null, "journal-ref": "Logical Methods in Computer Science, Volume 6, Issue 3 (September\n  1, 2010) lmcs:868", "doi": "10.2168/LMCS-6(3:14)2010", "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Sampled semantics of timed automata is a finite approximation of their dense\ntime behavior. While the former is closer to the actual software or hardware\nsystems with a fixed granularity of time, the abstract character of the latter\nmakes it appealing for system modeling and verification. We study one aspect of\nthe relation between these two semantics, namely checking whether the system\nexhibits some qualitative (untimed) behaviors in the dense time which cannot be\nreproduced by any implementation with a fixed sampling rate. More formally, the\n\\emph{sampling problem} is to decide whether there is a sampling rate such that\nall qualitative behaviors (the untimed language) accepted by a given timed\nautomaton in dense time semantics can be also accepted in sampled semantics. We\nshow that this problem is decidable.\n", "versions": [{"version": "v1", "created": "Fri, 16 Jul 2010 14:40:35 GMT"}, {"version": "v2", "created": "Wed, 1 Sep 2010 15:44:56 GMT"}], "update_date": "2015-07-01", "authors_parsed": [["Krcal", "Pavel", "", "Uppsala University"], ["Abdulla", "Parosh Aziz", "", "Uppsala University"], ["Yi", "Wang", "", "Uppsala University"]]}, {"id": "1007.3021", "submitter": "Tomoyuki Yamakami", "authors": "Tomoyuki Yamakami", "title": "The Roles of Advice to One-Tape Linear-Time Turing Machines and Finite\n  Automata", "comments": "A4, 10 pt, 16 pages, 1 figure. This is a complete version of the\n  extended abstract, published in the Proceedings of the 20th International\n  Symposium on Algorithms and Computation (ISAAC 2009), Lecture Notes in\n  Computer Science, Springer-Verlag, Vol.5878, pp.933--942, December 16--18,\n  Hawaii, USA, 2009", "journal-ref": "International Journal of Foundations of Computer Science, Vol.21,\n  pp.941-962, 2010", "doi": null, "report-no": null, "categories": "cs.FL cs.CC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We discuss the power and limitation of various \"advice,\" when it is given\nparticularly to weak computational models of one-tape linear-time Turing\nmachines and one-way finite (state) automata. Of various advice types, we\nconsider deterministically-chosen advice (not necessarily algorithmically\ndetermined) and randomly-chosen advice (according to certain probability\ndistributions). In particular, we show that certain weak machines can be\nsignificantly enhanced in computational power when randomized advice is\nprovided in place of deterministic advice.\n", "versions": [{"version": "v1", "created": "Sun, 18 Jul 2010 17:20:03 GMT"}], "update_date": "2011-07-21", "authors_parsed": [["Yamakami", "Tomoyuki", ""]]}, {"id": "1007.3303", "submitter": "Zhaohua Luo", "authors": "Zhaohua Luo", "title": "A New Approach to Abstract Machines - Introduction to the Theory of\n  Configuration Machines", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO cs.FL math.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  An abstract machine is a theoretical model designed to perform a rigorous\nstudy of computation. Such a model usually consists of configurations,\ninstructions, programs, inputs and outputs for the machine. In this paper we\nformalize these notions as a very simple algebraic system, called a\nconfiguration machine. If an abstract machine is defined as a configuration\nmachine consisting of primitive recursive functions then the functions computed\nby the machine are always recursive. The theory of configuration machines\nprovides a useful tool to study universal machines.\n", "versions": [{"version": "v1", "created": "Mon, 19 Jul 2010 22:53:06 GMT"}], "update_date": "2010-07-21", "authors_parsed": [["Luo", "Zhaohua", ""]]}, {"id": "1007.3836", "submitter": "Oleksiy Kurganskyy", "authors": "Oleksiy Kurgansky", "title": "A state of a dynamic computational structure distributed in an\n  environment: a model and its corollaries", "comments": "11 pages, 5 figures", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL cs.DC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Currently there is great interest in computational models consisting of\nunderlying regular computational environments, and built on them distributed\ncomputational structures. Examples of such models are cellular automata,\nspatial computation and space-time crystallography. For any computational model\nit is natural to define a functional equivalence of different but related\ncomputational structures. In the finite automata theory an example of such\nequivalence is automata homomorphism and, in particular, automata isomorphism.\nIf we continue to stick to the finite automata theory, a fundamental question\narise, what a state of a distributed computational structure is. This work is\ndevoted to particular solution of the issue.\n", "versions": [{"version": "v1", "created": "Thu, 22 Jul 2010 09:38:57 GMT"}], "update_date": "2010-07-23", "authors_parsed": [["Kurgansky", "Oleksiy", ""]]}]