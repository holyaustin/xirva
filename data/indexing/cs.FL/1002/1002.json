[{"id": "1002.0063", "submitter": "Ali Akbar Safilian", "authors": "Ali Akbar Safilian, Farzad Didehvar", "title": "Enumeration Order Reducibility", "comments": "This paper is the second version of our work on Enumeration Orders", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL cs.CC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In this article we define a new reducibility based on the enumeration orders\nof r.e. sets.\n", "versions": [{"version": "v1", "created": "Sat, 30 Jan 2010 16:46:48 GMT"}, {"version": "v2", "created": "Wed, 3 Mar 2010 11:25:51 GMT"}], "update_date": "2010-03-03", "authors_parsed": [["Safilian", "Ali Akbar", ""], ["Didehvar", "Farzad", ""]]}, {"id": "1002.1443", "submitter": "Fr\\'ed\\'eric Servais", "authors": "Emmanuel Filiot, Jean-Fran\\c{c}ois Raskin, Pierre-Alain Reynier,\n  Fr\\'ed\\'eric Servais, Jean-Marc Talbot", "title": "On Functionality of Visibly Pushdown Transducers", "comments": "20 pages", "journal-ref": null, "doi": "10.1007/978-3-642-15155-2_32", "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Visibly pushdown transducers form a subclass of pushdown transducers that\n(strictly) extends finite state transducers with a stack. Like visibly pushdown\nautomata, the input symbols determine the stack operations. In this paper, we\nprove that functionality is decidable in PSpace for visibly pushdown\ntransducers. The proof is done via a pumping argument: if a word with two\noutputs has a sufficiently large nesting depth, there exists a nested word with\ntwo outputs whose nesting depth is strictly smaller. The proof uses technics of\nword combinatorics. As a consequence of decidability of functionality, we also\nshow that equivalence of functional visibly pushdown transducers is\nExptime-Complete.\n", "versions": [{"version": "v1", "created": "Sun, 7 Feb 2010 11:45:05 GMT"}], "update_date": "2015-05-18", "authors_parsed": [["Filiot", "Emmanuel", ""], ["Raskin", "Jean-Fran\u00e7ois", ""], ["Reynier", "Pierre-Alain", ""], ["Servais", "Fr\u00e9d\u00e9ric", ""], ["Talbot", "Jean-Marc", ""]]}, {"id": "1002.1464", "submitter": "Anthony Widjaja To", "authors": "Anthony Widjaja To", "title": "Parikh Images of Regular Languages: Complexity and Applications", "comments": "Full version of submission to LICS 2010", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We show that the Parikh image of the language of an NFA with n states over an\nalphabet of size k can be described as a finite union of linear sets with at\nmost k generators and total size 2^{O(k^2 log n)}, i.e., polynomial for all\nfixed k >= 1. Previously, it was not known whether the number of generators\ncould be made independent of n, and best upper bounds on the total size were\nexponential in n. Furthermore, we give an algorithm for performing such a\ntranslation in time 2^{O(k^2 log(kn))}. Our proof exploits a previously unknown\nconnection to the theory of convex sets, and establishes a normal form theorem\nfor semilinear sets, which is of independent interests. To complement these\nresults, we show that our upper bounds are tight and that the results cannot be\nextended to context-free languages. We give four applications: (1) a new\npolynomial fragment of integer programming, (2) precise complexity of\nmembership for Parikh images of NFAs, (3) an answer to an open question about\npolynomial PAC-learnability of semilinear sets, and (4) an optimal algorithm\nfor LTL model checking over discrete-timed reversal-bounded counter systems.\n", "versions": [{"version": "v1", "created": "Sun, 7 Feb 2010 16:00:56 GMT"}, {"version": "v2", "created": "Fri, 12 Feb 2010 20:29:57 GMT"}], "update_date": "2010-02-12", "authors_parsed": [["To", "Anthony Widjaja", ""]]}, {"id": "1002.1624", "submitter": "Stephen Bloom", "authors": "Stephen L. Bloom and Zoltan Esik", "title": "Algebraic Linear Orderings", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  An algebraic linear ordering is a component of the initial solution of a\nfirst-order recursion scheme over the continuous categorical algebra of\ncountable linear orderings equipped with the sum operation and the constant 1.\nDue to a general Mezei-Wright type result, algebraic linear orderings are\nexactly those isomorphic to the linear ordering of the leaves of an algebraic\ntree. Using Courcelle's characterization of algebraic trees, we obtain the fact\nthat a linear ordering is algebraic if and only if it can be represented as the\nlexicographic ordering of a deterministic context-free language. When the\nalgebraic linear ordering is a well-ordering, its order type is an algebraic\nordinal. We prove that the Hausdorff rank of any scattered algebraic linear\nordering is less than $\\omega^\\omega$. It follows that the algebraic ordinals\nare exactly those less than $\\omega^{\\omega^\\omega}$.\n", "versions": [{"version": "v1", "created": "Mon, 8 Feb 2010 15:12:16 GMT"}, {"version": "v2", "created": "Wed, 10 Feb 2010 17:02:00 GMT"}], "update_date": "2010-02-10", "authors_parsed": [["Bloom", "Stephen L.", ""], ["Esik", "Zoltan", ""]]}, {"id": "1002.1928", "submitter": "Elena Pribavkina", "authors": "Gabriele Fici, Elena V. Pribavkina, Jacques Sakarovitch", "title": "On the Minimal Uncompletable Word Problem", "comments": "5 pages; added references, corrected typos", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Let S be a finite set of words over an alphabet Sigma. The set S is said to\nbe complete if every word w over the alphabet Sigma is a factor of some element\nof S*, i.e. w belongs to Fact(S*). Otherwise if S is not complete, we are\ninterested in finding bounds on the minimal length of words in Sigma* which are\nnot elements of Fact(S*) in terms of the maximal length of words in S.\n", "versions": [{"version": "v1", "created": "Tue, 9 Feb 2010 17:59:25 GMT"}, {"version": "v2", "created": "Fri, 23 Apr 2010 09:03:08 GMT"}], "update_date": "2010-04-26", "authors_parsed": [["Fici", "Gabriele", ""], ["Pribavkina", "Elena V.", ""], ["Sakarovitch", "Jacques", ""]]}, {"id": "1002.2203", "submitter": "Rdv Ijcsis", "authors": "Keehang Kwon, Hong Pyo Ha, Jiseung Kim", "title": "A proof Procedure for Testing Membership in Regular Expressions", "comments": "IEEE format, International Journal of Computer Science and\n  Information Security, IJCSIS January 2010, ISSN 1947 5500,\n  http://sites.google.com/site/ijcsis/", "journal-ref": "International Journal of Computer Science and Information\n  Security, IJCSIS, Vol. 7, No. 1, pp. 225-227, January 2010, USA", "doi": null, "report-no": "Journal of Computer Science, ISSN 19475500", "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We propose an algorithm that test membership for regular expressions and show\nthat the algorithm is correct. This algorithm is written in the style of a\nsequent proof system. The advantage of this algorithm over traditional ones is\nthat the complex conversion process from regular expressions to finite automata\nis not needed. As a consequence, our algorithm is simple and extends easily to\nvarious extensions to regular expressions such as timed regular expressions or\nregular languages with the intersection.\n", "versions": [{"version": "v1", "created": "Wed, 10 Feb 2010 20:31:06 GMT"}], "update_date": "2010-02-11", "authors_parsed": [["Kwon", "Keehang", ""], ["Ha", "Hong Pyo", ""], ["Kim", "Jiseung", ""]]}, {"id": "1002.2873", "submitter": "EPTCS", "authors": "Michel A. Reniers (Eindhoven University of Technology), Tim A.C.\n  Willemse (Eindhoven University of Technology)", "title": "Analysis of Boolean Equation Systems through Structure Graphs", "comments": null, "journal-ref": "EPTCS 18, 2010, pp. 92-107", "doi": "10.4204/EPTCS.18.7", "report-no": null, "categories": "cs.LO cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We analyse the problem of solving Boolean equation systems through the use of\nstructure graphs. The latter are obtained through an elegant set of\nPlotkin-style deduction rules. Our main contribution is that we show that\nequation systems with bisimilar structure graphs have the same solution. We\nshow that our work conservatively extends earlier work, conducted by Keiren and\nWillemse, in which dependency graphs were used to analyse a subclass of Boolean\nequation systems, viz., equation systems in standard recursive form. We\nillustrate our approach by a small example, demonstrating the effect of\nsimplifying an equation system through minimisation of its structure graph.\n", "versions": [{"version": "v1", "created": "Mon, 15 Feb 2010 12:51:45 GMT"}], "update_date": "2010-02-16", "authors_parsed": [["Reniers", "Michel A.", "", "Eindhoven University of Technology"], ["Willemse", "Tim A. C.", "", "Eindhoven University of Technology"]]}, {"id": "1002.4290", "submitter": "Maurice Margenstern", "authors": "Margenstern Maurice", "title": "A weakly universal cellular automaton in the hyperbolic 3D space with\n  three states", "comments": "54 pages, 38 figures", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL cs.DM", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In this paper, we significantly improve a previous result by the same author\nshowing the existence of a weakly universal cellular automaton with five states\nliving in the hyperbolic 3D-space. Here, we get such a cellular automaton with\nthree states only.\n", "versions": [{"version": "v1", "created": "Tue, 23 Feb 2010 10:11:43 GMT"}], "update_date": "2010-03-02", "authors_parsed": [["Maurice", "Margenstern", ""]]}, {"id": "1002.4392", "submitter": "Serguei Mokhov", "authors": "Xin Tong, Joey Paquet, and Serguei A. Mokhov", "title": "Complete Context Calculus Design and Implementation in GIPSY", "comments": "21 page; 18 listings; 2 figures; a complete version of the referenced\n  simple context calculus implementation", "journal-ref": null, "doi": "10.1109/COMPSAC.2008.200", "report-no": null, "categories": "cs.FL cs.LO cs.PL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This paper presents the integration into the GIPSY of Lucx's context calculus\ndefined in Wan's PhD thesis. We start by defining different types of tag sets,\nthen we explain the concept of context, the types of context and the context\ncalculus operators. Finally, we present how context entities have been\nabstracted into Java classes and embedded into the GIPSY system.\n", "versions": [{"version": "v1", "created": "Tue, 23 Feb 2010 19:29:43 GMT"}], "update_date": "2010-02-24", "authors_parsed": [["Tong", "Xin", ""], ["Paquet", "Joey", ""], ["Mokhov", "Serguei A.", ""]]}]