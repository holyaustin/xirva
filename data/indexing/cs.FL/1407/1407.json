[{"id": "1407.0160", "submitter": "Rog\\'erio Reis", "authors": "Cezar C\\^ampeanu, Nelma Moreira, Rog\\'erio Reis", "title": "Distinguishability Operations and Closures on Regular Languages", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Given a regular language $L$, we study the language of words $\\mathsf{D}(L)$,\nthat distinguish between pairs of different left-quotients of $L$. We\ncharacterize this distinguishability operation, show that its iteration has\nalways a fixed point, and we generalize this result to operations derived from\nclosure operators and Boolean operators. We give an upper bound for the state\ncomplexity of the distinguishability operation, and prove its tightness. We\nshow that the set of minimal words that can be used to distinguish between\ndifferent left-quotients of a language $L$ has at most $n-1$ elements, where\n$n$ is the state complexity of $L$, and we also study the properties of its\niteration. We generalize the results for the languages of words that\ndistinguish between pairs of different right-quotients and two-sided quotients\nof a language $L$.\n", "versions": [{"version": "v1", "created": "Tue, 1 Jul 2014 09:39:33 GMT"}, {"version": "v2", "created": "Mon, 7 Jul 2014 09:00:42 GMT"}, {"version": "v3", "created": "Wed, 10 Dec 2014 16:00:03 GMT"}], "update_date": "2014-12-11", "authors_parsed": [["C\u00e2mpeanu", "Cezar", ""], ["Moreira", "Nelma", ""], ["Reis", "Rog\u00e9rio", ""]]}, {"id": "1407.0169", "submitter": "Rog\\'erio Reis", "authors": "Ivone Amorim, Ant\\'onio Machiavelo, Rog\\'erio Reis", "title": "Statistical Study On The Number Of Injective Linear Finite Transducers", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The notion of linear finite transducer (LFT) plays a crucial role in some\ncryptographic systems. In this paper we present a way to get an approximate\nvalue, by random sampling, for the number of non-equivalent injective LFTs. By\nintroducing a recurrence relation to count canonical LFTs, we show how to\nestimate the percentage of $\\tau$-injective LFTs. Several experimental results\nare presented, which by themselves constitute an important step towards the\nevaluation of the key space of those systems.\n", "versions": [{"version": "v1", "created": "Tue, 1 Jul 2014 10:03:55 GMT"}], "update_date": "2014-07-02", "authors_parsed": [["Amorim", "Ivone", ""], ["Machiavelo", "Ant\u00f3nio", ""], ["Reis", "Rog\u00e9rio", ""]]}, {"id": "1407.0334", "submitter": "Abuzer Yakaryilmaz", "authors": "G\\\"okalp Demirci and Mika Hirvensalo and Klaus Reinhardt and A. C. Cem\n  Say and Abuzer Yakary{\\i}lmaz", "title": "Alternating, private alternating, and quantum alternating realtime\n  automata", "comments": null, "journal-ref": "Logical Methods in Computer Science, Volume 15, Issue 3 (August\n  28, 2019) lmcs:5722", "doi": "10.23638/LMCS-15(3:22)2019", "report-no": null, "categories": "cs.FL cs.CC cs.LO quant-ph", "license": "http://creativecommons.org/licenses/by/4.0/", "abstract": "  We present new results on realtime alternating, private alternating, and\nquantum alternating automaton models. Firstly, we show that the emptiness\nproblem for alternating one-counter automata on unary alphabets is undecidable.\nThen, we present two equivalent definitions of realtime private alternating\nfinite automata (PAFAs). We show that the emptiness problem is undecidable for\nPAFAs. Furthermore, PAFAs can recognize some nonregular unary languages,\nincluding the unary squares language, which seems to be difficult even for some\nclassical counter automata with two-way input. Regarding quantum finite\nautomata (QFAs), we show that the emptiness problem is undecidable both for\nuniversal QFAs on general alphabets, and for alternating QFAs with two\nalternations on unary alphabets. On the other hand, the same problem is\ndecidable for nondeterministic QFAs on general alphabets. We also show that the\nunary squares language is recognized by alternating QFAs with two alternations.\n", "versions": [{"version": "v1", "created": "Tue, 1 Jul 2014 17:52:47 GMT"}, {"version": "v2", "created": "Sat, 30 Jun 2018 19:41:14 GMT"}, {"version": "v3", "created": "Tue, 12 Mar 2019 10:26:09 GMT"}, {"version": "v4", "created": "Mon, 29 Jul 2019 08:15:53 GMT"}, {"version": "v5", "created": "Tue, 27 Aug 2019 10:48:22 GMT"}], "update_date": "2019-10-23", "authors_parsed": [["Demirci", "G\u00f6kalp", ""], ["Hirvensalo", "Mika", ""], ["Reinhardt", "Klaus", ""], ["Say", "A. C. Cem", ""], ["Yakary\u0131lmaz", "Abuzer", ""]]}, {"id": "1407.0645", "submitter": "Wojciech Czerwi\\'nski", "authors": "Wojciech Czerwi\\'nski, Petr Jan\\v{c}ar", "title": "Branching Bisimilarity of Normed BPA Processes is in NEXPTIME", "comments": "This is the same text as in July 2014, but only with some\n  acknowledgment added due to administrative needs", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Branching bisimilarity on normed BPA processes was recently shown to be\ndecidable by Yuxi Fu (ICALP 2013) but his proof has not provided any upper\ncomplexity bound. We present a simpler approach based on relative prime\ndecompositions that leads to a nondeterministic exponential-time algorithm;\nthis is close to the known exponential-time lower bound.\n", "versions": [{"version": "v1", "created": "Wed, 2 Jul 2014 16:53:04 GMT"}, {"version": "v2", "created": "Fri, 18 Dec 2015 20:31:59 GMT"}], "update_date": "2015-12-21", "authors_parsed": [["Czerwi\u0144ski", "Wojciech", ""], ["Jan\u010dar", "Petr", ""]]}, {"id": "1407.1513", "submitter": "James Scicluna", "authors": "Colin de la Higuera, James Scicluna, Mark-Jan Nederhof", "title": "On the Computation of Distances for Probabilistic Context-Free Grammars", "comments": "12 pages", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Probabilistic context-free grammars (PCFGs) are used to define distributions\nover strings, and are powerful modelling tools in a number of areas, including\nnatural language processing, software engineering, model checking,\nbio-informatics, and pattern recognition. A common important question is that\nof comparing the distributions generated or modelled by these grammars: this is\ndone through checking language equivalence and computing distances. Two PCFGs\nare language equivalent if every string has identical probability with both\ngrammars. This also means that the distance (whichever norm is used) is null.\nIt is known that the language equivalence problem is interreducible with that\nof multiple ambiguity for context-free grammars, a long-standing open question.\nIn this work, we prove that computing distances corresponds to solving\nundecidable questions: this is the case for the L1, L2 norm, the variation\ndistance and the Kullback-Leibler divergence. Two more results are less\nnegative: 1. The most probable string can be computed, and, 2. The Chebyshev\ndistance (where the distance between two distributions is the maximum\ndifference of probabilities over all strings) is interreducible with the\nlanguage equivalence problem.\n", "versions": [{"version": "v1", "created": "Sun, 6 Jul 2014 16:26:57 GMT"}], "update_date": "2014-07-08", "authors_parsed": [["de la Higuera", "Colin", ""], ["Scicluna", "James", ""], ["Nederhof", "Mark-Jan", ""]]}, {"id": "1407.3058", "submitter": "Kengo Matsumoto", "authors": "Kengo Matsumoto", "title": "Pushdown automata, lambda-graph systems and C*-algebras", "comments": "This paper has been withdrawn by the author due to some inaccuracies", "journal-ref": null, "doi": null, "report-no": null, "categories": "math.OA cs.FL math.DS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  A $\\lambda$-graph system is a labeled Bratteli diagram with some additional\nstructure, which presents a subshift and yields a $C^*$-algebra. In this paper,\nwe construct a $\\lambda$-graph system from a pushdown automaton, such that the\naccepted language by the automaton coincides with the language of admissible\nwords of the presented subshift by the $\\lambda$-graph system. The\n$\\lambda$-graph systems for pushdown automata accepting the languages of\nMarkov-Dyck shifts and sofic-Dyck shifts are presented.\n", "versions": [{"version": "v1", "created": "Fri, 11 Jul 2014 07:50:30 GMT"}, {"version": "v2", "created": "Sat, 26 Jul 2014 01:10:56 GMT"}], "update_date": "2014-07-29", "authors_parsed": [["Matsumoto", "Kengo", ""]]}, {"id": "1407.3213", "submitter": "Damien Pous", "authors": "Damien Pous (LIP)", "title": "Symbolic Algorithms for Language Equivalence and Kleene Algebra with\n  Tests", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We first propose algorithms for checking language equivalence of finite\nautomata over a large alphabet. We use symbolic automata, where the transition\nfunction is compactly represented using a (multi-terminal) binary decision\ndiagrams (BDD). The key idea consists in computing a bisimulation by exploring\nreachable pairs symbolically, so as to avoid redundancies. This idea can be\ncombined with already existing optimisations, and we show in particular a nice\nintegration with the disjoint sets forest data-structure from Hopcroft and\nKarp's standard algorithm. Then we consider Kleene algebra with tests (KAT), an\nalgebraic theory that can be used for verification in various domains ranging\nfrom compiler optimisation to network programming analysis. This theory is\ndecidable by reduction to language equivalence of automata on guarded strings,\na particular kind of automata that have exponentially large alphabets. We\npropose several methods allowing to construct symbolic automata out of KAT\nexpressions, based either on Brzozowski's derivatives or standard automata\nconstructions. All in all, this results in efficient algorithms for deciding\nequivalence of KAT expressions.\n", "versions": [{"version": "v1", "created": "Wed, 9 Jul 2014 13:06:05 GMT"}], "update_date": "2014-07-14", "authors_parsed": [["Pous", "Damien", "", "LIP"]]}, {"id": "1407.4286", "submitter": "Markus Lohrey", "authors": "Moses Ganardi, Danny Hucke, Artur Jez, Markus Lohrey and Eric Noeth", "title": "Constructing small tree grammars and small circuits for formulas", "comments": "A short version of this paper appeared in the Proceedings of FSTTCS\n  2014", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DS cs.CC cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  It is shown that every tree of size $n$ over a fixed set of $\\sigma$\ndifferent ranked symbols can be decomposed (in linear time as well as in\nlogspace) into $O\\big(\\frac{n}{\\log_\\sigma n}\\big) = O\\big(\\frac{n \\log\n\\sigma}{\\log n}\\big)$ many hierarchically defined pieces. Formally, such a\nhierarchical decomposition has the form of a straight-line linear context-free\ntree grammar of size $O\\big(\\frac{n}{\\log_\\sigma n}\\big)$, which can be used as\na compressed representation of the input tree. This generalizes an analogous\nresult for strings. Previous grammar-based tree compressors were not analyzed\nfor the worst-case size of the computed grammar, except for the top dag of\nBille et al., for which only the weaker upper bound of\n$O\\big(\\frac{n}{\\log_\\sigma^{0.19} n}\\big)$ (which was very recently improved\nto $O\\big(\\frac{n \\cdot \\log \\log_\\sigma n}{\\log_\\sigma n}\\big)$ by\nH\\\"ubschle-Schneider and Raman) for unranked and unlabelled trees has been\nderived. The main result is used to show that every arithmetical formula of\nsize $n$, in which only $m \\leq n$ different variables occur, can be\ntransformed (in linear time as well as in logspace) into an arithmetical\ncircuit of size $O\\big(\\frac{n \\cdot \\log m}{\\log n}\\big)$ and depth $O(\\log\nn)$. This refines a classical result of Brent from 1974, according to which an\narithmetical formula of size $n$ can be transformed into a logarithmic depth\ncircuit of size $O(n)$.\n", "versions": [{"version": "v1", "created": "Wed, 16 Jul 2014 12:48:48 GMT"}, {"version": "v2", "created": "Tue, 30 Sep 2014 20:21:15 GMT"}, {"version": "v3", "created": "Mon, 21 Sep 2015 13:55:03 GMT"}], "update_date": "2015-09-22", "authors_parsed": [["Ganardi", "Moses", ""], ["Hucke", "Danny", ""], ["Jez", "Artur", ""], ["Lohrey", "Markus", ""], ["Noeth", "Eric", ""]]}, {"id": "1407.4937", "submitter": "EPTCS", "authors": "Krishnendu Chatterjee (IST Austria), R\\\"udiger Ehlers (University of\n  Bremen), Susmit Jha (Intel Strategic CAD Lab)", "title": "Proceedings 3rd Workshop on Synthesis", "comments": null, "journal-ref": "EPTCS 157, 2014", "doi": "10.4204/EPTCS.157", "report-no": null, "categories": "cs.LO cs.FL cs.SE cs.SY", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The idea of synthesis, i.e., the process of automatically computing\nimplementations from their specifications, has recently gained a lot of\nmomentum in the contexts of software engineering and reactive system design.\nWhile it is widely believed that, due to complexity/undecidability issues,\nsynthesis cannot completely replace manual engineering, it can assist the\nprocess of designing the intricate pieces of code that most programmers find\nchallenging, or help with orchestrating tasks in reactive environments. The\nSYNT workshop aims to bring together researchers interested in synthesis to\ndiscuss and present ongoing and mature work on all aspects of automated\nsynthesis and its applications.\n  The third iteration of the workshop took place in Vienna, Austria, and was\nco-located with the 26th International Conference on Computer Aided\nVerification, held in the context of the Vienna Summer of Logic in July 2014.\nThe workshop included eight contributed talks and four invited talks. In\naddition, it featured a special session about the Syntax-Guided Synthesis\nCompetition (SyGuS) and the SyntComp Synthesis competition.\n", "versions": [{"version": "v1", "created": "Fri, 18 Jul 2014 10:27:04 GMT"}], "update_date": "2014-07-21", "authors_parsed": [["Chatterjee", "Krishnendu", "", "IST Austria"], ["Ehlers", "R\u00fcdiger", "", "University of\n  Bremen"], ["Jha", "Susmit", "", "Intel Strategic CAD Lab"]]}, {"id": "1407.5068", "submitter": "Marek Szyku{\\l}a", "authors": "Marek Szyku{\\l}a", "title": "Checking Whether an Automaton Is Monotonic Is NP-complete", "comments": "13 pages, 4 figures. CIAA 2015. The final publication is available at\n  http://link.springer.com/chapter/10.1007/978-3-319-22360-5_23", "journal-ref": "In Implementation and Application of Automata, volume 9223 of\n  LNCS, pages 279-291, Springer, 2015", "doi": "10.1007/978-3-319-22360-5_23", "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  An automaton is monotonic if its states can be arranged in a linear order\nthat is preserved by the action of every letter. We prove that the problem of\ndeciding whether a given automaton is monotonic is NP-complete. The same result\nis obtained for oriented automata, whose states can be arranged in a cyclic\norder. Moreover, both problems remain hard under the restriction to binary\ninput alphabets.\n", "versions": [{"version": "v1", "created": "Fri, 18 Jul 2014 17:40:44 GMT"}, {"version": "v2", "created": "Wed, 5 Nov 2014 17:58:51 GMT"}, {"version": "v3", "created": "Mon, 10 Aug 2015 06:04:19 GMT"}], "update_date": "2015-08-11", "authors_parsed": [["Szyku\u0142a", "Marek", ""]]}, {"id": "1407.5449", "submitter": "Ilya Tkachev", "authors": "Ilya Tkachev, Alexandru Mereacre, Joost-Pieter Katoen, Alessandro\n  Abate", "title": "Quantitative model-checking of controlled discrete-time Markov processes", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "math.PR cs.FL cs.SY math.OC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This paper focuses on optimizing probabilities of events of interest defined\nover general controlled discrete-time Markov processes. It is shown that the\noptimization over a wide class of $\\omega$-regular properties can be reduced to\nthe solution of one of two fundamental problems: reachability and repeated\nreachability. We provide a comprehensive study of the former problem and an\ninitial characterisation of the (much more involved) latter problem. A case\nstudy elucidates concepts and techniques.\n", "versions": [{"version": "v1", "created": "Mon, 21 Jul 2014 10:28:31 GMT"}], "update_date": "2014-07-22", "authors_parsed": [["Tkachev", "Ilya", ""], ["Mereacre", "Alexandru", ""], ["Katoen", "Joost-Pieter", ""], ["Abate", "Alessandro", ""]]}, {"id": "1407.5841", "submitter": "Jeffrey Shallit", "authors": "Hamoon Mousavi and Jeffrey Shallit", "title": "Mechanical Proofs of Properties of the Tribonacci Word", "comments": "arXiv admin note: substantial text overlap with arXiv:1406.0670", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL cs.DM math.CO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We implement a decision procedure for answering questions about a class of\ninfinite words that might be called (for lack of a better name)\n\"Tribonacci-automatic\". This class includes, for example, the famous Tribonacci\nword T = 0102010010202 ..., the fixed point of the morphism 0 -> 01, 1 -> 02, 2\n-> 0. We use it to reprove some old results about the Tribonacci word from the\nliterature, such as assertions about the occurrences in T of squares, cubes,\npalindromes, and so forth. We also obtain some new results.\n", "versions": [{"version": "v1", "created": "Tue, 22 Jul 2014 12:45:51 GMT"}, {"version": "v2", "created": "Sun, 27 Jul 2014 19:04:33 GMT"}], "update_date": "2014-07-29", "authors_parsed": [["Mousavi", "Hamoon", ""], ["Shallit", "Jeffrey", ""]]}, {"id": "1407.5902", "submitter": "Shanmuga Sundaram V", "authors": "N.Murugesan, O.V.Shanmuga Sundaram", "title": "Some Properties of Brzozowski Derivatives of Regular Expressions", "comments": "5 pages", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://creativecommons.org/licenses/by/3.0/", "abstract": "  Brzozowski derivatives of a regular expression are developed for constructing\ndeterministic automata from the given regular expression in the algebraic way.\nIn this paper,some lemmas of the regular expressions are discussed and the\nregular languages of the derivatives are illustrated. Also the generalizations\nof the Brzozowski derivatives are proved as theorems with help of properties\nand known results.\n", "versions": [{"version": "v1", "created": "Tue, 22 Jul 2014 15:26:38 GMT"}], "update_date": "2014-07-23", "authors_parsed": [["Murugesan", "N.", ""], ["Sundaram", "O. V. Shanmuga", ""]]}, {"id": "1407.7356", "submitter": "Dennis Guck", "authors": "Dennis Guck (University of Twente), Hassan Hatefi (Saarland\n  University), Holger Hermanns (Saarland University), Joost-Pieter Katoen (RWTH\n  Aachen University), Mark Timmer (University of Twente)", "title": "Analysis of Timed and Long-Run Objectives for Markov Automata", "comments": "arXiv admin note: substantial text overlap with arXiv:1305.7050", "journal-ref": "Logical Methods in Computer Science, Volume 10, Issue 3 (September\n  10, 2014) lmcs:943", "doi": "10.2168/LMCS-10(3:17)2014", "report-no": null, "categories": "cs.LO cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Markov automata (MAs) extend labelled transition systems with random delays\nand probabilistic branching. Action-labelled transitions are instantaneous and\nyield a distribution over states, whereas timed transitions impose a random\ndelay governed by an exponential distribution. MAs are thus a nondeterministic\nvariation of continuous-time Markov chains. MAs are compositional and are used\nto provide a semantics for engineering frameworks such as (dynamic) fault\ntrees, (generalised) stochastic Petri nets, and the Architecture Analysis &\nDesign Language (AADL). This paper considers the quantitative analysis of MAs.\nWe consider three objectives: expected time, long-run average, and timed\n(interval) reachability. Expected time objectives focus on determining the\nminimal (or maximal) expected time to reach a set of states. Long-run\nobjectives determine the fraction of time to be in a set of states when\nconsidering an infinite time horizon. Timed reachability objectives are about\ncomputing the probability to reach a set of states within a given time\ninterval. This paper presents the foundations and details of the algorithms and\ntheir correctness proofs. We report on several case studies conducted using a\nprototypical tool implementation of the algorithms, driven by the MAPA\nmodelling language for efficiently generating MAs.\n", "versions": [{"version": "v1", "created": "Mon, 28 Jul 2014 08:55:56 GMT"}, {"version": "v2", "created": "Tue, 9 Sep 2014 09:31:54 GMT"}], "update_date": "2015-07-01", "authors_parsed": [["Guck", "Dennis", "", "University of Twente"], ["Hatefi", "Hassan", "", "Saarland\n  University"], ["Hermanns", "Holger", "", "Saarland University"], ["Katoen", "Joost-Pieter", "", "RWTH\n  Aachen University"], ["Timmer", "Mark", "", "University of Twente"]]}, {"id": "1407.7428", "submitter": "Alan Cain", "authors": "Alan J. Cain, Robert Gray, Ant\\'onio Malheiro", "title": "On finite complete rewriting systems, finite derivation type, and\n  automaticity for homogeneous monoids", "comments": "40 pages; 2 tables; 3 figures. Major revision/rewrite", "journal-ref": null, "doi": null, "report-no": null, "categories": "math.GR cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This paper investigates the class of finitely presented monoids defined by\nhomogeneous (length-preserving) relations from a computational perspective. The\nproperties of admitting a finite complete rewriting system, having finite\nderivation type, being automatic, and being biautomatic are investigated for\nthis class of monoids. The first main result shows that for any consistent\ncombination of these properties and their negations, there is a homogeneous\nmonoid with exactly this combination of properties. We then introduce the new\nconcept of abstract Rees-commensurability (an analogue of the notion of\nabstract commensurability for groups) in order to extend this result to show\nthat the same statement holds even if one restricts attention to the class of\n$n$-ary homogeneous monoids (where every side of every relation has fixed\nlength $n$). We then introduce a new encoding technique that allows us to\nextend the result partially to the class of $n$-ary multihomogenous monoids.\n", "versions": [{"version": "v1", "created": "Mon, 28 Jul 2014 14:19:06 GMT"}, {"version": "v2", "created": "Sun, 14 May 2017 11:23:18 GMT"}], "update_date": "2017-05-16", "authors_parsed": [["Cain", "Alan J.", ""], ["Gray", "Robert", ""], ["Malheiro", "Ant\u00f3nio", ""]]}, {"id": "1407.7592", "submitter": "Maciej Zielenkiewicz", "authors": "Maciej Zielenkiewicz, Aleksy Schubert, Jacek Chrz\\k{a}szcz", "title": "On multiply-exponential write-once Turing machines", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.CC cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In this work we analyze the multiply-exponential complexity classes for\nwrite-once Turing machines, i.e. machines that can write to a given tape cell\nat most once. We show that $k$-DExpWOSpace = $k$-DExpWOTime = $k$-ExpTime and\nthe nondeterministic counterpart. For alternating machines we show that\n$k$-AExpWOTime = $k$-AExpTime = $k-1$-ExpSpace.\n", "versions": [{"version": "v1", "created": "Mon, 28 Jul 2014 22:44:28 GMT"}, {"version": "v2", "created": "Tue, 28 Oct 2014 20:33:48 GMT"}], "update_date": "2014-10-30", "authors_parsed": [["Zielenkiewicz", "Maciej", ""], ["Schubert", "Aleksy", ""], ["Chrz\u0105szcz", "Jacek", ""]]}, {"id": "1407.7671", "submitter": "EPTCS", "authors": "Dragan Bo\\v{s}na\\v{c}ki (Eindhoven University of Technology), Stefan\n  Edelkamp (University of Bremen), Alberto Lluch Lafuente (Technical University\n  of Denmark), Anton Wijs (Eindhoven University of Technology)", "title": "Proceedings 3rd Workshop on GRAPH Inspection and Traversal Engineering", "comments": null, "journal-ref": "EPTCS 159, 2014", "doi": "10.4204/EPTCS.159", "report-no": null, "categories": "cs.LO cs.DS cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  These are the proceedings of the Third Workshop on GRAPH Inspection and\nTraversal Engineering (GRAPHITE 2014), which took place on April 5, 2014 in\nGrenoble, France, as a satellite event of the 17th European Joint Conferences\non Theory and Practice of Software (ETAPS 2014).\n  The aim of GRAPHITE is to foster the convergence on research interests from\nseveral communities dealing with graph analysis in all its forms in computer\nscience, with a particular attention to software development and analysis.\nGraphs are used to represent data and processes in many application areas, and\nthey are subjected to various computational algorithms in order to analyze\nthem. Just restricting the attention to the analysis of software, graph\nanalysis algorithms are used, for instance, to verify properties using model\nchecking techniques that explore the system's state space graph or static\nanalysis techniques based on control flow graphs. Further application domains\ninclude games, planning, and network analysis. Very often, graph problems and\ntheir algorithmic solutions have common characteristics, independent of their\napplication domain. The goal of this event is to gather scientists from\ndifferent communities, who do research on graph analysis algorithms, such that\nawareness of each others' work is increased. More information can be found at\nhttp://sysma.imtlucca.it/graphite.\n", "versions": [{"version": "v1", "created": "Tue, 29 Jul 2014 09:25:55 GMT"}], "update_date": "2014-07-30", "authors_parsed": [["Bo\u0161na\u010dki", "Dragan", "", "Eindhoven University of Technology"], ["Edelkamp", "Stefan", "", "University of Bremen"], ["Lafuente", "Alberto Lluch", "", "Technical University\n  of Denmark"], ["Wijs", "Anton", "", "Eindhoven University of Technology"]]}, {"id": "1407.8337", "submitter": "Pavan Kumar C", "authors": "G. Vishnu Murthy, Pavan Kumar C., Vakulabharanam Vijaya Kumar", "title": "A New Model of Array Grammar for generating Connected Patterns on an\n  Image Neighborhood", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL cs.CV", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Study of patterns on images is recognized as an important step in\ncharacterization and classification of image. The ability to efficiently\nanalyze and describe image patterns is thus of fundamental importance. The\nstudy of syntactic methods of describing pictures has been of interest for\nresearchers. Array Grammars can be used to represent and recognize connected\npatterns. In any image the patterns are recognized using connected patterns. It\nis very difficult to represent all connected patterns (CP) even on a small 3 x\n3 neighborhood in a pictorial way. The present paper proposes the model of\narray grammar capable of generating any kind of simple or complex pattern and\nderivation of connected pattern in an image neighborhood using the proposed\ngrammar is discussed.\n", "versions": [{"version": "v1", "created": "Thu, 31 Jul 2014 10:04:19 GMT"}], "update_date": "2014-08-01", "authors_parsed": [["Murthy", "G. Vishnu", ""], ["C.", "Pavan Kumar", ""], ["Kumar", "Vakulabharanam Vijaya", ""]]}]