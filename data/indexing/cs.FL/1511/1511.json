[{"id": "1511.00157", "submitter": "Janusz Brzozowski", "authors": "Janusz Brzozowski, Sylvie Davies, Bo Yang Victor Liu", "title": "Most Complex Regular Ideal Languages", "comments": "25 pages, 11 figures. To appear in Discrete Mathematics and\n  Theoretical Computer Science. arXiv admin note: text overlap with\n  arXiv:1311.4448", "journal-ref": "Discrete Mathematics & Theoretical Computer Science, Vol. 18 no.\n  3, Automata, Logic and Semantics (October 17, 2016) dmtcs:2167", "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  A right ideal (left ideal, two-sided ideal) is a non-empty language $L$ over\nan alphabet $\\Sigma$ such that $L=L\\Sigma^*$ ($L=\\Sigma^*L$,\n$L=\\Sigma^*L\\Sigma^*$). Let $k=3$ for right ideals, 4 for left ideals and 5 for\ntwo-sided ideals. We show that there exist sequences ($L_n \\mid n \\ge k $) of\nright, left, and two-sided regular ideals, where $L_n$ has quotient complexity\n(state complexity) $n$, such that $L_n$ is most complex in its class under the\nfollowing measures of complexity: the size of the syntactic semigroup, the\nquotient complexities of the left quotients of $L_n$, the number of atoms\n(intersections of complemented and uncomplemented left quotients), the quotient\ncomplexities of the atoms, and the quotient complexities of reversal, star,\nproduct (concatenation), and all binary boolean operations. In that sense,\nthese ideals are \"most complex\" languages in their classes, or \"universal\nwitnesses\" to the complexity of the various operations.\n", "versions": [{"version": "v1", "created": "Sat, 31 Oct 2015 17:47:52 GMT"}, {"version": "v2", "created": "Sat, 1 Oct 2016 19:43:24 GMT"}, {"version": "v3", "created": "Thu, 13 Oct 2016 14:35:49 GMT"}], "update_date": "2017-02-08", "authors_parsed": [["Brzozowski", "Janusz", ""], ["Davies", "Sylvie", ""], ["Liu", "Bo Yang Victor", ""]]}, {"id": "1511.00289", "submitter": "Eryk Kopczy\\'nski", "authors": "Eryk Kopczynski", "title": "Invisible pushdown languages", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Context free languages allow one to express data with hierarchical structure,\nat the cost of losing some of the useful properties of languages recognized by\nfinite automata on words. However, it is possible to restore some of these\nproperties by making the structure of the tree visible, such as is done by\nvisibly pushdown languages, or finite automata on trees. In this paper, we show\nthat the structure given by such approaches remains invisible when it is read\nby a finite automaton (on word). In particular, we show that separability with\na regular language is undecidable for visibly pushdown languages, just as it is\nundecidable for general context free languages.\n", "versions": [{"version": "v1", "created": "Sun, 1 Nov 2015 18:51:02 GMT"}], "update_date": "2015-11-03", "authors_parsed": [["Kopczynski", "Eryk", ""]]}, {"id": "1511.00422", "submitter": "Lionel Levine", "authors": "Alexander E. Holroyd, Lionel Levine, Peter Winkler", "title": "Abelian logic gates", "comments": "35 pages, many figures. v2 revised for referee comments, to appear in\n  Combinatorics, Probability and Computing", "journal-ref": "Combinator. Probab. Comp. 28 (2019) 388-422", "doi": "10.1017/S0963548318000482", "report-no": null, "categories": "cs.DM cs.FL math.CO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  An abelian processor is an automaton whose output is independent of the order\nof its inputs. Bond and Levine have proved that a network of abelian processors\nperforms the same computation regardless of processing order (subject only to a\nhalting condition). We prove that any finite abelian processor can be emulated\nby a network of certain very simple abelian processors, which we call gates.\nThe most fundamental gate is a \"toppler\", which absorbs input particles until\ntheir number exceeds some given threshold, at which point it topples, emitting\none particle and returning to its initial state. With the exception of an adder\ngate, which simply combines two streams of particles, each of our gates has\nonly one input wire. Our results can be reformulated in terms of the functions\ncomputed by processors, and one consequence is that any increasing function\nfrom N^k to N^l that is the sum of a linear function and a periodic function\ncan be expressed in terms of (possibly nested) sums of floors of quotients by\nintegers.\n", "versions": [{"version": "v1", "created": "Mon, 2 Nov 2015 09:38:49 GMT"}, {"version": "v2", "created": "Tue, 10 Apr 2018 01:53:38 GMT"}], "update_date": "2019-04-03", "authors_parsed": [["Holroyd", "Alexander E.", ""], ["Levine", "Lionel", ""], ["Winkler", "Peter", ""]]}, {"id": "1511.00523", "submitter": "Guillermo P\\'erez", "authors": "Paul Hunter, Guillermo A. P\\'erez, and Jean-Fran\\c{c}ois Raskin", "title": "Minimizing Regret in Discounted-Sum Games", "comments": "arXiv admin note: text overlap with arXiv:1504.01708; some typos have\n  been removed in the proof of simple strategies being sufficient to minimize\n  regret against any adversary", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.GT cs.FL cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In this paper, we study the problem of minimizing regret in discounted-sum\ngames played on weighted game graphs. We give algorithms for the general\nproblem of computing the minimal regret of the controller (Eve) as well as\nseveral variants depending on which strategies the environment (Adam) is\npermitted to use. We also consider the problem of synthesizing regret-free\nstrategies for Eve in each of these scenarios.\n", "versions": [{"version": "v1", "created": "Mon, 2 Nov 2015 14:37:45 GMT"}, {"version": "v2", "created": "Sun, 24 Apr 2016 11:49:50 GMT"}, {"version": "v3", "created": "Fri, 4 May 2018 14:08:28 GMT"}], "update_date": "2018-05-07", "authors_parsed": [["Hunter", "Paul", ""], ["P\u00e9rez", "Guillermo A.", ""], ["Raskin", "Jean-Fran\u00e7ois", ""]]}, {"id": "1511.00647", "submitter": "Min  Wen", "authors": "Min Wen, Ufuk Topcu", "title": "Strategy Synthesis for Stochastic Rabin Games with Discounted Reward", "comments": "17 pages, 3 figures, submitted to TACAS", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.SY cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Stochastic games are often used to model reactive processes. We consider the\nproblem of synthesizing an optimal almost-sure winning strategy in a two-player\n(namely a system and its environment) turn-based stochastic game with both a\nqualitative objective as a Rabin winning condition, and a quantitative\nobjective as a discounted reward. Optimality is considered only over the\nalmost-sure winning strategies, i.e., system strategies that guarantee the\nsatisfaction of the Rabin condition with probability 1 regardless of the\nenvironment's strategy. We show that optimal almost-sure winning strategies may\nneed infinite memory, but epsilon-optimal almost-sure winning strategies can\nalways be finite-memory or even memoryless. We identify a sufficient and\nnecessary condition of the existence of memoryless epsilon-optimal almost-sure\nwinning strategies and propose an algorithm to compute one when this condition\nis satisfied.\n", "versions": [{"version": "v1", "created": "Mon, 2 Nov 2015 19:36:39 GMT"}], "update_date": "2015-11-03", "authors_parsed": [["Wen", "Min", ""], ["Topcu", "Ufuk", ""]]}, {"id": "1511.00909", "submitter": "Alexander Sakharov", "authors": "Alexander Sakharov, Timothy Sakharov", "title": "Data Language Specification via Terminal Attribution", "comments": "This is a detailed description of tier grammar properties including\n  proofs. Tier grammars are defined in paper 'Data Parsing Using Tier Grammars'\n  by the same authors, appearing in the Proceedings of the 7th International\n  Joint Conference on Knowledge Discovery, Knowledge Engineering and Knowledge\n  Management, Lisbon, Portugal (2015), 463-468", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Unstructured data have to be parsed in order to become usable. The complexity\nof grammar notations and the difficulty of grammar debugging limit the use of\nparsers for data preprocessing. We introduce a notation in which grammars are\ndefined by simply dividing terminals into predefined classes and then splitting\nelements of some classes into multiple layered sub-groups. These LL(1) grammars\nare designed for data languages. They simplify the task of developing data\nparsers.\n", "versions": [{"version": "v1", "created": "Tue, 3 Nov 2015 13:48:06 GMT"}], "update_date": "2015-11-04", "authors_parsed": [["Sakharov", "Alexander", ""], ["Sakharov", "Timothy", ""]]}, {"id": "1511.01442", "submitter": "Borja Balle", "authors": "Guillaume Rabusseau, Borja Balle, Shay B. Cohen", "title": "Low-Rank Approximation of Weighted Tree Automata", "comments": "To appear in AISTATS 2016", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LG cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We describe a technique to minimize weighted tree automata (WTA), a powerful\nformalisms that subsumes probabilistic context-free grammars (PCFGs) and\nlatent-variable PCFGs. Our method relies on a singular value decomposition of\nthe underlying Hankel matrix defined by the WTA. Our main theoretical result is\nan efficient algorithm for computing the SVD of an infinite Hankel matrix\nimplicitly represented as a WTA. We provide an analysis of the approximation\nerror induced by the minimization, and we evaluate our method on real-world\ndata originating in newswire treebank. We show that the model achieves lower\nperplexity than previous methods for PCFG minimization, and also is much more\nstable due to the absence of local optima.\n", "versions": [{"version": "v1", "created": "Wed, 4 Nov 2015 19:17:18 GMT"}, {"version": "v2", "created": "Thu, 24 Dec 2015 08:39:49 GMT"}], "update_date": "2015-12-25", "authors_parsed": [["Rabusseau", "Guillaume", ""], ["Balle", "Borja", ""], ["Cohen", "Shay B.", ""]]}, {"id": "1511.01630", "submitter": "Dmitry Berdinsky", "authors": "Dmitry Berdinsky and Bakhadyr Khoussainov", "title": "Cayley automatic representations of wreath products", "comments": "Final version, to appear in the International Journal of Foundations\n  of Computer Science", "journal-ref": null, "doi": null, "report-no": null, "categories": "math.GR cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We construct the representations of Cayley graphs of wreath products using\nfinite automata, pushdown automata and nested stack automata. These\nrepresentations are in accordance with the notion of Cayley automatic groups\nintroduced by Kharlampovich, Khoussainov and Miasnikov and its extensions\nintroduced by Elder and Taback. We obtain the upper and lower bounds for a\nlength of an element of a wreath product in terms of the representations\nconstructed.\n", "versions": [{"version": "v1", "created": "Thu, 5 Nov 2015 07:17:32 GMT"}, {"version": "v2", "created": "Thu, 3 Mar 2016 20:57:34 GMT"}], "update_date": "2016-03-04", "authors_parsed": [["Berdinsky", "Dmitry", ""], ["Khoussainov", "Bakhadyr", ""]]}, {"id": "1511.01807", "submitter": "Thorsten Wissmann", "authors": "Prateek Karandikar and Philippe Schnoebelen", "title": "The height of piecewise-testable languages and the complexity of the\n  logic of subwords", "comments": "This article is a full version of \"The height of piecewise-testable\n  languages with applications in logical complexity\", in Proc. CSL 2016, LIPiCS\n  62:37", "journal-ref": "Logical Methods in Computer Science, Volume 15, Issue 2 (April 30,\n  2019) lmcs:5409", "doi": "10.23638/LMCS-15(2:6)2019", "report-no": null, "categories": "cs.LO cs.FL", "license": "http://creativecommons.org/licenses/by/4.0/", "abstract": "  The height of a piecewise-testable language $L$ is the maximum length of the\nwords needed to define $L$ by excluding and requiring given subwords. The\nheight of $L$ is an important descriptive complexity measure that has not yet\nbeen investigated in a systematic way. This article develops a series of new\ntechniques for bounding the height of finite languages and of languages\nobtained by taking closures by subwords, superwords and related operations.\n  As an application of these results, we show that\n$\\mathsf{FO}^2(A^*,\\sqsubseteq)$, the two-variable fragment of the first-order\nlogic of sequences with the subword ordering, can only express\npiecewise-testable properties and has elementary complexity.\n", "versions": [{"version": "v1", "created": "Thu, 5 Nov 2015 16:45:19 GMT"}, {"version": "v2", "created": "Fri, 8 Jul 2016 09:54:48 GMT"}, {"version": "v3", "created": "Thu, 20 Sep 2018 18:09:58 GMT"}, {"version": "v4", "created": "Sun, 28 Apr 2019 13:39:56 GMT"}], "update_date": "2019-09-04", "authors_parsed": [["Karandikar", "Prateek", ""], ["Schnoebelen", "Philippe", ""]]}, {"id": "1511.02147", "submitter": "Liang-Ting Chen", "authors": "Liang-Ting Chen and Jiri Adamek and Stefan Milius and Henning Urbat", "title": "Profinite Monads, Profinite Equations, and Reiterman's Theorem", "comments": "Accepted for presentation at FoSSaCS'16", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL math.CT", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Profinite equations are an indispensable tool for the algebraic\nclassification of formal languages. Reiterman's theorem states that they\nprecisely specify pseudovarieties, i.e. classes of finite algebras closed under\nfinite products, subalgebras and quotients. In this paper Reiterman's theorem\nis generalised to finite Eilenberg-Moore algebras for a monad T on a variety D\nof (ordered) algebras: a class of finite T-algebras is a pseudovariety iff it\nis presentable by profinite (in-)equations. As an application, quasivarieties\nof finite algebras are shown to be presentable by profinite implications. Other\nexamples include finite ordered algebras, finite categories, finite\ninfinity-monoids, etc.\n", "versions": [{"version": "v1", "created": "Fri, 6 Nov 2015 16:40:14 GMT"}, {"version": "v2", "created": "Wed, 6 Jan 2016 15:21:57 GMT"}], "update_date": "2016-01-07", "authors_parsed": [["Chen", "Liang-Ting", ""], ["Adamek", "Jiri", ""], ["Milius", "Stefan", ""], ["Urbat", "Henning", ""]]}, {"id": "1511.03595", "submitter": "John Gallagher", "authors": "John P. Gallagher, Mai Ajspur and Bishoksan Kafle", "title": "Optimised determinisation and completion of finite tree automata", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Determinisation and completion of finite tree automata are important\noperations with applications in program analysis and verification. However, the\ncomplexity of the classical procedures for determinisation and completion is\nhigh. They are not practical procedures for manipulating tree automata beyond\nvery small ones. In this paper we develop an algorithm for determinisation and\ncompletion of finite tree automata, whose worst-case complexity remains\nunchanged, but which performs far better than existing algorithms in practice.\nThe critical aspect of the algorithm is that the transitions of the\ndeterminised (and possibly completed) automaton are generated in a potentially\nvery compact form called product form, which can reduce the size of the\nrepresentation dramatically. Furthermore, the representation can often be used\ndirectly when manipulating the determinised automaton. The paper contains an\nexperimental evaluation of the algorithm on a large set of tree automata\nexamples.\n", "versions": [{"version": "v1", "created": "Wed, 11 Nov 2015 18:25:00 GMT"}, {"version": "v2", "created": "Wed, 1 Nov 2017 14:39:36 GMT"}], "update_date": "2017-11-02", "authors_parsed": [["Gallagher", "John P.", ""], ["Ajspur", "Mai", ""], ["Kafle", "Bishoksan", ""]]}, {"id": "1511.04172", "submitter": "EPTCS", "authors": "Franck Cassez (Macquarie University, Sydney, Australia), Pablo\n  Gonz\\'alez de Aledo Marug\\'an (University of Cantabria, Santander, Spain)", "title": "Timed Automata for Modelling Caches and Pipelines", "comments": "In Proceedings MARS 2015, arXiv:1511.02528", "journal-ref": "EPTCS 196, 2015, pp. 37-45", "doi": "10.4204/EPTCS.196.4", "report-no": null, "categories": "cs.FL cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In this paper, we focus on modelling the timing aspects of binary programs\nrunning on architectures featuring caches and pipelines. The objective is to\nobtain a timed automaton model to compute tight bounds for the worst-case\nexecution time (WCET) of the programs using model-checking techniques.\n", "versions": [{"version": "v1", "created": "Fri, 13 Nov 2015 06:28:08 GMT"}], "update_date": "2015-11-16", "authors_parsed": [["Cassez", "Franck", "", "Macquarie University, Sydney, Australia"], ["Marug\u00e1n", "Pablo Gonz\u00e1lez de Aledo", "", "University of Cantabria, Santander, Spain"]]}, {"id": "1511.04893", "submitter": "Simon Halfon", "authors": "Dmitry Chistikov, Christoph Haase, Simon Halfon", "title": "Context-Free Commutative Grammars with Integer Counters and Resets", "comments": "33 pages", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We study the computational complexity of reachability, coverability and\ninclusion for extensions of context-free commutative grammars with integer\ncounters and reset operations on them. Those grammars can alternatively be\nviewed as an extension of communication-free Petri nets. Our main results are\nthat reachability and coverability are inter-reducible and both NP-complete. In\nparticular, this class of commutative grammars enjoys semi-linear reachability\nsets. We also show that the inclusion problem is, in general, coNEXP-complete\nand already $\\Pi_2^\\text{P}$-complete for grammars with only one non-terminal\nsymbol. Showing the lower bound for the latter result requires us to develop a\nnovel $\\Pi_2^\\text{P}$-complete variant of the classic subset sum problem.\n", "versions": [{"version": "v1", "created": "Mon, 16 Nov 2015 10:15:40 GMT"}, {"version": "v2", "created": "Fri, 24 Jun 2016 08:50:37 GMT"}], "update_date": "2016-06-27", "authors_parsed": [["Chistikov", "Dmitry", ""], ["Haase", "Christoph", ""], ["Halfon", "Simon", ""]]}, {"id": "1511.05070", "submitter": "Sahand Mozaffari", "authors": "Mohammad Izadi, Saeed Masoudian, Sahand Mozaffari", "title": "Joining Transition Systems of Records: Some Congruency and\n  Language-Theoretic Results", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  B\\\"uchi automaton of records (BAR) has been proposed as a basic operational\nsemantics for Reo coordination language. It is an extension of B\\\"uchi\nautomaton by using a set of records as its alphabet or transition labels.\nRecords are used to express the synchrony between the externally visible\nactions of coordinated components modeled by BARs. The main composition\noperator on the set of BARs is called as join which is the semantics of its\ncounterpart in Reo. In this paper, we define the notion of labeled transition\nsystems of records as a generalization of the notion of BAR, abstracting away\nfrom acceptance or rejection of strings. Then, we consider four equivalence\nrelations (semantics) over the set of labeled transition systems of records and\ninvestigate their congruency with respect to the join composition operator. In\nfact, we prove that the finite-traces-based, infinite-traces-based, and\nnondeterministic finite automata (NFA)-based equivalence relations all are\ncongruence relations over the set of all labeled transition systems of records\nwith respect to the join operation. However, the equivalence relation using\nB\\\"uchi acceptance condition is not so. In addition, using these results, we\nintroduce the language-theoretic definitions of the join operation considering\nboth finite and infinite strings notions. Also, we show that there is no\nlanguage-based and structure-independent definition of the join operation on\nB\\\"uchi automata of records.\n", "versions": [{"version": "v1", "created": "Mon, 16 Nov 2015 18:05:06 GMT"}], "update_date": "2015-11-17", "authors_parsed": [["Izadi", "Mohammad", ""], ["Masoudian", "Saeed", ""], ["Mozaffari", "Sahand", ""]]}, {"id": "1511.05770", "submitter": "Norbert Blum", "authors": "Norbert Blum", "title": "On LR(k)-parsers of polynomial size", "comments": "An extended abstract of this paper appeared in 37th International\n  Colloquium, ICALP 2010, Bordeaux, France, July 2010, Proceedings, Part II,\n  LNCS 6199, pp. 163--174, Springer-Verlag Berlin Heidelberg 2010", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Usually, a parser for an $LR(k)$-grammar $G$ is a deterministic pushdown\ntransducer which produces backwards the unique rightmost derivation for a given\ninput string $x \\in L(G)$. The best known upper bound for the size of such a\nparser is $O(2^{|G||\\Sigma|^k+k\\log |\\Sigma| + \\log |G|})$ where $|G|$ and\n$|\\Sigma|$ are the sizes of the grammar $G$ and the terminal alphabet $\\Sigma$,\nrespectively. If we add to a parser the possibility to manipulate a directed\ngraph of size $O(|G|n)$ where $n$ is the length of the input then we obtain an\nextended parser. The graph is used for an efficient parallel simulation of all\npotential leftmost derivations of the current right sentential form such that\nthe unique rightmost derivation of the input can be computed. Given an\narbitrary $LR(k)$-grammar $G$, we show how to construct an extended parser of\n$O(|G| + \\#LA |N|2^k k \\log k)$ size where $|N|$ is the number of nonterminal\nsymbols and $\\#LA$ is the number of relevant lookaheads with respect to the\ngrammar $G$. As the usual parser, this extended parser uses only tables as data\nstructure. Using some ingenious data structures and increasing the parsing time\nby a small constant factor, the size of the extended parser can be reduced to\n$O(|G| + \\#LA|N|k^2)$. The parsing time is $O(ld(input) + k|G|n)$ where\n$ld(input)$ is the length of the derivation of the input. Moreover, we have\nconstructed a one pass parser.\n", "versions": [{"version": "v1", "created": "Wed, 18 Nov 2015 13:36:01 GMT"}], "update_date": "2015-11-19", "authors_parsed": [["Blum", "Norbert", ""]]}, {"id": "1511.05875", "submitter": "Matthieu Rosenfeld", "authors": "Micha\\\"el Rao and Matthieu Rosenfeld", "title": "Avoiding two consecutive blocks of same size and same sum over\n  $\\mathbb{Z}^2$", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "math.CO cs.DM cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  A long standing question asks whether $\\mathbb{Z}$ is uniformly 2-repetitive\n[Justin 1972, Pirillo and Varricchio, 1994], that is, whether there is an\ninfinite sequence over a finite subset of $\\mathbb{Z}$ avoiding two consecutive\nblocks of same size and same sum or not. Cassaigne \\emph{et al.} [2014] showed\nthat $\\mathbb{Z}$ is not uniformly 3-repetitive. We show that $\\mathbb{Z}^2$ is\nnot uniformly 2-repetitive. Moreover, this problem is related to a question\nfrom M\\\"akel\\\"a in combinatorics on words and we answer to a weak version of\nit.\n", "versions": [{"version": "v1", "created": "Wed, 18 Nov 2015 16:57:08 GMT"}, {"version": "v2", "created": "Fri, 30 Sep 2016 14:58:27 GMT"}], "update_date": "2016-10-03", "authors_parsed": [["Rao", "Micha\u00ebl", ""], ["Rosenfeld", "Matthieu", ""]]}, {"id": "1511.06569", "submitter": "Jeffrey Shallit", "authors": "Robbert J. Fokkink and Cor Kraaikamp and Jeffrey Shallit", "title": "Hankel Matrices for the Period-Doubling Sequence", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "math.CO cs.DM cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We give an explicit evaluation, in terms of products of Jacobsthal numbers,\nof the Hankel determinants of order a power of two for the period-doubling\nsequence. We also explicitly give the eigenvalues and eigenvectors of the\ncorresponding Hankel matrices. Similar considerations give the Hankel\ndeterminants for other orders.\n", "versions": [{"version": "v1", "created": "Fri, 20 Nov 2015 12:09:46 GMT"}, {"version": "v2", "created": "Mon, 23 Nov 2015 11:05:56 GMT"}, {"version": "v3", "created": "Thu, 4 Feb 2016 12:46:25 GMT"}, {"version": "v4", "created": "Tue, 21 Jun 2016 18:44:05 GMT"}], "update_date": "2016-06-22", "authors_parsed": [["Fokkink", "Robbert J.", ""], ["Kraaikamp", "Cor", ""], ["Shallit", "Jeffrey", ""]]}, {"id": "1511.07535", "submitter": "Michael Coons", "authors": "Michael Coons", "title": "Regular sequences and the joint spectral radius", "comments": "5 pages", "journal-ref": null, "doi": null, "report-no": null, "categories": "math.CO cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We classify the growth of a $k$-regular sequence based on information from\nits $k$-kernel. In order to provide such a classification, we introduce the\nnotion of a growth exponent for $k$-regular sequences and show that this\nexponent is equal to the joint spectral radius of any set of a special class of\nmatrices determined by the $k$-kernel.\n", "versions": [{"version": "v1", "created": "Tue, 24 Nov 2015 01:50:53 GMT"}], "update_date": "2015-11-25", "authors_parsed": [["Coons", "Michael", ""]]}, {"id": "1511.08396", "submitter": "Vojt\\v{e}ch Vorel", "authors": "Vojt\\v{e}ch Vorel", "title": "On Basic Properties of Jumping Finite Automata", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We complete the initial study of jumping finite automata, which was started\nin a former article of Meduna and Zemek \\citep{athMED1}. The open questions\nabout basic closure properties are solved. Besides this, we correct erroneous\nresults presented in the article. Finally, we point out important relations\nbetween jumping finite automata and some other models studied in the\nliterature.\n", "versions": [{"version": "v1", "created": "Thu, 26 Nov 2015 14:22:53 GMT"}, {"version": "v2", "created": "Wed, 2 Dec 2015 16:44:26 GMT"}], "update_date": "2015-12-03", "authors_parsed": [["Vorel", "Vojt\u011bch", ""]]}, {"id": "1511.08399", "submitter": "S\\'ebastien Labb\\'e", "authors": "S\\'ebastien Labb\\'e", "title": "$3$-dimensional Continued Fraction Algorithms Cheat Sheets", "comments": "9 pages, 66 figures, landscape orientation", "journal-ref": null, "doi": null, "report-no": null, "categories": "math.DS cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Multidimensional Continued Fraction Algorithms are generalizations of the\nEuclid algorithm and find iteratively the gcd of two or more numbers. They are\ndefined as linear applications on some subcone of $\\mathbb{R}^d$. We consider\nmultidimensional continued fraction algorithms that acts symmetrically on the\npositive cone $\\mathbb{R}^d_+$ for $d=3$. We include well-known and old ones\n(Poincar\\'e, Brun, Selmer, Fully Subtractive) and new ones\n(Arnoux-Rauzy-Poincar\\'e, Reverse, Cassaigne).\n  For each algorithm, one page (called cheat sheet) gathers a handful of\ninformations most of them generated with the open source software Sage with the\noptional Sage package \\texttt{slabbe-0.2.spkg}. The information includes the\n$n$-cylinders, density function of an absolutely continuous invariant measure,\ndomain of the natural extension, lyapunov exponents as well as data regarding\ncombinatorics on words, symbolic dynamics and digital geometry, that is,\nassociated substitutions, generated $S$-adic systems, factor complexity,\ndiscrepancy, dual substitutions and generation of digital planes.\n  The document ends with a table of comparison of Lyapunov exponents and gives\nthe code allowing to reproduce any of the results or figures appearing in these\ncheat sheets.\n", "versions": [{"version": "v1", "created": "Thu, 26 Nov 2015 14:34:50 GMT"}], "update_date": "2015-11-30", "authors_parsed": [["Labb\u00e9", "S\u00e9bastien", ""]]}, {"id": "1511.08447", "submitter": "Brijesh Dongol", "authors": "Brijesh Dongol, Robert M. Hierons", "title": "Decidability and Complexity for Quiescent Consistency and its Variations", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO cs.DC cs.DS cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Quiescent consistency is a notion of correctness for a concurrent object that\ngives meaning to the object's behaviours in quiescent states, i.e., states in\nwhich none of the object's operations are being executed. Correctness of an\nimplementation object is defined in terms of a corresponding abstract\nspecification. This gives rise to two important verification questions:\nmembership (checking whether a behaviour of the implementation is allowed by\nthe specification) and correctness (checking whether all behaviours of the\nimplementation are allowed by the specification). In this paper, we show that\nthe membership problem for quiescent consistency is NP-complete and that the\ncorrectness problem is decidable, but coNP-hard and in EXPSPACE. For both\nproblems, we consider restricted versions of quiescent consistency by assuming\nan upper limit on the number of events between two quiescent points. Here, we\nshow that the membership problem is in PTIME, whereas correctness is in PSPACE.\n  Quiescent consistency does not guarantee sequential consistency, i.e., it\nallows operation calls by the same process to be reordered when mapping to an\nabstract specification. Therefore, we also consider quiescent sequential\nconsistency, which strengthens quiescent consistency with an additional\nsequential consistency condition. We show that the unrestricted versions of\nmembership and correctness are NP-complete and undecidable, respectively. When\nby placing a limit on the number of events between two quiescent points,\nmembership is in PTIME, while correctness is in PSPACE. Finally, we consider a\nversion of quiescent sequential consistency that places an upper limit on the\nnumber of processes for every run of the implementation, and show that the\nmembership problem for quiescent sequential consistency with this restriction\nis in PTIME.\n", "versions": [{"version": "v1", "created": "Thu, 26 Nov 2015 16:46:30 GMT"}], "update_date": "2015-11-30", "authors_parsed": [["Dongol", "Brijesh", ""], ["Hierons", "Robert M.", ""]]}, {"id": "1511.08642", "submitter": "Vojt\\v{e}ch Vorel", "authors": "Vojt\\v{e}ch Vorel", "title": "Two Results on Discontinuous Input Processing", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  First, we show that universality and other properties of general jumping\nfinite automata are undecidable, which answers a question asked by Meduna and\nZemek in 2012. Second, we close the study raised by \\v{C}erno and Mr\\'{a}z in\n2010 by proving that clearing restarting automata using contexts of size two\ncan accept binary non-context-free languages.\n", "versions": [{"version": "v1", "created": "Fri, 27 Nov 2015 12:17:05 GMT"}], "update_date": "2015-11-30", "authors_parsed": [["Vorel", "Vojt\u011bch", ""]]}, {"id": "1511.09011", "submitter": "Marc  Zeitoun", "authors": "Th\\'eo Pierron, Thomas Place and Marc Zeitoun", "title": "Quantifier Alternation for Infinite Words", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We investigate the expressive power of quantifier alternation hierarchy of\nfirst-order logic over words. This hierarchy includes the classes ${\\Sigma}_i$\n(sentences having at most $i$ blocks of quantifiers starting with an $\\exists$)\nand $\\mathcal{B}{\\Sigma}_i$ (Boolean combinations of ${\\Sigma}_i$ sentences).\nSo far, this expressive power has been effectively characterized for the lower\nlevels only. Recently, a breakthrough was made over finite words, and decidable\ncharacterizations were obtained for $\\mathcal{B}{\\Sigma}_2$ and ${\\Sigma}_3$,\nby relying on a decision problem called separation, and solving it for\n${\\Sigma}_2$. The contribution of this paper is a generalization of these\nresults to the setting of infinite words: we solve separation for ${\\Sigma}_2$\nand ${\\Sigma}_3$, and obtain decidable characterizations of\n$\\mathcal{B}{\\Sigma}_2$ and ${\\Sigma}_3$ as consequences.\n", "versions": [{"version": "v1", "created": "Sun, 29 Nov 2015 13:28:24 GMT"}], "update_date": "2015-12-01", "authors_parsed": [["Pierron", "Th\u00e9o", ""], ["Place", "Thomas", ""], ["Zeitoun", "Marc", ""]]}, {"id": "1511.09079", "submitter": "Vladimir Gusev", "authors": "Vladimir V. Gusev and Elena V. Pribavkina", "title": "Synchronizing automata and principal eigenvectors of the underlying\n  digraphs", "comments": "11 pages, preliminary version", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  A coloring of a digraph with a fixed out-degree k is a distribution of k\nlabels over the edges resulting in a deterministic finite automaton. An\nautomaton is called synchronizing if there exists a word which sends all states\nof the automaton to a single state. In the present paper we study connections\nbetween spectral and synchronizing properties of digraphs. We show that if a\ncoloring of a digraph is not synchronizing, then the stationary distribution of\nan associated Markov chain has a partition of coordinates into blocks of equal\nsum. Moreover, if there exists such a partition, then there exists a\nnon-synchronizing automaton with such stationary distribution. We extend these\nresults to bound the number of non-synchronizing colorings for digraphs with\nparticular eigenvectors. We also demonstrate that the length of the shortest\nsynchronizing word of any coloring is at most $w^2 - 3w + 3$, where $w$ is the\nsum of the coordinates of the integer principal eigenvector of the digraph.\n", "versions": [{"version": "v1", "created": "Sun, 29 Nov 2015 20:02:02 GMT"}], "update_date": "2015-12-01", "authors_parsed": [["Gusev", "Vladimir V.", ""], ["Pribavkina", "Elena V.", ""]]}, {"id": "1511.09405", "submitter": "Florian Deloup L", "authors": "Guillaume Bonfante, Florian Deloup", "title": "Decidability of regular language genus computation", "comments": "22 pages, 13 figures", "journal-ref": "Math. Struct. Comp. Sci. 29 (2019) 1428-1443", "doi": "10.1017/S0960129519000057", "report-no": null, "categories": "cs.FL cs.DM math.CO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The article continues the study of the genus of regular languages that the\nauthors introduced in a 2012 paper. Generalizing a previous result, we produce\na new family of regular languages on a two-letter alphabet having arbitrary\nhigh genus. Let $L$ be a regular language. In order to understand the genus\n$g(L)$ of $L$, we introduce the topological size of $|L|_{\\rm{top}}$ to be the\nminimal size of all finite deterministic automata of genus $g(L)$ computing\n$L$. We show that the minimal finite deterministic automaton of a regular\nlanguage can be arbitrary far away from a finite deterministic automaton\nrealizing the minimal genus and computing the same language, both in terms of\nthe difference of genera and in terms of the difference in size. In particular,\nwe show that the topological size $|L|_{\\rm{top}}$ can grow at least\nexponentially in size $|L|$. We conjecture however the genus of every regular\nlanguage to be computable. This conjecture implies in particular that the\nplanarity of a regular language is decidable, a question asked in 1976 by R.V.\nBook and A.K. Chandra. We prove here the conjecture for a fairly generic class\nof regular languages having no short cycles.\n", "versions": [{"version": "v1", "created": "Mon, 30 Nov 2015 17:42:49 GMT"}, {"version": "v2", "created": "Sun, 24 Jul 2016 14:32:16 GMT"}], "update_date": "2019-11-15", "authors_parsed": [["Bonfante", "Guillaume", ""], ["Deloup", "Florian", ""]]}, {"id": "1511.09450", "submitter": "EPTCS", "authors": "Leander Tentrup, Alexander Weinert, Martin Zimmermann", "title": "Approximating Optimal Bounds in Prompt-LTL Realizability in\n  Doubly-exponential Time", "comments": "In Proceedings GandALF 2016, arXiv:1609.03648", "journal-ref": "EPTCS 226, 2016, pp. 302-315", "doi": "10.4204/EPTCS.226.21", "report-no": null, "categories": "cs.LO cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We consider the optimization variant of the realizability problem for Prompt\nLinear Temporal Logic, an extension of Linear Temporal Logic (LTL) by the\nprompt eventually operator whose scope is bounded by some parameter. In the\nrealizability optimization problem, one is interested in computing the minimal\nsuch bound that allows to realize a given specification. It is known that this\nproblem is solvable in triply-exponential time, but not whether it can be done\nin doubly-exponential time, i.e., whether it is just as hard as solving LTL\nrealizability.\n  We take a step towards resolving this problem by showing that the optimum can\nbe approximated within a factor of two in doubly-exponential time. Also, we\nreport on a proof-of-concept implementation of the algorithm based on bounded\nLTL synthesis, which computes the smallest implementation of a given\nspecification. In our experiments, we observe a tradeoff between the size of\nthe implementation and the bound it realizes. We investigate this tradeoff in\nthe general case and prove upper bounds, which reduce the search space for the\nalgorithm, and matching lower bounds.\n", "versions": [{"version": "v1", "created": "Mon, 30 Nov 2015 20:07:18 GMT"}, {"version": "v2", "created": "Tue, 7 Jun 2016 14:04:50 GMT"}, {"version": "v3", "created": "Wed, 14 Sep 2016 01:00:46 GMT"}], "update_date": "2016-09-15", "authors_parsed": [["Tentrup", "Leander", ""], ["Weinert", "Alexander", ""], ["Zimmermann", "Martin", ""]]}]