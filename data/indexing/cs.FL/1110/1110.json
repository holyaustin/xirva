[{"id": "1110.0760", "submitter": "Steffen Kopecki", "authors": "Lila Kari, Steffen Kopecki, Shinnosuke Seki", "title": "Iterated Hairpin Completions of Non-crossing Words", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Iterated hairpin completion is an operation on formal languages that is\ninspired by the hairpin formation in DNA biochemistry. Iterated hairpin\ncompletion of a word (or more precisely a singleton language) is always a\ncontext-sensitive language and for some words it is known to be\nnon-context-free. However, it is unknown whether regularity of iterated hairpin\ncompletion of a given word is decidable. Also the question whether iterated\nhairpin completion of a word can be context-free but not regular was asked in\nliterature. In this paper we investigate iterated hairpin completions of\nnon-crossing words and, within this setting, we are able to answer both\nquestions. For non-crossing words we prove that the regularity of iterated\nhairpin completions is decidable and that if iterated hairpin completion of a\nnon-crossing word is not regular, then it is not context-free either.\n", "versions": [{"version": "v1", "created": "Tue, 4 Oct 2011 17:27:26 GMT"}], "update_date": "2011-10-05", "authors_parsed": [["Kari", "Lila", ""], ["Kopecki", "Steffen", ""], ["Seki", "Shinnosuke", ""]]}, {"id": "1110.1221", "submitter": "Ahmet Kara", "authors": "Ahmet Kara, Thomas Schwentick, Tony Tan", "title": "Feasible Automata for Two-Variable Logic with Successor on Data Words", "comments": "21 pages", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We introduce an automata model for data words, that is words that carry at\neach position a symbol from a finite alphabet and a value from an unbounded\ndata domain. The model is (semantically) a restriction of data automata,\nintroduced by Bojanczyk, et. al. in 2006, therefore it is called weak data\nautomata. It is strictly less expressive than data automata and the expressive\npower is incomparable with register automata. The expressive power of weak data\nautomata corresponds exactly to existential monadic second order logic with\nsuccessor +1 and data value equality \\sim, EMSO2(+1,\\sim). It follows from\nprevious work, David, et. al. in 2010, that the nonemptiness problem for weak\ndata automata can be decided in 2-NEXPTIME. Furthermore, we study weak B\\\"uchi\nautomata on data omega-strings. They can be characterized by the extension of\nEMSO2(+1,\\sim) with existential quantifiers for infinite sets. Finally, the\nsame complexity bound for its nonemptiness problem is established by a\nnondeterministic polynomial time reduction to the nonemptiness problem of weak\ndata automata.\n", "versions": [{"version": "v1", "created": "Thu, 6 Oct 2011 10:54:25 GMT"}], "update_date": "2015-03-19", "authors_parsed": [["Kara", "Ahmet", ""], ["Schwentick", "Thomas", ""], ["Tan", "Tony", ""]]}, {"id": "1110.1263", "submitter": "Giovanni Pighizzini", "authors": "Viliam Geffert, Bruno Guillon, Giovanni Pighizzini", "title": "Two-Way Automata Making Choices Only at the Endmarkers", "comments": "23 pages", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL cs.CC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The question of the state-size cost for simulation of two-way\nnondeterministic automata (2NFAs) by two-way deterministic automata (2DFAs) was\nraised in 1978 and, despite many attempts, it is still open. Subsequently, the\nproblem was attacked by restricting the power of 2DFAs (e.g., using a\nrestricted input head movement) to the degree for which it was already possible\nto derive some exponential gaps between the weaker model and the standard\n2NFAs. Here we use an opposite approach, increasing the power of 2DFAs to the\ndegree for which it is still possible to obtain a subexponential conversion\nfrom the stronger model to the standard 2DFAs. In particular, it turns out that\nsubexponential conversion is possible for two-way automata that make\nnondeterministic choices only when the input head scans one of the input tape\nendmarkers. However, there is no restriction on the input head movement. This\nimplies that an exponential gap between 2NFAs and 2DFAs can be obtained only\nfor unrestricted 2NFAs using capabilities beyond the proposed new model. As an\nadditional bonus, conversion into a machine for the complement of the original\nlanguage is polynomial in this model. The same holds for making such machines\nself-verifying, halting, or unambiguous. Finally, any superpolynomial lower\nbound for the simulation of such machines by standard 2DFAs would imply L<>NL.\nIn the same way, the alternating version of these machines is related to L =?\nNL =? P, the classical computational complexity problems.\n", "versions": [{"version": "v1", "created": "Thu, 6 Oct 2011 13:52:34 GMT"}], "update_date": "2011-10-07", "authors_parsed": [["Geffert", "Viliam", ""], ["Guillon", "Bruno", ""], ["Pighizzini", "Giovanni", ""]]}, {"id": "1110.1716", "submitter": "Luis Quesada", "authors": "Luis Quesada and Fernando Berzal and Francisco J. Cortijo", "title": "Treating Insomnia, Amnesia, and Acalculia in Regular Expression Matching", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Regular expressions provide a flexible means for matching strings and they\nare often used in data-intensive applications. They are formally equivalent to\neither deterministic finite automata (DFAs) or nondeterministic finite automata\n(NFAs). Both DFAs and NFAs are affected by two problems known as amnesia and\nacalculia, and DFAs are also affected by a problem known as insomnia. Existing\ntechniques require an automata conversion and compaction step that prevents the\nuse of existing automaton databases and hinders the maintenance of the\nresulting compact automata. In this paper, we propose Parallel Finite State\nMachines (PFSMs), which are able to run any DFA- or NFA-like state machines\nwithout a previous conversion or compaction step. PFSMs report, online, all the\nmatches found within an input string and they solve the three aforementioned\nproblems. Parallel Finite State Machines require quadratic time and linear\nmemory and they are distributable. Parallel Finite State Machines make very\nfast distributed regular expression matching in data-intensive applications\nfeasible.\n", "versions": [{"version": "v1", "created": "Sat, 8 Oct 2011 09:43:59 GMT"}, {"version": "v2", "created": "Sat, 5 Nov 2011 20:12:04 GMT"}], "update_date": "2011-11-08", "authors_parsed": [["Quesada", "Luis", ""], ["Berzal", "Fernando", ""], ["Cortijo", "Francisco J.", ""]]}, {"id": "1110.2318", "submitter": "Artur Je\\.z", "authors": "Artur Je\\.z", "title": "Compressed Membership for NFA (DFA) with Compressed Labels is in NP (P)", "comments": null, "journal-ref": null, "doi": "10.1007/s00224-013-9443-6", "report-no": null, "categories": "cs.FL", "license": "http://creativecommons.org/licenses/by-nc-sa/3.0/", "abstract": "  In this paper, a compressed membership problem for finite automata, both\ndeterministic and non-deterministic, with compressed transition labels is\nstudied. The compression is represented by straight-line programs (SLPs), i.e.\ncontext-free grammars generating exactly one string. A novel technique of\ndealing with SLPs is introduced: the SLPs are recompressed, so that substrings\nof the input text are encoded in SLPs labelling the transitions of the NFA\n(DFA) in the same way, as in the SLP representing the input text. To this end,\nthe SLPs are locally decompressed and then recompressed in a uniform way.\nFurthermore, such recompression induces only small changes in the automaton, in\nparticular, the size of the automaton remains polynomial.\n  Using this technique it is shown that the compressed membership for NFA with\ncompressed labels is in NP, thus confirming the conjecture of Plandowski and\nRytter and extending the partial result of Lohrey and Mathissen; as it is\nalready known, that this problem is NP-hard, we settle its exact computational\ncomplexity. Moreover, the same technique applied to the compressed membership\nfor DFA with compressed labels yields that this problem is in P; for this\nproblem, only trivial upper-bound PSPACE was known.\n", "versions": [{"version": "v1", "created": "Tue, 11 Oct 2011 10:10:28 GMT"}], "update_date": "2013-10-28", "authors_parsed": [["Je\u017c", "Artur", ""]]}, {"id": "1110.2382", "submitter": "Jeffrey Shallit", "authors": "Eric Rowland, Jeffrey Shallit", "title": "Automatic sets of rational numbers", "comments": "Previous version appeared in Proc. LATA 2012 conference", "journal-ref": "International Journal of Foundations of Computer Science 26 (2015)\n  343-365", "doi": "10.1142/S0129054115500197", "report-no": null, "categories": "cs.FL cs.DM math.NT", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The notion of a k-automatic set of integers is well-studied. We develop a new\nnotion - the k-automatic set of rational numbers - and prove basic properties\nof these sets, including closure properties and decidability.\n", "versions": [{"version": "v1", "created": "Tue, 11 Oct 2011 14:07:38 GMT"}, {"version": "v2", "created": "Wed, 23 Nov 2011 13:15:59 GMT"}, {"version": "v3", "created": "Tue, 29 May 2012 11:41:16 GMT"}, {"version": "v4", "created": "Mon, 24 Feb 2014 14:05:39 GMT"}], "update_date": "2015-09-02", "authors_parsed": [["Rowland", "Eric", ""], ["Shallit", "Jeffrey", ""]]}, {"id": "1110.2776", "submitter": "Tony Tan", "authors": "Tony Tan", "title": "Graph Reachability and Pebble Automata over Infinite Alphabets", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Let D denote an infinite alphabet -- a set that consists of infinitely many\nsymbols. A word w = a_0 b_0 a_1 b_1 ... a_n b_n of even length over D can be\nviewed as a directed graph G_w whose vertices are the symbols that appear in w,\nand the edges are (a_0,b_0),(a_1,b_1),...,(a_n,b_n). For a positive integer m,\ndefine a language R_m such that a word w = a_0 b_0 ... a_n b_n is in R_m if and\nonly if there is a path in the graph G_w of length <= m from the vertex a_0 to\nthe vertex b_n.\n  We establish the following hierarchy theorem for pebble automata over\ninfinite alphabet. For every positive integer k, (i) there exists a k-pebble\nautomaton that accepts the language R_{2^k-1}; (ii) there is no k-pebble\nautomaton that accepts the language R_{2^{k+1} - 2}. Based on this result, we\nestablish a number of previously unknown relations among some classes of\nlanguages over infinite alphabets.\n", "versions": [{"version": "v1", "created": "Wed, 12 Oct 2011 18:23:36 GMT"}, {"version": "v2", "created": "Tue, 10 Apr 2012 11:55:07 GMT"}], "update_date": "2012-04-11", "authors_parsed": [["Tan", "Tony", ""]]}, {"id": "1110.3704", "submitter": "Fr\\'ed\\'eric Herbreteau", "authors": "Fr\\'ed\\'eric Herbreteau and Dileep Kini and B. Srivathsan and Igor\n  Walukiewicz", "title": "Using non-convex approximations for efficient analysis of timed automata", "comments": "Extended version of FSTTCS 2011 paper", "journal-ref": null, "doi": "10.4230/LIPIcs.FSTTCS.2011.78", "report-no": null, "categories": "cs.LO cs.FL", "license": "http://creativecommons.org/licenses/by-nc-sa/3.0/", "abstract": "  The reachability problem for timed automata asks if there exists a path from\nan initial state to a target state. The standard solution to this problem\ninvolves computing the zone graph of the automaton, which in principle could be\ninfinite. In order to make the graph finite, zones are approximated using an\nextrapolation operator. For reasons of efficiency in current algorithms\nextrapolation of a zone is always a zone and in particular it is convex.\n  In this paper, we propose to solve the reachability problem without such\nextrapolation operators. To ensure termination, we provide an efficient\nalgorithm to check if a zone is included in the so called region closure of\nanother. Although theoretically better, closure cannot be used in the standard\nalgorithm since a closure of a zone may not be convex.\n  An additional benefit of the proposed approach is that it permits to\ncalculate approximating parameters on-the-fly during exploration of the zone\ngraph, as opposed to the current methods which do it by a static analysis of\nthe automaton prior to the exploration. This allows for further improvements in\nthe algorithm. Promising experimental results are presented.\n", "versions": [{"version": "v1", "created": "Mon, 17 Oct 2011 15:43:54 GMT"}], "update_date": "2011-12-30", "authors_parsed": [["Herbreteau", "Fr\u00e9d\u00e9ric", ""], ["Kini", "Dileep", ""], ["Srivathsan", "B.", ""], ["Walukiewicz", "Igor", ""]]}, {"id": "1110.3705", "submitter": "Fr\\'ed\\'eric Herbreteau", "authors": "Fr\\'ed\\'eric Herbreteau and B. Srivathsan and Igor Walukiewicz", "title": "Better abstractions for timed automata", "comments": "Extended version of LICS 2012 paper (conference paper till v6). in\n  Information and Computation, available online 27 July 2016", "journal-ref": null, "doi": "10.1016/j.ic.2016.07.004", "report-no": null, "categories": "cs.LO cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We consider the reachability problem for timed automata. A standard solution\nto this problem involves computing a search tree whose nodes are abstractions\nof zones. These abstractions preserve underlying simulation relations on the\nstate space of the automaton. For both effectiveness and efficiency reasons,\nthey are parametrized by the maximal lower and upper bounds (LU-bounds)\noccurring in the guards of the automaton. We consider the aLU abstraction\ndefined by Behrmann et al. Since this abstraction can potentially yield\nnon-convex sets, it has not been used in implementations. We prove that aLU\nabstraction is the biggest abstraction with respect to LU-bounds that is sound\nand complete for reachability. We also provide an efficient technique to use\nthe aLU abstraction to solve the reachability problem.\n", "versions": [{"version": "v1", "created": "Mon, 17 Oct 2011 15:44:36 GMT"}, {"version": "v2", "created": "Sat, 14 Jan 2012 09:33:09 GMT"}, {"version": "v3", "created": "Tue, 24 Jan 2012 14:53:53 GMT"}, {"version": "v4", "created": "Tue, 4 Sep 2012 08:48:41 GMT"}, {"version": "v5", "created": "Thu, 17 Jan 2013 14:30:51 GMT"}, {"version": "v6", "created": "Fri, 18 Jan 2013 09:16:35 GMT"}, {"version": "v7", "created": "Thu, 28 Jul 2016 19:39:18 GMT"}], "update_date": "2016-07-29", "authors_parsed": [["Herbreteau", "Fr\u00e9d\u00e9ric", ""], ["Srivathsan", "B.", ""], ["Walukiewicz", "Igor", ""]]}, {"id": "1110.4136", "submitter": "Shuo Tan M.A.", "authors": "Shuo Tan", "title": "The non-abelian squares are not context-free", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Answering a recent question of Crochemore, we prove that the language of\nwords that are not abelian squares is not context-free.\n", "versions": [{"version": "v1", "created": "Tue, 18 Oct 2011 22:18:45 GMT"}], "update_date": "2011-10-20", "authors_parsed": [["Tan", "Shuo", ""]]}, {"id": "1110.4161", "submitter": "EPTCS", "authors": "Thomas T. Hildebrandt (IT University of Copenhagen), Raghava Rao\n  Mukkamala (IT University of Copenhagen)", "title": "Declarative Event-Based Workflow as Distributed Dynamic Condition\n  Response Graphs", "comments": "In Proceedings PLACES 2010, arXiv:1110.3853", "journal-ref": "EPTCS 69, 2011, pp. 59-73", "doi": "10.4204/EPTCS.69.5", "report-no": null, "categories": "cs.LO cs.FL cs.PL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We present Dynamic Condition Response Graphs (DCR Graphs) as a declarative,\nevent-based process model inspired by the workflow language employed by our\nindustrial partner and conservatively generalizing prime event structures. A\ndynamic condition response graph is a directed graph with nodes representing\nthe events that can happen and arrows representing four relations between\nevents: condition, response, include, and exclude. Distributed DCR Graphs is\nthen obtained by assigning roles to events and principals. We give a graphical\nnotation inspired by related work by van der Aalst et al. We exemplify the use\nof distributed DCR Graphs on a simple workflow taken from a field study at a\nDanish hospital, pointing out their flexibility compared to imperative workflow\nmodels. Finally we provide a mapping from DCR Graphs to Buchi-automata.\n", "versions": [{"version": "v1", "created": "Wed, 19 Oct 2011 02:31:40 GMT"}], "update_date": "2011-10-20", "authors_parsed": [["Hildebrandt", "Thomas T.", "", "IT University of Copenhagen"], ["Mukkamala", "Raghava Rao", "", "IT University of Copenhagen"]]}, {"id": "1110.5942", "submitter": "EPTCS", "authors": "Yang Cai (MIT CSAIL), Ting Zhang (Iowa State University)", "title": "Can Nondeterminism Help Complementation?", "comments": "In Proceedings GandALF 2012, arXiv:1210.2028", "journal-ref": "EPTCS 96, 2012, pp. 57-70", "doi": "10.4204/EPTCS.96.5", "report-no": null, "categories": "cs.LO cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Complementation and determinization are two fundamental notions in automata\ntheory. The close relationship between the two has been well observed in the\nliterature. In the case of nondeterministic finite automata on finite words\n(NFA), complementation and determinization have the same state complexity,\nnamely Theta(2^n) where n is the state size. The same similarity between\ndeterminization and complementation was found for Buchi automata, where both\noperations were shown to have 2^\\Theta(n lg n) state complexity. An intriguing\nquestion is whether there exists a type of omega-automata whose determinization\nis considerably harder than its complementation. In this paper, we show that\nfor all common types of omega-automata, the determinization problem has the\nsame state complexity as the corresponding complementation problem at the\ngranularity of 2^\\Theta(.).\n", "versions": [{"version": "v1", "created": "Wed, 26 Oct 2011 22:23:48 GMT"}, {"version": "v2", "created": "Thu, 3 Nov 2011 07:50:32 GMT"}, {"version": "v3", "created": "Wed, 22 Feb 2012 05:37:33 GMT"}, {"version": "v4", "created": "Tue, 9 Oct 2012 00:53:29 GMT"}], "update_date": "2012-10-10", "authors_parsed": [["Cai", "Yang", "", "MIT CSAIL"], ["Zhang", "Ting", "", "Iowa State University"]]}, {"id": "1110.6183", "submitter": "Seth Fogarty", "authors": "Seth Fogarty (Department of Computer Science, Rice University,\n  Houston, TX), Moshe Y. Vardi (Department of Computer Science, Rice\n  University, Houston, TX)", "title": "B\\\"uchi Complementation and Size-Change Termination", "comments": null, "journal-ref": "Logical Methods in Computer Science, Volume 8, Issue 1 (February\n  27, 2012) lmcs:1178", "doi": "10.2168/LMCS-8(1:13)2012", "report-no": null, "categories": "cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We compare tools for complementing nondeterministic B\\\"uchi automata with a\nrecent termination-analysis algorithm. Complementation of B\\\"uchi automata is a\nkey step in program verification. Early constructions using a Ramsey-based\nargument have been supplanted by rank-based constructions with exponentially\nbetter bounds. In 2001 Lee et al. presented the size-change termination (SCT)\nproblem, along with both a reduction to B\\\"uchi automata and a Ramsey-based\nalgorithm. The Ramsey-based algorithm was presented as a more practical\nalternative to the automata-theoretic approach, but strongly resembles the\ninitial complementation constructions for B\\\"uchi automata. We prove that the\nSCT algorithm is a specialized realization of the Ramsey-based complementation\nconstruction. To do so, we extend the Ramsey-based complementation construction\nto provide a containment-testing algorithm. Surprisingly, empirical analysis\nsuggests that despite the massive gap in worst-case complexity, Ramsey-based\napproaches are superior over the domain of SCT problems. Upon further analysis\nwe discover an interesting property of the problem space that both explains\nthis result and provides a chance to improve rank-based tools. With these\nimprovements, we show that theoretical gains in efficiency of the rank-based\napproach are mirrored in empirical performance.\n", "versions": [{"version": "v1", "created": "Thu, 27 Oct 2011 20:01:12 GMT"}, {"version": "v2", "created": "Thu, 22 Dec 2011 11:52:13 GMT"}, {"version": "v3", "created": "Fri, 24 Feb 2012 10:36:19 GMT"}], "update_date": "2015-07-01", "authors_parsed": [["Fogarty", "Seth", "", "Department of Computer Science, Rice University,\n  Houston, TX"], ["Vardi", "Moshe Y.", "", "Department of Computer Science, Rice\n  University, Houston, TX"]]}]