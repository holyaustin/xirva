[{"id": "1008.1322", "submitter": "Zeeshan Ahmed Mr.", "authors": "Zeeshan Ahmed, Sudhir Kumar Ganti, Hans Kyhlb\\\"ack", "title": "Design Artifact's, Design Principles, Problems, Goals and Importance", "comments": "In Proceedings of 4th International Statistical Conference May 9-11,\n  Vol. 15, 57-68, ISBN 978-969-8858-04-9, 2008", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.HC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Designing human computer interaction interface is an important and a complex\ntask, but it could be simplified by decomposing task into subcomponents and\nmaintaining relationships among those subcomponents. Task decomposition is a\nstructured approach, applicable in both Software Engineering and Human Computer\nInteraction (HCI) fields depending on specific processes and design artifacts.\nUsing design artifacts applications could be made for analysis and design by\nmaking the hand draw sketches to provide high level of logical design based on\nuser requirements, usage scenarios and essential use cases. To design hand draw\nsketches there are some strategies to be followed .i.e., planning, sequential\nwork flow, and levels of details. In this research paper we are presenting\ndesign artifacts, goals, principles, guidelines and currently faced problems to\nhuman computer interaction design community. Moreover in the end concluded with\nassessed observations in a case study.\n", "versions": [{"version": "v1", "created": "Sat, 7 Aug 2010 11:27:02 GMT"}], "update_date": "2010-08-10", "authors_parsed": [["Ahmed", "Zeeshan", ""], ["Ganti", "Sudhir Kumar", ""], ["Kyhlb\u00e4ck", "Hans", ""]]}, {"id": "1008.1338", "submitter": "Zeeshan Ahmed Mr.", "authors": "Zeeshan Ahmed", "title": "Intelligent Human Machine Interface Design for Advanced Product Life\n  Cycle Management Systems", "comments": "In International Conference on Frontiers of Information Technology,\n  ACM - FIT09, Session 5: Computational Science/Artificial Intelligence, 16-18\n  December, 2009", "journal-ref": "ACM Special Interest Group on Artificial Intelligence (SIGART),\n  2009", "doi": "10.1145/1838002.1838058", "report-no": null, "categories": "cs.HC", "license": "http://creativecommons.org/licenses/by-nc-sa/3.0/", "abstract": "  Designing and implementing an intelligent and user friendly human machine\ninterface for any kind of software or hardware oriented application is always\nbe a challenging task for the designers and developers because it is very\ndifficult to understand the psychology of the user, nature of the work and best\nsuit of the environment. This research paper is basically about to propose an\nintelligent, flexible and user friendly machine interface for Product Life\nCycle Management products or PDM Systems since studies show that usability and\nhuman computer interaction issues are a major cause of acceptance problems\nintroducing or using such systems. Going into details of the proposition, we\npresent prototype implementations about theme based on design requirements,\ndesigned designs and technologies involved for the development of human machine\ninterface.\n", "versions": [{"version": "v1", "created": "Sat, 7 Aug 2010 12:58:13 GMT"}], "update_date": "2010-08-26", "authors_parsed": [["Ahmed", "Zeeshan", ""]]}, {"id": "1008.2437", "submitter": "John Horton", "authors": "John J. Horton", "title": "Employer Expectations, Peer Effects and Productivity: Evidence from a\n  Series of Field Experiments", "comments": "30 pages", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.HC cs.CY", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This paper reports the results of a series of field experiments designed to\ninvestigate how peer effects operate in a real work setting. Workers were hired\nfrom an online labor market to perform an image-labeling task and, in some\ncases, to evaluate the work product of other workers. These evaluations had\nfinancial consequences for both the evaluating worker and the evaluated worker.\nThe experiments showed that on average, evaluating high-output work raised an\nevaluator's subsequent productivity, with larger effects for evaluators that\nare themselves highly productive. The content of the subject evaluations\nthemselves suggest one mechanism for peer effects: workers readily punished\nother workers whose work product exhibited low output/effort. However,\nnon-compliance with employer expectations did not, by itself, trigger\npunishment: workers would not punish non-complying workers so long as the\nevaluated worker still exhibited high effort. A worker's willingness to punish\nwas strongly correlated with their own productivity, yet this relationship was\nnot the result of innate differences---productivity-reducing manipulations also\nresulted in reduced punishment. Peer effects proved hard to stamp out: although\nmost workers complied with clearly communicated maximum expectations for\noutput, some workers still raised their production beyond the output ceiling\nafter evaluating highly productive yet non-complying work products.\n", "versions": [{"version": "v1", "created": "Sat, 14 Aug 2010 12:34:00 GMT"}], "update_date": "2010-08-17", "authors_parsed": [["Horton", "John J.", ""]]}, {"id": "1008.4929", "submitter": "Patrick Kaifosh", "authors": "Patrick Kaifosh", "title": "User interfaces and data entry with real time inverse arithmetic coding", "comments": "12 pages, 4 figures", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.HC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This paper introduces real time inverse arithmetic coding and user interfaces\nbased thereupon. The main idea is that information-efficient data entry can be\nachieved by ensuring that each input's associated display space and ease of\nselection are at all times related to the input's probability of being\nselected. As with data entry based on inverse arithmetic coding, the layout\ninitially depends on the probabilities of the possible inputs; however, real\ntime inverse arithmetic coding differs in that the user's actions are\ninterpreted not to navigate this probability distribution but rather to modify\nit according to a learned update rule, which approximates the conditioning of\nthe probability distribution on the user's actions. Potential applications of\nreal time inverse arithmetic coding include text entry, file browsing,\nintegrated multi-program user interfaces, assistive technologies for users with\nmovement disabilities, and ergonomic input methods.\n", "versions": [{"version": "v1", "created": "Sun, 29 Aug 2010 15:02:04 GMT"}], "update_date": "2010-08-31", "authors_parsed": [["Kaifosh", "Patrick", ""]]}]