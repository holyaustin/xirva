[{"id": "0907.1990", "submitter": "Oktie Hassanzadeh", "authors": "Oktie Hassanzadeh", "title": "Automated Protein Structure Classification: A Survey", "comments": "14 pages, Technical Report CSRG-589, University of Toronto", "journal-ref": null, "doi": null, "report-no": "CSRG-589", "categories": "cs.CE q-bio.BM", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Classification of proteins based on their structure provides a valuable\nresource for studying protein structure, function and evolutionary\nrelationships. With the rapidly increasing number of known protein structures,\nmanual and semi-automatic classification is becoming ever more difficult and\nprohibitively slow. Therefore, there is a growing need for automated, accurate\nand efficient classification methods to generate classification databases or\nincrease the speed and accuracy of semi-automatic techniques. Recognizing this\nneed, several automated classification methods have been developed. In this\nsurvey, we overview recent developments in this area. We classify different\nmethods based on their characteristics and compare their methodology, accuracy\nand efficiency. We then present a few open problems and explain future\ndirections.\n", "versions": [{"version": "v1", "created": "Mon, 13 Jul 2009 18:40:38 GMT"}], "update_date": "2009-07-14", "authors_parsed": [["Hassanzadeh", "Oktie", ""]]}, {"id": "0907.4622", "submitter": "Rajkumar Buyya", "authors": "Christian Vecchiola, Xingchen Chu, and Rajkumar Buyya", "title": "Aneka: A Software Platform for .NET-based Cloud Computing", "comments": "30 pages, 10 figures", "journal-ref": null, "doi": null, "report-no": "GRIDS-TR-2009-4, Grid Computing and Distributed Systems Laboratory,\n  The University of Melbourne, Australia, May 25, 2009", "categories": "cs.DC cs.CE cs.NI cs.OS cs.PL cs.SE", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Aneka is a platform for deploying Clouds developing applications on top of\nit. It provides a runtime environment and a set of APIs that allow developers\nto build .NET applications that leverage their computation on either public or\nprivate clouds. One of the key features of Aneka is the ability of supporting\nmultiple programming models that are ways of expressing the execution logic of\napplications by using specific abstractions. This is accomplished by creating a\ncustomizable and extensible service oriented runtime environment represented by\na collection of software containers connected together. By leveraging on these\narchitecture advanced services including resource reservation, persistence,\nstorage management, security, and performance monitoring have been implemented.\nOn top of this infrastructure different programming models can be plugged to\nprovide support for different scenarios as demonstrated by the engineering,\nlife science, and industry applications.\n", "versions": [{"version": "v1", "created": "Sun, 26 Jul 2009 02:19:42 GMT"}], "update_date": "2009-07-28", "authors_parsed": [["Vecchiola", "Christian", ""], ["Chu", "Xingchen", ""], ["Buyya", "Rajkumar", ""]]}]