[{"id": "0804.0524", "submitter": "Uwe Aickelin", "authors": "Jingpeng Li and Uwe Aickelin", "title": "Bayesian Optimisation Algorithm for Nurse Scheduling", "comments": null, "journal-ref": "Scalable Optimization via Probabilistic Modeling: From Algorithms\n  to Applications (Studies in Computational Intelligence), edited by M Pelikan,\n  K Sastry and E Cantu Paz, Chapter 17, pp 315-332, Springer, 2006", "doi": "10.1007/978-3-540-34954-9_14", "report-no": null, "categories": "cs.NE cs.CE", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Our research has shown that schedules can be built mimicking a human\nscheduler by using a set of rules that involve domain knowledge. This chapter\npresents a Bayesian Optimization Algorithm (BOA) for the nurse scheduling\nproblem that chooses such suitable scheduling rules from a set for each nurses\nassignment. Based on the idea of using probabilistic models, the BOA builds a\nBayesian network for the set of promising solutions and samples these networks\nto generate new candidate solutions. Computational results from 52 real data\ninstances demonstrate the success of this approach. It is also suggested that\nthe learning mechanism in the proposed algorithm may be suitable for other\nscheduling problems.\n", "versions": [{"version": "v1", "created": "Thu, 3 Apr 2008 11:14:11 GMT"}], "update_date": "2010-07-05", "authors_parsed": [["Li", "Jingpeng", ""], ["Aickelin", "Uwe", ""]]}, {"id": "0804.1187", "submitter": "Marianne Viallet", "authors": "Marianne Viallet (LTDS), G\\'erald Poum\\'erol, Olivier Dessombz (LTDS),\n  Louis Jezequel (LTDS)", "title": "M\\'ethode de calcul du rayonnement acoustique de structures complexes", "comments": null, "journal-ref": "Dans Actes du huiti\\`eme colloque national en Calcul des\n  structures - GIENS 2007 - Huiti\\`eme colloque national en Calcul des\n  structures, Giens : France (2007)", "doi": null, "report-no": null, "categories": "cs.CE", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In the automotive industry, predicting noise during design cycle is a\nnecessary step. Well-known methods exist to answer this issue in low frequency\ndomain. Among these, Finite Element Methods, adapted to closed domains, are\nquite easy to implement whereas Boundary Element Methods are more adapted to\ninfinite domains, but may induce singularity problems. In this article, the\ndescribed method, the SDM, allows to use both methods in their best application\ndomain. A new method is also presented to solve the SDM exterior problem.\nInstead of using Boundary Element Methods, an original use of Finite Elements\nis made. Efficiency of this new version of the Substructure Deletion Method is\ndiscussed.\n", "versions": [{"version": "v1", "created": "Tue, 8 Apr 2008 06:24:49 GMT"}], "update_date": "2008-12-18", "authors_parsed": [["Viallet", "Marianne", "", "LTDS"], ["Poum\u00e9rol", "G\u00e9rald", "", "LTDS"], ["Dessombz", "Olivier", "", "LTDS"], ["Jezequel", "Louis", "", "LTDS"]]}, {"id": "0804.2095", "submitter": "Paul Tarau", "authors": "Paul Tarau and Brenda Luderman", "title": "A Logic Programming Framework for Combinational Circuit Synthesis", "comments": null, "journal-ref": "23rd International Conference on Logic Programming (ICLP), LNCS\n  4670, 2007, pages 180-194", "doi": null, "report-no": null, "categories": "cs.LO cs.CE cs.DM cs.PL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Logic Programming languages and combinational circuit synthesis tools share a\ncommon \"combinatorial search over logic formulae\" background. This paper\nattempts to reconnect the two fields with a fresh look at Prolog encodings for\nthe combinatorial objects involved in circuit synthesis. While benefiting from\nProlog's fast unification algorithm and built-in backtracking mechanism,\nefficiency of our search algorithm is ensured by using parallel bitstring\noperations together with logic variable equality propagation, as a mapping\nmechanism from primary inputs to the leaves of candidate Leaf-DAGs implementing\na combinational circuit specification. After an exhaustive expressiveness\ncomparison of various minimal libraries, a surprising first-runner, Strict\nBoolean Inequality \"<\" together with constant function \"1\" also turns out to\nhave small transistor-count implementations, competitive to NAND-only or\nNOR-only libraries. As a practical outcome, a more realistic circuit\nsynthesizer is implemented that combines rewriting-based simplification of\n(<,1) circuits with exhaustive Leaf-DAG circuit search.\n  Keywords: logic programming and circuit design, combinatorial object\ngeneration, exact combinational circuit synthesis, universal boolean logic\nlibraries, symbolic rewriting, minimal transistor-count circuit synthesis\n", "versions": [{"version": "v1", "created": "Mon, 14 Apr 2008 02:40:31 GMT"}], "update_date": "2008-12-18", "authors_parsed": [["Tarau", "Paul", ""], ["Luderman", "Brenda", ""]]}]