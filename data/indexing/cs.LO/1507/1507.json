[{"id": "1507.00163", "submitter": "Max Tschaikowski", "authors": "Luca Cardelli, Mirco Tribastone, Max Tschaikowski and Andrea Vandin", "title": "Forward and Backward Bisimulations for Chemical Reaction Networks", "comments": "Extended version of the CONCUR 2015 paper", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We present two quantitative behavioral equivalences over species of a\nchemical reaction network (CRN) with semantics based on ordinary differential\nequations. Forward CRN bisimulation identifies a partition where each\nequivalence class represents the exact sum of the concentrations of the species\nbelonging to that class. Backward CRN bisimulation relates species that have\nthe identical solutions at all time points when starting from the same initial\nconditions. Both notions can be checked using only CRN syntactical information,\ni.e., by inspection of the set of reactions. We provide a unified algorithm\nthat computes the coarsest refinement up to our bisimulations in polynomial\ntime. Further, we give algorithms to compute quotient CRNs induced by a\nbisimulation. As an application, we find significant reductions in a number of\nmodels of biological processes from the literature. In two cases we allow the\nanalysis of benchmark models which would be otherwise intractable due to their\nmemory requirements.\n", "versions": [{"version": "v1", "created": "Wed, 1 Jul 2015 09:34:33 GMT"}, {"version": "v2", "created": "Fri, 3 Jul 2015 13:32:28 GMT"}, {"version": "v3", "created": "Mon, 6 Jul 2015 10:45:28 GMT"}, {"version": "v4", "created": "Wed, 8 Jul 2015 09:13:14 GMT"}, {"version": "v5", "created": "Wed, 15 Jul 2015 13:01:39 GMT"}], "update_date": "2015-07-16", "authors_parsed": [["Cardelli", "Luca", ""], ["Tribastone", "Mirco", ""], ["Tschaikowski", "Max", ""], ["Vandin", "Andrea", ""]]}, {"id": "1507.00257", "submitter": "Leopoldo Bertossi", "authors": "Leopoldo Bertossi and Babak Salimi", "title": "From Causes for Database Queries to Repairs and Model-Based Diagnosis\n  and Back", "comments": "To appear in Theory of Computing Systems. By invitation to special\n  issue with extended papers from ICDT 2015 (paper arXiv:1412.4311)", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DB cs.AI cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In this work we establish and investigate connections between causes for\nquery answers in databases, database repairs wrt. denial constraints, and\nconsistency-based diagnosis. The first two are relatively new research areas in\ndatabases, and the third one is an established subject in knowledge\nrepresentation. We show how to obtain database repairs from causes, and the\nother way around. Causality problems are formulated as diagnosis problems, and\nthe diagnoses provide causes and their responsibilities. The vast body of\nresearch on database repairs can be applied to the newer problems of computing\nactual causes for query answers and their responsibilities. These connections,\nwhich are interesting per se, allow us, after a transition -inspired by\nconsistency-based diagnosis- to computational problems on hitting sets and\nvertex covers in hypergraphs, to obtain several new algorithmic and complexity\nresults for database causality.\n", "versions": [{"version": "v1", "created": "Wed, 1 Jul 2015 15:20:29 GMT"}, {"version": "v2", "created": "Mon, 3 Oct 2016 17:52:10 GMT"}, {"version": "v3", "created": "Sun, 23 Oct 2016 17:37:58 GMT"}], "update_date": "2016-10-25", "authors_parsed": [["Bertossi", "Leopoldo", ""], ["Salimi", "Babak", ""]]}, {"id": "1507.00459", "submitter": "Jingchao Chen", "authors": "Jingchao Chen", "title": "Fast Blocked Clause Decomposition with High Quality", "comments": "15 pages", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Any CNF formula can be decomposed two blocked subsets such that both can be\nsolved by BCE (Blocked Clause Elimination). To make the decomposition more\nuseful, one hopes to have the decomposition as unbalanced as possible. It is\noften time consuming to achieve this goal. So far there have been several\ndecomposition and post-processing algorithms such as PureDecompose,\nQuickDecompose, EagerMover etc. We found that these existing algorithms are\noften either inefficient or low-quality decomposition. This paper aims at\nimproving the decomposition quality, while keeping the runtime of algorithms\nunder control. To achieve this goal, we improve the existing BCE, and present\ntwo new variants of PureDecompose, a new heuristic decomposition called\nLessInterfereDecompose, and a new post-processing algorithm called\nRsetGuidedDecompose. Combining these new techniques results in a new algorithm\ncalled MixDecompose. In our experiments, there is no application formula where\nthe quality of PureDecompose+EagerMover is better than MixDecompose. In terms\nof speed, MixDecompose is also very fast. Our average runtime is a little\nlonger, but the worst-case runtime is shorter. In theory, our two variants of\nPureDecompose requires linear time in the number of clauses. By limiting the\nsize of the touch list used by BCE, we can guarantee always that MixDecompose\nruns in linear time.\n", "versions": [{"version": "v1", "created": "Thu, 2 Jul 2015 08:07:28 GMT"}, {"version": "v2", "created": "Sat, 19 Dec 2015 04:14:23 GMT"}], "update_date": "2015-12-22", "authors_parsed": [["Chen", "Jingchao", ""]]}, {"id": "1507.00548", "submitter": "Inge Bethke", "authors": "Jan A. Bergstra and Inge Bethke", "title": "A negative result on algebraic specifications of the meadow of rational\n  numbers", "comments": "5 pages, 2 tables", "journal-ref": null, "doi": null, "report-no": null, "categories": "math.RA cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  $\\mathbb{Q}_0$ - the involutive meadow of the rational numbers - is the field\nof the rational numbers where the multiplicative inverse operation is made\ntotal by imposing $0^{-1}=0$. In this note, we prove that $\\mathbb{Q}_0$ cannot\nbe specified by the usual axioms for meadows augmented by a finite set of\naxioms of the form $(1+ \\cdots +1+x^2)\\cdot (1+ \\cdots +1 +x^2)^{-1}=1$.\n", "versions": [{"version": "v1", "created": "Thu, 2 Jul 2015 12:38:46 GMT"}, {"version": "v2", "created": "Fri, 22 Jan 2016 09:33:25 GMT"}], "update_date": "2017-12-05", "authors_parsed": [["Bergstra", "Jan A.", ""], ["Bethke", "Inge", ""]]}, {"id": "1507.00623", "submitter": "Romain Brenguier", "authors": "Romain Brenguier, Jean-Fran\\c{c}ois Raskin, Ocan Sankur", "title": "Assume-Admissible Synthesis", "comments": "31 pages", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO cs.GT", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In this paper, we introduce a novel rule for synthesis of reactive systems,\napplicable to systems made of n components which have each their own\nobjectives. It is based on the notion of admissible strategies. We compare our\nnovel rule with previous rules defined in the literature, and we show that\ncontrary to the previous proposals, our rule defines sets of solutions which\nare rectangular. This property leads to solutions which are robust and\nresilient. We provide algorithms with optimal complexity and also an\nabstraction framework.\n", "versions": [{"version": "v1", "created": "Thu, 2 Jul 2015 15:22:00 GMT"}], "update_date": "2015-07-03", "authors_parsed": [["Brenguier", "Romain", ""], ["Raskin", "Jean-Fran\u00e7ois", ""], ["Sankur", "Ocan", ""]]}, {"id": "1507.00655", "submitter": "Miika Hannula", "authors": "Miika Hannula", "title": "Reasoning about embedded dependencies using inclusion dependencies", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The implication problem for the class of embedded dependencies is\nundecidable. However, this does not imply lackness of a proof procedure as\nexemplified by the chase algorithm. In this paper we present a complete\naxiomatization of embedded dependencies that is based on the chase and uses\ninclusion dependencies and implicit existential quantification in the\nintermediate steps of deductions.\n", "versions": [{"version": "v1", "created": "Thu, 2 Jul 2015 16:45:43 GMT"}], "update_date": "2015-07-03", "authors_parsed": [["Hannula", "Miika", ""]]}, {"id": "1507.00700", "submitter": "Emil Je\\v{r}\\'abek", "authors": "Emil Je\\v{r}\\'abek", "title": "A note on the substructural hierarchy", "comments": "11 pages; to appear in Mathematical Logic Quarterly", "journal-ref": "Mathematical Logic Quarterly 62 (2016), no. 1--2, pp. 102--110", "doi": "10.1002/malq.201500066", "report-no": null, "categories": "cs.LO math.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We prove that all axiomatic extensions of the full Lambek calculus with\nexchange can be axiomatized by formulas on the $\\mathcal N_3$ level of the\nsubstructural hierarchy.\n", "versions": [{"version": "v1", "created": "Thu, 2 Jul 2015 19:03:46 GMT"}, {"version": "v2", "created": "Fri, 14 Aug 2015 15:24:12 GMT"}, {"version": "v3", "created": "Mon, 19 Oct 2015 16:28:21 GMT"}], "update_date": "2016-02-22", "authors_parsed": [["Je\u0159\u00e1bek", "Emil", ""]]}, {"id": "1507.00840", "submitter": "Koji Sawa", "authors": "Koji Sawa", "title": "Logic as a complex network", "comments": "10 pages, 4 figures, original research paper", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.SI cs.LO physics.soc-ph", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  When we represent logical, connective implications by directed edges, the\nresulting set of directed edges can be regarded as a complex network. In this\narticle, we compose a network model that represents a deductive-logic-like\nstructure composed solely of implications. The proposed network model grows\nlike the BA model reported by Barabasi and Albert [Science 286, 509 (1999)].\nThough the BA model references the whole of the existing network when a node is\nadded, our model references only part of the existing network. In this view,\nour model is more realistic than the BA model. However, it also exhibits power\nlaw characteristics.\n", "versions": [{"version": "v1", "created": "Fri, 3 Jul 2015 07:42:37 GMT"}], "update_date": "2015-07-06", "authors_parsed": [["Sawa", "Koji", ""]]}, {"id": "1507.00980", "submitter": "C\\'esar Rodr\\'iguez", "authors": "C\\'esar Rodr\\'iguez, Marcelo Sousa, Subodh Sharma, Daniel Kroening", "title": "Unfolding-based Partial Order Reduction", "comments": "Long version of a paper with the same title appeared on the\n  proceedings of CONCUR 2015", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO cs.PL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Partial order reduction (POR) and net unfoldings are two alternative methods\nto tackle state-space explosion caused by concurrency. In this paper, we\npropose the combination of both approaches in an effort to combine their\nstrengths. We first define, for an abstract execution model, unfolding\nsemantics parameterized over an arbitrary independence relation. Based on it,\nour main contribution is a novel stateless POR algorithm that explores at most\none execution per Mazurkiewicz trace, and in general, can explore exponentially\nfewer, thus achieving a form of super-optimality. Furthermore, our\nunfolding-based POR copes with non-terminating executions and incorporates\nstate-caching. Over benchmarks with busy-waits, among others, our experiments\nshow a dramatic reduction in the number of executions when compared to a\nstate-of-the-art DPOR.\n", "versions": [{"version": "v1", "created": "Fri, 3 Jul 2015 18:23:13 GMT"}], "update_date": "2015-07-06", "authors_parsed": [["Rodr\u00edguez", "C\u00e9sar", ""], ["Sousa", "Marcelo", ""], ["Sharma", "Subodh", ""], ["Kroening", "Daniel", ""]]}, {"id": "1507.01111", "submitter": "Fernando Soler-Toscano", "authors": "David Fern\\'andez-Duque, \\'Angel Nepomuceno-Fern\\'andez, Enrique\n  Sarri\\'on-Morrillo, Fernando Soler-Toscano, Fernando R. Vel\\'azquez-Quesada", "title": "Forgetting complex propositions", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This paper uses possible-world semantics to model the changes that may occur\nin an agent's knowledge as she loses information. This builds on previous work\nin which the agent may forget the truth-value of an atomic proposition, to a\nmore general case where she may forget the truth-value of a propositional\nformula. The generalization poses some challenges, since in order to forget\nwhether a complex proposition $\\pi$ is the case, the agent must also lose\ninformation about the propositional atoms that appear in it, and there is no\nunambiguous way to go about this.\n  We resolve this situation by considering expressions of the form\n$[\\boldsymbol{\\ddagger} \\pi]\\varphi$, which quantify over all possible (but\nminimal) ways of forgetting whether $\\pi$. Propositional atoms are modified\nnon-deterministically, although uniformly, in all possible worlds. We then\nrepresent this within action model logic in order to give a sound and complete\naxiomatization for a logic with knowledge and forgetting. Finally, some\nvariants are discussed, such as when an agent forgets $\\pi$ (rather than\nforgets whether $\\pi$) and when the modification of atomic facts is done\nnon-uniformly throughout the model.\n", "versions": [{"version": "v1", "created": "Sat, 4 Jul 2015 14:46:31 GMT"}], "update_date": "2015-07-07", "authors_parsed": [["Fern\u00e1ndez-Duque", "David", ""], ["Nepomuceno-Fern\u00e1ndez", "\u00c1ngel", ""], ["Sarri\u00f3n-Morrillo", "Enrique", ""], ["Soler-Toscano", "Fernando", ""], ["Vel\u00e1zquez-Quesada", "Fernando R.", ""]]}, {"id": "1507.01150", "submitter": "Nicolai Kraus", "authors": "Paolo Capriotti, Nicolai Kraus, Andrea Vezzosi", "title": "Functions out of Higher Truncations", "comments": "15 pages; to appear at CSL'15", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO math.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In homotopy type theory, the truncation operator ||-||n (for a number n > -2)\nis often useful if one does not care about the higher structure of a type and\nwants to avoid coherence problems. However, its elimination principle only\nallows to eliminate into n-types, which makes it hard to construct functions\n||A||n -> B if B is not an n-type. This makes it desirable to derive more\npowerful elimination theorems. We show a first general result: If B is an\n(n+1)-type, then functions ||A||n -> B correspond exactly to functions A -> B\nwhich are constant on all (n+1)-st loop spaces. We give one \"elementary\" proof\nand one proof that uses a higher inductive type, both of which require some\neffort. As a sample application of our result, we show that we can construct\n\"set-based\" representations of 1-types, as long as they have \"braided\" loop\nspaces. The main result with one of its proofs and the application have been\nformalised in Agda.\n", "versions": [{"version": "v1", "created": "Sat, 4 Jul 2015 22:21:34 GMT"}], "update_date": "2015-07-07", "authors_parsed": [["Capriotti", "Paolo", ""], ["Kraus", "Nicolai", ""], ["Vezzosi", "Andrea", ""]]}, {"id": "1507.01451", "submitter": "Peter Sch\\\"uller", "authors": "Thomas Eiter, Michael Fink, Giovambattista Ianni, Thomas Krennwallner,\n  Christoph Redl, Peter Sch\\\"uller", "title": "A model building framework for Answer Set Programming with external\n  computations", "comments": "57 pages, 9 figures, 3 tables, 6 algorithms, to appear in Theory and\n  Practice of Logic Programming (accepted in June 2015)", "journal-ref": "Theory and Practice of Logic Programming 16 (2016) 418-464", "doi": "10.1017/S1471068415000113", "report-no": null, "categories": "cs.AI cs.LO cs.PL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  As software systems are getting increasingly connected, there is a need for\nequipping nonmonotonic logic programs with access to external sources that are\npossibly remote and may contain information in heterogeneous formats. To cater\nfor this need, HEX programs were designed as a generalization of answer set\nprograms with an API style interface that allows to access arbitrary external\nsources, providing great flexibility. Efficient evaluation of such programs\nhowever is challenging, and it requires to interleave external computation and\nmodel building; to decide when to switch between these tasks is difficult, and\nexisting approaches have limited scalability in many real-world application\nscenarios. We present a new approach for the evaluation of logic programs with\nexternal source access, which is based on a configurable framework for dividing\nthe non-ground program into possibly overlapping smaller parts called\nevaluation units. The latter will be processed by interleaving external\nevaluation and model building using an evaluation graph and a model graph,\nrespectively, and by combining intermediate results. Experiments with our\nprototype implementation show a significant improvement compared to previous\napproaches. While designed for HEX-programs, the new evaluation approach may be\ndeployed to related rule-based formalisms as well.\n", "versions": [{"version": "v1", "created": "Mon, 6 Jul 2015 13:31:39 GMT"}, {"version": "v2", "created": "Sat, 11 Jul 2015 22:20:15 GMT"}], "update_date": "2020-02-19", "authors_parsed": [["Eiter", "Thomas", ""], ["Fink", "Michael", ""], ["Ianni", "Giovambattista", ""], ["Krennwallner", "Thomas", ""], ["Redl", "Christoph", ""], ["Sch\u00fcller", "Peter", ""]]}, {"id": "1507.01771", "submitter": "Keehang Kwon", "authors": "Keehang Kwon", "title": "A New Execution Model for the logic of hereditary Harrop formulas", "comments": "6 pages. arXiv admin note: substantial text overlap with\n  arXiv:1211.6535", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The class of first-order Hereditary Harrop formulas ($fohh$) is a\nwell-established extension of first-order Horn clauses. Its operational\nsemantics is based on intuitionistic provability.\n  We propose another operational semantics for $fohh$ which is based on game\nsemantics. This new semantics has several interesting aspects: in particular,\nit gives a logical status to the $read$ predicate in Prolog.\n", "versions": [{"version": "v1", "created": "Tue, 7 Jul 2015 12:08:39 GMT"}], "update_date": "2015-07-08", "authors_parsed": [["Kwon", "Keehang", ""]]}, {"id": "1507.02297", "submitter": "Eugene Goldberg", "authors": "Eugene Goldberg", "title": "Equivalence Checking and Simulation By Computing Range Reduction", "comments": "The difference of this version from the previous one (i.e. version\n  number 2) is twofold. First, I improved the readability of the paper. Second,\n  I removed the claim that equivalence checking by computing range reduction is\n  noise-insensitive. The final result is indeed noise-insensitive but the\n  presence of noise may drastically slow down an algorithm computing this\n  result", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We introduce new methods of equivalence checking and simulation based on\nComputing Range Reduction (CRR). Given a combinational circuit $N$, the CRR\nproblem is to compute the set of outputs that disappear from the range of $N$\nif a set of inputs of $N$ is excluded from consideration. Importantly, in many\ncases, range reduction can be efficiently found even if computing the entire\nrange of $N$ is infeasible.\n  Solving equivalence checking by CRR facilitates generation of proofs of\nequivalence that mimic a \"cut propagation\" approach. A limited version of such\nan approach has been successfully used by commercial tools. Functional\nverification of a circuit $N$ by simulation can be viewed as a way to reduce\nthe complexity of computing the range of $N$. Instead of finding the entire\nrange of $N$ and checking if it contains a bad output, such a range is computed\nonly for one input. Simulation by CRR offers an alternative way of coping with\nthe complexity of range computation. The idea is to exclude a subset of inputs\nof $N$ and compute the range reduction caused by such an exclusion. If the set\nof disappeared outputs contains a bad one, then $N$ is buggy.\n", "versions": [{"version": "v1", "created": "Wed, 8 Jul 2015 20:17:50 GMT"}, {"version": "v2", "created": "Tue, 28 Jul 2015 03:50:59 GMT"}, {"version": "v3", "created": "Tue, 11 Aug 2015 16:52:26 GMT"}], "update_date": "2015-08-12", "authors_parsed": [["Goldberg", "Eugene", ""]]}, {"id": "1507.02519", "submitter": "Jianwen Li", "authors": "Jianwen Li, Shufang Zhu, Geguang Pu, Moshe Vardi", "title": "SAT-based Explicit LTL Reasoning", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We present here a new explicit reasoning framework for linear temporal logic\n(LTL), which is built on top of propositional satisfiability (SAT) solving. As\na proof-of-concept of this framework, we describe a new LTL satisfiability\ntool, Aalta\\_v2.0, which is built on top of the MiniSAT SAT solver. We test the\neffectiveness of this approach by demonnstrating that Aalta\\_v2.0 significantly\noutperforms all existing LTL satisfiability solvers. Furthermore, we show that\nthe framework can be extended from propositional LTL to assertional LTL (where\nwe allow theory atoms), by replacing MiniSAT with the Z3 SMT solver, and\ndemonstrating that this can yield an exponential improvement in performance.\n", "versions": [{"version": "v1", "created": "Thu, 9 Jul 2015 14:14:35 GMT"}, {"version": "v2", "created": "Mon, 14 Sep 2015 22:30:11 GMT"}, {"version": "v3", "created": "Fri, 4 Dec 2015 23:33:32 GMT"}], "update_date": "2015-12-08", "authors_parsed": [["Li", "Jianwen", ""], ["Zhu", "Shufang", ""], ["Pu", "Geguang", ""], ["Vardi", "Moshe", ""]]}, {"id": "1507.02531", "submitter": "Robert Koenighofer", "authors": "Roderick Bloem and Ruediger Ehlers and Robert Koenighofer", "title": "Cooperative Reactive Synthesis", "comments": "18 pages, 3 figures. This is an extended version of [7], featuring an\n  additional appendix", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  A modern approach to engineering correct-by-construction systems is to\nsynthesize them automatically from formal specifications. Oftentimes, a system\ncan only satisfy its guarantees if certain environment assumptions hold, which\nmotivates their inclusion in the system specification. Experience with modern\nsynthesis approaches shows that synthesized systems tend to satisfy their\nspecifications by actively working towards the violation of the assumptions\nrather than satisfying assumptions and guarantees together. Such uncooperative\nbehavior is undesirable because it violates the aim of synthesis: the system\nshould try to satisfy its guarantees and use the assumptions only when needed.\nAlso, the assumptions often describe the valid behavior of other components in\na bigger system, which should not be obstructed unnecessarily.\n  In this paper, we present a hierarchy of cooperation levels between system\nand environment. Each level describes how well the system enforces both the\nassumptions and guarantees. We show how to synthesize systems that achieve the\nhighest possible cooperation level for a given specification in Linear Temporal\nLogic (LTL). The synthesized systems can also exploit cooperative environment\nbehavior during operation to reach a higher cooperation level that is not\nenforceable by the system initially. The worst-case time complexity of our\nsynthesis procedure is doubly-exponential, which matches the complexity of\nstandard LTL synthesis.\n  This is an extended version of [7] that features an additional appendix.\n", "versions": [{"version": "v1", "created": "Thu, 9 Jul 2015 14:39:25 GMT"}], "update_date": "2015-07-10", "authors_parsed": [["Bloem", "Roderick", ""], ["Ehlers", "Ruediger", ""], ["Koenighofer", "Robert", ""]]}, {"id": "1507.02744", "submitter": "C\\'esar Rodr\\'iguez", "authors": "Hern\\'an Ponce-de-Le\\'on, C\\'esar Rodr\\'iguez, Josep Carmona, Keijo\n  Heljanko, Stefan Haar", "title": "Unfolding-Based Process Discovery", "comments": "This is the unabridged version of a paper with the same title\n  appearead at the proceedings of ATVA 2015", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This paper presents a novel technique for process discovery. In contrast to\nthe current trend, which only considers an event log for discovering a process\nmodel, we assume two additional inputs: an independence relation on the set of\nlogged activities, and a collection of negative traces. After deriving an\nintermediate net unfolding from them, we perform a controlled folding giving\nrise to a Petri net which contains both the input log and all\nindependence-equivalent traces arising from it. Remarkably, the derived Petri\nnet cannot execute any trace from the negative collection. The entire chain of\ntransformations is fully automated. A tool has been developed and experimental\nresults are provided that witness the significance of the contribution of this\npaper.\n", "versions": [{"version": "v1", "created": "Thu, 9 Jul 2015 23:35:12 GMT"}], "update_date": "2015-07-13", "authors_parsed": [["Ponce-de-Le\u00f3n", "Hern\u00e1n", ""], ["Rodr\u00edguez", "C\u00e9sar", ""], ["Carmona", "Josep", ""], ["Heljanko", "Keijo", ""], ["Haar", "Stefan", ""]]}, {"id": "1507.02890", "submitter": "Bedon Nicolas", "authors": "Bedon Nicolas (University of Rouen)", "title": "Logic and Branching Automata", "comments": null, "journal-ref": "Logical Methods in Computer Science, Volume 11, Issue 4 (October\n  15, 2015) lmcs:1603", "doi": "10.2168/LMCS-11(4:2)2015", "report-no": null, "categories": "cs.FL cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In this paper we study the logical aspects of branching automata, as defined\nby Lodaya and Weil. We first prove that the class of languages of finite N-free\nposets recognized by branching automata is closed under complementation. Then\nwe define a logic, named P-MSO as it is a extension of monadic second-order\nlogic with Presburger arithmetic, and show that it is precisely as expressive\nas branching automata. As a consequence of the effectiveness of the\nconstruction of one formalism from the other, the P-MSO theory of the class of\nall finite N-free posets is decidable.\n", "versions": [{"version": "v1", "created": "Fri, 10 Jul 2015 13:25:10 GMT"}, {"version": "v2", "created": "Wed, 14 Oct 2015 10:48:03 GMT"}], "update_date": "2017-01-11", "authors_parsed": [["Nicolas", "Bedon", "", "University of Rouen"]]}, {"id": "1507.03215", "submitter": "Volker Diekert", "authors": "Volker Diekert", "title": "More Than 1700 Years of Word Equations", "comments": "The paper will appear as an invited address in the LNCS proceedings\n  of CAI 2015, Stuttgart, Germany, September 1 - 4, 2015", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Geometry and Diophantine equations have been ever-present in mathematics.\nDiophantus of Alexandria was born in the 3rd century (as far as we know), but a\nsystematic mathematical study of word equations began only in the 20th century.\nSo, the title of the present article does not seem to be justified at all.\nHowever, a linear Diophantine equation can be viewed as a special case of a\nsystem of word equations over a unary alphabet, and, more importantly, a word\nequation can be viewed as a special case of a Diophantine equation. Hence, the\nproblem WordEquations: \"Is a given word equation solvable?\" is intimately\nrelated to Hilbert's 10th problem on the solvability of Diophantine equations.\nThis became clear to the Russian school of mathematics at the latest in the mid\n1960s, after which a systematic study of that relation began.\n  Here, we review some recent developments which led to an amazingly simple\ndecision procedure for WordEquations, and to the description of the set of all\nsolutions as an EDT0L language.\n", "versions": [{"version": "v1", "created": "Sun, 12 Jul 2015 10:23:09 GMT"}], "update_date": "2015-07-14", "authors_parsed": [["Diekert", "Volker", ""]]}, {"id": "1507.03219", "submitter": "Renato Neves", "authors": "Renato Neves, Luis S. Barbosa, Dirk Hofmann, Manuel A. Martins", "title": "Continuity as a computational effect", "comments": "Journal of Logical and Algebraic Methods in Programming, 2016", "journal-ref": null, "doi": "10.1016/j.jlamp.2016.05.005", "report-no": null, "categories": "cs.LO cs.SE", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The original purpose of component-based development was to provide techniques\nto master complex software, through composition, reuse and parametrisation.\nHowever, such systems are rapidly moving towards a level in which software\nbecomes prevalently intertwined with (continuous) physical processes. A\npossible way to accommodate the latter in component calculi relies on a\nsuitable encoding of continuous behaviour as (yet another) computational\neffect. This paper introduces such an encoding through a monad which, in the\ncompositional development of hybrid systems, may play a role similar to the one\nplayed by the 1+, powerset, and distribution monads in the characterisation of\npartial, non deterministic and probabilistic components, respectively. This\nmonad and its Kleisli category provide a setting in which the effects of\ncontinuity over (different forms of) composition can be suitably studied.\n", "versions": [{"version": "v1", "created": "Sun, 12 Jul 2015 11:38:40 GMT"}, {"version": "v2", "created": "Mon, 1 Aug 2016 12:18:32 GMT"}], "update_date": "2016-08-02", "authors_parsed": [["Neves", "Renato", ""], ["Barbosa", "Luis S.", ""], ["Hofmann", "Dirk", ""], ["Martins", "Manuel A.", ""]]}, {"id": "1507.03262", "submitter": "Christine Tasson", "authors": "Marie Kerjean (PPS), Christine Tasson (PPS)", "title": "Mackey-complete spaces and power series -- A topological model of\n  Differential Linear Logic", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In this paper, we have described a denotational model of Intuitionist Linear\nLogic which is also a differential category. Formulas are interpreted as\nMackey-complete topological vector space and linear proofs are interpreted by\nbounded linear functions. So as to interpret non-linear proofs of Linear Logic,\nwe have used a notion of power series between Mackey-complete spaces,\ngeneralizing the notion of entire functions in C. Finally, we have obtained a\nquantitative model of Intuitionist Differential Linear Logic, where the\nsyntactic differentiation correspond to the usual one and where the\ninterpretations of proofs satisfy a Taylor expansion decomposition.\n", "versions": [{"version": "v1", "created": "Sun, 12 Jul 2015 19:21:40 GMT"}], "update_date": "2015-07-14", "authors_parsed": [["Kerjean", "Marie", "", "PPS"], ["Tasson", "Christine", "", "PPS"]]}, {"id": "1507.03344", "submitter": "Yong Wang", "authors": "Yong Wang", "title": "Reversible Quantum Process Algebra with Guards", "comments": "235 pages, 23 figures, 98 tables. arXiv admin note: substantial text\n  overlap with arXiv:1501.05260, arXiv:1404.0665, arXiv:1811.01070", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Truly concurrent process algebras are generalizations to the traditional\nprocess algebras for true concurrency, CTC to CCS, APTC to ACP, $\\pi_{tc}$ to\n$\\pi$ calculus, APPTC to probabilistic process algebra. And we also did some\nwork on reversible process algebra and probabilistic truly concurrent process\nalgebra. In this book, we utilize reversible truly concurrent process algebras\nAPRTC and probabilistic process algebra APPTC to model quantum computing and\nunify quantum and classical computing.\n", "versions": [{"version": "v1", "created": "Mon, 13 Jul 2015 07:47:41 GMT"}, {"version": "v2", "created": "Wed, 2 May 2018 03:18:06 GMT"}, {"version": "v3", "created": "Wed, 28 Nov 2018 17:41:27 GMT"}, {"version": "v4", "created": "Wed, 28 Jul 2021 06:53:28 GMT"}], "update_date": "2021-07-29", "authors_parsed": [["Wang", "Yong", ""]]}, {"id": "1507.03664", "submitter": "Jos\\'e Mart\\'in Castro-Manzano", "authors": "Jos\\'e Mart\\'in Castro-Manzano, Ver\\'onica Reyes-Meza, Jorge\n  Medina-Delgadillo", "title": "{dasasap}, an App for Syllogisms", "comments": "Proceedings of the Fourth International Conference on Tools for\n  Teaching Logic (TTL2015), Rennes, France, June 9-12, 2015. Editors: M.\n  Antonia Huertas, Jo\\~ao Marcos, Mar\\'ia Manzano, Sophie Pinchinat,\n  Fran\\c{c}ois Schwarzentruber", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.CY cs.LO", "license": "http://creativecommons.org/licenses/by/4.0/", "abstract": "  The main goal of this contribution is to introduce a cross-platform\napplication to learn-teach syllogistic. We call this application\n\\textit{dasasap} for \\textit{develop all syllogisms as soon as possible}. To\nintroduce this application we show the logical foundations for the game with a\nsystem we call $\\mathcal{L}_\\square$, and its interface developed with\nLiveCode.\n", "versions": [{"version": "v1", "created": "Tue, 14 Jul 2015 00:47:59 GMT"}, {"version": "v2", "created": "Fri, 17 Jul 2015 01:22:52 GMT"}], "update_date": "2015-07-20", "authors_parsed": [["Castro-Manzano", "Jos\u00e9 Mart\u00edn", ""], ["Reyes-Meza", "Ver\u00f3nica", ""], ["Medina-Delgadillo", "Jorge", ""]]}, {"id": "1507.03665", "submitter": "Jacques Duparc", "authors": "Jacques Duparc", "title": "Easy Proofs of L\\\"owenheim-Skolem Theorems by Means of Evaluation Games", "comments": "Proceedings of the Fourth International Conference on Tools for\n  Teaching Logic (TTL2015), Rennes, France, June 9-12, 2015. Editors: M.\n  Antonia Huertas, Jo\\~ao Marcos, Mar\\'ia Manzano, Sophie Pinchinat,\n  Fran\\c{c}ois Schwarzentruber", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.CY cs.LO", "license": "http://creativecommons.org/licenses/by/4.0/", "abstract": "  We propose a proof of the downward L\\\"owenheim-Skolem that relies on\nstrategies deriving from evaluation games instead of the Skolem normal forms.\nThis proof is simpler, and easily understood by the students, although it\nrequires, when defining the semantics of first-order logic to introduce first a\nfew notions inherited from game theory such as the one of an evaluation game.\n", "versions": [{"version": "v1", "created": "Tue, 14 Jul 2015 00:48:35 GMT"}], "update_date": "2015-07-15", "authors_parsed": [["Duparc", "Jacques", ""]]}, {"id": "1507.03666", "submitter": "Norbert Hundeshagen", "authors": "Arno Ehle, Norbert Hundeshagen and Martin Lange", "title": "The Sequent Calculus Trainer - Helping Students to Correctly Construct\n  Proofs", "comments": "Proceedings of the Fourth International Conference on Tools for\n  Teaching Logic (TTL2015), Rennes, France, June 9-12, 2015. Editors: M.\n  Antonia Huertas, Jo\\~ao Marcos, Mar\\'ia Manzano, Sophie Pinchinat,\n  Fran\\c{c}ois Schwarzentruber", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.CY cs.LO", "license": "http://creativecommons.org/licenses/by/4.0/", "abstract": "  We present the Sequent Calculus Trainer, a tool that supports students in\nlearning how to correctly construct proofs in the sequent calculus for\nfirst-order logic with equality. It is a proof assistant fostering the\nunderstanding of all the syntactic principles that need to be obeyed in\nconstructing correct proofs. It does not provide any help in finding good proof\nstrategies. Instead it aims at understanding the sequent calculus on a lower\nsyntactic level that needs to be mastered before one can consider proof\nstrategies. Its main feature is a proper feedback system embedded in a\ngraphical user interface. We also report on some empirical findings that\nindicate how the Sequent Calculus Trainer can improve the students' success in\nlearning sequent calculus for full first-order logic.\n", "versions": [{"version": "v1", "created": "Tue, 14 Jul 2015 00:48:51 GMT"}], "update_date": "2015-07-15", "authors_parsed": [["Ehle", "Arno", ""], ["Hundeshagen", "Norbert", ""], ["Lange", "Martin", ""]]}, {"id": "1507.03667", "submitter": "Nino Guallart", "authors": "Nino Guallart and Angel Nepomuceno-Fernandez", "title": "Set theory and tableaux for teaching propositional logic", "comments": "Proceedings of the Fourth International Conference on Tools for\n  Teaching Logic (TTL2015), Rennes, France, June 9-12, 2015. Editors: M.\n  Antonia Huertas, Jo\\~ao Marcos, Mar\\'ia Manzano, Sophie Pinchinat,\n  Fran\\c{c}ois Schwarzentruber", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.CY cs.LO", "license": "http://creativecommons.org/licenses/by/4.0/", "abstract": "  In this work we suggest the use of a set-theoretical interpretation of\nsemantic tableaux for teaching propositional logic. If the student has previous\nnotions of basic set theory, this approach to semantical tableaux can clarify\nher the way semantic trees operate, linking the syntactical and semantical\nsides of the process. Also, it may be useful for the introduction of more\nadvanced topics in logic, like modal logic.\n", "versions": [{"version": "v1", "created": "Tue, 14 Jul 2015 00:49:09 GMT"}], "update_date": "2015-07-15", "authors_parsed": [["Guallart", "Nino", ""], ["Nepomuceno-Fernandez", "Angel", ""]]}, {"id": "1507.03668", "submitter": "Pierre Joray", "authors": "Pierre Joray", "title": "Teaching Le\\'sniewski's Prothetic with a Natural Deduction System", "comments": "Presented at the Fourth International Conference on Tools for\n  Teaching Logic (TTL2015), Rennes, France, June 9-12, 2015", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.CY cs.LO", "license": "http://creativecommons.org/licenses/by/4.0/", "abstract": "  Protothetic is one of the most stimulating systems for propositional logic.\nIncluding quantifiers and an inference rule for definitions, it is a very\ninteresting mean for the study of many questions of metalogic. Unfortunately,\nit only exists in an axiomatic version, far too complicated and unusual to be\neasily understood by nowadays students in logic. In this paper, we present a\nsystem which is a natural deduction (in Fitch-Ja\\'skowski's style) version of\nprotothetic. According to us, this system is adequate for teaching\nLe\\'sniewski's logic to students accustomed to natural deduction.\n", "versions": [{"version": "v1", "created": "Tue, 14 Jul 2015 00:49:51 GMT"}], "update_date": "2015-07-15", "authors_parsed": [["Joray", "Pierre", ""]]}, {"id": "1507.03670", "submitter": "Angelo Kyrilov", "authors": "Angelo Kyrilov and David Noelle", "title": "Using Automated Theorem Provers to Teach Knowledge Representation in\n  First-Order Logic", "comments": "Proceedings of the Fourth International Conference on Tools for\n  Teaching Logic (TTL2015), Rennes, France, June 9-12, 2015. Editors: M.\n  Antonia Huertas, Jo\\~ao Marcos, Mar\\'ia Manzano, Sophie Pinchinat,\n  Fran\\c{c}ois Schwarzentruber", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.CY cs.LO", "license": "http://creativecommons.org/licenses/by/4.0/", "abstract": "  Undergraduate students of artificial intelligence often struggle with\nrepresenting knowledge as logical sentences. This is a skill that seems to\nrequire extensive practice to obtain, suggesting a teaching strategy that\ninvolves the assignment of numerous exercises involving the formulation of some\nbit of knowledge, communicated using a natural language such as English, as a\nsentence in some logic. The number of such exercises needed to master this\nskill is far too large to allow typical artificial intelligence course teaching\nteams to provide prompt feedback on student efforts. Thus, an automated\nassessment system for such exercises is needed to ensure that students receive\nan adequate amount of practice, with the rapid delivery of feedback allowing\nstudents to identify errors in their understanding and correct them. This paper\ndescribes an automated grading system for knowledge representation exercises\nusing first-order logic. A resolution theorem prover, \\textit{Prover9}, is used\nto check if a student-submitted formula is logically equivalent to a solution\nprovided by the instructor. This system has been used by students enrolled in\nundergraduate artificial intelligence classes for several years. Use of this\nteaching tool resulted in a statistically significant improvement on\nfirst-order logic knowledge representation questions appearing on the course\nfinal examination. This article explains how this system works, provides an\nanalysis of changes in student learning outcomes, and explores potential\nenhancements of this system, including the possibility of providing rich\nformative feedback by replacing the resolution theorem prover with a\ntableaux-based method.\n", "versions": [{"version": "v1", "created": "Tue, 14 Jul 2015 00:51:13 GMT"}], "update_date": "2015-07-15", "authors_parsed": [["Kyrilov", "Angelo", ""], ["Noelle", "David", ""]]}, {"id": "1507.03671", "submitter": "Josje Lodder", "authors": "Josje Lodder, Bastiaan Heeren and Johan Jeuring", "title": "A pilot study of the use of LogEx, lessons learned", "comments": "Proceedings of the Fourth International Conference on Tools for\n  Teaching Logic (TTL2015), Rennes, France, June 9-12, 2015. Editors: M.\n  Antonia Huertas, Jo\\~ao Marcos, Mar\\'ia Manzano, Sophie Pinchinat,\n  Fran\\c{c}ois Schwarzentruber", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.CY cs.LO", "license": "http://creativecommons.org/licenses/by/4.0/", "abstract": "  LogEx is a learning environment that supports students in rewriting\npropositional logical formulae, using standard equivalences. We organized a\npilot study to prepare a large scale evaluation of the learning environment. In\nthis paper we describe this study, together with the outcomes, which teach us\nvaluable lessons for the large scale evaluation.\n", "versions": [{"version": "v1", "created": "Tue, 14 Jul 2015 00:51:14 GMT"}], "update_date": "2015-07-15", "authors_parsed": [["Lodder", "Josje", ""], ["Heeren", "Bastiaan", ""], ["Jeuring", "Johan", ""]]}, {"id": "1507.03672", "submitter": "Johann Makowsky", "authors": "Johann Makowsky", "title": "Teaching Logic for Computer Science: Are We Teaching the Wrong\n  Narrative?", "comments": "Proceedings of the Fourth International Conference on Tools for\n  Teaching Logic (TTL2015), Rennes, France, June 9-12, 2015. Editors: M.\n  Antonia Huertas, Jo\\~ao Marcos, Mar\\'ia Manzano, Sophie Pinchinat,\n  Fran\\c{c}ois Schwarzentruber", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.CY cs.LO", "license": "http://creativecommons.org/licenses/by/4.0/", "abstract": "  In this paper I discuss what, according to my long experience, every computer\nscientist should know from logic. We concentrate on issues of modeling,\ninterpretability and levels of abstraction. We discuss what the minimal toolbox\nof logic tools should look like for a computer scientist who is involved in\ndesigning and analyzing reliable systems. We shall conclude that many classical\ntopics dear to logicians are less important than usually presented, and that\nless-known ideas from logic may be more useful for the working computer\nscientist.\n", "versions": [{"version": "v1", "created": "Tue, 14 Jul 2015 00:51:22 GMT"}], "update_date": "2015-07-19", "authors_parsed": [["Makowsky", "Johann", ""]]}, {"id": "1507.03673", "submitter": "Joao Marcos", "authors": "Jo\\~ao Marcos", "title": "Fail better: What formalized math can teach us about learning", "comments": "Proceedings of the Fourth International Conference on Tools for\n  Teaching Logic (TTL2015), Rennes, France, June 9-12, 2015. Editors: M.\n  Antonia Huertas, Jo\\~ao Marcos, Mar\\'ia Manzano, Sophie Pinchinat,\n  Fran\\c{c}ois Schwarzentruber", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.CY cs.LO", "license": "http://creativecommons.org/licenses/by/4.0/", "abstract": "  Real-life conjectures do not come with instructions saying whether they they\nshould be proven or, instead, refuted. Yet, as we now know, in either case the\nfinal argument produced had better be not just convincing but actually\nverifiable in as much detail as our need for eliminating risk might require.\nFor those who do not happen to have direct access to the realm of mathematical\ntruths, the modern field of formalized mathematics has quite a few lessons to\ncontribute, and one might pay heed to what it has to say, for instance, about:\nthe importance of employing proof strategies; the fine control of automation in\nunraveling the structure of a certain proof object; reasoning forward from the\ngivens and backward from the goals, in developing proof scripts; knowing when\nand how definitions and identities apply in a helpful way, and when they do not\napply; seeing proofs [and refutations] as dynamical objects, not reflected by\nthe static derivation trees that Proof Theory wants them to be. I believe that\nthe great challenge for teachers and learners resides currently less on the\navailability of suitable generic tools than in combining them wisely in view of\ntheir preferred education paradigms and introducing them in a way that best\nfits their specific aims, possibly with the help of intelligent online\ninteractive tutoring systems. As a proof of concept, a computerized proof\nassistant that makes use of several successful tools already freely available\non the market and that takes into account some of the above findings about\nteaching and learning Logic is hereby introduced. To fully account for our\ninformed intuitions on the subject it would seem that a little bit extra\ntechnology would still be inviting, but no major breakthrough is really needed:\nWe are talking about tools that are already within our reach to develop, as the\nfruits of collaborative effort.\n", "versions": [{"version": "v1", "created": "Tue, 14 Jul 2015 00:51:26 GMT"}, {"version": "v2", "created": "Sat, 18 Jul 2015 03:20:19 GMT"}], "update_date": "2015-07-21", "authors_parsed": [["Marcos", "Jo\u00e3o", ""]]}, {"id": "1507.03675", "submitter": "Marek Materzok", "authors": "Marek Materzok", "title": "Easyprove: a tool for teaching precise reasoning", "comments": "Proceedings of the Fourth International Conference on Tools for\n  Teaching Logic (TTL2015), Rennes, France, June 9-12, 2015. Editors: M.\n  Antonia Huertas, Jo\\~ao Marcos, Mar\\'ia Manzano, Sophie Pinchinat,\n  Fran\\c{c}ois Schwarzentruber", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.CY cs.LO", "license": "http://creativecommons.org/licenses/by/4.0/", "abstract": "  Teaching precise mathematical reasoning can be very hard. It is very easy for\na student to make a subtle mistake in a proof which invalidates it, but it is\noften hard for the teacher to pinpoint and explain the problem in the (often\nchaotically written) student's proof. We present Easyprove, an interactive\nproof assistant aimed at first year computer science students and high school\nstudents, intended as a supplementary tool for teaching logical reasoning. The\nsystem is a Web application with a natural, mouse-oriented user interface.\n", "versions": [{"version": "v1", "created": "Tue, 14 Jul 2015 00:51:45 GMT"}], "update_date": "2015-07-15", "authors_parsed": [["Materzok", "Marek", ""]]}, {"id": "1507.03676", "submitter": "Alvaro Tasistro", "authors": "Juan Michelini and Alvaro Tasistro", "title": "Presentation of Classical Propositional Tableaux on Program Design\n  Premises", "comments": "Proceedings of the Fourth International Conference on Tools for\n  Teaching Logic (TTL2015), Rennes, France, June 9-12, 2015. Editors: M.\n  Antonia Huertas, Jo\\~ao Marcos, Mar\\'ia Manzano, Sophie Pinchinat,\n  Fran\\c{c}ois Schwarzentruber", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.CY cs.LO", "license": "http://creativecommons.org/licenses/by/4.0/", "abstract": "  We propose a presentation of classical propositional tableaux elaborated by\napplication of methods that are noteworthy in program design, namely program\nderivation with separation of concerns. We start by deriving from a\nstraightforward specification an algorithm given as a set of recursive\nequations for computing all models of a finite set of formulae. Thereafter we\ndiscuss the employment of data structures, mainly with regard to an easily\ntraceable manual execution of the algorithm. This leads to the kinds of trees\ngiven usually as constituting the tableaux. The whole development strives at\navoiding gaps, both of logical and motivational nature.\n", "versions": [{"version": "v1", "created": "Tue, 14 Jul 2015 00:51:48 GMT"}], "update_date": "2015-07-15", "authors_parsed": [["Michelini", "Juan", ""], ["Tasistro", "Alvaro", ""]]}, {"id": "1507.03677", "submitter": "Stefan Minica", "authors": "\\c{S}tefan Minic\\u{a}", "title": "RAESON: A Tool for Reasoning Tasks Driven by Interactive Visualization\n  of Logical Structure", "comments": "Proceedings of the Fourth International Conference on Tools for\n  Teaching Logic (TTL2015), Rennes, France, June 9-12, 2015. Editors: M.\n  Antonia Huertas, Jo\\~ao Marcos, Mar\\'ia Manzano, Sophie Pinchinat,\n  Fran\\c{c}ois Schwarzentruber", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.CY cs.LO", "license": "http://creativecommons.org/licenses/by/4.0/", "abstract": "  The paper presents a software tool for analysis and interactive engagement in\nvarious logical reasoning tasks. A first feature of the program consists in\nproviding an interface for working with logic-specific repositories of formal\nknowledge. A second feature provides the means to intuitively visualize and\ninteractively generate the underlying logical structure that propels customary\nlogical reasoning tasks. Starting from this we argue that both aspects have\ndidactic potential and can be integrated in teaching activities to provide an\nengaging learning experience.\n", "versions": [{"version": "v1", "created": "Tue, 14 Jul 2015 00:51:51 GMT"}], "update_date": "2015-07-15", "authors_parsed": [["Minic\u0103", "\u015etefan", ""]]}, {"id": "1507.03678", "submitter": "Favio E. Miranda-Perea", "authors": "Favio E. Miranda-Perea, P. Selene Linares-Ar\\'evalo and Atocha Aliseda", "title": "How to prove it in Natural Deduction: A Tactical Approach", "comments": "Proceedings of the Fourth International Conference on Tools for\n  Teaching Logic (TTL2015), Rennes, France, June 9-12, 2015. Editors: M.\n  Antonia Huertas, Jo\\~ao Marcos, Mar\\'ia Manzano, Sophie Pinchinat,\n  Fran\\c{c}ois Schwarzentruber", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.CY cs.LO", "license": "http://creativecommons.org/licenses/by/4.0/", "abstract": "  The motivation for this paper comes out of our experience with teaching\nnatural deduction (ND) and with the way this formal system is implemented by\nthe \\textsc{Coq} proof assistant, namely by means of so-called tactics, which\nare heuristics that transform a goal formula into a sequence of subgoals whose\nprovability implies that of the original formula. We aim at capturing some of\nthese tactics into a system of ND for minimal logic. Our goal is twofold:\nformal and didactic. The former delivers a formal system with its underlying\nheuristics to build proofs, which in turn serves our latter purpose, that of\nmaking an ideal system for the teaching of ND at an undergraduate level in a\ncomputer science program.\n", "versions": [{"version": "v1", "created": "Tue, 14 Jul 2015 00:51:53 GMT"}], "update_date": "2015-07-15", "authors_parsed": [["Miranda-Perea", "Favio E.", ""], ["Linares-Ar\u00e9valo", "P. Selene", ""], ["Aliseda", "Atocha", ""]]}, {"id": "1507.03679", "submitter": "Carlos Oller", "authors": "Carlos Oller and Ana Coul\\'o", "title": "Why teach an introductory course in Mathematical Logic in the Philosophy\n  curriculum?", "comments": "Proceedings of the Fourth International Conference on Tools for\n  Teaching Logic (TTL2015), Rennes, France, June 9-12, 2015. Editors: M.\n  Antonia Huertas, Jo\\~ao Marcos, Mar\\'ia Manzano, Sophie Pinchinat,\n  Fran\\c{c}ois Schwarzentruber", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.CY cs.LO", "license": "http://creativecommons.org/licenses/by/4.0/", "abstract": "  This paper tries to justify the relevance of an introductory course in\nMathematical Logic in the Philosophy curriculum for analyzing philosophical\narguments in natural language. It is argued that the representation of the\nstructure of natural language arguments in Freeman's diagramming system can\nprovide an intuitive foundation for the inferential processes involved in the\nuse of First Order Logic natural deduction rules.\n", "versions": [{"version": "v1", "created": "Tue, 14 Jul 2015 00:52:25 GMT"}], "update_date": "2015-07-19", "authors_parsed": [["Oller", "Carlos", ""], ["Coul\u00f3", "Ana", ""]]}, {"id": "1507.03680", "submitter": "Diane Resek", "authors": "Diane Resek and Dan Fendel", "title": "Transitioning to Proof", "comments": "Proceedings of the Fourth International Conference on Tools for\n  Teaching Logic (TTL2015), Rennes, France, June 9-12, 2015. Editors: M.\n  Antonia Huertas, Jo\\~ao Marcos, Mar\\'ia Manzano, Sophie Pinchinat,\n  Fran\\c{c}ois Schwarzentruber", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.CY cs.LO", "license": "http://creativecommons.org/licenses/by/4.0/", "abstract": "  This paper describes some strategies used in a `transition' course. Such\ncourses help undergraduate mathematics majors move from learning procedures to\nlearning to function as critical mathematicians in order to understand and work\nwith abstract concepts. One of the co-authors of this paper was a student of\nLeon Henkin. His influence on her helped shape the strategies used in the\ncourse, and is described at the end of the paper.\n", "versions": [{"version": "v1", "created": "Tue, 14 Jul 2015 00:52:29 GMT"}], "update_date": "2015-07-19", "authors_parsed": [["Resek", "Diane", ""], ["Fendel", "Dan", ""]]}, {"id": "1507.03681", "submitter": "Jeremy Seligman", "authors": "Jeremy Seligman and Declan Thompson", "title": "Teaching natural deduction in the right order with Natural Deduction\n  Planner", "comments": "Proceedings of the Fourth International Conference on Tools for\n  Teaching Logic (TTL2015), Rennes, France, June 9-12, 2015. Editors: M.\n  Antonia Huertas, Jo\\~ao Marcos, Mar\\'ia Manzano, Sophie Pinchinat,\n  Fran\\c{c}ois Schwarzentruber", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.CY cs.LO", "license": "http://creativecommons.org/licenses/by/4.0/", "abstract": "  We describe a strategy-based approach to teaching natural deduction using a\nnotation that emphasises the order in which deductions are constructed,\ntogether with a {\\LaTeX} package and Java app to aid in the production of\nteaching resources and classroom demonstrations. Our approach is aimed at\nstudents with little exposure to mathematical method and has been developed\nwhile teaching undergraduate classes for philosophy students over the last ten\nyears.\n", "versions": [{"version": "v1", "created": "Tue, 14 Jul 2015 00:52:33 GMT"}], "update_date": "2015-07-15", "authors_parsed": [["Seligman", "Jeremy", ""], ["Thompson", "Declan", ""]]}, {"id": "1507.03683", "submitter": "John Slaney", "authors": "John Slaney", "title": "Logic considered fun", "comments": "Proceedings of the Fourth International Conference on Tools for\n  Teaching Logic (TTL2015), Rennes, France, June 9-12, 2015. Editors: M.\n  Antonia Huertas, Jo\\~ao Marcos, Mar\\'ia Manzano, Sophie Pinchinat,\n  Fran\\c{c}ois Schwarzentruber", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.CY cs.LO", "license": "http://creativecommons.org/licenses/by/4.0/", "abstract": "  This report describes the development and use of an online teaching tool\ngiving students exercises in logical modelling, or \\emph{formalisation} as it\nis called in the older literature. The original version of the site, `Logic for\nFun', dates from 2001, though it was little used except by small groups of\nstudents at the Australian National University. It is currently in the process\nof being replaced by a new version, free to all Internet users, intended to be\npromoted widely as a useful addition to both online and traditional logic\ncourses.\n", "versions": [{"version": "v1", "created": "Tue, 14 Jul 2015 00:52:35 GMT"}], "update_date": "2015-07-19", "authors_parsed": [["Slaney", "John", ""]]}, {"id": "1507.03684", "submitter": "Ryo Takemura", "authors": "Ryo Takemura", "title": "Euler diagrams as an introduction to set-theoretical models", "comments": "Proceedings of the Fourth International Conference on Tools for\n  Teaching Logic (TTL2015), Rennes, France, June 9-12, 2015. Editors: M.\n  Antonia Huertas, Jo\\~ao Marcos, Mar\\'ia Manzano, Sophie Pinchinat,\n  Fran\\c{c}ois Schwarzentruber", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.CY cs.LO", "license": "http://creativecommons.org/licenses/by/4.0/", "abstract": "  Understanding the notion of a model is not always easy in logic courses.\nHence, tools such as Euler diagrams are frequently applied as informal\nillustrations of set-theoretical models. We formally investigate Euler diagrams\nas an introduction to set-theoretical models. We show that the model-theoretic\nnotions of validity and invalidity are characterized by Euler diagrams, and, in\nparticular, that model construction can be described as a manipulation of Euler\ndiagrams.\n", "versions": [{"version": "v1", "created": "Tue, 14 Jul 2015 00:52:37 GMT"}], "update_date": "2015-07-19", "authors_parsed": [["Takemura", "Ryo", ""]]}, {"id": "1507.03685", "submitter": "Joao Marcos", "authors": "Patrick Terrematte and Jo\\~ao Marcos", "title": "TryLogic tutorial: an approach to Learning Logic by proving and refuting", "comments": "Proceedings of the Fourth International Conference on Tools for\n  Teaching Logic (TTL2015), Rennes, France, June 9-12, 2015. Editors: M.\n  Antonia Huertas, Jo\\~ao Marcos, Mar\\'ia Manzano, Sophie Pinchinat,\n  Fran\\c{c}ois Schwarzentruber", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.CY cs.LO", "license": "http://creativecommons.org/licenses/by/4.0/", "abstract": "  Aiming to offer a framework for blended learning to the teaching of proof\ntheory, the present paper describes an interactive tutorial, called\n\\textsc{TryLogic}, teaching how to solve logical conjectures either by proofs\nor refutations. The paper also describes the integration of our infrastructure\nwith the Virtual Learning Environment \\texttt{Moodle} through the IMS Learning\nTools Interoperability specification, and evaluates the tool we have developed.\n", "versions": [{"version": "v1", "created": "Tue, 14 Jul 2015 00:52:43 GMT"}], "update_date": "2015-07-15", "authors_parsed": [["Terrematte", "Patrick", ""], ["Marcos", "Jo\u00e3o", ""]]}, {"id": "1507.03686", "submitter": "Roger Villemaire", "authors": "Roger Villemaire", "title": "Logic Modelling", "comments": "Proceedings of the Fourth International Conference on Tools for\n  Teaching Logic (TTL2015), Rennes, France, June 9-12, 2015. Editors: M.\n  Antonia Huertas, Jo\\~ao Marcos, Mar\\'ia Manzano, Sophie Pinchinat,\n  Fran\\c{c}ois Schwarzentruber", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.CY cs.LO", "license": "http://creativecommons.org/licenses/by/4.0/", "abstract": "  This is a reflection on the author's experience in teaching logic at the\ngraduate level in a computer science department. The main lesson is that model\nbuilding and the process of modelling must be placed at the centre stage of\nlogic teaching. Furthermore, effective use must be supported with adequate\ntools. Finally, logic is the methodology underlying many applications, it is\nhence paramount to pass on its principles, methods and concepts to computer\nscience audiences.\n", "versions": [{"version": "v1", "created": "Tue, 14 Jul 2015 00:52:46 GMT"}], "update_date": "2015-07-19", "authors_parsed": [["Villemaire", "Roger", ""]]}, {"id": "1507.03687", "submitter": "Anna Zamansky", "authors": "Anna Zamansky and Eitan Farchi", "title": "Teaching Logic to Information Systems Students: Challenges and\n  Opportunities", "comments": "Proceedings of the Fourth International Conference on Tools for\n  Teaching Logic (TTL2015), Rennes, France, June 9-12, 2015. Editors: M.\n  Antonia Huertas, Jo\\~ao Marcos, Mar\\'ia Manzano, Sophie Pinchinat,\n  Fran\\c{c}ois Schwarzentruber", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.CY cs.LO", "license": "http://creativecommons.org/licenses/by/4.0/", "abstract": "  In contrast to Computer Science, where the fundamental role of Logic is\nwidely recognized, it plays a practically non-existent role in Information\nSystems curricula. In this paper we argue that instead of Logic's exclusion\nfrom the IS curriculum, a significant adaptation of the contents, as well as\nteaching methodologies, is required for an alignment with the needs of IS\npractitioners. We present our vision for such adaptation and report on concrete\nsteps towards its implementation in the design and teaching of a course for\ngraduate IS students at the University of Haifa. We discuss the course plan and\npresent some data on the students' feedback on the course.\n", "versions": [{"version": "v1", "created": "Tue, 14 Jul 2015 00:52:46 GMT"}], "update_date": "2015-07-19", "authors_parsed": [["Zamansky", "Anna", ""], ["Farchi", "Eitan", ""]]}, {"id": "1507.03840", "submitter": "Levis Zerpa", "authors": "Levis Zerpa", "title": "Using interrogative logic to teach classical logic", "comments": "Proceedings of the Fourth International Conference on Tools for\n  Teaching Logic (TTL2015), Rennes, France, June 9-12, 2015. Editors: M.\n  Antonia Huertas, Jo\\~ao Marcos, Mar\\'ia Manzano, Sophie Pinchinat,\n  Fran\\c{c}ois Schwarzentruber", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.CY cs.LO", "license": "http://creativecommons.org/licenses/by/4.0/", "abstract": "  In the paper I discuss a tool for helping students in their symbolizations of\nnatural language sentences using the formal language of classical first order\nlogic (CFOL). The tool is an extension of Hintikka's concept of (Inquirer's)\nrange of attention in the context of interrogative games. Any given text is\nreconstructed as the answer to a \"big\" or principal question obtained through\nthe answers of a series of \"small\" or operative questions. The tool brings some\n\"narrative flavor\" to the symbolization and offers a convenient mold that can\nbe used by students in many different contexts.\n", "versions": [{"version": "v1", "created": "Tue, 14 Jul 2015 13:16:49 GMT"}], "update_date": "2015-07-19", "authors_parsed": [["Zerpa", "Levis", ""]]}, {"id": "1507.03851", "submitter": "Enric Rodriguez Carbonell", "authors": "Marc Brockschmidt, Daniel Larraz, Albert Oliveras, Enric\n  Rodriguez-Carbonell, Albert Rubio", "title": "Compositional Safety Verification with Max-SMT", "comments": "Extended technical report version of the conference paper at FMCAD'15", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We present an automated compositional program verification technique for\nsafety properties based on conditional inductive invariants. For a given\nprogram part (e.g., a single loop) and a postcondition $\\varphi$, we show how\nto, using a Max-SMT solver, an inductive invariant together with a precondition\ncan be synthesized so that the precondition ensures the validity of the\ninvariant and that the invariant implies $\\varphi$. From this, we build a\nbottom-up program verification framework that propagates preconditions of small\nprogram parts as postconditions for preceding program parts. The method\nrecovers from failures to prove the validity of a precondition, using the\nobtained intermediate results to restrict the search space for further proof\nattempts.\n  As only small program parts need to be handled at a time, our method is\nscalable and distributable. The derived conditions can be viewed as implicit\ncontracts between different parts of the program, and thus enable an\nincremental program analysis.\n", "versions": [{"version": "v1", "created": "Tue, 14 Jul 2015 14:01:56 GMT"}, {"version": "v2", "created": "Wed, 15 Jul 2015 05:41:20 GMT"}, {"version": "v3", "created": "Mon, 3 Aug 2015 21:41:23 GMT"}], "update_date": "2015-08-05", "authors_parsed": [["Brockschmidt", "Marc", ""], ["Larraz", "Daniel", ""], ["Oliveras", "Albert", ""], ["Rodriguez-Carbonell", "Enric", ""], ["Rubio", "Albert", ""]]}, {"id": "1507.04002", "submitter": "J{\\o}rgen Villadsen", "authors": "J{\\o}rgen Villadsen, Alexander Birch Jensen and Anders Schlichtkrull", "title": "NaDeA: A Natural Deduction Assistant with a Formalization in Isabelle", "comments": "Proceedings of the Fourth International Conference on Tools for\n  Teaching Logic (TTL2015), Rennes, France, June 9-12, 2015. Editors: M.\n  Antonia Huertas, Jo\\~ao Marcos, Mar\\'ia Manzano, Sophie Pinchinat,\n  Fran\\c{c}ois Schwarzentruber", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.CY cs.LO", "license": "http://creativecommons.org/licenses/by/4.0/", "abstract": "  We present a new software tool for teaching logic based on natural deduction.\nIts proof system is formalized in the proof assistant Isabelle such that its\ndefinition is very precise. Soundness of the formalization has been proved in\nIsabelle. The tool is open source software developed in TypeScript / JavaScript\nand can thus be used directly in a browser without any further installation.\nAlthough developed for undergraduate computer science students who are used to\nstudy and program concrete computer code in a programming language we consider\nthe approach relevant for a broader audience and for other proof systems as\nwell.\n", "versions": [{"version": "v1", "created": "Tue, 14 Jul 2015 20:02:30 GMT"}], "update_date": "2015-07-16", "authors_parsed": [["Villadsen", "J\u00f8rgen", ""], ["Jensen", "Alexander Birch", ""], ["Schlichtkrull", "Anders", ""]]}, {"id": "1507.04285", "submitter": "Nina Gierasimczuk", "authors": "Thomas Bolander and Nina Gierasimczuk", "title": "Learning Action Models: Qualitative Approach", "comments": "18 pages, accepted for LORI-V: The Fifth International Conference on\n  Logic, Rationality and Interaction, October 28-31, 2015, National Taiwan\n  University, Taipei, Taiwan", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LG cs.AI cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In dynamic epistemic logic, actions are described using action models. In\nthis paper we introduce a framework for studying learnability of action models\nfrom observations. We present first results concerning propositional action\nmodels. First we check two basic learnability criteria: finite identifiability\n(conclusively inferring the appropriate action model in finite time) and\nidentifiability in the limit (inconclusive convergence to the right action\nmodel). We show that deterministic actions are finitely identifiable, while\nnon-deterministic actions require more learning power-they are identifiable in\nthe limit. We then move on to a particular learning method, which proceeds via\nrestriction of a space of events within a learning-specific action model. This\nway of learning closely resembles the well-known update method from dynamic\nepistemic logic. We introduce several different learning methods suited for\nfinite identifiability of particular types of deterministic actions.\n", "versions": [{"version": "v1", "created": "Wed, 15 Jul 2015 16:32:03 GMT"}], "update_date": "2015-07-16", "authors_parsed": [["Bolander", "Thomas", ""], ["Gierasimczuk", "Nina", ""]]}, {"id": "1507.04500", "submitter": "Ale\\v{s} Bizjak", "authors": "John Fearnley and Rahul Savani", "title": "The Complexity of All-switches Strategy Improvement", "comments": null, "journal-ref": "Logical Methods in Computer Science, Volume 14, Issue 4 (October\n  31, 2018) lmcs:4940", "doi": "10.23638/LMCS-14(4:9)2018", "report-no": null, "categories": "cs.DS cs.CC cs.GT cs.LO", "license": "http://creativecommons.org/licenses/by/4.0/", "abstract": "  Strategy improvement is a widely-used and well-studied class of algorithms\nfor solving graph-based infinite games. These algorithms are parameterized by a\nswitching rule, and one of the most natural rules is \"all switches\" which\nswitches as many edges as possible in each iteration. Continuing a recent line\nof work, we study all-switches strategy improvement from the perspective of\ncomputational complexity. We consider two natural decision problems, both of\nwhich have as input a game $G$, a starting strategy $s$, and an edge $e$. The\nproblems are: 1.) The edge switch problem, namely, is the edge $e$ ever\nswitched by all-switches strategy improvement when it is started from $s$ on\ngame $G$? 2.) The optimal strategy problem, namely, is the edge $e$ used in the\nfinal strategy that is found by strategy improvement when it is started from\n$s$ on game $G$? We show $\\mathtt{PSPACE}$-completeness of the edge switch\nproblem and optimal strategy problem for the following settings: Parity games\nwith the discrete strategy improvement algorithm of V\\\"oge and Jurdzi\\'nski;\nmean-payoff games with the gain-bias algorithm [14,37]; and discounted-payoff\ngames and simple stochastic games with their standard strategy improvement\nalgorithms. We also show $\\mathtt{PSPACE}$-completeness of an analogous problem\nto edge switch for the bottom-antipodal algorithm for finding the sink of an\nAcyclic Unique Sink Orientation on a cube.\n", "versions": [{"version": "v1", "created": "Thu, 16 Jul 2015 09:27:04 GMT"}, {"version": "v2", "created": "Mon, 17 Jul 2017 17:57:49 GMT"}, {"version": "v3", "created": "Sat, 23 Jun 2018 09:09:30 GMT"}, {"version": "v4", "created": "Mon, 29 Oct 2018 09:15:48 GMT"}], "update_date": "2018-11-27", "authors_parsed": [["Fearnley", "John", ""], ["Savani", "Rahul", ""]]}, {"id": "1507.04537", "submitter": "Nils Vortmeier", "authors": "Thomas Schwentick, Nils Vortmeier, Thomas Zeume", "title": "Static Analysis for Logic-Based Dynamic Programs", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  A dynamic program, as introduced by Patnaik and Immerman (1994), maintains\nthe result of a fixed query for an input database which is subject to tuple\ninsertions and deletions. It can use an auxiliary database whose relations are\nupdated via first-order formulas upon modifications of the input database. This\npaper studies static analysis problems for dynamic programs and investigates,\nmore specifically, the decidability of the following three questions. Is the\nanswer relation of a given dynamic program always empty? Does a program\nactually maintain a query? Is the content of auxiliary relations independent of\nthe modification sequence that lead to an input database? In general, all these\nproblems can easily be seen to be undecidable for full first-order programs.\nTherefore the paper aims at pinpointing the exact decidability borderline for\nprograms with restricted arity (of the input and/or auxiliary database) and\nrestricted quantification.\n", "versions": [{"version": "v1", "created": "Thu, 16 Jul 2015 12:07:18 GMT"}], "update_date": "2015-07-17", "authors_parsed": [["Schwentick", "Thomas", ""], ["Vortmeier", "Nils", ""], ["Zeume", "Thomas", ""]]}, {"id": "1507.04577", "submitter": "Arnaud Spiwack", "authors": "Arnaud Spiwack", "title": "Notes on axiomatising Hurkens's Paradox", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO", "license": "http://creativecommons.org/licenses/by/4.0/", "abstract": "  An axiomatisation of Hurkens's paradox in dependent type theory is given\nwithout assuming any impredicative feature of said type theory.\n", "versions": [{"version": "v1", "created": "Thu, 16 Jul 2015 13:52:30 GMT"}], "update_date": "2015-07-17", "authors_parsed": [["Spiwack", "Arnaud", ""]]}, {"id": "1507.04589", "submitter": "Arnaud Spiwack", "authors": "Arnaud Spiwack", "title": "The tree machine", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO", "license": "http://creativecommons.org/licenses/by/4.0/", "abstract": "  A variant of Turing machines is introduced where the tape is replaced by a\nsingle tree which can be manipulated in a style akin to purely functional\nprogramming. This yields two benefits: first, the extra structure on the tape\ncan be leveraged to write explicit constructions of machines much more easily\nthan with Turing machines. Second, this new kind of machines models finely the\nasymptotic complexity of functional programming languages, and may allow to\nanswer questions such as \"is this problem inherently slower in functional\nlanguages\".\n", "versions": [{"version": "v1", "created": "Thu, 16 Jul 2015 14:17:54 GMT"}], "update_date": "2015-07-17", "authors_parsed": [["Spiwack", "Arnaud", ""]]}, {"id": "1507.04678", "submitter": "Wilfried Keller", "authors": "Reinhard Kahle and Wilfried Keller", "title": "Syntax versus Semantics", "comments": "Proceedings of the Fourth International Conference on Tools for\n  Teaching Logic (TTL2015), Rennes, France, June 9-12, 2015. Editors: M.\n  Antonia Huertas, Jo\\~ao Marcos, Mar\\'ia Manzano, Sophie Pinchinat,\n  Fran\\c{c}ois Schwarzentruber", "journal-ref": null, "doi": null, "report-no": null, "categories": "math.HO cs.LO", "license": "http://creativecommons.org/licenses/by/4.0/", "abstract": "  We report on the idea to use colours to distinguish syntax and semantics as\nan educational tool in logic classes. This distinction gives also reason to\nreflect on some philosophical issues concerning semantics.\n", "versions": [{"version": "v1", "created": "Tue, 14 Jul 2015 00:49:48 GMT"}], "update_date": "2015-07-17", "authors_parsed": [["Kahle", "Reinhard", ""], ["Keller", "Wilfried", ""]]}, {"id": "1507.04701", "submitter": "Luis Urtubey", "authors": "Luis Urtubey", "title": "To Teach Modal Logic: An Opinionated Survey", "comments": "Proceedings of the Fourth International Conference on Tools for\n  Teaching Logic (TTL2015), Rennes, France, June 9-12, 2015. Editors: M.\n  Antonia Huertas, Jo\\~ao Marcos, Mar\\'ia Manzano, Sophie Pinchinat,\n  Fran\\c{c}ois Schwarzentruber", "journal-ref": null, "doi": null, "report-no": null, "categories": "math.HO cs.LO", "license": "http://creativecommons.org/licenses/by/4.0/", "abstract": "  I aim to promote an alternative agenda for teaching modal logic chiefly\ninspired by the relationships between modal logic and philosophy. The guiding\nidea for this proposal is a reappraisal of the interest of modal logic in\nphilosophy, which do not stem mainly from mathematical issues, but which is\nmotivated by central problems of philosophy and language. I will point out some\nthemes to start elaborating a guide for a more comprehensive approach to teach\nmodal logic, and consider the contributions of dual-process theories in\ncognitive science, in order to explore a pedagogical framework for the proposed\npoint of view.\n", "versions": [{"version": "v1", "created": "Thu, 16 Jul 2015 18:34:16 GMT"}], "update_date": "2015-07-19", "authors_parsed": [["Urtubey", "Luis", ""]]}, {"id": "1507.04943", "submitter": "Andr\\'e Platzer", "authors": "Andr\\'e Platzer", "title": "Differential Hybrid Games", "comments": null, "journal-ref": "ACM Transactions on Computational Logic 18(3), pages 19:1-19:44,\n  2017", "doi": "10.1145/3091123", "report-no": "CMU-CS-14-102", "categories": "cs.LO cs.GT cs.PL math.DS math.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This article introduces differential hybrid games, which combine differential\ngames with hybrid games. In both kinds of games, two players interact with\ncontinuous dynamics. The difference is that hybrid games also provide all the\nfeatures of hybrid systems and discrete games, but only deterministic\ndifferential equations. Differential games, instead, provide differential\nequations with continuous-time game input by both players, but not the luxury\nof hybrid games, such as mode switches and discrete-time or alternating\nadversarial interaction. This article augments differential game logic with\nmodalities for the combined dynamics of differential hybrid games. It shows how\nhybrid games subsume differential games and introduces differential game\ninvariants and differential game variants for proving properties of\ndifferential games inductively.\n", "versions": [{"version": "v1", "created": "Fri, 17 Jul 2015 12:20:01 GMT"}, {"version": "v2", "created": "Fri, 8 Jul 2016 12:42:59 GMT"}, {"version": "v3", "created": "Fri, 24 Feb 2017 03:08:33 GMT"}], "update_date": "2017-08-17", "authors_parsed": [["Platzer", "Andr\u00e9", ""]]}, {"id": "1507.05133", "submitter": "Nikos Arechiga PhD", "authors": "Nikos Arechiga, James Kapinski, Jyotirmoy Deshmukh, Andre Platzer,\n  Bruce Krogh", "title": "Forward Invariant Cuts to Simplify Proofs of Safety", "comments": "Extended version of EMSOFT paper", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The use of deductive techniques, such as theorem provers, has several\nadvantages in safety verification of hybrid sys- tems; however,\nstate-of-the-art theorem provers require ex- tensive manual intervention.\nFurthermore, there is often a gap between the type of assistance that a theorem\nprover requires to make progress on a proof task and the assis- tance that a\nsystem designer is able to provide. This paper presents an extension to\nKeYmaera, a deductive verification tool for differential dynamic logic; the new\ntechnique allows local reasoning using system designer intuition about per-\nformance within particular modes as part of a proof task. Our approach allows\nthe theorem prover to leverage for- ward invariants, discovered using numerical\ntechniques, as part of a proof of safety. We introduce a new inference rule\ninto the proof calculus of KeYmaera, the forward invariant cut rule, and we\npresent a methodology to discover useful forward invariants, which are then\nused with the new cut rule to complete verification tasks. We demonstrate how\nour new approach can be used to complete verification tasks that lie out of the\nreach of existing deductive approaches us- ing several examples, including one\ninvolving an automotive powertrain control system.\n", "versions": [{"version": "v1", "created": "Fri, 17 Jul 2015 23:49:22 GMT"}, {"version": "v2", "created": "Mon, 10 Aug 2015 23:00:10 GMT"}], "update_date": "2015-08-12", "authors_parsed": [["Arechiga", "Nikos", ""], ["Kapinski", "James", ""], ["Deshmukh", "Jyotirmoy", ""], ["Platzer", "Andre", ""], ["Krogh", "Bruce", ""]]}, {"id": "1507.05175", "submitter": "Charles Paperman", "authors": "Charles Paperman", "title": "Finite-Degree Predicates and Two-Variable First-Order Logic", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We consider two-variable first-order logic on finite words with a fixed\nnumber of quantifier alternations. We show that all languages with a neutral\nletter definable using the order and finite-degree predicates are also\ndefinable with the order predicate only. From this result we derive the\nseparation of the alternation hierarchy of two-variable logic on this\nsignature.\n", "versions": [{"version": "v1", "created": "Sat, 18 Jul 2015 11:54:48 GMT"}, {"version": "v2", "created": "Wed, 29 Jul 2015 07:15:02 GMT"}], "update_date": "2015-07-30", "authors_parsed": [["Paperman", "Charles", ""]]}, {"id": "1507.05305", "submitter": "Noson S. Yanofsky", "authors": "Noson S. Yanofsky", "title": "Computability and Complexity of Categorical Structures", "comments": "36 pages. Some proofs were improved and typos were eliminated", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.CC cs.LO math.CT", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We examine various categorical structures that can and cannot be constructed.\nWe show that total computable functions can be mimicked by constructible\nfunctors. More generally, whatever can be done by a Turing machine can be\nconstructed by categories. Since there are infinitary constructions in category\ntheory, it is shown that category theory is strictly more powerful than Turing\nmachines. In particular, categories can solve the Halting Problem for Turing\nmachines. We also show that categories can solve any problem in the arithmetic\nhierarchy.\n", "versions": [{"version": "v1", "created": "Sun, 19 Jul 2015 16:07:21 GMT"}, {"version": "v2", "created": "Fri, 28 Sep 2018 15:12:08 GMT"}], "update_date": "2018-10-01", "authors_parsed": [["Yanofsky", "Noson S.", ""]]}, {"id": "1507.05388", "submitter": "Johannes Klaus Fichte", "authors": "Johannes K. Fichte and Miroslaw Truszczynski and Stefan Woltran", "title": "Dual-normal Logic Programs - the Forgotten Class", "comments": "This is the author's self-archived copy including detailed proofs. To\n  appear in Theory and Practice of Logic Programming (TPLP), Proceedings of the\n  31st International Conference on Logic Programming (ICLP 2015)", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.CC cs.AI cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Disjunctive Answer Set Programming is a powerful declarative programming\nparadigm with complexity beyond NP. Identifying classes of programs for which\nthe consistency problem is in NP is of interest from the theoretical standpoint\nand can potentially lead to improvements in the design of answer set\nprogramming solvers. One of such classes consists of dual-normal programs,\nwhere the number of positive body atoms in proper rules is at most one. Unlike\nother classes of programs, dual-normal programs have received little attention\nso far. In this paper we study this class. We relate dual-normal programs to\npropositional theories and to normal programs by presenting several\ninter-translations. With the translation from dual-normal to normal programs at\nhand, we introduce the novel class of body-cycle free programs, which are in\nmany respects dual to head-cycle free programs. We establish the expressive\npower of dual-normal programs in terms of SE- and UE-models, and compare them\nto normal programs. We also discuss the complexity of deciding whether\ndual-normal programs are strongly and uniformly equivalent.\n", "versions": [{"version": "v1", "created": "Mon, 20 Jul 2015 05:28:50 GMT"}], "update_date": "2015-07-21", "authors_parsed": [["Fichte", "Johannes K.", ""], ["Truszczynski", "Miroslaw", ""], ["Woltran", "Stefan", ""]]}, {"id": "1507.05500", "submitter": "Ioannis Kokkinis", "authors": "Ioannis Kokkinis", "title": "The Complexity of Non-Iterated Probabilistic Justification Logic", "comments": null, "journal-ref": null, "doi": "10.1007/978-3-319-30024-5_16", "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The logic PJ is a probabilistic logic defined by adding (non-iterated)\nprobability operators to the basic justification logic J. In this paper we\nestablish upper and lower bounds for the complexity of the derivability problem\nin the logic PJ. The main result of the paper is that the complex- ity of the\nderivability problem in PJ remains the same as the complexity of the\nderivability problem in the underlying logic J, which is {\\Pi}p2-complete. This\nimplies hat the probability operators do not increase the complex- ity of the\nlogic, although they arguably enrich the expressiveness of the language.\n", "versions": [{"version": "v1", "created": "Mon, 20 Jul 2015 13:59:15 GMT"}, {"version": "v2", "created": "Tue, 21 Jul 2015 08:32:41 GMT"}, {"version": "v3", "created": "Thu, 5 Jul 2018 10:55:22 GMT"}], "update_date": "2018-07-06", "authors_parsed": [["Kokkinis", "Ioannis", ""]]}, {"id": "1507.05513", "submitter": "Yao Liu", "authors": "Yao Liu, Zhenhua Duan, Cong Tian", "title": "An Improved Decision Procedure for Linear Time Mu-Calculus", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  An improved Present Future form (PF form) for linear time $\\mu$-calculus\n($\\nu$TL) is presented in this paper. In particular, the future part of the new\nversion turns into the conjunction of elements in the closure of a formula. We\nshow that every closed $\\nu$TL formula can be transformed into the new PF form.\nAdditionally, based on the PF form, an algorithm for constructing Present\nFuture form Graph (PFG), which can be utilized to describe models of a formula,\nis given. Further, an intuitive and efficient decision procedure for checking\nsatisfiability of the guarded fragment of $\\nu$TL formulas based on PFG is\nproposed and implemented in C++. The new decision procedure has the best time\ncomplexity over the existing ones despite the cost of exponential space.\nFinally, a PFG-based model checking approach for $\\nu$TL is discussed where a\ncounterexample can be obtained visually when a model violates a property.\n", "versions": [{"version": "v1", "created": "Mon, 20 Jul 2015 14:44:00 GMT"}], "update_date": "2015-07-21", "authors_parsed": [["Liu", "Yao", ""], ["Duan", "Zhenhua", ""], ["Tian", "Cong", ""]]}, {"id": "1507.05539", "submitter": "Tom Ameloot", "authors": "Tom J. Ameloot, Jan Van den Bussche, William R. Marczak, Peter Alvaro,\n  Joseph M. Hellerstein", "title": "Putting Logic-Based Distributed Systems on Stable Grounds", "comments": "To appear in Theory and Practice of Logic Programming (TPLP)", "journal-ref": "Theory and Practice of Logic Programming 16 (2016) 378-417", "doi": "10.1017/S1471068415000381", "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In the Declarative Networking paradigm, Datalog-like languages are used to\nexpress distributed computations. Whereas recently formal operational semantics\nfor these languages have been developed, a corresponding declarative semantics\nhas been lacking so far. The challenge is to capture precisely the amount of\nnondeterminism that is inherent to distributed computations due to concurrency,\nnetworking delays, and asynchronous communication. This paper shows how a\ndeclarative, model-based semantics can be obtained by simply using the\nwell-known stable model semantics for Datalog with negation. We show that the\nmodel-based semantics matches previously proposed formal operational semantics.\n", "versions": [{"version": "v1", "created": "Mon, 20 Jul 2015 15:45:42 GMT"}, {"version": "v2", "created": "Sat, 25 Jul 2015 08:43:42 GMT"}], "update_date": "2020-02-19", "authors_parsed": [["Ameloot", "Tom J.", ""], ["Bussche", "Jan Van den", ""], ["Marczak", "William R.", ""], ["Alvaro", "Peter", ""], ["Hellerstein", "Joseph M.", ""]]}, {"id": "1507.05581", "submitter": "Mihaela Sighireanu", "authors": "Constantin Enea (LIAFA), Mihaela Sighireanu (LIAFA), Zhilin Wu", "title": "On Automated Lemma Generation for Separation Logic with Inductive\n  Definitions", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO cs.SE", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Separation Logic with inductive definitions is a well-known approach for\ndeductive verification of programs that manipulate dynamic data structures.\nDeciding verification conditions in this context is usually based on\nuser-provided lemmas relating the inductive definitions. We propose a novel\napproach for generating these lemmas automatically which is based on simple\nsyntactic criteria and deterministic strategies for applying them. Our approach\nfocuses on iterative programs, although it can be applied to recursive programs\nas well, and specifications that describe not only the shape of the data\nstructures, but also their content or their size. Empirically, we find that our\napproach is powerful enough to deal with sophisticated benchmarks, e.g.,\niterative procedures for searching, inserting, or deleting elements in sorted\nlists, binary search tress, red-black trees, and AVL trees, in a very efficient\nway.\n", "versions": [{"version": "v1", "created": "Mon, 20 Jul 2015 18:29:39 GMT"}], "update_date": "2015-07-21", "authors_parsed": [["Enea", "Constantin", "", "LIAFA"], ["Sighireanu", "Mihaela", "", "LIAFA"], ["Wu", "Zhilin", ""]]}, {"id": "1507.05597", "submitter": "No\\'e Hern\\'andez", "authors": "Noe Hernandez, Kerstin Eder, Evgeni Magid, Jesus Savage, David A.\n  Rosenblueth", "title": "Marimba: A Tool for Verifying Properties of Hidden Markov Models", "comments": "Tool paper accepted in the 13th International Symposium on Automated\n  Technology for Verification and Analysis (ATVA 2015)", "journal-ref": null, "doi": "10.1007/978-3-319-24953-7_14", "report-no": null, "categories": "cs.LO cs.RO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The formal verification of properties of Hidden Markov Models (HMMs) is\nhighly desirable for gaining confidence in the correctness of the model and the\ncorresponding system. A significant step towards HMM verification was the\ndevelopment by Zhang et al. of a family of logics for verifying HMMs, called\nPOCTL*, and its model checking algorithm. As far as we know, the verification\ntool we present here is the first one based on Zhang et al.'s approach. As an\nexample of its effective application, we verify properties of a handover task\nin the context of human-robot interaction. Our tool was implemented in Haskell,\nand the experimental evaluation was performed using the humanoid robot Bert2.\n", "versions": [{"version": "v1", "created": "Mon, 20 Jul 2015 19:17:13 GMT"}, {"version": "v2", "created": "Wed, 28 Oct 2015 18:14:26 GMT"}], "update_date": "2015-10-29", "authors_parsed": [["Hernandez", "Noe", ""], ["Eder", "Kerstin", ""], ["Magid", "Evgeni", ""], ["Savage", "Jesus", ""], ["Rosenblueth", "David A.", ""]]}, {"id": "1507.05612", "submitter": "Daniel Neider", "authors": "Christof L\\\"oding and P. Madhusudan and Daniel Neider", "title": "Abstract Learning Frameworks for Synthesis", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO cs.PL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We develop abstract learning frameworks (ALFs) for synthesis that embody the\nprinciples of CEGIS (counter-example based inductive synthesis) strategies that\nhave become widely applicable in recent years. Our framework defines a general\nabstract framework of iterative learning, based on a hypothesis space that\ncaptures the synthesized objects, a sample space that forms the space on which\ninduction is performed, and a concept space that abstractly defines the\nsemantics of the learning process. We show that a variety of synthesis\nalgorithms in current literature can be embedded in this general framework.\nWhile studying these embeddings, we also generalize some of the synthesis\nproblems these instances are of, resulting in new ways of looking at synthesis\nproblems using learning. We also investigate convergence issues for the general\nframework, and exhibit three recipes for convergence in finite time. The first\ntwo recipes generalize current techniques for convergence used by existing\nsynthesis engines. The third technique is a more involved technique of which we\nknow of no existing instantiation, and we instantiate it to concrete synthesis\nproblems.\n", "versions": [{"version": "v1", "created": "Mon, 20 Jul 2015 17:19:11 GMT"}, {"version": "v2", "created": "Fri, 20 May 2016 17:29:34 GMT"}], "update_date": "2016-05-23", "authors_parsed": [["L\u00f6ding", "Christof", ""], ["Madhusudan", "P.", ""], ["Neider", "Daniel", ""]]}, {"id": "1507.05766", "submitter": "M. Boreale", "authors": "M. Boreale (University of Florence), Francesca Pampaloni (IMT - Lucca)", "title": "Quantitative information flow under generic leakage functions and\n  adaptive adversaries", "comments": "Revised and extended version of conference paper with the same title\n  appeared in Proc. of FORTE 2014, LNCS", "journal-ref": "Logical Methods in Computer Science, Volume 11, Issue 4 (November\n  10, 2015) lmcs:1606", "doi": "10.2168/LMCS-11(4:5)2015", "report-no": null, "categories": "cs.LO cs.CR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We put forward a model of action-based randomization mechanisms to analyse\nquantitative information flow (QIF) under generic leakage functions, and under\npossibly adaptive adversaries. This model subsumes many of the QIF models\nproposed so far. Our main contributions include the following: (1) we identify\nmild general conditions on the leakage function under which it is possible to\nderive general and significant results on adaptive QIF; (2) we contrast the\nefficiency of adaptive and non-adaptive strategies, showing that the latter are\nas efficient as the former in terms of length up to an expansion factor bounded\nby the number of available actions; (3) we show that the maximum information\nleakage over strategies, given a finite time horizon, can be expressed in terms\nof a Bellman equation. This can be used to compute an optimal finite strategy\nrecursively, by resorting to standard methods like backward induction.\n", "versions": [{"version": "v1", "created": "Tue, 21 Jul 2015 09:50:16 GMT"}, {"version": "v2", "created": "Mon, 9 Nov 2015 15:54:11 GMT"}], "update_date": "2019-03-14", "authors_parsed": [["Boreale", "M.", "", "University of Florence"], ["Pampaloni", "Francesca", "", "IMT - Lucca"]]}, {"id": "1507.05787", "submitter": "Shankara Narayanan Krishna", "authors": "Shibashis Guha, Shankara Narayanan Krishna, Lakshmi Manasa and\n  Ashutosh Trivedi", "title": "Revisiting Robustness in Priced Timed Games", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Priced timed games are optimal-cost reachability games played between two\nplayers---the controller and the environment---by moving a token along the\nedges of infinite graphs of configurations of priced timed automata. The goal\nof the controller is to reach a given set of target locations as cheaply as\npossible, while the goal of the environment is the opposite. Priced timed games\nare known to be undecidable for timed automata with $3$ or more clocks, while\nthey are known to be decidable for automata with $1$ clock.\n  In an attempt to recover decidability for priced timed games Bouyer, Markey,\nand Sankur studied robust priced timed games where the environment has the\npower to slightly perturb delays proposed by the controller. Unfortunately,\nhowever, they showed that the natural problem of deciding the existence of\noptimal limit-strategy---optimal strategy of the controller where the\nperturbations tend to vanish in the limit---is undecidable with $10$ or more\nclocks. In this paper we revisit this problem and improve our understanding of\nthe decidability of these games. We show that the limit-strategy problem is\nalready undecidable for a subclass of robust priced timed games with $5$ or\nmore clocks. On a positive side, we show the decidability of the existence of\nalmost optimal strategies for the same subclass of one-clock robust priced\ntimed games by adapting a classical construction by Bouyer at al. for one-clock\npriced timed games.\n", "versions": [{"version": "v1", "created": "Tue, 21 Jul 2015 11:07:53 GMT"}], "update_date": "2015-07-22", "authors_parsed": [["Guha", "Shibashis", ""], ["Krishna", "Shankara Narayanan", ""], ["Manasa", "Lakshmi", ""], ["Trivedi", "Ashutosh", ""]]}, {"id": "1507.05877", "submitter": "Emanuele De Angelis", "authors": "Emanuele De Angelis (1), Fabio Fioravanti (1), Alberto Pettorossi (2),\n  Maurizio Proietti (3) ((1) DEC, University G. d'Annunzio, Pescara, Italy, (2)\n  DICII, Universita' di Roma Tor Vergata, Roma, Italy, (3) CNR-IASI, Roma,\n  Italy)", "title": "Proving Correctness of Imperative Programs by Linearizing Constrained\n  Horn Clauses", "comments": "To appear in Theory and Practice of Logic Programming (TPLP),\n  Proceedings of ICLP 2015", "journal-ref": "Theory and Practice of Logic Programming 15 (2015) 635-650", "doi": "10.1017/S1471068415000289", "report-no": null, "categories": "cs.LO cs.PL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We present a method for verifying the correctness of imperative programs\nwhich is based on the automated transformation of their specifications. Given a\nprogram prog, we consider a partial correctness specification of the form\n$\\{\\varphi\\}$ prog $\\{\\psi\\}$, where the assertions $\\varphi$ and $\\psi$ are\npredicates defined by a set Spec of possibly recursive Horn clauses with linear\narithmetic (LA) constraints in their premise (also called constrained Horn\nclauses). The verification method consists in constructing a set PC of\nconstrained Horn clauses whose satisfiability implies that $\\{\\varphi\\}$ prog\n$\\{\\psi\\}$ is valid. We highlight some limitations of state-of-the-art\nconstrained Horn clause solving methods, here called LA-solving methods, which\nprove the satisfiability of the clauses by looking for linear arithmetic\ninterpretations of the predicates. In particular, we prove that there exist\nsome specifications that cannot be proved valid by any of those LA-solving\nmethods. These specifications require the proof of satisfiability of a set PC\nof constrained Horn clauses that contain nonlinear clauses (that is, clauses\nwith more than one atom in their premise). Then, we present a transformation,\ncalled linearization, that converts PC into a set of linear clauses (that is,\nclauses with at most one atom in their premise). We show that several\nspecifications that could not be proved valid by LA-solving methods, can be\nproved valid after linearization. We also present a strategy for performing\nlinearization in an automatic way and we report on some experimental results\nobtained by using a preliminary implementation of our method.\n", "versions": [{"version": "v1", "created": "Tue, 21 Jul 2015 15:40:25 GMT"}], "update_date": "2020-02-19", "authors_parsed": [["De Angelis", "Emanuele", ""], ["Fioravanti", "Fabio", ""], ["Pettorossi", "Alberto", ""], ["Proietti", "Maurizio", ""]]}, {"id": "1507.05920", "submitter": "Saurabh Joshi", "authors": "Saurabh Joshi, Ruben Martins and Vasco Manquinho", "title": "Generalized Totalizer Encoding for Pseudo-Boolean Constraints", "comments": "10 pages, 2 figures, 2 tables. To be published in 21st International\n  Conference on Principles and Practice of Constraint Programming 2015", "journal-ref": null, "doi": "10.1007/978-3-319-23219-5_15", "report-no": null, "categories": "cs.LO cs.AI", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Pseudo-Boolean constraints, also known as 0-1 Integer Linear Constraints, are\nused to model many real-world problems. A common approach to solve these\nconstraints is to encode them into a SAT formula. The runtime of the SAT solver\non such formula is sensitive to the manner in which the given pseudo-Boolean\nconstraints are encoded. In this paper, we propose generalized Totalizer\nencoding (GTE), which is an arc-consistency preserving extension of the\nTotalizer encoding to pseudo-Boolean constraints. Unlike some other encodings,\nthe number of auxiliary variables required for GTE does not depend on the\nmagnitudes of the coefficients. Instead, it depends on the number of distinct\ncombinations of these coefficients. We show the superiority of GTE with respect\nto other encodings when large pseudo-Boolean constraints have low number of\ndistinct coefficients. Our experimental results also show that GTE remains\ncompetitive even when the pseudo-Boolean constraints do not have this\ncharacteristic.\n", "versions": [{"version": "v1", "created": "Tue, 21 Jul 2015 17:28:59 GMT"}], "update_date": "2020-02-21", "authors_parsed": [["Joshi", "Saurabh", ""], ["Martins", "Ruben", ""], ["Manquinho", "Vasco", ""]]}, {"id": "1507.05964", "submitter": "Pavel Naumov", "authors": "Pavel G. Naumov and Jia Tao", "title": "The Budget-Constrained Functional Dependency", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Armstrong's axioms of functional dependency form a well-known logical system\nthat captures properties of functional dependencies between sets of database\nattributes. This article assumes that there are costs associated with\nattributes and proposes an extension of Armstrong's system for reasoning about\nbudget-constrained functional dependencies in such a setting.\n  The main technical result of this article is the completeness theorem for the\nproposed logical system. Although the proposed axioms are obtained by just\nadding cost subscript to the original Armstrong's axioms, the proof of the\ncompleteness for the proposed system is significantly more complicated than\nthat for the Armstrong's system.\n", "versions": [{"version": "v1", "created": "Tue, 21 Jul 2015 20:00:40 GMT"}], "update_date": "2015-07-23", "authors_parsed": [["Naumov", "Pavel G.", ""], ["Tao", "Jia", ""]]}, {"id": "1507.06010", "submitter": "Ekaterina Komendantskaya Dr", "authors": "P. Johann and E. Komendantskaya and V. Komendantskiy", "title": "Structural Resolution for Logic Programming", "comments": "in ICLP 2015 Technical Communications", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We introduce a Three Tier Tree Calculus (3TC) that defines in a systematic\nway three tiers of tree structures underlying proof search in logic\nprogramming. We use 3TC to define a new -- structural -- version of resolution\nfor logic programming.\n", "versions": [{"version": "v1", "created": "Tue, 21 Jul 2015 23:08:02 GMT"}], "update_date": "2015-07-23", "authors_parsed": [["Johann", "P.", ""], ["Komendantskaya", "E.", ""], ["Komendantskiy", "V.", ""]]}, {"id": "1507.06462", "submitter": "Matteo Sammartino", "authors": "Roberto Bruni, Ugo Montanari, Matteo Sammartino", "title": "A coalgebraic semantics for causality in Petri nets", "comments": "Accepted by Journal of Logical and Algebraic Methods in Programming", "journal-ref": null, "doi": "10.1016/j.jlamp.2015.07.003", "report-no": null, "categories": "cs.LO", "license": "http://creativecommons.org/licenses/by/4.0/", "abstract": "  In this paper we revisit some pioneering efforts to equip Petri nets with\ncompact operational models for expressing causality. The models we propose have\na bisimilarity relation and a minimal representative for each equivalence\nclass, and they can be fully explained as coalgebras on a presheaf category on\nan index category of partial orders. First, we provide a set-theoretic model in\nthe form of a a causal case graph, that is a labeled transition system where\nstates and transitions represent markings and firings of the net, respectively,\nand are equipped with causal information. Most importantly, each state has a\nposet representing causal dependencies among past events. Our first result\nshows the correspondence with behavior structure semantics as proposed by\nTrakhtenbrot and Rabinovich. Causal case graphs may be infinitely-branching and\nhave infinitely many states, but we show how they can be refined to get an\nequivalent finitely-branching model. In it, states are equipped with\nsymmetries, which are essential for the existence of a minimal, often\nfinite-state, model. The next step is constructing a coalgebraic model. We\nexploit the fact that events can be represented as names, and event generation\nas name generation. Thus we can apply the Fiore-Turi framework: we model causal\nrelations as a suitable category of posets with action labels, and generation\nof new events with causal dependencies as an endofunctor on this category. Then\nwe define a well-behaved category of coalgebras. Our coalgebraic model is still\ninfinite-state, but we exploit the equivalence between coalgebras over a class\nof presheaves and History Dependent automata to derive a compact\nrepresentation, which is equivalent to our set-theoretical compact model.\nRemarkably, state reduction is automatically performed along the equivalence.\n", "versions": [{"version": "v1", "created": "Thu, 23 Jul 2015 12:08:22 GMT"}], "update_date": "2015-07-24", "authors_parsed": [["Bruni", "Roberto", ""], ["Montanari", "Ugo", ""], ["Sammartino", "Matteo", ""]]}, {"id": "1507.06554", "submitter": "Bart Bogaerts", "authors": "Bart Bogaerts and Guy Van den Broeck", "title": "Knowledge Compilation of Logic Programs Using Approximation Fixpoint\n  Theory", "comments": null, "journal-ref": "Theory and Practice of Logic Programming 15 (2015) 464-480", "doi": "10.1017/S1471068415000162", "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  To appear in Theory and Practice of Logic Programming (TPLP), Proceedings of\nICLP 2015\n  Recent advances in knowledge compilation introduced techniques to compile\n\\emph{positive} logic programs into propositional logic, essentially exploiting\nthe constructive nature of the least fixpoint computation. This approach has\nseveral advantages over existing approaches: it maintains logical equivalence,\ndoes not require (expensive) loop-breaking preprocessing or the introduction of\nauxiliary variables, and significantly outperforms existing algorithms.\nUnfortunately, this technique is limited to \\emph{negation-free} programs. In\nthis paper, we show how to extend it to general logic programs under the\nwell-founded semantics.\n  We develop our work in approximation fixpoint theory, an algebraical\nframework that unifies semantics of different logics. As such, our algebraical\nresults are also applicable to autoepistemic logic, default logic and abstract\ndialectical frameworks.\n", "versions": [{"version": "v1", "created": "Thu, 23 Jul 2015 16:28:47 GMT"}], "update_date": "2020-02-19", "authors_parsed": [["Bogaerts", "Bart", ""], ["Broeck", "Guy Van den", ""]]}, {"id": "1507.06722", "submitter": "Yunguo Lin", "authors": "Yunguo Lin, Yongming Li", "title": "Exogenous Quantum Operator Logic Based on Density Operators", "comments": "26 pages, 1 figures", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO quant-ph", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Although quantum logic by using exogenous approach has been proposed for\nreasoning about closed quantum systems, an improvement would be worth to study\nquantum logic based on density operators instead of unit vectors in the state\nlogic point of view. In order to achieve this, we build an exogenous quantum\noperator logic(EQOL) based on density operators for reasoning about open\nquantum systems. We show that this logic is sound and complete. Just as the\nexogenous quantum propositional logic(EQPL), by applying exogenous approach,\nEQOL is extended from the classical propositional logic, and is used to\ndescribe the state logic based on density operators. As its applications, we\nconfirm the entanglement property about Bell states by reasoning and logical\nargument, also verify the existence of eavesdropping about the basic BB84\nprotocol. As a novel type of mathematical formalism for open quantum systems,\nwe introduce an exogenous quantum Markov chain(EQMC) where its quantum states\nare labelled using EQOL formulae. Then, an example is given to illustrate the\ntermination verification problem of a generalized quantum loop program\ndescribed using EQMC.\n", "versions": [{"version": "v1", "created": "Fri, 24 Jul 2015 02:03:18 GMT"}], "update_date": "2015-07-27", "authors_parsed": [["Lin", "Yunguo", ""], ["Li", "Yongming", ""]]}, {"id": "1507.06778", "submitter": "Ingmar Dasseville", "authors": "Ingmar Dasseville, Matthias van der Hallen, Gerda Janssens, Marc\n  Denecker", "title": "Semantics of templates in a compositional framework for building logics", "comments": null, "journal-ref": "Theory and Practice of Logic Programming 15 (2015) 681-695", "doi": "10.1017/S1471068415000319", "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  There is a growing need for abstractions in logic specification languages\nsuch as FO(.) and ASP. One technique to achieve these abstractions are\ntemplates (sometimes called macros). While the semantics of templates are\nvirtually always described through a syntactical rewriting scheme, we present\nan alternative view on templates as second order definitions. To extend the\nexisting definition construct of FO(.) to second order, we introduce a powerful\ncompositional framework for defining logics by modular integration of logic\nconstructs specified as pairs of one syntactical and one semantical inductive\nrule. We use the framework to build a logic of nested second order definitions\nsuitable to express templates. We show that under suitable restrictions, the\nview of templates as macros is semantically correct and that adding them does\nnot extend the descriptive complexity of the base logic, which is in line with\nresults of existing approaches.\n", "versions": [{"version": "v1", "created": "Fri, 24 Jul 2015 08:29:52 GMT"}], "update_date": "2020-02-19", "authors_parsed": [["Dasseville", "Ingmar", ""], ["van der Hallen", "Matthias", ""], ["Janssens", "Gerda", ""], ["Denecker", "Marc", ""]]}, {"id": "1507.06796", "submitter": "Klaus Keimel", "authors": "Klaus Keimel (Technische Universite Darmstadt)", "title": "Weak upper topologies and duality for cones", "comments": null, "journal-ref": "Logical Methods in Computer Science, Volume 11, Issue 3 (September\n  25, 2015) lmcs:1597", "doi": "10.2168/LMCS-11(3:21)2015", "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In functional analysis it is well known that every linear functional defined\non the dual of a locally convex vector space which is continuous for the weak\ntopology is the evaluation at a uniquely determined point of the given vector\nspace. M. Schroeder and A. Simpson have obtained a similar result for lower\nsemicontinuous linear functionals on the cone of all Scott-continuous\nvaluations on a topological space endowed with the weak upper topology, an\nasymmetric version of the weak topology. This result has given rise to several\nproofs, originally by the Schroeder and Simpson themselves and, more recently,\nby the author of these Notes and by J. Goubault-Larrecq. The proofs developed\nfrom very technical arguments to more and more conceptual ones. The present\nNote continues on this line, presenting a conceptual approach inspired by\nclassical functional analysis which may prove useful in other situations.\n", "versions": [{"version": "v1", "created": "Fri, 24 Jul 2015 09:58:31 GMT"}, {"version": "v2", "created": "Thu, 24 Sep 2015 15:54:22 GMT"}], "update_date": "2017-01-11", "authors_parsed": [["Keimel", "Klaus", "", "Technische Universite Darmstadt"]]}, {"id": "1507.06915", "submitter": "Pedro Cabalar", "authors": "Felicidad Aguado and Pedro Cabalar and David Pearce and Gilberto\n  P\\'erez and Concepci\\'on Vidal", "title": "A Denotational Semantics for Equilibrium Logic", "comments": null, "journal-ref": "Theory and Practice of Logic Programming 15 (2015) 620-634", "doi": "10.1017/S1471068415000277", "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In this paper we provide an alternative semantics for Equilibrium Logic and\nits monotonic basis, the logic of Here-and-There (also known as G\\\"odel's G3\nlogic) that relies on the idea of \"denotation\" of a formula, that is, a\nfunction that collects the set of models of that formula. Using the\nthree-valued logic G3 as a starting point and an ordering relation (for which\nequilibrium/stable models are minimal elements) we provide several elementary\noperations for sets of interpretations. By analysing structural properties of\nthe denotation of formulas, we show some expressiveness results for G3 such as,\nfor instance, that conjunction is not expressible in terms of the other\nconnectives. Moreover, the denotational semantics allows us to capture the set\nof equilibrium models of a formula with a simple and compact set expression. We\nalso use this semantics to provide several formal definitions for entailment\nrelations that are usual in the literature, and further introduce a new one\ncalled \"strong entailment\". We say that $\\alpha$ strongly entails $\\beta$ when\nthe equilibrium models of $\\alpha \\wedge \\gamma$ are also equilibrium models of\n$\\beta \\wedge \\gamma$ for any context $\\gamma$. We also provide a\ncharacterisation of strong entailment in terms of the denotational semantics,\nand give an example of a sufficient condition that can be applied in some\ncases.\n", "versions": [{"version": "v1", "created": "Fri, 24 Jul 2015 16:43:09 GMT"}], "update_date": "2020-02-19", "authors_parsed": [["Aguado", "Felicidad", ""], ["Cabalar", "Pedro", ""], ["Pearce", "David", ""], ["P\u00e9rez", "Gilberto", ""], ["Vidal", "Concepci\u00f3n", ""]]}, {"id": "1507.06944", "submitter": "Paul Tarau", "authors": "Paul Tarau", "title": "A Logic Programming Playground for Lambda Terms, Combinators, Types and\n  Tree-based Arithmetic Computations", "comments": "70 pages", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO cs.PL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  With sound unification, Definite Clause Grammars and compact expression of\ncombinatorial generation algorithms, logic programming is shown to conveniently\nhost a declarative playground where interesting properties and behaviors emerge\nfrom the interaction of heterogenous but deeply connected computational\nobjects.\n  Compact combinatorial generation algorithms are given for several families of\nlambda terms, including open, closed, simply typed and linear terms as well as\ntype inference and normal order reduction algorithms. We describe a\nProlog-based combined lambda term generator and type-inferrer for closed\nwell-typed terms of a given size, in de Bruijn notation.\n  We introduce a compressed de Bruijn representation of lambda terms and define\nits bijections to standard representations. Our compressed terms facilitate\nderivation of size-proportionate ranking and unranking algorithms of lambda\nterms and their inferred simple types.\n  The S and K combinator expressions form a well-known Turing-complete subset\nof the lambda calculus. We specify evaluation, type inference and combinatorial\ngeneration algorithms for SK-combinator trees. In the process, we unravel\nproperties shedding new light on interesting aspects of their structure and\ndistribution.\n  A uniform representation, as binary trees with empty leaves, is given to\nexpressions built with Rosser's X-combinator, natural numbers, lambda terms and\nsimple types. Using this shared representation, ranking/unranking algorithm of\nlambda terms to tree-based natural numbers are described.\n  Our algorithms, expressed as an incrementally developed literate Prolog\nprogram, implement a declarative playground for exploration of representations,\nencodings and computations with uniformly represented lambda terms, types,\ncombinators and tree-based arithmetic.\n", "versions": [{"version": "v1", "created": "Fri, 24 Jul 2015 18:20:20 GMT"}], "update_date": "2015-07-27", "authors_parsed": [["Tarau", "Paul", ""]]}, {"id": "1507.07228", "submitter": "Keehang Kwon", "authors": "Keehang Kwon", "title": "Combining Fixed-Point Definitions and Game Semantics in Logic\n  Programming", "comments": "7 pages. Some bugs from the previous version are fixed. Presentations\n  are simplified", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Logic programming with fixed-point definitions is a useful extension of\ntraditional logic programming. Fixed-point definitions can capture simple model\nchecking problems and closed-world assumptions. Its operational semantics is\ntypically based on intuitionistic provability.\n  We extend the operational semantics of these languages with game semantics.\nThis extended semantics has several interesting aspects: in particular, it\ngives a logical status to the $read$ predicate.\n", "versions": [{"version": "v1", "created": "Sun, 26 Jul 2015 17:55:30 GMT"}, {"version": "v2", "created": "Wed, 5 Aug 2015 16:10:03 GMT"}], "update_date": "2015-08-06", "authors_parsed": [["Kwon", "Keehang", ""]]}, {"id": "1507.07246", "submitter": "Georg Struth", "authors": "Georg Struth", "title": "On the Expressive Power of Kleene Algebra with Domain", "comments": "Typos have been corrected", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  It is shown that antidomain semirings are more expressive than test semirings\nand that Kleene algebras with domain are more expressive than Kleene algebras\nwith tests. It is also shown that Kleene algebras with domain are expressive\nfor propositional Hoare logic whereas Kleene algebras with tests are not.\n", "versions": [{"version": "v1", "created": "Sun, 26 Jul 2015 20:25:52 GMT"}, {"version": "v2", "created": "Sun, 2 Aug 2015 15:17:09 GMT"}], "update_date": "2015-08-04", "authors_parsed": [["Struth", "Georg", ""]]}, {"id": "1507.07597", "submitter": "EPTCS", "authors": "Iliano Cervesato, Kaustuv Chaudhuri", "title": "Proceedings Tenth International Workshop on Logical Frameworks and Meta\n  Languages: Theory and Practice", "comments": null, "journal-ref": "EPTCS 185, 2015", "doi": "10.4204/EPTCS.185", "report-no": null, "categories": "cs.LO cs.PL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This volume constitutes the proceedings of LFMTP 2015, the Tenth\nInternational Workshop on Logical Frameworks and Meta-Languages: Theory and\nPractice, held on August 1st, 2015 in Berlin, Germany. The workshop was a\none-day satellite event of CADE-25, the 25th International Conference on\nAutomated Deduction. Logical frameworks and meta-languages form a common\nsubstrate for representing, implementing, and reasoning about a wide variety of\ndeductive systems of interest in logic and computer science. Their design and\nimplementation and their use in reasoning tasks ranging from the correctness of\nsoftware to the properties of formal computational systems have been the focus\nof considerable research over the last two decades. This workshop brought\ntogether designers, implementors, and practitioners to discuss various aspects\nimpinging on the structure and utility of logical frameworks, including the\ntreatment of variable binding, inductive and co-inductive reasoning techniques\nand the expressiveness and lucidity of the reasoning process.\n", "versions": [{"version": "v1", "created": "Mon, 27 Jul 2015 22:45:43 GMT"}], "update_date": "2015-07-29", "authors_parsed": [["Cervesato", "Iliano", ""], ["Chaudhuri", "Kaustuv", ""]]}, {"id": "1507.07697", "submitter": "Bart Jacobs", "authors": "Bart Jacobs (Katholieke Universiteit Leuven), Fr\\'ed\\'eric Vogels\n  (Katholieke Universiteit Leuven), Frank Piessens (Katholieke Universiteit\n  Leuven)", "title": "Featherweight VeriFast", "comments": null, "journal-ref": "Logical Methods in Computer Science, Volume 11, Issue 3 (September\n  22, 2015) lmcs:1595", "doi": "10.2168/LMCS-11(3:19)2015", "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  VeriFast is a leading research prototype tool for the sound modular\nverification of safety and correctness properties of single-threaded and\nmultithreaded C and Java programs. It has been used as a vehicle for\nexploration and validation of novel program verification techniques and for\nindustrial case studies; it has served well at a number of program verification\ncompetitions; and it has been used for teaching by multiple teachers\nindependent of the authors. However, until now, while VeriFast's operation has\nbeen described informally in a number of publications, and specific\nverification techniques have been formalized, a clear and precise exposition of\nhow VeriFast works has not yet appeared. In this article we present for the\nfirst time a formal definition and soundness proof of a core subset of the\nVeriFast program verification approach. The exposition aims to be both\naccessible and rigorous: the text is based on lecture notes for a graduate\ncourse on program verification, and it is backed by an executable\nmachine-readable definition and machine-checked soundness proof in Coq.\n", "versions": [{"version": "v1", "created": "Tue, 28 Jul 2015 09:36:52 GMT"}, {"version": "v2", "created": "Mon, 21 Sep 2015 19:24:01 GMT"}], "update_date": "2017-01-11", "authors_parsed": [["Jacobs", "Bart", "", "Katholieke Universiteit Leuven"], ["Vogels", "Fr\u00e9d\u00e9ric", "", "Katholieke Universiteit Leuven"], ["Piessens", "Frank", "", "Katholieke Universiteit\n  Leuven"]]}, {"id": "1507.07755", "submitter": "Chiara Ghidini", "authors": "Chiara Ghidini, Luciano Serafini", "title": "Distributed First Order Logic", "comments": null, "journal-ref": null, "doi": "10.1016/j.artint.2017.08.008", "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Distributed First Order Logic (DFOL) has been introduced more than ten years\nago with the purpose of formalising distributed knowledge-based systems, where\nknowledge about heterogeneous domains is scattered into a set of interconnected\nmodules. DFOL formalises the knowledge contained in each module by means of\nfirst-order theories, and the interconnections between modules by means of\nspecial inference rules called bridge rules. Despite their restricted form in\nthe original DFOL formulation, bridge rules have influenced several works in\nthe areas of heterogeneous knowledge integration, modular knowledge\nrepresentation, and schema/ontology matching. This, in turn, has fostered\nextensions and modifications of the original DFOL that have never been\nsystematically described and published. This paper tackles the lack of a\ncomprehensive description of DFOL by providing a systematic account of a\ncompletely revised and extended version of the logic, together with a sound and\ncomplete axiomatisation of a general form of bridge rules based on Natural\nDeduction. The resulting DFOL framework is then proposed as a clear formal tool\nfor the representation of and reasoning about distributed knowledge and bridge\nrules.\n", "versions": [{"version": "v1", "created": "Tue, 28 Jul 2015 13:17:48 GMT"}, {"version": "v2", "created": "Sat, 1 Jul 2017 05:44:46 GMT"}], "update_date": "2017-09-22", "authors_parsed": [["Ghidini", "Chiara", ""], ["Serafini", "Luciano", ""]]}, {"id": "1507.07911", "submitter": "Pablo Barcelo", "authors": "Pablo Barcelo (University of Chile), Gaelle Fontaine (University of\n  Chile), Anthony Widjaja Lin (Yale-NUS College, Singapore)", "title": "Expressive Path Queries on Graph with Data", "comments": "39 pages", "journal-ref": "Logical Methods in Computer Science, Volume 11, Issue 4 (October\n  5, 2015) lmcs:1602", "doi": "10.2168/LMCS-11(4:1)2015", "report-no": null, "categories": "cs.DB cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Graph data models have recently become popular owing to their applications,\ne.g., in social networks and the semantic web. Typical navigational query\nlanguages over graph databases - such as Conjunctive Regular Path Queries\n(CRPQs) - cannot express relevant properties of the interaction between the\nunderlying data and the topology. Two languages have been recently proposed to\novercome this problem: walk logic (WL) and regular expressions with memory\n(REM). In this paper, we begin by investigating fundamental properties of WL\nand REM, i.e., complexity of evaluation problems and expressive power. We first\nshow that the data complexity of WL is nonelementary, which rules out its\npracticality. On the other hand, while REM has low data complexity, we point\nout that many natural data/topology properties of graphs expressible in WL\ncannot be expressed in REM. To this end, we propose register logic, an\nextension of REM, which we show to be able to express many natural graph\nproperties expressible in WL, while at the same time preserving the\nelementariness of data complexity of REMs. It is also incomparable to WL in\nterms of expressive power.\n", "versions": [{"version": "v1", "created": "Tue, 28 Jul 2015 19:37:41 GMT"}, {"version": "v2", "created": "Thu, 30 Jul 2015 14:47:06 GMT"}, {"version": "v3", "created": "Thu, 1 Oct 2015 21:03:11 GMT"}, {"version": "v4", "created": "Mon, 5 Oct 2015 09:49:06 GMT"}], "update_date": "2017-01-11", "authors_parsed": [["Barcelo", "Pablo", "", "University of Chile"], ["Fontaine", "Gaelle", "", "University of\n  Chile"], ["Lin", "Anthony Widjaja", "", "Yale-NUS College, Singapore"]]}, {"id": "1507.08051", "submitter": "EPTCS", "authors": "Furio Honsell (University of Udine, Italy), Luigi Liquori (Inria\n  Sophia Antipolis M\\'editerran\\'ee, France), Petar Maksimovi\\'c (Inria Rennes\n  Bretagne Atlantique, France), Ivan Scagnetto (University of Udine, Italy)", "title": "Gluing together Proof Environments: Canonical extensions of LF Type\n  Theories featuring Locks", "comments": "In Proceedings LFMTP 2015, arXiv:1507.07597", "journal-ref": "EPTCS 185, 2015, pp. 3-17", "doi": "10.4204/EPTCS.185.1", "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We present two extensions of the LF Constructive Type Theory featuring\nmonadic locks. A lock is a monadic type construct that captures the effect of\nan external call to an oracle. Such calls are the basic tool for gluing\ntogether diverse Type Theories and proof development environments. The oracle\ncan be invoked either to check that a constraint holds or to provide a suitable\nwitness. The systems are presented in the canonical style developed by the CMU\nSchool. The first system, CLLFP, is the canonical version of the system LLFP,\npresented earlier by the authors. The second system, CLLFP?, features the\npossibility of invoking the oracle to obtain a witness satisfying a given\nconstraint. We discuss encodings of Fitch-Prawitz Set theory, call-by-value\nlambda-calculi, and systems of Light Linear Logic. Finally, we show how to use\nFitch-Prawitz Set Theory to define a type system that types precisely the\nstrongly normalizing terms.\n", "versions": [{"version": "v1", "created": "Wed, 29 Jul 2015 08:20:51 GMT"}], "update_date": "2015-07-30", "authors_parsed": [["Honsell", "Furio", "", "University of Udine, Italy"], ["Liquori", "Luigi", "", "Inria\n  Sophia Antipolis M\u00e9diterran\u00e9e, France"], ["Maksimovi\u0107", "Petar", "", "Inria Rennes\n  Bretagne Atlantique, France"], ["Scagnetto", "Ivan", "", "University of Udine, Italy"]]}, {"id": "1507.08052", "submitter": "EPTCS", "authors": "Amy Felty (University of Ottawa), Alberto Momigliano (Universita degli\n  Studi di Milano), Brigitte Pientka (McGill University)", "title": "An Open Challenge Problem Repository for Systems Supporting Binders", "comments": "In Proceedings LFMTP 2015, arXiv:1507.07597", "journal-ref": "EPTCS 185, 2015, pp. 18-32", "doi": "10.4204/EPTCS.185.2", "report-no": null, "categories": "cs.LO cs.PL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  A variety of logical frameworks support the use of higher-order abstract\nsyntax in representing formal systems; however, each system has its own set of\nbenchmarks. Even worse, general proof assistants that provide special libraries\nfor dealing with binders offer a very limited evaluation of such libraries, and\nthe examples given often do not exercise and stress-test key aspects that arise\nin the presence of binders. In this paper we design an open repository ORBI\n(Open challenge problem Repository for systems supporting reasoning with\nBInders). We believe the field of reasoning about languages with binders has\nmatured, and a common set of benchmarks provides an important basis for\nevaluation and qualitative comparison of different systems and libraries that\nsupport binders, and it will help to advance the field.\n", "versions": [{"version": "v1", "created": "Wed, 29 Jul 2015 08:20:55 GMT"}], "update_date": "2015-07-30", "authors_parsed": [["Felty", "Amy", "", "University of Ottawa"], ["Momigliano", "Alberto", "", "Universita degli\n  Studi di Milano"], ["Pientka", "Brigitte", "", "McGill University"]]}, {"id": "1507.08053", "submitter": "EPTCS", "authors": "Andrew Cave (McGill University), Brigitte Pientka (McGill University)", "title": "A Case Study on Logical Relations using Contextual Types", "comments": "In Proceedings LFMTP 2015, arXiv:1507.07597", "journal-ref": "EPTCS 185, 2015, pp. 33-45", "doi": "10.4204/EPTCS.185.3", "report-no": null, "categories": "cs.LO cs.PL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Proofs by logical relations play a key role to establish rich properties such\nas normalization or contextual equivalence. They are also challenging to\nmechanize. In this paper, we describe the completeness proof of algorithmic\nequality for simply typed lambda-terms by Crary where we reason about logically\nequivalent terms in the proof environment Beluga. There are three key aspects\nwe rely upon: 1) we encode lambda-terms together with their operational\nsemantics and algorithmic equality using higher-order abstract syntax 2) we\ndirectly encode the corresponding logical equivalence of well-typed\nlambda-terms using recursive types and higher-order functions 3) we exploit\nBeluga's support for contexts and the equational theory of simultaneous\nsubstitutions. This leads to a direct and compact mechanization, demonstrating\nBeluga's strength at formalizing logical relations proofs.\n", "versions": [{"version": "v1", "created": "Wed, 29 Jul 2015 08:21:05 GMT"}], "update_date": "2015-07-30", "authors_parsed": [["Cave", "Andrew", "", "McGill University"], ["Pientka", "Brigitte", "", "McGill University"]]}, {"id": "1507.08054", "submitter": "EPTCS", "authors": "Roly Perera (University of Glasgow, UK), James Cheney (University of\n  Edinburgh, UK)", "title": "Proof-relevant pi-calculus", "comments": "In Proceedings LFMTP 2015, arXiv:1507.07597", "journal-ref": "EPTCS 185, 2015, pp. 46-70", "doi": "10.4204/EPTCS.185.4", "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Formalising the pi-calculus is an illuminating test of the expressiveness of\nlogical frameworks and mechanised metatheory systems, because of the presence\nof name binding, labelled transitions with name extrusion, bisimulation, and\nstructural congruence. Formalisations have been undertaken in a variety of\nsystems, primarily focusing on well-studied (and challenging) properties such\nas the theory of process bisimulation. We present a formalisation in Agda that\ninstead explores the theory of concurrent transitions, residuation, and causal\nequivalence of traces, which has not previously been formalised for the\npi-calculus. Our formalisation employs de Bruijn indices and dependently-typed\nsyntax, and aligns the \"proved transitions\" proposed by Boudol and Castellani\nin the context of CCS with the proof terms naturally present in Agda's\nrepresentation of the labelled transition relation. Our main contributions are\nproofs of the \"diamond lemma\" for residuation of concurrent transitions and a\nformal definition of equivalence of traces up to permutation of transitions.\n", "versions": [{"version": "v1", "created": "Wed, 29 Jul 2015 08:21:27 GMT"}], "update_date": "2015-07-30", "authors_parsed": [["Perera", "Roly", "", "University of Glasgow, UK"], ["Cheney", "James", "", "University of\n  Edinburgh, UK"]]}, {"id": "1507.08055", "submitter": "EPTCS", "authors": "Ronan Saillard (MINES ParisTech, PSL Research University, France)", "title": "Rewriting Modulo \\beta in the \\lambda\\Pi-Calculus Modulo", "comments": "In Proceedings LFMTP 2015, arXiv:1507.07597", "journal-ref": "EPTCS 185, 2015, pp. 87-101", "doi": "10.4204/EPTCS.185.6", "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The lambda-Pi-calculus Modulo is a variant of the lambda-calculus with\ndependent types where beta-conversion is extended with user-defined rewrite\nrules. It is an expressive logical framework and has been used to encode logics\nand type systems in a shallow way. Basic properties such as subject reduction\nor uniqueness of types do not hold in general in the lambda-Pi-calculus Modulo.\nHowever, they hold if the rewrite system generated by the rewrite rules\ntogether with beta-reduction is confluent. But this is too restrictive. To\nhandle the case where non confluence comes from the interference between the\nbeta-reduction and rewrite rules with lambda-abstraction on their left-hand\nside, we introduce a notion of rewriting modulo beta for the lambda-Pi-calculus\nModulo. We prove that confluence of rewriting modulo beta is enough to ensure\nsubject reduction and uniqueness of types. We achieve our goal by encoding the\nlambda-Pi-calculus Modulo into Higher-Order Rewrite System (HRS). As a\nconsequence, we also make the confluence results for HRSs available for the\nlambda-Pi-calculus Modulo.\n", "versions": [{"version": "v1", "created": "Wed, 29 Jul 2015 08:21:36 GMT"}], "update_date": "2015-07-30", "authors_parsed": [["Saillard", "Ronan", "", "MINES ParisTech, PSL Research University, France"]]}, {"id": "1507.08056", "submitter": "EPTCS", "authors": "Nicolas Guenot (IT University of Copenhagen), Daniel Gustafsson (IT\n  University of Copenhagen)", "title": "Sequent Calculus and Equational Programming", "comments": "In Proceedings LFMTP 2015, arXiv:1507.07597", "journal-ref": "EPTCS 185, 2015, pp. 102-109", "doi": "10.4204/EPTCS.185.7", "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Proof assistants and programming languages based on type theories usually\ncome in two flavours: one is based on the standard natural deduction\npresentation of type theory and involves eliminators, while the other provides\na syntax in equational style. We show here that the equational approach\ncorresponds to the use of a focused presentation of a type theory expressed as\na sequent calculus. A typed functional language is presented, based on a\nsequent calculus, that we relate to the syntax and internal language of Agda.\nIn particular, we discuss the use of patterns and case splittings, as well as\nrules implementing inductive reasoning and dependent products and sums.\n", "versions": [{"version": "v1", "created": "Wed, 29 Jul 2015 08:21:41 GMT"}], "update_date": "2015-07-30", "authors_parsed": [["Guenot", "Nicolas", "", "IT University of Copenhagen"], ["Gustafsson", "Daniel", "", "IT\n  University of Copenhagen"]]}, {"id": "1507.08153", "submitter": "Riccardo De Masellis", "authors": "Riccardo De Masellis, Chiara Ghidini, Silvio Ranise", "title": "A Declarative Framework for Specifying and Enforcing Purpose-aware\n  Policies", "comments": "Extended version of the paper accepted at the 11th International\n  Workshop on Security and Trust Management (STM 2015)", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.CR cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Purpose is crucial for privacy protection as it makes users confident that\ntheir personal data are processed as intended. Available proposals for the\nspecification and enforcement of purpose-aware policies are unsatisfactory for\ntheir ambiguous semantics of purposes and/or lack of support to the run-time\nenforcement of policies.\n  In this paper, we propose a declarative framework based on a first-order\ntemporal logic that allows us to give a precise semantics to purpose-aware\npolicies and to reuse algorithms for the design of a run-time monitor enforcing\npurpose-aware policies. We also show the complexity of the generation and use\nof the monitor which, to the best of our knowledge, is the first such a result\nin literature on purpose-aware policies.\n", "versions": [{"version": "v1", "created": "Wed, 29 Jul 2015 14:17:43 GMT"}], "update_date": "2015-07-30", "authors_parsed": [["De Masellis", "Riccardo", ""], ["Ghidini", "Chiara", ""], ["Ranise", "Silvio", ""]]}, {"id": "1507.08375", "submitter": "EPTCS", "authors": "Cezary Kaliszyk, Andrei Paskevich", "title": "Proceedings Fourth Workshop on Proof eXchange for Theorem Proving", "comments": null, "journal-ref": "EPTCS 186, 2015", "doi": "10.4204/EPTCS.186", "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This volume of EPTCS contains the proceedings of the Fourth Workshop on Proof\nExchange for Theorem Proving (PxTP 2015), held as part of the International\nConference on Automated Deduction (CADE 2015) on August 2-3, 2015 in Berlin.\nThe PxTP workshop series brings together researchers working on various aspects\nof communication, integration, and cooperation between reasoning systems and\nformalisms. These proceedings contain seven regular papers, as well as the\nabstracts of the invited talks by Georges Gonthier (Microsoft Research) and\nBart Jacobs (University of Leuven).\n", "versions": [{"version": "v1", "created": "Thu, 30 Jul 2015 04:38:31 GMT"}], "update_date": "2015-07-31", "authors_parsed": [["Kaliszyk", "Cezary", ""], ["Paskevich", "Andrei", ""]]}, {"id": "1507.08426", "submitter": "Xu Lu", "authors": "Xu Lu and Zhenhua Duan and Cong Tian", "title": "Extending PPTL for Verifying Heap Evolution Properties", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In this paper, we integrate separation logic with Propositional Projection\nTemporal Logic (PPTL) to obtain a two-dimensional logic, namely\nPPTL$^{\\tiny\\mbox{SL}}$. The spatial dimension is realized by a decidable\nfragment of separation logic which can be used to describe linked lists, and\nthe temporal dimension is expressed by PPTL. We show that PPTL and\nPPTL$^{\\tiny\\mbox{SL}}$ are closely related in their syntax structures. That\nis, for any PPTL$^{\\tiny\\mbox{SL}}$ formula in a restricted form, there exists\nan \"isomorphic\" PPTL formula. The \"isomorphic\" PPTL formulas can be obtained by\nfirst an equisatisfiable translation and then an isomorphic mapping. As a\nresult, existing theory of PPTL, such as decision procedure for satisfiability\nand model checking algorithm, can be reused for PPTL$^{\\tiny\\mbox{SL}}$.\n", "versions": [{"version": "v1", "created": "Thu, 30 Jul 2015 09:12:07 GMT"}], "update_date": "2015-07-31", "authors_parsed": [["Lu", "Xu", ""], ["Duan", "Zhenhua", ""], ["Tian", "Cong", ""]]}, {"id": "1507.08715", "submitter": "EPTCS", "authors": "Giselle Reis (INRIA-Saclay)", "title": "Importing SMT and Connection proofs as expansion trees", "comments": "In Proceedings PxTP 2015, arXiv:1507.08375", "journal-ref": "EPTCS 186, 2015, pp. 3-10", "doi": "10.4204/EPTCS.186.3", "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Different automated theorem provers reason in various deductive systems and,\nthus, produce proof objects which are in general not compatible. To understand\nand analyze these objects, one needs to study the corresponding proof theory,\nand then study the language used to represent proofs, on a prover by prover\nbasis. In this work we present an implementation that takes SMT and Connection\nproof objects from two different provers and imports them both as expansion\ntrees. By representing the proofs in the same framework, all the algorithms and\ntools available for expansion trees (compression, visualization, sequent\ncalculus proof construction, proof checking, etc.) can be employed uniformly.\nThe expansion proofs can also be used as a validation tool for the proof\nobjects produced.\n", "versions": [{"version": "v1", "created": "Fri, 31 Jul 2015 00:58:25 GMT"}], "update_date": "2015-08-03", "authors_parsed": [["Reis", "Giselle", "", "INRIA-Saclay"]]}, {"id": "1507.08716", "submitter": "EPTCS", "authors": "Quentin Heath (Inria & LIX), Dale Miller (Inria & LIX)", "title": "A framework for proof certificates in finite state exploration", "comments": "In Proceedings PxTP 2015, arXiv:1507.08375", "journal-ref": "EPTCS 186, 2015, pp. 11-26", "doi": "10.4204/EPTCS.186.4", "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Model checkers use automated state exploration in order to prove various\nproperties such as reachability, non-reachability, and bisimulation over state\ntransition systems. While model checkers have proved valuable for locating\nerrors in computer models and specifications, they can also be used to prove\nproperties that might be consumed by other computational logic systems, such as\ntheorem provers. In such a situation, a prover must be able to trust that the\nmodel checker is correct. Instead of attempting to prove the correctness of a\nmodel checker, we ask that it outputs its \"proof evidence\" as a formally\ndefined document--a proof certificate--and that this document is checked by a\ntrusted proof checker. We describe a framework for defining and checking proof\ncertificates for a range of model checking problems. The core of this framework\nis a (focused) proof system that is augmented with premises that involve \"clerk\nand expert\" predicates. This framework is designed so that soundness can be\nguaranteed independently of any concerns for the correctness of the clerk and\nexpert specifications. To illustrate the flexibility of this framework, we\ndefine and formally check proof certificates for reachability and\nnon-reachability in graphs, as well as bisimulation and non-bisimulation for\nlabeled transition systems. Finally, we describe briefly a reference checker\nthat we have implemented for this framework.\n", "versions": [{"version": "v1", "created": "Fri, 31 Jul 2015 00:58:35 GMT"}], "update_date": "2015-08-03", "authors_parsed": [["Heath", "Quentin", "", "Inria & LIX"], ["Miller", "Dale", "", "Inria & LIX"]]}, {"id": "1507.08717", "submitter": "EPTCS", "authors": "Christoph Benzm\\\"uller (Freie Universit\\\"at Berlin, Germany),\n  Maximilian Claus (Freie Universit\\\"at Berlin, Germany), Nik Sultana\n  (Cambridge University, UK)", "title": "Systematic Verification of the Modal Logic Cube in Isabelle/HOL", "comments": "In Proceedings PxTP 2015, arXiv:1507.08375", "journal-ref": "EPTCS 186, 2015, pp. 27-41", "doi": "10.4204/EPTCS.186.5", "report-no": null, "categories": "cs.LO cs.AI", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We present an automated verification of the well-known modal logic cube in\nIsabelle/HOL, in which we prove the inclusion relations between the cube's\nlogics using automated reasoning tools. Prior work addresses this problem but\nwithout restriction to the modal logic cube, and using encodings in first-order\nlogic in combination with first-order automated theorem provers. In contrast,\nour solution is more elegant, transparent and effective. It employs an\nembedding of quantified modal logic in classical higher-order logic. Automated\nreasoning tools, such as Sledgehammer with LEO-II, Satallax and CVC4, Metis and\nNitpick, are employed to achieve full automation. Though successful, the\nexperiments also motivate some technical improvements in the Isabelle/HOL tool.\n", "versions": [{"version": "v1", "created": "Fri, 31 Jul 2015 00:58:44 GMT"}], "update_date": "2015-08-03", "authors_parsed": [["Benzm\u00fcller", "Christoph", "", "Freie Universit\u00e4t Berlin, Germany"], ["Claus", "Maximilian", "", "Freie Universit\u00e4t Berlin, Germany"], ["Sultana", "Nik", "", "Cambridge University, UK"]]}, {"id": "1507.08718", "submitter": "EPTCS", "authors": "Mark Adams (Proof Technologies Ltd, UK and Radboud University,\n  Nijmegen, The Netherlands)", "title": "The Common HOL Platform", "comments": "In Proceedings PxTP 2015, arXiv:1507.08375", "journal-ref": "EPTCS 186, 2015, pp. 42-56", "doi": "10.4204/EPTCS.186.6", "report-no": null, "categories": "cs.LO cs.DL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The Common HOL project aims to facilitate porting source code and proofs\nbetween members of the HOL family of theorem provers. At the heart of the\nproject is the Common HOL Platform, which defines a standard HOL theory and API\nthat aims to be compatible with all HOL systems. So far, HOL Light and hol90\nhave been adapted for conformance, and HOL Zero was originally developed to\nconform. In this paper we provide motivation for a platform, give an overview\nof the Common HOL Platform's theory and API components, and show how to adapt\nlegacy systems. We also report on the platform's successful application in the\nhand-translation of a few thousand lines of source code from HOL Light to HOL\nZero.\n", "versions": [{"version": "v1", "created": "Fri, 31 Jul 2015 00:58:52 GMT"}], "update_date": "2015-08-03", "authors_parsed": [["Adams", "Mark", "", "Proof Technologies Ltd, UK and Radboud University,\n  Nijmegen, The Netherlands"]]}, {"id": "1507.08719", "submitter": "EPTCS", "authors": "Rapha\\\"el Cauderlier (Inria), Pierre Halmagrand (Inria)", "title": "Checking Zenon Modulo Proofs in Dedukti", "comments": "In Proceedings PxTP 2015, arXiv:1507.08375", "journal-ref": "EPTCS 186, 2015, pp. 57-73", "doi": "10.4204/EPTCS.186.7", "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Dedukti has been proposed as a universal proof checker. It is a logical\nframework based on the lambda Pi calculus modulo that is used as a backend to\nverify proofs coming from theorem provers, especially those implementing some\nform of rewriting. We present a shallow embedding into Dedukti of proofs\nproduced by Zenon Modulo, an extension of the tableau-based first-order theorem\nprover Zenon to deduction modulo and typing. Zenon Modulo is applied to the\nverification of programs in both academic and industrial projects. The purpose\nof our embedding is to increase the confidence in automatically generated\nproofs by separating untrusted proof search from trusted proof verification.\n", "versions": [{"version": "v1", "created": "Fri, 31 Jul 2015 00:59:08 GMT"}], "update_date": "2015-08-03", "authors_parsed": [["Cauderlier", "Rapha\u00ebl", "", "Inria"], ["Halmagrand", "Pierre", "", "Inria"]]}, {"id": "1507.08720", "submitter": "EPTCS", "authors": "Ali Assaf (Inria, Ecole Polytechnique), Guillaume Burel\n  (ENSIIE/C\\'edric)", "title": "Translating HOL to Dedukti", "comments": "In Proceedings PxTP 2015, arXiv:1507.08375", "journal-ref": "EPTCS 186, 2015, pp. 74-88", "doi": "10.4204/EPTCS.186.8", "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Dedukti is a logical framework based on the lambda-Pi-calculus modulo\nrewriting, which extends the lambda-Pi-calculus with rewrite rules. In this\npaper, we show how to translate the proofs of a family of HOL proof assistants\nto Dedukti. The translation preserves binding, typing, and reduction. We\nimplemented this translation in an automated tool and used it to successfully\ntranslate the OpenTheory standard library.\n", "versions": [{"version": "v1", "created": "Fri, 31 Jul 2015 00:59:11 GMT"}], "update_date": "2015-08-03", "authors_parsed": [["Assaf", "Ali", "", "Inria, Ecole Polytechnique"], ["Burel", "Guillaume", "", "ENSIIE/C\u00e9dric"]]}, {"id": "1507.08721", "submitter": "EPTCS", "authors": "Ali Assaf (Inria, Ecole Polytechnique), Rapha\\\"el Cauderlier (Inria,\n  CNAM)", "title": "Mixing HOL and Coq in Dedukti (Extended Abstract)", "comments": "In Proceedings PxTP 2015, arXiv:1507.08375", "journal-ref": "EPTCS 186, 2015, pp. 89-96", "doi": "10.4204/EPTCS.186.9", "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We use Dedukti as a logical framework for interoperability. We use automated\ntools to translate different developments made in HOL and in Coq to Dedukti,\nand we combine them to prove new results. We illustrate our approach with a\nconcrete example where we instantiate a sorting algorithm written in Coq with\nthe natural numbers of HOL.\n", "versions": [{"version": "v1", "created": "Fri, 31 Jul 2015 00:59:19 GMT"}], "update_date": "2015-08-03", "authors_parsed": [["Assaf", "Ali", "", "Inria, Ecole Polytechnique"], ["Cauderlier", "Rapha\u00ebl", "", "Inria,\n  CNAM"]]}]