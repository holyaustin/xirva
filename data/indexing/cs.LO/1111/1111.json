[{"id": "1111.0064", "submitter": "EPTCS", "authors": "Ji\\v{r}\\'i Barnat, Keijo Heljanko", "title": "Proceedings 10th International Workshop on Parallel and Distributed\n  Methods in verifiCation", "comments": "EPTCS 72, 2011", "journal-ref": null, "doi": "10.4204/EPTCS.72", "report-no": null, "categories": "cs.DC cs.LO cs.SE", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This volume contains the proceedings of the 10th International Workshop on\nParallel and Distributed Methods in verifiCation (PDMC 2011) that took place in\nSnowbird, Utah, on July 14, 2011. The workshop was co-located with 23rd\nInternational Conference on Computer Aided Verification (CAV 2011). The PDMC\nworkshop series covers all aspects related to the verification and analysis of\nvery large and complex systems using, in particular, methods and techniques\nthat exploit contemporary, hence parallel, hardware architectures. To celebrate\nthe 10th anniversary of PDMC, the workshop consisted of a half day invited\nsession together and a half day session of regular contributed presentations.\n", "versions": [{"version": "v1", "created": "Mon, 31 Oct 2011 22:21:56 GMT"}], "update_date": "2011-11-02", "authors_parsed": [["Barnat", "Ji\u0159\u00ed", ""], ["Heljanko", "Keijo", ""]]}, {"id": "1111.0085", "submitter": "EPTCS", "authors": "Andreas Abel (LMU Munich), Nicolai Kraus (University of Nottingham)", "title": "A Lambda Term Representation Inspired by Linear Ordered Logic", "comments": "In Proceedings LFMTP 2011, arXiv:1110.6685", "journal-ref": "EPTCS 71, 2011, pp. 1-13", "doi": "10.4204/EPTCS.71.1", "report-no": null, "categories": "cs.LO cs.PL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We introduce a new nameless representation of lambda terms inspired by\nordered logic. At a lambda abstraction, number and relative position of all\noccurrences of the bound variable are stored, and application carries the\nadditional information where to cut the variable context into function and\nargument part. This way, complete information about free variable occurrence is\navailable at each subterm without requiring a traversal, and environments can\nbe kept exact such that they only assign values to variables that actually\noccur in the associated term. Our approach avoids space leaks in interpreters\nthat build function closures.\n  In this article, we prove correctness of the new representation and present\nan experimental evaluation of its performance in a proof checker for the\nEdinburgh Logical Framework.\n  Keywords: representation of binders, explicit substitutions, ordered\ncontexts, space leaks, Logical Framework.\n", "versions": [{"version": "v1", "created": "Tue, 1 Nov 2011 00:17:57 GMT"}], "update_date": "2011-11-02", "authors_parsed": [["Abel", "Andreas", "", "LMU Munich"], ["Kraus", "Nicolai", "", "University of Nottingham"]]}, {"id": "1111.0086", "submitter": "EPTCS", "authors": "Maxime Beauquier (IT University of Copenhagen), Carsten Sch\\\"urmann\n  (IT University of Copenhagen)", "title": "A Bigraph Relational Model", "comments": "In Proceedings LFMTP 2011, arXiv:1110.6685", "journal-ref": "EPTCS 71, 2011, pp. 14-28", "doi": "10.4204/EPTCS.71.2", "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In this paper, we present a model based on relations for bigraphical reactive\nsystems [Milner09]. Its defining characteristics are that validity and reaction\nrelations are captured as traces in a multi-set rewriting system. The\nrelational model is derived from Milner's graphical definition and directly\namenable to implementation.\n", "versions": [{"version": "v1", "created": "Tue, 1 Nov 2011 00:18:04 GMT"}], "update_date": "2011-11-02", "authors_parsed": [["Beauquier", "Maxime", "", "IT University of Copenhagen"], ["Sch\u00fcrmann", "Carsten", "", "IT University of Copenhagen"]]}, {"id": "1111.0087", "submitter": "EPTCS", "authors": "Mathieu Boespflug (McGill University), Brigitte Pientka (McGill\n  University)", "title": "Multi-level Contextual Type Theory", "comments": "In Proceedings LFMTP 2011, arXiv:1110.6685", "journal-ref": "EPTCS 71, 2011, pp. 29-43", "doi": "10.4204/EPTCS.71.3", "report-no": null, "categories": "cs.LO cs.PL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Contextual type theory distinguishes between bound variables and\nmeta-variables to write potentially incomplete terms in the presence of\nbinders. It has found good use as a framework for concise explanations of\nhigher-order unification, characterize holes in proofs, and in developing a\nfoundation for programming with higher-order abstract syntax, as embodied by\nthe programming and reasoning environment Beluga. However, to reason about\nthese applications, we need to introduce meta^2-variables to characterize the\ndependency on meta-variables and bound variables. In other words, we must go\nbeyond a two-level system granting only bound variables and meta-variables.\n  In this paper we generalize contextual type theory to n levels for arbitrary\nn, so as to obtain a formal system offering bound variables, meta-variables and\nso on all the way to meta^n-variables. We obtain a uniform account by\ncollapsing all these different kinds of variables into a single notion of\nvariabe indexed by some level k. We give a decidable bi-directional type system\nwhich characterizes beta-eta-normal forms together with a generalized\nsubstitution operation.\n", "versions": [{"version": "v1", "created": "Tue, 1 Nov 2011 00:18:10 GMT"}], "update_date": "2011-11-02", "authors_parsed": [["Boespflug", "Mathieu", "", "McGill University"], ["Pientka", "Brigitte", "", "McGill\n  University"]]}, {"id": "1111.0088", "submitter": "EPTCS", "authors": "Ranald Clouston", "title": "Nominal Logic with Equations Only", "comments": "In Proceedings LFMTP 2011, arXiv:1110.6685", "journal-ref": "EPTCS 71, 2011, pp. 44-57", "doi": "10.4204/EPTCS.71.4", "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Many formal systems, particularly in computer science, may be captured by\nequations modulated by side conditions asserting the \"freshness of names\";\nthese can be reasoned about with Nominal Equational Logic (NEL). Like most\nlogics of this sort NEL employs this notion of freshness as a first class\nlogical connective. However, this can become inconvenient when attempting to\ntranslate results from standard equational logic to the nominal setting. This\npaper presents proof rules for a logic whose only connectives are equations,\nwhich we call Nominal Equation-only Logic (NEoL). We prove that NEoL is just as\nexpressive as NEL. We then give a simple description of equality in the empty\nNEoL-theory, then extend that result to describe freshness in the empty\nNEL-theory.\n", "versions": [{"version": "v1", "created": "Tue, 1 Nov 2011 00:18:17 GMT"}], "update_date": "2011-11-02", "authors_parsed": [["Clouston", "Ranald", ""]]}, {"id": "1111.0089", "submitter": "EPTCS", "authors": "Murdoch J. Gabbay, Dominic P. Mulligan", "title": "Nominal Henkin Semantics: simply-typed lambda-calculus models in nominal\n  sets", "comments": "In Proceedings LFMTP 2011, arXiv:1110.6685", "journal-ref": "EPTCS 71, 2011, pp. 58-75", "doi": "10.4204/EPTCS.71.5", "report-no": null, "categories": "cs.LO cs.PL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We investigate a class of nominal algebraic Henkin-style models for the\nsimply typed lambda-calculus in which variables map to names in the denotation\nand lambda-abstraction maps to a (non-functional) name-abstraction operation.\nThe resulting denotations are smaller and better-behaved, in ways we make\nprecise, than functional valuation-based models.\n  Using these new models, we then develop a generalisation of \\lambda-term\nsyntax enriching them with existential meta-variables, thus yielding a theory\nof incomplete functions. This incompleteness is orthogonal to the usual notion\nof incompleteness given by function abstraction and application, and\ncorresponds to holes and incomplete objects.\n", "versions": [{"version": "v1", "created": "Tue, 1 Nov 2011 00:18:23 GMT"}], "update_date": "2011-11-02", "authors_parsed": [["Gabbay", "Murdoch J.", ""], ["Mulligan", "Dominic P.", ""]]}, {"id": "1111.0090", "submitter": "EPTCS", "authors": "Alan J. Martin (University of Ottawa), Amy P. Felty (University of\n  Ottawa)", "title": "An Improved Implementation and Abstract Interface for Hybrid", "comments": "In Proceedings LFMTP 2011, arXiv:1110.6685", "journal-ref": "EPTCS 71, 2011, pp. 76-90", "doi": "10.4204/EPTCS.71.6", "report-no": null, "categories": "cs.LO cs.PL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Hybrid is a formal theory implemented in Isabelle/HOL that provides an\ninterface for representing and reasoning about object languages using\nhigher-order abstract syntax (HOAS). This interface is built around an HOAS\nvariable-binding operator that is constructed definitionally from a de Bruijn\nindex representation. In this paper we make a variety of improvements to\nHybrid, culminating in an abstract interface that on one hand makes Hybrid a\nmore mathematically satisfactory theory, and on the other hand has important\npractical benefits. We start with a modification of Hybrid's type of terms that\nbetter hides its implementation in terms of de Bruijn indices, by excluding at\nthe type level terms with dangling indices. We present an improved set of\ndefinitions, and a series of new lemmas that provide a complete\ncharacterization of Hybrid's primitives in terms of properties stated at the\nHOAS level. Benefits of this new package include a new proof of adequacy and\nimprovements to reasoning about object logics. Such proofs are carried out at\nthe higher level with no involvement of the lower level de Bruijn syntax.\n", "versions": [{"version": "v1", "created": "Tue, 1 Nov 2011 00:18:29 GMT"}], "update_date": "2011-11-02", "authors_parsed": [["Martin", "Alan J.", "", "University of Ottawa"], ["Felty", "Amy P.", "", "University of\n  Ottawa"]]}, {"id": "1111.0123", "submitter": "Gyesik Lee", "authors": "Gyesik Lee (ROSAEC Center, Seoul National University, Korea), Benjamin\n  Werner (INRIA Saclay, France)", "title": "Proof-irrelevant model of CC with predicative induction and judgmental\n  equality", "comments": null, "journal-ref": "Logical Methods in Computer Science, Volume 7, Issue 4 (November\n  23, 2011) lmcs:920", "doi": "10.2168/LMCS-7(4:5)2011", "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We present a set-theoretic, proof-irrelevant model for Calculus of\nConstructions (CC) with predicative induction and judgmental equality in\nZermelo-Fraenkel set theory with an axiom for countably many inaccessible\ncardinals. We use Aczel's trace encoding which is universally defined for any\nfunction type, regardless of being impredicative. Direct and concrete\ninterpretations of simultaneous induction and mutually recursive functions are\nalso provided by extending Dybjer's interpretations on the basis of Aczel's\nrule sets. Our model can be regarded as a higher-order generalization of the\ntruth-table methods. We provide a relatively simple consistency proof of type\ntheory, which can be used as the basis for a theorem prover.\n", "versions": [{"version": "v1", "created": "Tue, 1 Nov 2011 05:51:19 GMT"}, {"version": "v2", "created": "Tue, 22 Nov 2011 10:31:38 GMT"}], "update_date": "2015-07-01", "authors_parsed": [["Lee", "Gyesik", "", "ROSAEC Center, Seoul National University, Korea"], ["Werner", "Benjamin", "", "INRIA Saclay, France"]]}, {"id": "1111.0368", "submitter": "EPTCS", "authors": "Lubo\\v{s} Brim (Masaryk University), Ji\\v{r}\\'i Barnat (Masaryk\n  University)", "title": "Platform Dependent Verification: On Engineering Verification Tools for\n  21st Century", "comments": "In Proceedings PDMC 2011, arXiv:1111.0064", "journal-ref": "EPTCS 72, 2011, pp. 1-12", "doi": "10.4204/EPTCS.72.1", "report-no": null, "categories": "cs.SE cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The paper overviews recent developments in platform-dependent explicit-state\nLTL model checking.\n", "versions": [{"version": "v1", "created": "Wed, 2 Nov 2011 03:04:04 GMT"}], "update_date": "2011-11-03", "authors_parsed": [["Brim", "Lubo\u0161", "", "Masaryk University"], ["Barnat", "Ji\u0159\u00ed", "", "Masaryk\n  University"]]}, {"id": "1111.0369", "submitter": "EPTCS", "authors": "Alfons Laarman (University of Twente), Jaco van de Pol (University of\n  Twente)", "title": "Variations on Multi-Core Nested Depth-First Search", "comments": "In Proceedings PDMC 2011, arXiv:1111.0064", "journal-ref": "EPTCS 72, 2011, pp. 13-28", "doi": "10.4204/EPTCS.72.2", "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Recently, two new parallel algorithms for on-the-fly model checking of LTL\nproperties were presented at the same conference: Automated Technology for\nVerification and Analysis, 2011. Both approaches extend Swarmed NDFS, which\nruns several sequential NDFS instances in parallel. While parallel random\nsearch already speeds up detection of bugs, the workers must share some global\ninformation in order to speed up full verification of correct models. The two\nalgorithms differ considerably in the global information shared between\nworkers, and in the way they synchronize.\n  Here, we provide a thorough experimental comparison between the two\nalgorithms, by measuring the runtime of their implementations on a multi-core\nmachine. Both algorithms were implemented in the same framework of the model\nchecker LTSmin, using similar optimizations, and have been subjected to the\nfull BEEM model database.\n  Because both algorithms have complementary advantages, we constructed an\nalgorithm that combines both ideas. This combination clearly has an improved\nspeedup. We also compare the results with the alternative parallel algorithm\nfor accepting cycle detection OWCTY-MAP. Finally, we study a simple statistical\nmodel for input models that do contain accepting cycles. The goal is to\ndistinguish the speedup due to parallel random search from the speedup that can\nbe attributed to clever work sharing schemes.\n", "versions": [{"version": "v1", "created": "Wed, 2 Nov 2011 03:04:15 GMT"}], "update_date": "2011-11-03", "authors_parsed": [["Laarman", "Alfons", "", "University of Twente"], ["van de Pol", "Jaco", "", "University of\n  Twente"]]}, {"id": "1111.0371", "submitter": "EPTCS", "authors": "Youssef Hamadi (Microsoft Research), Joao Marques-Silva (University\n  College Dublin), Christoph M. Wintersteiger (Microsoft Research)", "title": "Lazy Decomposition for Distributed Decision Procedures", "comments": "In Proceedings PDMC 2011, arXiv:1111.0064", "journal-ref": "EPTCS 72, 2011, pp. 43-54", "doi": "10.4204/EPTCS.72.5", "report-no": null, "categories": "cs.LO cs.DC cs.SE", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The increasing popularity of automated tools for software and hardware\nverification puts ever increasing demands on the underlying decision\nprocedures. This paper presents a framework for distributed decision procedures\n(for first-order problems) based on Craig interpolation. Formulas are\ndistributed in a lazy fashion, i.e., without the use of costly decomposition\nalgorithms. Potential models which are shown to be incorrect are reconciled\nthrough the use of Craig interpolants. Experimental results on challenging\npropositional satisfiability problems indicate that our method is able to\noutperform traditional solving techniques even without the use of additional\nresources.\n", "versions": [{"version": "v1", "created": "Wed, 2 Nov 2011 03:04:28 GMT"}], "update_date": "2011-11-03", "authors_parsed": [["Hamadi", "Youssef", "", "Microsoft Research"], ["Marques-Silva", "Joao", "", "University\n  College Dublin"], ["Wintersteiger", "Christoph M.", "", "Microsoft Research"]]}, {"id": "1111.0372", "submitter": "EPTCS", "authors": "Temesghen Kahsai (The University of Iowa), Cesare Tinelli (The\n  University of Iowa)", "title": "PKind: A parallel k-induction based model checker", "comments": "In Proceedings PDMC 2011, arXiv:1111.0064", "journal-ref": "EPTCS 72, 2011, pp. 55-62", "doi": "10.4204/EPTCS.72.6", "report-no": null, "categories": "cs.LO cs.DC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  PKind is a novel parallel k-induction-based model checker of invariant\nproperties for finite- or infinite-state Lustre programs. Its architecture,\nwhich is strictly message-based, is designed to minimize synchronization delays\nand easily accommodate the incorporation of incremental invariant generators to\nenhance basic k-induction. We describe PKind's functionality and main features,\nand present experimental evidence that PKind significantly speeds up the\nverification of safety properties and, due to incremental invariant generation,\nalso considerably increases the number of provable ones.\n", "versions": [{"version": "v1", "created": "Wed, 2 Nov 2011 03:04:34 GMT"}], "update_date": "2011-11-03", "authors_parsed": [["Kahsai", "Temesghen", "", "The University of Iowa"], ["Tinelli", "Cesare", "", "The\n  University of Iowa"]]}, {"id": "1111.0375", "submitter": "EPTCS", "authors": "Anton Wijs (Eindhoven University of Technology)", "title": "The HIVE Tool for Informed Swarm State Space Exploration", "comments": "In Proceedings PDMC 2011, arXiv:1111.0064", "journal-ref": "EPTCS 72, 2011, pp. 91-98", "doi": "10.4204/EPTCS.72.10", "report-no": null, "categories": "cs.SE cs.DC cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Swarm verification and parallel randomised depth-first search are very\neffective parallel techniques to hunt bugs in large state spaces. In case bugs\nare absent, however, scalability of the parallelisation is completely lost. In\nrecent work, we proposed a mechanism to inform the workers which parts of the\nstate space to explore. This mechanism is compatible with any action-based\nformalism, where a state space can be represented by a labelled transition\nsystem. With this extension, each worker can be strictly bounded to explore\nonly a small fraction of the state space at a time. In this paper, we present\nthe HIVE tool together with two search algorithms which were added to the\nLTSmin tool suite to both perform a preprocessing step, and execute a bounded\nworker search. The new tool is used to coordinate informed swarm explorations,\nand the two new LTSmin algorithms are employed for preprocessing a model and\nperforming the individual searches.\n", "versions": [{"version": "v1", "created": "Wed, 2 Nov 2011 03:05:00 GMT"}], "update_date": "2011-11-10", "authors_parsed": [["Wijs", "Anton", "", "Eindhoven University of Technology"]]}, {"id": "1111.0640", "submitter": "Mohamed El-Zawawy Dr.", "authors": "Mohamed A. El-Zawawy and Hamada A. Nayel", "title": "Partial Redundancy Elimination for Multi-threaded Programs", "comments": "7 pages", "journal-ref": "IJCSNS International Journal of Computer Science and Network\n  Security, Vol.11 No.10, October 2011, 127-133", "doi": null, "report-no": null, "categories": "cs.SE cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Multi-threaded programs have many applications which are widely used such as\noperating systems. Analyzing multi-threaded programs differs from sequential\nones; the main feature is that many threads execute at the same time. The\neffect of all other running threads must be taken in account. Partial\nredundancy elimination is among the most powerful compiler optimizations: it\nperforms loop-invariant code motion and common subexpression elimination. We\npresent a type system with optimization component which performs partial\nredundancy elimination for multi-threaded programs.\n", "versions": [{"version": "v1", "created": "Wed, 2 Nov 2011 20:08:26 GMT"}], "update_date": "2011-11-04", "authors_parsed": [["El-Zawawy", "Mohamed A.", ""], ["Nayel", "Hamada A.", ""]]}, {"id": "1111.0670", "submitter": "Mukund Raghothaman", "authors": "Rajeev Alur, Loris D'Antoni, Jyotirmoy V. Deshmukh, Mukund Raghothaman\n  and Yifei Yuan", "title": "Regular Functions, Cost Register Automata, and Generalized Min-Cost\n  Problems", "comments": "ICALP12 submission, technical report/extended version. 33 pages+title\n  page", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Motivated by the successful application of the theory of regular languages to\nformal verification of finite-state systems, there is a renewed interest in\ndeveloping a theory of analyzable functions from strings to numerical values\nthat can provide a foundation for analyzing {\\em quantitative} properties of\nfinite-state systems. In this paper, we propose a deterministic model for\nassociating costs with strings that is parameterized by operations of interest\n(such as addition, scaling, and $\\min$), a notion of {\\em regularity} that\nprovides a yardstick to measure expressiveness, and study decision problems and\ntheoretical properties of resulting classes of cost functions. Our definition\nof regularity relies on the theory of string-to-tree transducers, and allows\nassociating costs with events that are conditional upon regular properties of\nfuture events. Our model of {\\em cost register automata} allows computation of\nregular functions using multiple \"write-only\" registers whose values can be\ncombined using the allowed set of operations. We show that classical\nshortest-path algorithms as well as algorithms designed for computing {\\em\ndiscounted costs}, can be adopted for solving the min-cost problems for the\nmore general classes of functions specified in our model. Cost register\nautomata with $\\min$ and increment give a deterministic model that is\nequivalent to {\\em weighted automata}, an extensively studied nondeterministic\nmodel, and this connection results in new insights and new open problems.\n", "versions": [{"version": "v1", "created": "Wed, 2 Nov 2011 21:39:12 GMT"}, {"version": "v2", "created": "Tue, 21 Feb 2012 23:06:11 GMT"}], "update_date": "2012-02-23", "authors_parsed": [["Alur", "Rajeev", ""], ["D'Antoni", "Loris", ""], ["Deshmukh", "Jyotirmoy V.", ""], ["Raghothaman", "Mukund", ""], ["Yuan", "Yifei", ""]]}, {"id": "1111.1011", "submitter": "Mohamed Faouzi Atig", "authors": "Mohamed Faouzi Atig (LIAFA, CNRS and University of Paris Diderot\n  (Paris 7)), Ahmed Bouajjani (LIAFA, CNRS and University of Paris Diderot\n  (Paris 7)), Shaz Qadeer (Microsoft Research, Redmond)", "title": "Context-Bounded Analysis For Concurrent Programs With Dynamic Creation\n  of Threads", "comments": null, "journal-ref": "Logical Methods in Computer Science, Volume 7, Issue 4 (November\n  23, 2011) lmcs:708", "doi": "10.2168/LMCS-7(4:4)2011", "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Context-bounded analysis has been shown to be both efficient and effective at\nfinding bugs in concurrent programs. According to its original definition,\ncontext-bounded analysis explores all behaviors of a concurrent program up to\nsome fixed number of context switches between threads. This definition is\ninadequate for programs that create threads dynamically because bounding the\nnumber of context switches in a computation also bounds the number of threads\ninvolved in the computation. In this paper, we propose a more general\ndefinition of context-bounded analysis useful for programs with dynamic thread\ncreation. The idea is to bound the number of context switches for each thread\ninstead of bounding the number of switches of all threads. We consider several\nvariants based on this new definition, and we establish decidability and\ncomplexity results for the analysis induced by them.\n", "versions": [{"version": "v1", "created": "Thu, 3 Nov 2011 23:37:53 GMT"}, {"version": "v2", "created": "Mon, 7 Nov 2011 02:02:36 GMT"}, {"version": "v3", "created": "Tue, 22 Nov 2011 09:39:38 GMT"}], "update_date": "2015-07-01", "authors_parsed": [["Atig", "Mohamed Faouzi", "", "LIAFA, CNRS and University of Paris Diderot"], ["Bouajjani", "Ahmed", "", "LIAFA, CNRS and University of Paris Diderot"], ["Qadeer", "Shaz", "", "Microsoft Research, Redmond"]]}, {"id": "1111.1378", "submitter": "Christian Retore", "authors": "Christian Retor\\'e (LaBRI, INRIA Bordeaux - Sud-Ouest)", "title": "Specimens: \"most of\" generic NPs in a contextually flexible type theory", "comments": "Genius III (2011)", "journal-ref": null, "doi": null, "report-no": null, "categories": "math.LO cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This paper proposes to compute the meanings associated to sentences with\ngeneric NPs corresponding to the most of generalized quantifier. We call these\ngenerics specimens and they resemble stereotypes or prototypes in lexical\nsemantics. The meanings are viewed as logical formulae that can be thereafter\ninterpreted in your favorite models. We rather depart from the dominant Fregean\nsingle untyped universe and go for type theory with hints from Hilbert epsilon\ncalculus and from medieval philosophy. Our type theoretic analysis bears some\nresemblance with on going work in lexical semantics. Our model also applies to\nclassical examples involving a class (or a generic element of this class) which\nis provided by the context. An outcome of this study is that, in the\nminimalism-contextualism debate, if one adopts a type theoretical view, terms\nencode the purely semantic meaning component while their typing is\npragmatically determined.\n", "versions": [{"version": "v1", "created": "Sun, 6 Nov 2011 06:52:16 GMT"}], "update_date": "2011-11-09", "authors_parsed": [["Retor\u00e9", "Christian", "", "LaBRI, INRIA Bordeaux - Sud-Ouest"]]}, {"id": "1111.1504", "submitter": "Olivier Finkel", "authors": "Olivier Finkel (ELM), Stevo Todorcevic (ELM)", "title": "A Hierarchy of Tree-Automatic Structures", "comments": "To appear in The Journal of Symbolic Logic. arXiv admin note:\n  substantial text overlap with arXiv:1007.0822", "journal-ref": "Journal of Symbolic Logic 77, 1 (2012) 350-368", "doi": null, "report-no": null, "categories": "math.LO cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We consider $\\omega^n$-automatic structures which are relational structures\nwhose domain and relations are accepted by automata reading ordinal words of\nlength $\\omega^n$ for some integer $n\\geq 1$. We show that all these structures\nare $\\omega$-tree-automatic structures presentable by Muller or Rabin tree\nautomata. We prove that the isomorphism relation for $\\omega^2$-automatic\n(resp. $\\omega^n$-automatic for $n>2$) boolean algebras (respectively, partial\norders, rings, commutative rings, non commutative rings, non commutative\ngroups) is not determined by the axiomatic system ZFC. We infer from the proof\nof the above result that the isomorphism problem for $\\omega^n$-automatic\nboolean algebras, $n > 1$, (respectively, rings, commutative rings, non\ncommutative rings, non commutative groups) is neither a $\\Sigma_2^1$-set nor a\n$\\Pi_2^1$-set. We obtain that there exist infinitely many $\\omega^n$-automatic,\nhence also $\\omega$-tree-automatic, atomless boolean algebras $B_n$, $n\\geq 1$,\nwhich are pairwise isomorphic under the continuum hypothesis CH and pairwise\nnon isomorphic under an alternate axiom AT, strengthening a result of [FT10].\n", "versions": [{"version": "v1", "created": "Mon, 7 Nov 2011 08:53:47 GMT"}], "update_date": "2012-02-02", "authors_parsed": [["Finkel", "Olivier", "", "ELM"], ["Todorcevic", "Stevo", "", "ELM"]]}, {"id": "1111.1673", "submitter": "Daoud Clarke", "authors": "Daoud Clarke", "title": "Algebras over a field and semantics for context based reasoning", "comments": "Draft chapter for a proposed Oxford University Press volume\n  \"Compositional methods in Physics and Linguistics\"", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.CL cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This paper introduces context algebras and demonstrates their application to\ncombining logical and vector-based representations of meaning. Other approaches\nto this problem attempt to reproduce aspects of logical semantics within new\nframeworks. The approach we present here is different: We show how logical\nsemantics can be embedded within a vector space framework, and use this to\ncombine distributional semantics, in which the meanings of words are\nrepresented as vectors, with logical semantics, in which the meaning of a\nsentence is represented as a logical form.\n", "versions": [{"version": "v1", "created": "Mon, 7 Nov 2011 18:46:54 GMT"}], "update_date": "2011-11-08", "authors_parsed": [["Clarke", "Daoud", ""]]}, {"id": "1111.2480", "submitter": "Russell Miller", "authors": "Wesley Calvert, Russell Miller, and Jennifer Chubb Reimann", "title": "The Distance Function on a Computable Graph", "comments": "submitted for publication 9 November 2011", "journal-ref": "Proceedings of the 12th Asian Logic Conference (Singapore: World\n  Scientific Publishing Co., 2013), 24-52", "doi": null, "report-no": null, "categories": "math.LO cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We apply the techniques of computable model theory to the distance function\nof a graph. This task leads us to adapt the definitions of several truth-table\nreducibilities so that they apply to functions as well as to sets, and we prove\nassorted theorems about the new reducibilities and about functions which have\nnonincreasing computable approximations. Finally, we show that the spectrum of\nthe distance function can consist of an arbitrary single btt-degree which is\napproximable from above, or of all such btt-degrees at once, or of the\nbT-degrees of exactly those functions approximable from above in at most n\nsteps.\n", "versions": [{"version": "v1", "created": "Thu, 10 Nov 2011 14:17:27 GMT"}], "update_date": "2018-02-12", "authors_parsed": [["Calvert", "Wesley", ""], ["Miller", "Russell", ""], ["Reimann", "Jennifer Chubb", ""]]}, {"id": "1111.2678", "submitter": "EPTCS", "authors": "Fang Yu (National Chengchi University, Taiwan), Chao Wang (Virginia\n  Tech, U.S.)", "title": "Proceedings 13th International Workshop on Verification of\n  Infinite-State Systems", "comments": null, "journal-ref": "EPTCS 73, 2011", "doi": "10.4204/EPTCS.73", "report-no": null, "categories": "cs.LO cs.SE", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This volume contains the proceedings of the 13th International Workshop on\nVerification of Infinite-State Systems (INFINITY 2011). The workshop was held\nin Taipei, Taiwan on October 10, 2011, as a satellite event to the 9th\nInternational Symposium on Automated Technology for Verification and Analysis\n(ATVA). The INFINITY workshop aims at providing a forum for researchers who are\ninterested in the development of formal methods and algorithmic techniques for\nthe analysis of systems with infinitely many states, and their application in\nautomated verification of complex software and hardware systems.\n", "versions": [{"version": "v1", "created": "Fri, 11 Nov 2011 07:59:29 GMT"}], "update_date": "2011-11-14", "authors_parsed": [["Yu", "Fang", "", "National Chengchi University, Taiwan"], ["Wang", "Chao", "", "Virginia\n  Tech, U.S."]]}, {"id": "1111.2768", "submitter": "Margherita Napoli", "authors": "Margherita Napoli and Mimmo Parente", "title": "Graded CTL Model Checking for Test Generation", "comments": "Symposium On Theory of Modeling and Simulation (DEVS/TMS'11)", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Recently there has been a great attention from the scientific community\ntowards the use of the model-checking technique as a tool for test generation\nin the simulation field. This paper aims to provide a useful mean to get more\ninsights along these lines. By applying recent results in the field of graded\ntemporal logics, we present a new efficient model-checking algorithm for\nHierarchical Finite State Machines (HSM), a well established symbolism long and\nwidely used for representing hierarchical models of discrete systems.\nPerforming model-checking against specifications expressed using graded\ntemporal logics has the peculiarity of returning more counterexamples within a\nunique run. We think that this can greatly improve the efficacy of\nautomatically getting test cases. In particular we verify two different models\nof HSM against branching time temporal properties.\n", "versions": [{"version": "v1", "created": "Wed, 9 Nov 2011 09:14:16 GMT"}], "update_date": "2011-11-14", "authors_parsed": [["Napoli", "Margherita", ""], ["Parente", "Mimmo", ""]]}, {"id": "1111.2824", "submitter": "Carla Ferreira", "authors": "C. Vaz and C. Ferreira", "title": "Towards Automated Verification of Web Services", "comments": "Proceedings of the IADIS International Conference on WWW/Internet\n  2007", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This paper proposes the use of model-checking software technology for the\nverification of workflows and business processes behaviour based on web\nservices, namely the use of the SPIN model checker. Since the specification of\na business process behaviour based on web services can be decomposed into\npatterns, it is proposed a translation of a well known collection of workflow\npatterns into PROMELA, the input specification language of SPIN. The use of\nthis translation is illustrated with one business process example, which\ndemonstrates how its translation to a PROMELA model can be useful in the web\nservice specification and verification.\n", "versions": [{"version": "v1", "created": "Fri, 11 Nov 2011 19:14:05 GMT"}], "update_date": "2011-11-14", "authors_parsed": [["Vaz", "C.", ""], ["Ferreira", "C.", ""]]}, {"id": "1111.2825", "submitter": "Carla Ferreira", "authors": "Y. Howard and S. Gruner and A.Gravell and C. Ferreira and J.C. Augusto", "title": "Model-Based Trace-Checking", "comments": null, "journal-ref": "UK Software Testing Research Workshop 2003", "doi": null, "report-no": null, "categories": "cs.LO cs.SE", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Trace analysis can be a useful way to discover problems in a program under\ntest. Rather than writing a special purpose trace analysis tool, this paper\nproposes that traces can usefully be analysed by checking them against a formal\nmodel using a standard model-checker or else an animator for executable\nspecifications. These techniques are illustrated using a Travel Agent case\nstudy implemented in J2EE. We added trace beans to this code that write trace\ninformation to a database. The traces are then extracted and converted into a\nform suitable for analysis by Spin, a popular model-checker, and Pro-B, a\nmodel-checker and animator for the B notation. This illustrates the technique,\nand also the fact that such a system can have a variety of models, in different\nnotations, that capture different features. These experiments have demonstrated\nthat model-based trace-checking is feasible. Future work is focussed on scaling\nup the approach to larger systems by increasing the level of automation.\n", "versions": [{"version": "v1", "created": "Fri, 11 Nov 2011 19:14:48 GMT"}], "update_date": "2011-11-14", "authors_parsed": [["Howard", "Y.", ""], ["Gruner", "S.", ""], ["Gravell", "A.", ""], ["Ferreira", "C.", ""], ["Augusto", "J. C.", ""]]}, {"id": "1111.3106", "submitter": "EPTCS", "authors": "Doron Peled (Bar Ilan University), Sven Schewe (University of\n  Liverpool)", "title": "Practical Distributed Control Synthesis", "comments": "In Proceedings INFINITY 2011, arXiv:1111.2678", "journal-ref": "EPTCS 73, 2011, pp. 2-17", "doi": "10.4204/EPTCS.73.2", "report-no": null, "categories": "cs.LO cs.SY", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Classic distributed control problems have an interesting dichotomy: they are\neither trivial or undecidable. If we allow the controllers to fully\nsynchronize, then synthesis is trivial. In this case, controllers can\neffectively act as a single controller with complete information, resulting in\na trivial control problem. But when we eliminate communication and restrict the\nsupervisors to locally available information, the problem becomes undecidable.\nIn this paper we argue in favor of a middle way. Communication is, in most\napplications, expensive, and should hence be minimized. We therefore study a\nsolution that tries to communicate only scarcely and, while allowing\ncommunication in order to make joint decision, favors local decisions over\njoint decisions that require communication.\n", "versions": [{"version": "v1", "created": "Mon, 14 Nov 2011 06:35:08 GMT"}], "update_date": "2011-11-15", "authors_parsed": [["Peled", "Doron", "", "Bar Ilan University"], ["Schewe", "Sven", "", "University of\n  Liverpool"]]}, {"id": "1111.3107", "submitter": "EPTCS", "authors": "Alex Spelten (RWTH Aachen University), Wolfgang Thomas (RWTH Aachen\n  University), Sarah Winter (RWTH Aachen University)", "title": "Trees over Infinite Structures and Path Logics with Synchronization", "comments": "In Proceedings INFINITY 2011, arXiv:1111.2678", "journal-ref": "EPTCS 73, 2011, pp. 20-34", "doi": "10.4204/EPTCS.73.5", "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We provide decidability and undecidability results on the model-checking\nproblem for infinite tree structures. These tree structures are built from\nsequences of elements of infinite relational structures. More precisely, we\ndeal with the tree iteration of a relational structure M in the sense of\nShelah-Stupp. In contrast to classical results where model-checking is shown\ndecidable for MSO-logic, we show decidability of the tree model-checking\nproblem for logics that allow only path quantifiers and chain quantifiers\n(where chains are subsets of paths), as they appear in branching time logics;\nhowever, at the same time the tree is enriched by the equal-level relation\n(which holds between vertices u, v if they are on the same tree level). We\nseparate cleanly the tree logic from the logic used for expressing properties\nof the underlying structure M. We illustrate the scope of the decidability\nresults by showing that two slight extensions of the framework lead to\nundecidability. In particular, this applies to the (stronger) tree iteration in\nthe sense of Muchnik-Walukiewicz.\n", "versions": [{"version": "v1", "created": "Mon, 14 Nov 2011 06:35:15 GMT"}], "update_date": "2011-11-15", "authors_parsed": [["Spelten", "Alex", "", "RWTH Aachen University"], ["Thomas", "Wolfgang", "", "RWTH Aachen\n  University"], ["Winter", "Sarah", "", "RWTH Aachen University"]]}, {"id": "1111.3108", "submitter": "EPTCS", "authors": "Laurent Fribourg (Laboratoire Specification et Verification), Bertrand\n  Revol (SATIE), Romain Soulat (Laboratoire Specification et Verification)", "title": "Synthesis of Switching Rules for Ensuring Reachability Properties of\n  Sampled Linear Systems", "comments": "In Proceedings INFINITY 2011, arXiv:1111.2678", "journal-ref": "EPTCS 73, 2011, pp. 35-48", "doi": "10.4204/EPTCS.73.6", "report-no": null, "categories": "cs.LO cs.SY", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We consider here systems with piecewise linear dynamics that are periodically\nsampled with a given period {\\tau} . At each sampling time, the mode of the\nsystem, i.e., the parameters of the linear dynamics, can be switched, according\nto a switching rule. Such systems can be modelled as a special form of hybrid\nautomata, called \"switched systems\", that are automata with an infinite real\nstate space. The problem is to find a switching rule that guarantees the system\nto still be in a given area V at the next sampling time, and so on\nindefinitely. In this paper, we will consider two approaches: the indirect one\nthat abstracts the system under the form of a finite discrete event system, and\nthe direct one that works on the continuous state space.\n  Our methods rely on previous works, but we specialize them to a simplified\ncontext (linearity, periodic switching instants, absence of control input),\nwhich is motivated by the features of a focused case study: a DC-DC boost\nconverter built by electronics laboratory SATIE (ENS Cachan). Our enhanced\nmethods allow us to treat successfully this real-life example.\n", "versions": [{"version": "v1", "created": "Mon, 14 Nov 2011 06:35:24 GMT"}], "update_date": "2011-11-15", "authors_parsed": [["Fribourg", "Laurent", "", "Laboratoire Specification et Verification"], ["Revol", "Bertrand", "", "SATIE"], ["Soulat", "Romain", "", "Laboratoire Specification et Verification"]]}, {"id": "1111.3109", "submitter": "EPTCS", "authors": "Alberto Ciaffaglione (University of Udine)", "title": "A coinductive semantics of the Unlimited Register Machine", "comments": "In Proceedings INFINITY 2011, arXiv:1111.2678", "journal-ref": "EPTCS 73, 2011, pp. 49-63", "doi": "10.4204/EPTCS.73.7", "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We exploit (co)inductive specifications and proofs to approach the evaluation\nof low-level programs for the Unlimited Register Machine (URM) within the Coq\nsystem, a proof assistant based on the Calculus of (Co)Inductive Constructions\ntype theory. Our formalization allows us to certify the implementation of\npartial functions, thus it can be regarded as a first step towards the\ndevelopment of a workbench for the formal analysis and verification of both\nconverging and diverging computations.\n", "versions": [{"version": "v1", "created": "Mon, 14 Nov 2011 06:35:31 GMT"}], "update_date": "2011-11-15", "authors_parsed": [["Ciaffaglione", "Alberto", "", "University of Udine"]]}, {"id": "1111.3110", "submitter": "EPTCS", "authors": "Christian Krause (Hasso Plattner Institute (HPI), Potsdam, Germany),\n  Holger Giese (Hasso Plattner Institute (HPI), Potsdam, Germany)", "title": "Model Checking Probabilistic Real-Time Properties for Service-Oriented\n  Systems with Service Level Agreements", "comments": "In Proceedings INFINITY 2011, arXiv:1111.2678", "journal-ref": "EPTCS 73, 2011, pp. 64-78", "doi": "10.4204/EPTCS.73.8", "report-no": null, "categories": "cs.SE cs.LO cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The assurance of quality of service properties is an important aspect of\nservice-oriented software engineering. Notations for so-called service level\nagreements (SLAs), such as the Web Service Level Agreement (WSLA) language,\nprovide a formal syntax to specify such assurances in terms of (legally\nbinding) contracts between a service provider and a customer. On the other\nhand, formal methods for verification of probabilistic real-time behavior have\nreached a level of expressiveness and efficiency which allows to apply them in\nreal-world scenarios. In this paper, we suggest to employ the recently\nintroduced model of Interval Probabilistic Timed Automata (IPTA) for formal\nverification of QoS properties of service-oriented systems. Specifically, we\nshow that IPTA in contrast to Probabilistic Timed Automata (PTA) are able to\ncapture the guarantees specified in SLAs directly. A particular challenge in\nthe analysis of IPTA is the fact that their naive semantics usually yields an\ninfinite set of states and infinitely-branching transitions. However, using\nsymbolic representations, IPTA can be analyzed rather efficiently. We have\ndeveloped the first implementation of an IPTA model checker by extending the\nPRISM tool and show that model checking IPTA is only slightly more expensive\nthan model checking comparable PTA.\n", "versions": [{"version": "v1", "created": "Mon, 14 Nov 2011 06:35:42 GMT"}], "update_date": "2011-11-15", "authors_parsed": [["Krause", "Christian", "", "Hasso Plattner Institute"], ["Giese", "Holger", "", "Hasso Plattner Institute"]]}, {"id": "1111.3111", "submitter": "EPTCS", "authors": "Takashi Tomita (Tokyo Institute of Technology), Shigeki Hagihara\n  (Tokyo Institute of Technology), Naoki Yonezaki (Tokyo Institute of\n  Technology)", "title": "A Probabilistic Temporal Logic with Frequency Operators and Its Model\n  Checking", "comments": "In Proceedings INFINITY 2011, arXiv:1111.2678", "journal-ref": "EPTCS 73, 2011, pp. 79-93", "doi": "10.4204/EPTCS.73.9", "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Probabilistic Computation Tree Logic (PCTL) and Continuous Stochastic Logic\n(CSL) are often used to describe specifications of probabilistic properties for\ndiscrete time and continuous time, respectively. In PCTL and CSL, the\npossibility of executions satisfying some temporal properties can be\nquantitatively represented by the probabilistic extension of the path\nquantifiers in their basic Computation Tree Logic (CTL), however, path formulae\nof them are expressed via the same operators in CTL. For this reason, both of\nthem cannot represent formulae with quantitative temporal properties, such as\nthose of the form \"some properties hold to more than 80% of time points (in a\ncertain bounded interval) on the path.\" In this paper, we introduce a new\ntemporal operator which expressed the notion of frequency of events, and define\nprobabilistic frequency temporal logic (PFTL) based on CTL\\star. As a result,\nwe can easily represent the temporal properties of behavior in probabilistic\nsystems. However, it is difficult to develop a model checker for the full PFTL,\ndue to rich expressiveness. Accordingly, we develop a model-checking algorithm\nfor the CTL-like fragment of PFTL against finite-state Markov chains, and an\napproximate model-checking algorithm for the bounded Linear Temporal Logic\n(LTL) -like fragment of PFTL against countable-state Markov chains.\n", "versions": [{"version": "v1", "created": "Mon, 14 Nov 2011 06:35:46 GMT"}], "update_date": "2011-11-15", "authors_parsed": [["Tomita", "Takashi", "", "Tokyo Institute of Technology"], ["Hagihara", "Shigeki", "", "Tokyo Institute of Technology"], ["Yonezaki", "Naoki", "", "Tokyo Institute of\n  Technology"]]}, {"id": "1111.3620", "submitter": "EPTCS", "authors": "Samson Abramsky (Department of Computer Science, University of\n  Oxford), Shane Mansfield (Department of Computer Science, University of\n  Oxford), Rui Soares Barbosa (Department of Computer Science, University of\n  Oxford)", "title": "The Cohomology of Non-Locality and Contextuality", "comments": "In Proceedings QPL 2011, arXiv:1210.0298", "journal-ref": "EPTCS 95, 2012, pp. 1-14", "doi": "10.4204/EPTCS.95.1", "report-no": null, "categories": "quant-ph cs.LO math.CT", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In a previous paper with Adam Brandenburger, we used sheaf theory to analyze\nthe structure of non-locality and contextuality. Moreover, on the basis of this\nformulation, we showed that the phenomena of non-locality and contextuality can\nbe characterized precisely in terms of obstructions to the existence of global\nsections.\n  Our aim in the present work is to build on these results, and to use the\npowerful tools of sheaf cohomology to study the structure of non-locality and\ncontextuality. We use the Cech cohomology on an abelian presheaf derived from\nthe support of a probabilistic model, viewed as a compatible family of\ndistributions, in order to define a cohomological obstruction for the family as\na certain cohomology class. This class vanishes if the family has a global\nsection. Thus the non-vanishing of the obstruction provides a sufficient (but\nnot necessary) condition for the model to be contextual.\n  We show that for a number of salient examples, including PR boxes, GHZ\nstates, the Peres-Mermin magic square, and the 18-vector configuration due to\nCabello et al. giving a proof of the Kochen-Specker theorem in four dimensions,\nthe obstruction does not vanish, thus yielding cohomological witnesses for\ncontextuality.\n", "versions": [{"version": "v1", "created": "Tue, 15 Nov 2011 19:52:23 GMT"}, {"version": "v2", "created": "Tue, 2 Oct 2012 00:33:41 GMT"}], "update_date": "2012-10-03", "authors_parsed": [["Abramsky", "Samson", "", "Department of Computer Science, University of\n  Oxford"], ["Mansfield", "Shane", "", "Department of Computer Science, University of\n  Oxford"], ["Barbosa", "Rui Soares", "", "Department of Computer Science, University of\n  Oxford"]]}, {"id": "1111.4385", "submitter": "EPTCS", "authors": "David Spieler (Saarland University), Ernst Moritz Hahn (State Key\n  Laboratory of Computer Science), Lijun Zhang (State Key Laboratory of\n  Computer Science)", "title": "Model Checking CSL for Markov Population Models", "comments": "In Proceedings QAPL 2014, arXiv:1406.1567", "journal-ref": "EPTCS 154, 2014, pp. 93-107", "doi": "10.4204/EPTCS.154.7", "report-no": null, "categories": "cs.NA cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Markov population models (MPMs) are a widely used modelling formalism in the\narea of computational biology and related areas. The semantics of a MPM is an\ninfinite-state continuous-time Markov chain. In this paper, we use the\nestablished continuous stochastic logic (CSL) to express properties of Markov\npopulation models. This allows us to express important measures of biological\nsystems, such as probabilistic reachability, survivability, oscillations,\nswitching times between attractor regions, and various others. Because of the\ninfinite state space, available analysis techniques only apply to a very\nrestricted subset of CSL properties. We present a full algorithm for model\nchecking CSL for MPMs, and provide experimental evidence showing that our\nmethod is effective.\n", "versions": [{"version": "v1", "created": "Fri, 18 Nov 2011 15:05:13 GMT"}, {"version": "v2", "created": "Mon, 9 Jun 2014 03:48:27 GMT"}], "update_date": "2014-06-10", "authors_parsed": [["Spieler", "David", "", "Saarland University"], ["Hahn", "Ernst Moritz", "", "State Key\n  Laboratory of Computer Science"], ["Zhang", "Lijun", "", "State Key Laboratory of\n  Computer Science"]]}, {"id": "1111.4611", "submitter": "Murdoch Gabbay", "authors": "Gilles Dowek and Murdoch Gabbay", "title": "From nominal sets binding to functions and lambda-abstraction:\n  connecting the logic of permutation models with the logic of functions", "comments": null, "journal-ref": null, "doi": "10.1016/j.tcs.2012.06.007", "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Permissive-Nominal Logic (PNL) extends first-order predicate logic with\nterm-formers that can bind names in their arguments. It takes a semantics in\n(permissive-)nominal sets. In PNL, the forall-quantifier or lambda-binder are\njust term-formers satisfying axioms, and their denotation is functions on\nnominal atoms-abstraction.\n  Then we have higher-order logic (HOL) and its models in ordinary (i.e.\nZermelo-Fraenkel) sets; the denotation of forall or lambda is functions on full\nor partial function spaces.\n  This raises the following question: how are these two models of binding\nconnected? What translation is possible between PNL and HOL, and between\nnominal sets and functions?\n  We exhibit a translation of PNL into HOL, and from models of PNL to certain\nmodels of HOL. It is natural, but also partial: we translate a restricted\nsubsystem of full PNL to HOL. The extra part which does not translate is the\nsymmetry properties of nominal sets with respect to permutations. To use a\nlittle nominal jargon: we can translate names and binding, but not their\nnominal equivariance properties. This seems reasonable since HOL---and ordinary\nsets---are not equivariant.\n  Thus viewed through this translation, PNL and HOL and their models do\ndifferent things, but they enjoy non-trivial and rich subsystems which are\nisomorphic.\n", "versions": [{"version": "v1", "created": "Sun, 20 Nov 2011 06:12:35 GMT"}], "update_date": "2013-05-28", "authors_parsed": [["Dowek", "Gilles", ""], ["Gabbay", "Murdoch", ""]]}, {"id": "1111.5223", "submitter": "Eric Goubault", "authors": "Assal\\'e Adj\\'e (LIX, Ecole Polytechnique, and CEA LIST), St\\'ephane\n  Gaubert (INRIA Saclay, and Ecole Polytechnique), Eric Goubault (CEA LIST)", "title": "Coupling policy iteration with semi-definite relaxation to compute\n  accurate numerical invariants in static analysis", "comments": "32 pages, 9 figures, preliminary version appeared in ESOP (European\n  Symposium On Programming) 2010; LMCS 8 (1:1) 2012", "journal-ref": "Logical Methods in Computer Science, Volume 8, Issue 1 (January\n  19, 2012) lmcs:687", "doi": "10.2168/LMCS-8(1:1)2012", "report-no": null, "categories": "cs.LO math.OC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We introduce a new domain for finding precise numerical invariants of\nprograms by abstract interpretation. This domain, which consists of level sets\nof non-linear functions, generalizes the domain of linear \"templates\"\nintroduced by Manna, Sankaranarayanan, and Sipma. In the case of quadratic\ntemplates, we use Shor's semi-definite relaxation to derive computable yet\nprecise abstractions of semantic functionals, and we show that the abstract\nfixpoint equation can be solved accurately by coupling policy iteration and\nsemi-definite programming. We demonstrate the interest of our approach on a\nseries of examples (filters, integration schemes) including a degenerate one\n(symplectic scheme).\n", "versions": [{"version": "v1", "created": "Tue, 22 Nov 2011 15:33:41 GMT"}, {"version": "v2", "created": "Wed, 18 Jan 2012 11:37:37 GMT"}], "update_date": "2019-03-14", "authors_parsed": [["Adj\u00e9", "Assal\u00e9", "", "LIX, Ecole Polytechnique, and CEA LIST"], ["Gaubert", "St\u00e9phane", "", "INRIA Saclay, and Ecole Polytechnique"], ["Goubault", "Eric", "", "CEA LIST"]]}, {"id": "1111.5652", "submitter": "Cesare Tinelli", "authors": "Alexander Fuchs (The University of Iowa), Amit Goel (Intel\n  Corporation), Jim Grundy (Intel Corporation), Sava Krsti\\'c (Intel\n  Corporation), Cesare Tinelli (The University of Iowa)", "title": "Ground interpolation for the theory of equality", "comments": null, "journal-ref": "Logical Methods in Computer Science, Volume 8, Issue 1 (February\n  16, 2012) lmcs:709", "doi": "10.2168/LMCS-8(1:6)2012", "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Theory interpolation has found several successful applications in model\nchecking. We present a novel method for computing interpolants for ground\nformulas in the theory of equality. The method produces interpolants from\ncolored congruence graphs representing derivations in that theory. These graphs\ncan be produced by conventional congruence closure algorithms in a\nstraightforward manner. By working with graphs, rather than at the level of\nindividual proof steps, we are able to derive interpolants that are pleasingly\nsimple (conjunctions of Horn clauses) and smaller than those generated by other\ntools. Our interpolation method can be seen as a theory-specific implementation\nof a cooperative interpolation game between two provers. We present a generic\nversion of the interpolation game, parametrized by the theory T, and define a\ngeneral method to extract runs of the game from proofs in T and then generate\ninterpolants from these runs.\n", "versions": [{"version": "v1", "created": "Wed, 23 Nov 2011 23:57:19 GMT"}, {"version": "v2", "created": "Wed, 15 Feb 2012 10:45:00 GMT"}], "update_date": "2015-07-01", "authors_parsed": [["Fuchs", "Alexander", "", "The University of Iowa"], ["Goel", "Amit", "", "Intel\n  Corporation"], ["Grundy", "Jim", "", "Intel Corporation"], ["Krsti\u0107", "Sava", "", "Intel\n  Corporation"], ["Tinelli", "Cesare", "", "The University of Iowa"]]}, {"id": "1111.5767", "submitter": "Charles Morisset", "authors": "Jason Crampton, Charles Morisset", "title": "PTaCL: A Language for Attribute-Based Access Control in Open Systems", "comments": "26 pages, submitted to Principles of Security and Trust (POST)", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.CR cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Many languages and algebras have been proposed in recent years for the\nspecification of authorization policies. For some proposals, such as XACML, the\nmain motivation is to address real-world requirements, typically by providing a\ncomplex policy language with somewhat informal evaluation methods; others try\nto provide a greater degree of formality (particularly with respect to policy\nevaluation) but support far fewer features. In short, there are very few\nproposals that combine a rich set of language features with a well-defined\nsemantics, and even fewer that do this for authorization policies for\nattribute-based access control in open environments. In this paper, we\ndecompose the problem of policy specification into two distinct sub-languages:\nthe policy target language (PTL) for target specification, which determines\nwhen a policy should be evaluated; and the policy composition language (PCL)\nfor building more complex policies from existing ones. We define syntax and\nsemantics for two such languages and demonstrate that they can be both simple\nand expressive. PTaCL, the language obtained by combining the features of these\ntwo sub-languages, supports the specification of a wide range of policies.\nHowever, the power of PTaCL means that it is possible to define policies that\ncould produce unexpected results. We provide an analysis of how PTL should be\nrestricted and how policies written in PCL should be evaluated to minimize the\nlikelihood of undesirable results.\n", "versions": [{"version": "v1", "created": "Thu, 24 Nov 2011 14:01:47 GMT"}], "update_date": "2011-11-28", "authors_parsed": [["Crampton", "Jason", ""], ["Morisset", "Charles", ""]]}, {"id": "1111.5885", "submitter": "Jeremy Avigad", "authors": "Jeremy Avigad", "title": "Type inference in mathematics", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In the theory of programming languages, type inference is the process of\ninferring the type of an expression automatically, often making use of\ninformation from the context in which the expression appears. Such mechanisms\nturn out to be extremely useful in the practice of interactive theorem proving,\nwhereby users interact with a computational proof assistant to construct formal\naxiomatic derivations of mathematical theorems. This article explains some of\nthe mechanisms for type inference used by the Mathematical Components project,\nwhich is working towards a verification of the Feit-Thompson theorem.\n", "versions": [{"version": "v1", "created": "Fri, 25 Nov 2011 03:18:18 GMT"}, {"version": "v2", "created": "Wed, 9 May 2012 15:34:27 GMT"}], "update_date": "2012-05-10", "authors_parsed": [["Avigad", "Jeremy", ""]]}, {"id": "1111.5901", "submitter": "Thomas Schwentick", "authors": "Thomas Schwentick (Technische Universit\\\"at Dortmund), Nicole\n  Schweikardt (Goethe-Universit\\\"at Frankfurt am Main)", "title": "A note on the expressive power of linear orders", "comments": null, "journal-ref": "Logical Methods in Computer Science, Volume 7, Issue 4 (December\n  14, 2011) lmcs:1008", "doi": "10.2168/LMCS-7(4:7)2011", "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This article shows that there exist two particular linear orders such that\nfirst-order logic with these two linear orders has the same expressive power as\nfirst-order logic with the Bit-predicate FO(Bit). As a corollary we obtain that\nthere also exists a built-in permutation such that first-order logic with a\nlinear order and this permutation is as expressive as FO(Bit).\n", "versions": [{"version": "v1", "created": "Fri, 25 Nov 2011 06:53:56 GMT"}, {"version": "v2", "created": "Mon, 12 Dec 2011 21:26:21 GMT"}], "update_date": "2015-07-01", "authors_parsed": [["Schwentick", "Thomas", "", "Technische Universit\u00e4t Dortmund"], ["Schweikardt", "Nicole", "", "Goethe-Universit\u00e4t Frankfurt am Main"]]}, {"id": "1111.6883", "submitter": "Martin Moguillansky", "authors": "Mart\\'in O. Moguillansky, Nicol\\'as D. Rotstein, Marcelo A. Falappa,\n  Alejandro J. Garc\\'ia and Guillermo R. Simari", "title": "Dynamics of Knowledge in DeLP through Argument Theory Change", "comments": "61 pages To appear in Theory and Practice of Logic Programming (TPLP)", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.AI cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This article is devoted to the study of methods to change defeasible logic\nprograms (de.l.p.s) which are the knowledge bases used by the Defeasible Logic\nProgramming (DeLP) interpreter. DeLP is an argumentation formalism that allows\nto reason over potentially inconsistent de.l.p.s. Argument Theory Change (ATC)\nstudies certain aspects of belief revision in order to make them suitable for\nabstract argumentation systems. In this article, abstract arguments are\nrendered concrete by using the particular rule-based defeasible logic adopted\nby DeLP. The objective of our proposal is to define prioritized argument\nrevision operators \\`a la ATC for de.l.p.s, in such a way that the newly\ninserted argument ends up undefeated after the revision, thus warranting its\nconclusion. In order to ensure this warrant, the de.l.p. has to be changed in\nconcordance with a minimal change principle. To this end, we discuss different\nminimal change criteria that could be adopted. Finally, an algorithm is\npresented, implementing the argument revision operations.\n", "versions": [{"version": "v1", "created": "Tue, 29 Nov 2011 16:34:22 GMT"}], "update_date": "2011-11-30", "authors_parsed": [["Moguillansky", "Mart\u00edn O.", ""], ["Rotstein", "Nicol\u00e1s D.", ""], ["Falappa", "Marcelo A.", ""], ["Garc\u00eda", "Alejandro J.", ""], ["Simari", "Guillermo R.", ""]]}, {"id": "1111.6954", "submitter": "Kajetan M{\\l}ynarski", "authors": "Kajetan M{\\l}ynarski", "title": "Reflexivity and the diagonal argument in proofs of limitative theorems", "comments": "10 pages, 2 figures", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO cs.CC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This paper discusses limitations of reflexive and diagonal arguments as\nmethods of proof of limitative theorems (e.g. G\\\"odel's theorem on\nEntscheidungsproblem, Turing's halting problem or Chaitin-G\\\"odel's theorem).\nThe fact, that a formal system contains a sentence, which introduces\nreflexitivity, does not imply, that the same system does not contain a sentence\nor a proof procedure which solves this problem. Second basic method of proof -\ndiagonal argument (i.e. showing non-eqiunumerosity of a program set with the\nset of real numbers) does not exclude existance of a single program, capable of\ncomputing all real numbers. In this work, we suggest an algorithm generating\nreal numbers (arbitrary, infinite in the limit, binary strings), and we\nspeculate it's meaning for theoretical computer science.\n", "versions": [{"version": "v1", "created": "Tue, 29 Nov 2011 20:07:52 GMT"}], "update_date": "2015-03-19", "authors_parsed": [["M\u0142ynarski", "Kajetan", ""]]}, {"id": "1111.7148", "submitter": "Samson Abramsky", "authors": "Samson Abramsky", "title": "A Cook's Tour of the Finitary Non-Well-Founded Sets", "comments": "This paper is a write-up of a lecture originally given in 1988. It\n  appeared in the Festschrift for Dov Gabbay, We Will Show Them: Essays in\n  honour of Dov Gabbay, edited by Sergei Artemov, Howard Barringer, Artur\n  d'Avila Garcez, Luis C. Lamb and John Woods, College Publications, Vol. 1,\n  1-18, 2005", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO math.LO quant-ph", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We give multiple descriptions of a topological universe of finitary sets,\nwhich can be seen as a natural limit completion of the hereditarily finite\nsets. This universe is characterized as a metric completion of the hereditarily\nfinite sets; as a Stone space arising as the solution of a functorial\nfixed-point equation involving the Vietoris construction; as the Stone dual of\nthe free modal algebra; and as the subspace of maximal elements of a domain\nequation involving the Plotkin (or convex) powerdomain. These results\nillustrate the methods developed in the author's 'Domain theory in logical\nform', and related literature, and have been taken up in recent work on\ntopological coalgebras.\n  The set-theoretic universe of finitary sets also supports an interesting form\nof set theory. It contains non-well founded sets and a universal set; and is\nclosed under positive versions of the usual axioms of set theory.\n", "versions": [{"version": "v1", "created": "Wed, 30 Nov 2011 13:04:00 GMT"}, {"version": "v2", "created": "Thu, 1 Dec 2011 10:04:17 GMT"}], "update_date": "2011-12-02", "authors_parsed": [["Abramsky", "Samson", ""]]}, {"id": "1111.7154", "submitter": "Samson Abramsky", "authors": "Samson Abramsky", "title": "A Structural Approach to Reversible Computation", "comments": "30 pages, appeared in Theoretical Computer Science", "journal-ref": "Theoretical Computer Science, Volume 347, Issue 3, 1 December\n  2005, Pages 441-464", "doi": "10.1016/j.tcs.2005.07.002", "report-no": null, "categories": "cs.LO math.LO quant-ph", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Reversibility is a key issue in the interface between computation and\nphysics, and of growing importance as miniaturization progresses towards its\nphysical limits. Most foundational work on reversible computing to date has\nfocussed on simulations of low-level machine models. By contrast, we develop a\nmore structural approach. We show how high-level functional programs can be\nmapped compositionally (i.e. in a syntax-directed fashion) into a simple kind\nof automata which are immediately seen to be reversible. The size of the\nautomaton is linear in the size of the functional term. In mathematical terms,\nwe are building a concrete model of functional computation. This construction\nstems directly from ideas arising in Geometry of Interaction and Linear\nLogic---but can be understood without any knowledge of these topics. In fact,\nit serves as an excellent introduction to them. At the same time, an\ninteresting logical delineation between reversible and irreversible forms of\ncomputation emerges from our analysis.\n", "versions": [{"version": "v1", "created": "Wed, 30 Nov 2011 13:27:34 GMT"}], "update_date": "2011-12-01", "authors_parsed": [["Abramsky", "Samson", ""]]}, {"id": "1111.7159", "submitter": "Samson Abramsky", "authors": "Samson Abramsky", "title": "Sequentiality vs. Concurrency in Games and Logic", "comments": "35 pages, appeared in Mathematical Structures in Computer Science", "journal-ref": "Mathematical Structures in Computer Science, Volume 13 Issue 4,\n  pages 531-565, August 2003", "doi": "10.1017/S0960129503003980", "report-no": null, "categories": "cs.LO math.LO quant-ph", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Connections between the sequentiality/concurrency distinction and the\nsemantics of proofs are investigated, with particular reference to games and\nLinear Logic.\n", "versions": [{"version": "v1", "created": "Wed, 30 Nov 2011 13:44:46 GMT"}], "update_date": "2011-12-01", "authors_parsed": [["Abramsky", "Samson", ""]]}]