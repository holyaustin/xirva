[{"id": "0901.0043", "submitter": "Rob van Glabbeek", "authors": "Rob van Glabbeek, Ursula Goltz, Jens-Wolfhard Schicke", "title": "Symmetric and Asymmetric Asynchronous Interaction", "comments": "27 pages. An extended abstract of this paper was presented at the\n  first Interaction and Concurrency Experience (ICE'08) on Synchronous and\n  Asynchronous Interactions in Concurrent Distributed Systems, and will appear\n  in Electronic Notes in Theoretical Computer Science, Elsevier", "journal-ref": null, "doi": null, "report-no": "Technical Report 2008-03, Technical University of Braunschweig", "categories": "cs.LO cs.DC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We investigate classes of systems based on different interaction patterns\nwith the aim of achieving distributability. As our system model we use Petri\nnets. In Petri nets, an inherent concept of simultaneity is built in, since\nwhen a transition has more than one preplace, it can be crucial that tokens are\nremoved instantaneously. When modelling a system which is intended to be\nimplemented in a distributed way by a Petri net, this built-in concept of\nsynchronous interaction may be problematic. To investigate this we consider\nasynchronous implementations of nets, in which removing tokens from places can\nno longer be considered as instantaneous. We model this by inserting silent\n(unobservable) transitions between transitions and some of their preplaces. We\ninvestigate three such implementations, differing in the selection of preplaces\nof a transition from which the removal of a token is considered time consuming,\nand the possibility of collecting the tokens in a given order.\n  We investigate the effect of these different transformations of instantaneous\ninteraction into asynchronous interaction patterns by comparing the behaviours\nof nets before and after insertion of the silent transitions. We exhibit for\nwhich classes of Petri nets we obtain equivalent behaviour with respect to\nfailures equivalence.\n  It turns out that the resulting hierarchy of Petri net classes can be\ndescribed by semi-structural properties. For two of the classes we obtain\nprecise characterisations; for the remaining class we obtain lower and upper\nbounds.\n  We briefly comment on possible applications of our results to Message\nSequence Charts.\n", "versions": [{"version": "v1", "created": "Wed, 31 Dec 2008 03:43:25 GMT"}], "update_date": "2009-01-05", "authors_parsed": [["van Glabbeek", "Rob", ""], ["Goltz", "Ursula", ""], ["Schicke", "Jens-Wolfhard", ""]]}, {"id": "0901.0048", "submitter": "Rob van Glabbeek", "authors": "Rob van Glabbeek, Ursula Goltz and Jens-Wolfhard Schicke", "title": "On Synchronous and Asynchronous Interaction in Distributed Systems", "comments": "26 pages. An extended abstract of this paper appeared in Proceedings\n  33rd International Symposium on Mathematical Foundations of Computer Science\n  (MFCS 2008), Torun, Poland, August 2008 (E. Ochmanski & J. Tyszkiewicz,\n  eds.), LNCS 5162, Springer, 2008, pp. 16-35", "journal-ref": null, "doi": null, "report-no": "Technical Report 2008-04, Technical University of Braunschweig", "categories": "cs.LO cs.DC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  When considering distributed systems, it is a central issue how to deal with\ninteractions between components. In this paper, we investigate the paradigms of\nsynchronous and asynchronous interaction in the context of distributed systems.\nWe investigate to what extent or under which conditions synchronous interaction\nis a valid concept for specification and implementation of such systems. We\nchoose Petri nets as our system model and consider different notions of\ndistribution by associating locations to elements of nets. First, we\ninvestigate the concept of simultaneity which is inherent in the semantics of\nPetri nets when transitions have multiple input places. We assume that tokens\nmay only be taken instantaneously by transitions on the same location. We\nexhibit a hierarchy of `asynchronous' Petri net classes by different\nassumptions on possible distributions. Alternatively, we assume that the\nsynchronisations specified in a Petri net are crucial system properties. Hence\ntransitions and their preplaces may no longer placed on separate locations. We\nthen answer the question which systems may be implemented in a distributed way\nwithout restricting concurrency, assuming that locations are inherently\nsequential. It turns out that in both settings we find semi-structural\nproperties of Petri nets describing exactly the problematic situations for\ninteractions in distributed systems.\n", "versions": [{"version": "v1", "created": "Wed, 31 Dec 2008 04:13:35 GMT"}], "update_date": "2009-01-05", "authors_parsed": [["van Glabbeek", "Rob", ""], ["Goltz", "Ursula", ""], ["Schicke", "Jens-Wolfhard", ""]]}, {"id": "0901.0339", "submitter": "Alexandre Riazanov", "authors": "Alexandre Riazanov", "title": "Resolution-based Query Answering for Semantic Access to Relational\n  Databases: A Research Note", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO cs.DB", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We address the problem of semantic querying of relational databases (RDB)\nmodulo knowledge bases using very expressive knowledge representation\nformalisms, such as full first-order logic or its various fragments. We propose\nto use a first-order logic (FOL) reasoner for computing schematic answers to\ndeductive queries, with the subsequent instantiation of these schematic answers\nusing a conventional relational DBMS. In this research note, we outline the\nmain idea of this technique -- using abstractions of databases and constrained\nclauses for deriving schematic answers. The proposed method can be directly\nused with regular RDB, including legacy databases. Moreover, we propose it as a\npotential basis for an efficient Web-scale semantic search technology.\n", "versions": [{"version": "v1", "created": "Sat, 3 Jan 2009 20:59:55 GMT"}, {"version": "v2", "created": "Mon, 30 Mar 2009 18:39:18 GMT"}, {"version": "v3", "created": "Sun, 3 May 2009 14:56:14 GMT"}], "update_date": "2009-05-03", "authors_parsed": [["Riazanov", "Alexandre", ""]]}, {"id": "0901.0373", "submitter": "Olivier Finkel", "authors": "Olivier Finkel (ELM, Lip)", "title": "Highly Undecidable Problems For Infinite Computations", "comments": "to appear in RAIRO-Theoretical Informatics and Applications", "journal-ref": "RAIRO - Theoretical Informatics and Applications 43, 2 (2009)\n  339-364", "doi": null, "report-no": null, "categories": "cs.LO cs.CC math.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We show that many classical decision problems about 1-counter\nomega-languages, context free omega-languages, or infinitary rational\nrelations, are $\\Pi_2^1$-complete, hence located at the second level of the\nanalytical hierarchy, and \"highly undecidable\". In particular, the universality\nproblem, the inclusion problem, the equivalence problem, the determinizability\nproblem, the complementability problem, and the unambiguity problem are all\n$\\Pi_2^1$-complete for context-free omega-languages or for infinitary rational\nrelations. Topological and arithmetical properties of 1-counter\nomega-languages, context free omega-languages, or infinitary rational\nrelations, are also highly undecidable. These very surprising results provide\nthe first examples of highly undecidable problems about the behaviour of very\nsimple finite machines like 1-counter automata or 2-tape automata.\n", "versions": [{"version": "v1", "created": "Sun, 4 Jan 2009 13:13:32 GMT"}], "update_date": "2009-08-04", "authors_parsed": [["Finkel", "Olivier", "", "ELM, Lip"]]}, {"id": "0901.0733", "submitter": "\\'Eric Martin", "authors": "\\'Eric A. Martin", "title": "Contextual hypotheses and semantics of logic programs", "comments": "To appear in Theory and Practice of Logic Programming (TPLP) 46\n  pages, 3 figures", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO cs.AI", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Logic programming has developed as a rich field, built over a logical\nsubstratum whose main constituent is a nonclassical form of negation, sometimes\ncoexisting with classical negation. The field has seen the advent of a number\nof alternative semantics, with Kripke-Kleene semantics, the well-founded\nsemantics, the stable model semantics, and the answer-set semantics standing\nout as the most successful. We show that all aforementioned semantics are\nparticular cases of a generic semantics, in a framework where classical\nnegation is the unique form of negation and where the literals in the bodies of\nthe rules can be `marked' to indicate that they can be the targets of\nhypotheses. A particular semantics then amounts to choosing a particular\nmarking scheme and choosing a particular set of hypotheses. When a literal\nbelongs to the chosen set of hypotheses, all marked occurrences of that literal\nin the body of a rule are assumed to be true, whereas the occurrences of that\nliteral that have not been marked in the body of the rule are to be derived in\norder to contribute to the firing of the rule. Hence the notion of hypothetical\nreasoning that is presented in this framework is not based on making global\nassumptions, but more subtly on making local, contextual assumptions, taking\neffect as indicated by the chosen marking scheme on the basis of the chosen set\nof hypotheses. Our approach offers a unified view on the various semantics\nproposed in logic programming, classical in that only classical negation is\nused, and links the semantics of logic programs to mechanisms that endow\nrule-based systems with the power to harness hypothetical reasoning.\n", "versions": [{"version": "v1", "created": "Tue, 6 Jan 2009 22:50:22 GMT"}, {"version": "v2", "created": "Fri, 6 May 2011 05:27:50 GMT"}], "update_date": "2011-05-09", "authors_parsed": [["Martin", "\u00c9ric A.", ""]]}, {"id": "0901.0869", "submitter": "Irene Durand", "authors": "Ir\\`ene Durand (LaBRI), Aart Middeldorp", "title": "On the Complexity of Deciding Call-by-Need", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO cs.PL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In a recent paper we introduced a new framework for the study of call by need\ncomputations to normal form and root-stable form in term rewriting. Using\nelementary tree automata techniques and ground tree transducers we obtained\nsimple decidability proofs for classes of rewrite systems that are much larger\nthan earlier classes defined using the complicated sequentiality concept. In\nthis paper we show that we can do without ground tree transducers in order to\narrive at decidability proofs that are phrased in direct tree automata\nconstructions. This allows us to derive better complexity bounds.\n", "versions": [{"version": "v1", "created": "Wed, 7 Jan 2009 20:17:25 GMT"}, {"version": "v2", "created": "Mon, 28 Nov 2011 10:12:42 GMT"}], "update_date": "2011-11-29", "authors_parsed": [["Durand", "Ir\u00e8ne", "", "LaBRI"], ["Middeldorp", "Aart", ""]]}, {"id": "0901.2068", "submitter": "Ji\\v{r}\\'i Srba", "authors": "Ji\\v{r}\\'i Srba", "title": "Beyond Language Equivalence on Visibly Pushdown Automata", "comments": "Final version of paper, accepted by LMCS", "journal-ref": "Logical Methods in Computer Science, Volume 5, Issue 1 (January\n  26, 2009) lmcs:756", "doi": "10.2168/LMCS-5(1:2)2009", "report-no": null, "categories": "cs.CC cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We study (bi)simulation-like preorder/equivalence checking on the class of\nvisibly pushdown automata and its natural subclasses visibly BPA (Basic Process\nAlgebra) and visibly one-counter automata. We describe generic methods for\nproving complexity upper and lower bounds for a number of studied preorders and\nequivalences like simulation, completed simulation, ready simulation, 2-nested\nsimulation preorders/equivalences and bisimulation equivalence. Our main\nresults are that all the mentioned equivalences and preorders are\nEXPTIME-complete on visibly pushdown automata, PSPACE-complete on visibly\none-counter automata and P-complete on visibly BPA. Our PSPACE lower bound for\nvisibly one-counter automata improves also the previously known DP-hardness\nresults for ordinary one-counter automata and one-counter nets. Finally, we\nstudy regularity checking problems for visibly pushdown automata and show that\nthey can be decided in polynomial time.\n", "versions": [{"version": "v1", "created": "Wed, 14 Jan 2009 17:28:17 GMT"}, {"version": "v2", "created": "Mon, 26 Jan 2009 10:16:05 GMT"}], "update_date": "2015-07-01", "authors_parsed": [["Srba", "Ji\u0159\u00ed", ""]]}, {"id": "0901.2166", "submitter": "Alwen Tiu", "authors": "Alwen Tiu", "title": "A Trace Based Bisimulation for the Spi Calculus", "comments": "This is a revised and extended version of a conference paper\n  presented at APLAS 2007", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.CR cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  A notion of open bisimulation is formulated for the spi calculus, an\nextension of the pi-calculus with cryptographic primitives. In this\nformulation, open bisimulation is indexed by pairs of symbolic traces, which\nrepresent the history of interactions between the environment with the pairs of\nprocesses being checked for bisimilarity. The use of symbolic traces allows for\na symbolic treatment of bound input in bisimulation checking which avoids\nquantification over input values. Open bisimilarity is shown to be sound with\nrespect to testing equivalence, and futher, it is shown to be an equivalence\nrelation on processes and a congruence relation on finite processes. As far as\nwe know, this is the first formulation of open bisimulation for the spi\ncalculus for which the congruence result is proved.\n", "versions": [{"version": "v1", "created": "Thu, 15 Jan 2009 02:21:19 GMT"}], "update_date": "2009-01-16", "authors_parsed": [["Tiu", "Alwen", ""]]}, {"id": "0901.2434", "submitter": "Robert Frank Carslaw Walters", "authors": "L. de Francesco Albasini, N. Sabadini, R.F.C. Walters", "title": "The compositional construction of Markov processes", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO math.CT math.PR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We describe an algebra for composing automata in which the actions have\nprobabilities. We illustrate by showing how to calculate the probability of\nreaching deadlock in k steps in a model of the classical Dining Philosopher\nproblem, and show, using the Perron-Frobenius Theorem, that this probability\ntends to 1 as k tends to infinity.\n", "versions": [{"version": "v1", "created": "Fri, 16 Jan 2009 10:15:51 GMT"}], "update_date": "2009-01-19", "authors_parsed": [["Albasini", "L. de Francesco", ""], ["Sabadini", "N.", ""], ["Walters", "R. F. C.", ""]]}, {"id": "0901.2518", "submitter": "Koen Claessen", "authors": "Koen Claessen, Jan-Willem Roorda", "title": "A Faithful Semantics for Generalised Symbolic Trajectory Evaluation", "comments": null, "journal-ref": "Logical Methods in Computer Science, Volume 5, Issue 2 (April 8,\n  2009) lmcs:1028", "doi": "10.2168/LMCS-5(2:1)2009", "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Generalised Symbolic Trajectory Evaluation (GSTE) is a high-capacity formal\nverification technique for hardware. GSTE uses abstraction, meaning that\ndetails of the circuit behaviour are removed from the circuit model. A\nsemantics for GSTE can be used to predict and understand why certain circuit\nproperties can or cannot be proven by GSTE. Several semantics have been\ndescribed for GSTE. These semantics, however, are not faithful to the proving\npower of GSTE-algorithms, that is, the GSTE-algorithms are incomplete with\nrespect to the semantics.\n  The abstraction used in GSTE makes it hard to understand why a specific\nproperty can, or cannot, be proven by GSTE. The semantics mentioned above\ncannot help the user in doing so. The contribution of this paper is a faithful\nsemantics for GSTE. That is, we give a simple formal theory that deems a\nproperty to be true if-and-only-if the property can be proven by a GSTE-model\nchecker. We prove that the GSTE algorithm is sound and complete with respect to\nthis semantics.\n", "versions": [{"version": "v1", "created": "Fri, 16 Jan 2009 16:14:48 GMT"}, {"version": "v2", "created": "Wed, 8 Apr 2009 20:58:29 GMT"}], "update_date": "2015-07-01", "authors_parsed": [["Claessen", "Koen", ""], ["Roorda", "Jan-Willem", ""]]}, {"id": "0901.2850", "submitter": "Piero Bonatti", "authors": "Sabrina Baselice, Piero A. Bonatti, Giovanni Criscuolo", "title": "On finitely recursive programs", "comments": "26 pages, Preliminary version in Proc. of ICLP 2007, Best paper award", "journal-ref": "Theory and Practice of Logic Programming, 9(2), 213-238, 2009", "doi": null, "report-no": null, "categories": "cs.AI cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Disjunctive finitary programs are a class of logic programs admitting\nfunction symbols and hence infinite domains. They have very good computational\nproperties, for example ground queries are decidable while in the general case\nthe stable model semantics is highly undecidable. In this paper we prove that a\nlarger class of programs, called finitely recursive programs, preserves most of\nthe good properties of finitary programs under the stable model semantics,\nnamely: (i) finitely recursive programs enjoy a compactness property; (ii)\ninconsistency checking and skeptical reasoning are semidecidable; (iii)\nskeptical resolution is complete for normal finitely recursive programs.\nMoreover, we show how to check inconsistency and answer skeptical queries using\nfinite subsets of the ground program instantiation. We achieve this by\nextending the splitting sequence theorem by Lifschitz and Turner: We prove that\nif the input program P is finitely recursive, then the partial stable models\ndetermined by any smooth splitting omega-sequence converge to a stable model of\nP.\n", "versions": [{"version": "v1", "created": "Mon, 19 Jan 2009 13:23:09 GMT"}], "update_date": "2009-05-25", "authors_parsed": [["Baselice", "Sabrina", ""], ["Bonatti", "Piero A.", ""], ["Criscuolo", "Giovanni", ""]]}, {"id": "0901.3003", "submitter": "Kees Middelburg", "authors": "J. A. Bergstra, C. A. Middelburg", "title": "Timed tuplix calculus and the Wesseling and van den Bergh equation", "comments": "17 pages; phrasing improved, references updated; substantially\n  improved; remarks added", "journal-ref": "Scientific Annals of Computer Science 23(2):169--190, 2013", "doi": "10.7561/SACS.2013.2.169", "report-no": "PRG0901", "categories": "q-fin.GN cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We develop an algebraic framework for the description and analysis of\nfinancial behaviours, that is, behaviours that consist of transferring certain\namounts of money at planned times. To a large extent, analysis of financial\nproducts amounts to analysis of such behaviours. We formalize the cumulative\ninterest compliant conservation requirement for financial products proposed by\nWesseling and van den Bergh by an equation in the framework developed and\ndefine a notion of financial product behaviour using this formalization. We\nalso present some properties of financial product behaviours. The development\nof the framework has been influenced by previous work on the process algebra\nACP.\n", "versions": [{"version": "v1", "created": "Tue, 20 Jan 2009 08:54:15 GMT"}, {"version": "v2", "created": "Wed, 17 Jun 2009 07:11:05 GMT"}, {"version": "v3", "created": "Wed, 19 Jun 2013 18:22:31 GMT"}, {"version": "v4", "created": "Fri, 19 Jul 2013 09:32:27 GMT"}], "update_date": "2013-12-17", "authors_parsed": [["Bergstra", "J. A.", ""], ["Middelburg", "C. A.", ""]]}, {"id": "0901.3012", "submitter": "Kees Middelburg", "authors": "J. A. Bergstra, C. A. Middelburg", "title": "Meadow enriched ACP process algebras", "comments": "8 pages; correction in Table 3", "journal-ref": null, "doi": null, "report-no": "PRG0902", "categories": "math.RA cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We introduce the notion of an ACP process algebra. The models of the axiom\nsystem ACP are the origin of this notion. ACP process algebras have to do with\nprocesses in which no data are involved. We also introduce the notion of a\nmeadow enriched ACP process algebra, which is a simple generalization of the\nnotion of an ACP process algebra to processes in which data are involved. In\nmeadow enriched ACP process algebras, the mathematical structure for data is a\nmeadow.\n", "versions": [{"version": "v1", "created": "Tue, 20 Jan 2009 09:56:54 GMT"}, {"version": "v2", "created": "Wed, 4 Feb 2009 12:48:48 GMT"}], "update_date": "2009-02-04", "authors_parsed": [["Bergstra", "J. A.", ""], ["Middelburg", "C. A.", ""]]}, {"id": "0901.3574", "submitter": "Christoph Benzmueller", "authors": "Christoph Benzmueller", "title": "Automating Access Control Logics in Simple Type Theory with LEO-II", "comments": "ii + 20 pages", "journal-ref": "SEKI Report SR-2008-01 (ISSN 1437-4447), Saarland University, 2008", "doi": "10.1007/978-3-642-01244-0_34", "report-no": "SEKI Report SR-2008-01", "categories": "cs.LO cs.AI", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Garg and Abadi recently proved that prominent access control logics can be\ntranslated in a sound and complete way into modal logic S4. We have previously\noutlined how normal multimodal logics, including monomodal logics K and S4, can\nbe embedded in simple type theory (which is also known as higher-order logic)\nand we have demonstrated that the higher-order theorem prover LEO-II can\nautomate reasoning in and about them. In this paper we combine these results\nand describe a sound and complete embedding of different access control logics\nin simple type theory. Employing this framework we show that the off the shelf\ntheorem prover LEO-II can be applied to automate reasoning in prominent access\ncontrol logics.\n", "versions": [{"version": "v1", "created": "Fri, 23 Jan 2009 17:20:17 GMT"}, {"version": "v2", "created": "Wed, 4 Mar 2009 08:55:19 GMT"}], "update_date": "2015-05-13", "authors_parsed": [["Benzmueller", "Christoph", ""]]}, {"id": "0901.3585", "submitter": "Christoph Benzmueller", "authors": "Christoph Benzmueller, Volker Sorge", "title": "Resource Adaptive Agents in Interactive Theorem Proving", "comments": "13 pages", "journal-ref": "SEKI Report (ISSN 1437-4447), Saarland University, 1999", "doi": null, "report-no": "SR-99-02", "categories": "cs.LO cs.AI", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We introduce a resource adaptive agent mechanism which supports the user in\ninteractive theorem proving. The mechanism uses a two layered architecture of\nagent societies to suggest appropriate commands together with possible command\nargument instantiations. Experiments with this approach show that its\neffectiveness can be further improved by introducing a resource concept. In\nthis paper we provide an abstract view on the overall mechanism, motivate the\nnecessity of an appropriate resource concept and discuss its realization within\nthe agent architecture.\n", "versions": [{"version": "v1", "created": "Fri, 23 Jan 2009 05:29:09 GMT"}], "update_date": "2009-01-26", "authors_parsed": [["Benzmueller", "Christoph", ""], ["Sorge", "Volker", ""]]}, {"id": "0901.3608", "submitter": "Christoph Benzmueller", "authors": "Christoph Benzmueller", "title": "A remark on higher order RUE-resolution with EXTRUE", "comments": "3 pages", "journal-ref": "SEKI Report (ISSN 1437-4447), Saarland University, 1999", "doi": null, "report-no": "SR-02-05", "categories": "cs.AI cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We show that a prominent counterexample for the completeness of first order\nRUE-resolution does not apply to the higher order RUE-resolution approach\nEXTRUE.\n", "versions": [{"version": "v1", "created": "Fri, 23 Jan 2009 06:18:30 GMT"}], "update_date": "2009-01-26", "authors_parsed": [["Benzmueller", "Christoph", ""]]}, {"id": "0901.3828", "submitter": "Olivier Finkel", "authors": "Olivier Finkel (ELM)", "title": "On Recognizable Languages of Infinite Pictures", "comments": "An erratum is added at the end of the paper: The supremum of the set\n  of Borel ranks of B\\\"uchi recognizable languages of infinite pictures is not\n  the first non recursive ordinal $\\omega_1^{CK}$ but an ordinal $\\gamma^1_2$\n  which is strictly greater than the ordinal $\\omega_1^{CK}$. This follows from\n  a result proved by Kechris, Marker and Sami (JSL 1989)", "journal-ref": "International Journal of Foundations of Computer Science 15, 6\n  (2004) 823-840", "doi": null, "report-no": null, "categories": "cs.LO cs.CC math.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In a recent paper, Altenbernd, Thomas and W\\\"ohrle have considered acceptance\nof languages of infinite two-dimensional words (infinite pictures) by finite\ntiling systems, with the usual acceptance conditions, such as the B\\\"uchi and\nMuller ones, firstly used for infinite words. The authors asked for comparing\nthe tiling system acceptance with an acceptance of pictures row by row using an\nautomaton model over ordinal words of length $\\omega^2$. We give in this paper\na solution to this problem, showing that all languages of infinite pictures\nwhich are accepted row by row by B\\\"uchi or Choueka automata reading words of\nlength $\\omega^2$ are B\\\"uchi recognized by a finite tiling system, but the\nconverse is not true. We give also the answer to two other questions which were\nraised by Altenbernd, Thomas and W\\\"ohrle, showing that it is undecidable\nwhether a B\\\"uchi recognizable language of infinite pictures is E-recognizable\n(respectively, A-recognizable).\n", "versions": [{"version": "v1", "created": "Sat, 24 Jan 2009 12:09:35 GMT"}], "update_date": "2009-01-27", "authors_parsed": [["Finkel", "Olivier", "", "ELM"]]}, {"id": "0901.4080", "submitter": "Axel Legay", "authors": "Ahmed Bouajjani, Axel Legay, Pierre Wolper", "title": "A Framework to Handle Linear Temporal Properties in (\\omega-)Regular\n  Model Checking", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Since the topic emerged several years ago, work on regular model checking has\nmostly been devoted to the verification of state reachability and safety\nproperties. Though it was known that linear temporal properties could also be\nchecked within this framework, little has been done about working out the\ncorresponding details. This paper addresses this issue in the context of\nregular model checking based on the encoding of states by finite or infinite\nwords. It works out the exact constructions to be used in both cases, and\nproposes a partial solution to the problem resulting from the fact that\ninfinite computations of unbounded configurations might never contain the same\nconfiguration twice, thus making cycle detection problematic.\n", "versions": [{"version": "v1", "created": "Mon, 26 Jan 2009 19:49:43 GMT"}], "update_date": "2009-01-27", "authors_parsed": [["Bouajjani", "Ahmed", ""], ["Legay", "Axel", ""], ["Wolper", "Pierre", ""]]}, {"id": "0901.4430", "submitter": "Helle Hvid Hansen", "authors": "Helle Hvid Hansen and Clemens Kupke and Eric Pacuit", "title": "Neighbourhood Structures: Bisimilarity and Basic Model Theory", "comments": "uses LMCS.cls (included), 2 figures (both ps and pdf)", "journal-ref": "Logical Methods in Computer Science, Volume 5, Issue 2 (April 9,\n  2009) lmcs:1167", "doi": "10.2168/LMCS-5(2:2)2009", "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Neighbourhood structures are the standard semantic tool used to reason about\nnon-normal modal logics. The logic of all neighbourhood models is called\nclassical modal logic. In coalgebraic terms, a neighbourhood frame is a\ncoalgebra for the contravariant powerset functor composed with itself, denoted\nby 2^2. We use this coalgebraic modelling to derive notions of equivalence\nbetween neighbourhood structures. 2^2-bisimilarity and behavioural equivalence\nare well known coalgebraic concepts, and they are distinct, since 2^2 does not\npreserve weak pullbacks. We introduce a third, intermediate notion whose\nwitnessing relations we call precocongruences (based on pushouts). We give\nback-and-forth style characterisations for 2^2-bisimulations and\nprecocongruences, we show that on a single coalgebra, precocongruences capture\nbehavioural equivalence, and that between neighbourhood structures,\nprecocongruences are a better approximation of behavioural equivalence than\n2^2-bisimulations. We also introduce a notion of modal saturation for\nneighbourhood models, and investigate its relationship with definability and\nimage-finiteness. We prove a Hennessy-Milner theorem for modally saturated and\nfor image-finite neighbourhood models. Our main results are an analogue of Van\nBenthem's characterisation theorem and a model-theoretic proof of Craig\ninterpolation for classical modal logic.\n", "versions": [{"version": "v1", "created": "Wed, 28 Jan 2009 10:29:44 GMT"}, {"version": "v2", "created": "Fri, 27 Mar 2009 15:52:29 GMT"}, {"version": "v3", "created": "Thu, 9 Apr 2009 00:16:59 GMT"}, {"version": "v4", "created": "Mon, 20 Apr 2009 12:09:16 GMT"}], "update_date": "2015-07-01", "authors_parsed": [["Hansen", "Helle Hvid", ""], ["Kupke", "Clemens", ""], ["Pacuit", "Eric", ""]]}, {"id": "0901.4664", "submitter": "Inge Bethke", "authors": "Jan A. Bergstra and I. Bethke", "title": "Square root meadows", "comments": "9 pages", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Let Q_0 denote the rational numbers expanded to a meadow by totalizing\ninversion such that 0^{-1}=0. Q_0 can be expanded by a total sign function s\nthat extracts the sign of a rational number. In this paper we discuss an\nextension Q_0(s ,\\sqrt) of the signed rationals in which every number has a\nunique square root.\n", "versions": [{"version": "v1", "created": "Thu, 29 Jan 2009 12:42:46 GMT"}], "update_date": "2009-01-30", "authors_parsed": [["Bergstra", "Jan A.", ""], ["Bethke", "I.", ""]]}, {"id": "0901.4728", "submitter": "Krishnendu Chatterjee", "authors": "Dietmar Berwanger and Krishnendu Chatterjee and Martin De Wulf and\n  Laurent Doyen and Thomas A. Henzinger", "title": "Alpaga: A Tool for Solving Parity Games with Imperfect Information", "comments": "11 pages, a shorter version to appear in TACAS 2009", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.GT cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Alpaga is a solver for two-player parity games with imperfect information.\nGiven the description of a game, it determines whether the first player can\nensure to win and, if so, it constructs a winning strategy. The tool provides a\nsymbolic implementation of a recent algorithm based on antichains.\n", "versions": [{"version": "v1", "created": "Thu, 29 Jan 2009 17:34:36 GMT"}], "update_date": "2009-01-30", "authors_parsed": [["Berwanger", "Dietmar", ""], ["Chatterjee", "Krishnendu", ""], ["De Wulf", "Martin", ""], ["Doyen", "Laurent", ""], ["Henzinger", "Thomas A.", ""]]}, {"id": "0901.4754", "submitter": "Robert Frank Carslaw Walters", "authors": "L. de Francesco Albasini, N. Sabadini, R.F.C. Walters", "title": "An algebra of automata which includes both classical and quantum\n  entities", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO math.CT", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We describe an algebra for composing automata which includes both classical\nand quantum entities and their communications. We illustrate by describing in\ndetail a quantum protocol.\n", "versions": [{"version": "v1", "created": "Thu, 29 Jan 2009 19:28:13 GMT"}], "update_date": "2009-01-30", "authors_parsed": [["Albasini", "L. de Francesco", ""], ["Sabadini", "N.", ""], ["Walters", "R. F. C.", ""]]}, {"id": "0901.4934", "submitter": "Carl Hewitt", "authors": "Carl Hewitt", "title": "A historical perspective on developing foundations iInfo(TM) information\n  systems: iConsult(TM) and iEntertain(TM) apps using iDescribers(TM)\n  information integration for iOrgs(TM) information systems", "comments": "updated title and abstract", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DC cs.DB cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Technology now at hand can integrate all kinds of digital information for\nindividuals, groups, and organizations so their information usefully links\ntogether. iInfo(TM) information integration works by making connections\nincluding examples like the following:\n  - A statistical connection between \"being in a traffic jam\" and \"driving in\ndowntown Trenton between 5PM and 6PM on a weekday.\"\n  - A terminological connection between \"MSR\" and \"Microsoft Research.\"\n  - A causal connection between \"joining a group\" and \"being a member of the\ngroup.\"\n  - A syntactic connection between \"a pin dropped\" and \"a dropped pin.\"\n  - A biological connection between \"a dolphin\" and \"a mammal\".\n  - A demographic connection between \"undocumented residents of California\" and\n\"7% of the population of California.\"\n  - A geographical connection between \"Leeds\" and \"England.\"\n  - A temporal connection between \"turning on a computer\" and \"joining an\non-line discussion.\"\n  By making these connections, iInfo offers tremendous value for individuals,\nfamilies, groups, and organizations in making more effective use of information\ntechnology.\n  In practice, integrated information is invariably pervasively inconsistent.\nTherefore iInfo must be able to make connections even in the face of\ninconsistency. The business of iInfo is not to make difficult decisions like\ndeciding the ultimate truth or probability of propositions. Instead it provides\nmeans for processing information and carefully recording its provenance\nincluding arguments (including arguments about arguments) for and against\npropositions that is used by iConsult(TM) and iEntertain(TM) apps in iOrgs(TM)\nInformation Systems.\n  A historical perspective on the above questions is highly pertinent to the\ncurrent quest to develop foundations for privacy-friendly client-cloud\ncomputing.\n", "versions": [{"version": "v1", "created": "Fri, 30 Jan 2009 17:33:14 GMT"}, {"version": "v10", "created": "Tue, 17 Nov 2009 12:54:00 GMT"}, {"version": "v11", "created": "Tue, 24 Nov 2009 15:36:18 GMT"}, {"version": "v12", "created": "Tue, 29 Dec 2009 22:54:57 GMT"}, {"version": "v13", "created": "Thu, 7 Jan 2010 20:11:54 GMT"}, {"version": "v14", "created": "Tue, 12 Jan 2010 19:19:22 GMT"}, {"version": "v15", "created": "Thu, 21 Jan 2010 21:50:00 GMT"}, {"version": "v16", "created": "Thu, 8 Apr 2010 21:48:15 GMT"}, {"version": "v17", "created": "Mon, 19 Apr 2010 04:13:36 GMT"}, {"version": "v18", "created": "Tue, 20 Apr 2010 12:27:24 GMT"}, {"version": "v19", "created": "Mon, 26 Apr 2010 15:18:50 GMT"}, {"version": "v2", "created": "Tue, 24 Feb 2009 01:37:44 GMT"}, {"version": "v20", "created": "Mon, 4 Oct 2010 21:16:49 GMT"}, {"version": "v3", "created": "Tue, 14 Apr 2009 11:54:47 GMT"}, {"version": "v4", "created": "Mon, 1 Jun 2009 23:05:51 GMT"}, {"version": "v5", "created": "Mon, 20 Jul 2009 00:53:03 GMT"}, {"version": "v6", "created": "Sun, 2 Aug 2009 21:06:55 GMT"}, {"version": "v7", "created": "Tue, 29 Sep 2009 18:19:02 GMT"}, {"version": "v8", "created": "Fri, 2 Oct 2009 14:42:21 GMT"}, {"version": "v9", "created": "Thu, 29 Oct 2009 21:14:14 GMT"}], "update_date": "2010-10-06", "authors_parsed": [["Hewitt", "Carl", ""]]}]