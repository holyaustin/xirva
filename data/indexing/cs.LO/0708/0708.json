[{"id": "0708.0200", "submitter": "Morten Heine S{\\o}rensen", "authors": "Morten Heine S{\\o}rensen", "title": "A Note on Shortest Developments", "comments": null, "journal-ref": "Logical Methods in Computer Science, Volume 3, Issue 4 (November\n  5, 2007) lmcs:838", "doi": "10.2168/LMCS-3(4:2)2007", "report-no": null, "categories": "cs.LO", "license": null, "abstract": "  De Vrijer has presented a proof of the finite developments theorem which, in\naddition to showing that all developments are finite, gives an effective\nreduction strategy computing longest developments as well as a simple formula\ncomputing their length.\n  We show that by applying a rather simple and intuitive principle of duality\nto de Vrijer's approach one arrives at a proof that some developments are\nfinite which in addition yields an effective reduction strategy computing\nshortest developments as well as a simple formula computing their length. The\nduality fails for general beta-reduction.\n  Our results simplify previous work by Khasidashvili.\n", "versions": [{"version": "v1", "created": "Wed, 1 Aug 2007 17:22:48 GMT"}, {"version": "v2", "created": "Mon, 5 Nov 2007 09:48:05 GMT"}], "update_date": "2015-07-01", "authors_parsed": [["S\u00f8rensen", "Morten Heine", ""]]}, {"id": "0708.0713", "submitter": "Radu Grigore", "authors": "Radu Grigore and Micha{\\l} Moskal", "title": "Edit and verify", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO", "license": null, "abstract": "  Automated theorem provers are used in extended static checking, where they\nare the performance bottleneck. Extended static checkers are run typically\nafter incremental changes to the code. We propose to exploit this usage pattern\nto improve performance. We present two approaches of how to do so and a full\nsolution.\n", "versions": [{"version": "v1", "created": "Mon, 6 Aug 2007 07:47:34 GMT"}], "update_date": "2007-08-07", "authors_parsed": [["Grigore", "Radu", ""], ["Moskal", "Micha\u0142", ""]]}, {"id": "0708.1480", "submitter": "Jean-Louis Krivine", "authors": "Jean-Louis Krivine (PPS), Yves Legrandg\\'erard (PPS)", "title": "Valid formulas, games and network protocols", "comments": "12 pages", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO", "license": null, "abstract": "  We describe a remarkable relation between the notion of valid formula of\npredicate logic and the specification of network protocols. We give several\nexamples such as the acknowledgement of one packet or of a sequence of packets.\nWe show how to specify the composition of protocols.\n", "versions": [{"version": "v1", "created": "Fri, 10 Aug 2007 16:17:00 GMT"}, {"version": "v2", "created": "Wed, 14 Nov 2007 20:03:26 GMT"}], "update_date": "2007-11-14", "authors_parsed": [["Krivine", "Jean-Louis", "", "PPS"], ["Legrandg\u00e9rard", "Yves", "", "PPS"]]}, {"id": "0708.1529", "submitter": "Iddo Tzameret", "authors": "Ran Raz, Iddo Tzameret", "title": "Resolution over Linear Equations and Multilinear Proofs", "comments": "44 pages", "journal-ref": "Annals of Pure and Applied Logic , 155(3):194-224, 2008;", "doi": "10.1016/j.apal.2008.04.001", "report-no": null, "categories": "cs.CC cs.LO", "license": null, "abstract": "  We develop and study the complexity of propositional proof systems of varying\nstrength extending resolution by allowing it to operate with disjunctions of\nlinear equations instead of clauses. We demonstrate polynomial-size refutations\nfor hard tautologies like the pigeonhole principle, Tseitin graph tautologies\nand the clique-coloring tautologies in these proof systems. Using the\n(monotone) interpolation by a communication game technique we establish an\nexponential-size lower bound on refutations in a certain, considerably strong,\nfragment of resolution over linear equations, as well as a general polynomial\nupper bound on (non-monotone) interpolants in this fragment.\n  We then apply these results to extend and improve previous results on\nmultilinear proofs (over fields of characteristic 0), as studied in\n[RazTzameret06]. Specifically, we show the following:\n  1. Proofs operating with depth-3 multilinear formulas polynomially simulate a\ncertain, considerably strong, fragment of resolution over linear equations.\n  2. Proofs operating with depth-3 multilinear formulas admit polynomial-size\nrefutations of the pigeonhole principle and Tseitin graph tautologies. The\nformer improve over a previous result that established small multilinear proofs\nonly for the \\emph{functional} pigeonhole principle. The latter are different\nthan previous proofs, and apply to multilinear proofs of Tseitin mod p graph\ntautologies over any field of characteristic 0.\n  We conclude by connecting resolution over linear equations with extensions of\nthe cutting planes proof system.\n", "versions": [{"version": "v1", "created": "Fri, 10 Aug 2007 23:23:10 GMT"}], "update_date": "2010-04-19", "authors_parsed": [["Raz", "Ran", ""], ["Tzameret", "Iddo", ""]]}, {"id": "0708.1723", "submitter": "Volker Weber", "authors": "Volker Weber", "title": "Hybrid Branching-Time Logics", "comments": "An extended abstract of this paper was presented at the International\n  Workshop on Hybrid Logics (HyLo 2007)", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO cs.CC", "license": null, "abstract": "  Hybrid branching-time logics are introduced as extensions of CTL-like logics\nwith state variables and the downarrow-binder. Following recent work in the\nlinear framework, only logics with a single variable are considered. The\nexpressive power and the complexity of satisfiability of the resulting logics\nis investigated.\n  As main result, the satisfiability problem for the hybrid versions of several\nbranching-time logics is proved to be 2EXPTIME-complete. These branching-time\nlogics range from strict fragments of CTL to extensions of CTL that can talk\nabout the past and express fairness-properties. The complexity gap relative to\nCTL is explained by a corresponding succinctness result.\n  To prove the upper bound, the automata-theoretic approach to branching-time\nlogics is extended to hybrid logics, showing that non-emptiness of alternating\none-pebble Buchi tree automata is 2EXPTIME-complete.\n", "versions": [{"version": "v1", "created": "Mon, 13 Aug 2007 15:04:12 GMT"}], "update_date": "2007-08-14", "authors_parsed": [["Weber", "Volker", ""]]}, {"id": "0708.2230", "submitter": "Dale Miller", "authors": "Dale Miller (INRIA Futurs)", "title": "Collection analysis for Horn clause programs", "comments": null, "journal-ref": "Dans International ACM SIGPLAN Conference on Principles and\n  Practice of Declarative Programming (2006)", "doi": null, "report-no": null, "categories": "cs.LO", "license": null, "abstract": "  We consider approximating data structures with collections of the items that\nthey contain. For examples, lists, binary trees, tuples, etc, can be\napproximated by sets or multisets of the items within them. Such approximations\ncan be used to provide partial correctness properties of logic programs. For\nexample, one might wish to specify than whenever the atom $sort(t,s)$ is proved\nthen the two lists $t$ and $s$ contain the same multiset of items (that is, $s$\nis a permutation of $t$). If sorting removes duplicates, then one would like to\ninfer that the sets of items underlying $t$ and $s$ are the same. Such results\ncould be useful to have if they can be determined statically and automatically.\nWe present a scheme by which such collection analysis can be structured and\nautomated. Central to this scheme is the use of linear logic as a omputational\nlogic underlying the logic of Horn clauses.\n", "versions": [{"version": "v1", "created": "Thu, 16 Aug 2007 15:45:06 GMT"}], "update_date": "2007-08-17", "authors_parsed": [["Miller", "Dale", "", "INRIA Futurs"]]}, {"id": "0708.2252", "submitter": "Dale Miller", "authors": "Chuck Liang, Dale Miller (INRIA Futurs)", "title": "Focusing and Polarization in Intuitionistic Logic", "comments": null, "journal-ref": "Dans Computer Science Logic (2007)", "doi": null, "report-no": null, "categories": "cs.LO", "license": null, "abstract": "  A focused proof system provides a normal form to cut-free proofs that\nstructures the application of invertible and non-invertible inference rules.\nThe focused proof system of Andreoli for linear logic has been applied to both\nthe proof search and the proof normalization approaches to computation. Various\nproof systems in literature exhibit characteristics of focusing to one degree\nor another. We present a new, focused proof system for intuitionistic logic,\ncalled LJF, and show how other proof systems can be mapped into the new system\nby inserting logical connectives that prematurely stop focusing. We also use\nLJF to design a focused proof system for classical logic. Our approach to the\ndesign and analysis of these systems is based on the completeness of focusing\nin linear logic and on the notion of polarity that appears in Girard's LC and\nLU proof systems.\n", "versions": [{"version": "v1", "created": "Thu, 16 Aug 2007 17:36:28 GMT"}], "update_date": "2007-08-17", "authors_parsed": [["Liang", "Chuck", "", "INRIA Futurs"], ["Miller", "Dale", "", "INRIA Futurs"]]}, {"id": "0708.2336", "submitter": "Dominik Scheder", "authors": "Dominik Scheder", "title": "Unsatisfiable Linear k-CNFs Exist, for every k", "comments": "11 pages", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DM cs.CC cs.LO", "license": null, "abstract": "  We call a CNF formula linear if any two clauses have at most one variable in\ncommon. Let Linear k-SAT be the problem of deciding whether a given linear\nk-CNF formula is satisfiable. Here, a k-CNF formula is a CNF formula in which\nevery clause has size exactly k. It was known that for k >= 3, Linear k-SAT is\nNP-complete if and only if an unsatisfiable linear k-CNF formula exists, and\nthat they do exist for k >= 4. We prove that unsatisfiable linear k-CNF\nformulas exist for every k. Let f(k) be the minimum number of clauses in an\nunsatisfiable linear k-CNF formula. We show that f(k) is Omega(k2^k) and\nO(4^k*k^4), i.e., minimum size unsatisfiable linear k-CNF formulas are\nsignificantly larger than minimum size unsatisfiable k-CNF formulas. Finally,\nwe prove that, surprisingly, linear k-CNF formulas do not allow for a larger\nfraction of clauses to be satisfied than general k-CNF formulas.\n", "versions": [{"version": "v1", "created": "Fri, 17 Aug 2007 09:44:21 GMT"}], "update_date": "2007-08-20", "authors_parsed": [["Scheder", "Dominik", ""]]}, {"id": "0708.3477", "submitter": "Alexander Rabinovich", "authors": "Alexander Rabinovich", "title": "The Church Synthesis Problem with Parameters", "comments": null, "journal-ref": "Logical Methods in Computer Science, Volume 3, Issue 4 (November\n  14, 2007) lmcs:1233", "doi": "10.2168/LMCS-3(4:9)2007", "report-no": null, "categories": "cs.LO", "license": null, "abstract": "  For a two-variable formula &psi;(X,Y) of Monadic Logic of Order (MLO) the\nChurch Synthesis Problem concerns the existence and construction of an operator\nY=F(X) such that &psi;(X,F(X)) is universally valid over Nat.\n  B\\\"{u}chi and Landweber proved that the Church synthesis problem is\ndecidable; moreover, they showed that if there is an operator F that solves the\nChurch Synthesis Problem, then it can also be solved by an operator defined by\na finite state automaton or equivalently by an MLO formula. We investigate a\nparameterized version of the Church synthesis problem. In this version &psi;\nmight contain as a parameter a unary predicate P. We show that the Church\nsynthesis problem for P is computable if and only if the monadic theory of\n<Nat,<,P> is decidable. We prove that the B\\\"{u}chi-Landweber theorem can be\nextended only to ultimately periodic parameters. However, the MLO-definability\npart of the B\\\"{u}chi-Landweber theorem holds for the parameterized version of\nthe Church synthesis problem.\n", "versions": [{"version": "v1", "created": "Sun, 26 Aug 2007 12:08:30 GMT"}, {"version": "v2", "created": "Wed, 14 Nov 2007 12:01:15 GMT"}], "update_date": "2015-07-01", "authors_parsed": [["Rabinovich", "Alexander", ""]]}, {"id": "0708.3564", "submitter": "Eugen Zalinescu", "authors": "Hubert Comon-Lundh and V\\'eronique Cortier and Eugen Zalinescu", "title": "Deciding security properties for cryptographic protocols. Application to\n  key cycles", "comments": "revised version (corrected small mistakes, improved presentation); to\n  be published in ACM Transactions on Computational Logic; 39 pages", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO cs.CR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  There is a large amount of work dedicated to the formal verification of\nsecurity protocols. In this paper, we revisit and extend the NP-complete\ndecision procedure for a bounded number of sessions. We use a, now standard,\ndeducibility constraints formalism for modeling security protocols. Our first\ncontribution is to give a simple set of constraint simplification rules, that\nallows to reduce any deducibility constraint system to a set of solved forms,\nrepresenting all solutions (within the bound on sessions).\n  As a consequence, we prove that deciding the existence of key cycles is\nNP-complete for a bounded number of sessions. The problem of key-cycles has\nbeen put forward by recent works relating computational and symbolic models.\nThe so-called soundness of the symbolic model requires indeed that no key cycle\n(e.g., enc(k,k)) ever occurs in the execution of the protocol. Otherwise,\nstronger security assumptions (such as KDM-security) are required.\n  We show that our decision procedure can also be applied to prove again the\ndecidability of authentication-like properties and the decidability of a\nsignificant fragment of protocols with timestamps.\n", "versions": [{"version": "v1", "created": "Mon, 27 Aug 2007 11:20:33 GMT"}, {"version": "v2", "created": "Fri, 20 Mar 2009 16:43:04 GMT"}], "update_date": "2009-03-20", "authors_parsed": [["Comon-Lundh", "Hubert", ""], ["Cortier", "V\u00e9ronique", ""], ["Zalinescu", "Eugen", ""]]}, {"id": "0708.3582", "submitter": "Frederic Blanqui", "authors": "Fr\\'ed\\'eric Blanqui (INRIA Lorraine - LORIA), Jean-Pierre Jouannaud\n  (LIX), Albert Rubio", "title": "HORPO with Computability Closure : A Reconstruction", "comments": null, "journal-ref": "Dans 14th International Conference on Logic for Programming\n  Artificial Intelligence and Reasoning LNCS (2007)", "doi": null, "report-no": null, "categories": "cs.LO", "license": null, "abstract": "  This paper provides a new, decidable definition of the higher- order\nrecursive path ordering in which type comparisons are made only when needed,\ntherefore eliminating the need for the computability clo- sure, and bound\nvariables are handled explicitly, making it possible to handle recursors for\narbitrary strictly positive inductive types.\n", "versions": [{"version": "v1", "created": "Mon, 27 Aug 2007 12:23:16 GMT"}], "update_date": "2007-08-28", "authors_parsed": [["Blanqui", "Fr\u00e9d\u00e9ric", "", "INRIA Lorraine - LORIA"], ["Jouannaud", "Jean-Pierre", "", "LIX"], ["Rubio", "Albert", ""]]}, {"id": "0708.3721", "submitter": "Marc Daumas", "authors": "Marc Daumas (LIRMM, Eliaus), David Lester (UNIVERSITY of Manchester),\n  C\\'esar Mu\\~noz (NIA)", "title": "Verified Real Number Calculations: A Library for Interval Arithmetic", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.MS cs.LO", "license": null, "abstract": "  Real number calculations on elementary functions are remarkably difficult to\nhandle in mechanical proofs. In this paper, we show how these calculations can\nbe performed within a theorem prover or proof assistant in a convenient and\nhighly automated as well as interactive way. First, we formally establish upper\nand lower bounds for elementary functions. Then, based on these bounds, we\ndevelop a rational interval arithmetic where real number calculations take\nplace in an algebraic setting. In order to reduce the dependency effect of\ninterval arithmetic, we integrate two techniques: interval splitting and taylor\nseries expansions. This pragmatic approach has been developed, and formally\nverified, in a theorem prover. The formal development also includes a set of\ncustomizable strategies to automate proofs involving explicit calculations over\nreal numbers. Our ultimate goal is to provide guaranteed proofs of numerical\nproperties with minimal human theorem-prover interaction.\n", "versions": [{"version": "v1", "created": "Tue, 28 Aug 2007 07:14:29 GMT"}], "update_date": "2007-08-29", "authors_parsed": [["Daumas", "Marc", "", "LIRMM, Eliaus"], ["Lester", "David", "", "UNIVERSITY of Manchester"], ["Mu\u00f1oz", "C\u00e9sar", "", "NIA"]]}, {"id": "0708.4170", "submitter": "Paolo Liberatore", "authors": "Paolo Liberatore", "title": "Raising a Hardness Result", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.AI cs.CC cs.LO", "license": null, "abstract": "  This article presents a technique for proving problems hard for classes of\nthe polynomial hierarchy or for PSPACE. The rationale of this technique is that\nsome problem restrictions are able to simulate existential or universal\nquantifiers. If this is the case, reductions from Quantified Boolean Formulae\n(QBF) to these restrictions can be transformed into reductions from QBFs having\none more quantifier in the front. This means that a proof of hardness of a\nproblem at level n in the polynomial hierarchy can be split into n separate\nproofs, which may be simpler than a proof directly showing a reduction from a\nclass of QBFs to the considered problem.\n", "versions": [{"version": "v1", "created": "Thu, 30 Aug 2007 14:42:50 GMT"}], "update_date": "2007-08-31", "authors_parsed": [["Liberatore", "Paolo", ""]]}, {"id": "0708.4176", "submitter": "Olivier Finkel", "authors": "Olivier Finkel (LIP, ELM), Dominique Lecomte (UMR 7586)", "title": "Classical and Effective Descriptive Complexities of omega-Powers", "comments": "Final Version, published in A.P.A.L. This paper is an extended\n  version of a conference paper which appeared in the Proceedings of the 16th\n  EACSL Annual Conference on Computer Science and Logic, CSL 07. Part of the\n  results in this paper have been also presented at the International\n  Conference Computability in Europe, CiE 07, Siena, Italy, June 2007", "journal-ref": "Annals of Pure and Applied Logic 2, 160 (2009) 163-191", "doi": null, "report-no": "LIP Research Report RR 2007-38", "categories": "math.LO cs.CC cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We prove that, for each non null countable ordinal alpha, there exist some\nSigma^0_alpha-complete omega-powers, and some Pi^0_alpha-complete omega-powers,\nextending previous works on the topological complexity of omega-powers. We\nprove effective versions of these results. In particular, for each non null\nrecursive ordinal alpha, there exists a recursive finitary language A such that\nA^omega is Sigma^0_alpha-complete (respectively, Pi^0_alpha-complete). To do\nthis, we prove effective versions of a result by Kuratowski, describing a Borel\nset as the range of a closed subset of the Baire space by a continuous\nbijection. This leads us to prove closure properties for the classes\nEffective-Pi^0_alpha and Effective-Sigma^0_alpha of the hyperarithmetical\nhierarchy in arbitrary recursively presented Polish spaces. We apply our\nexistence results to get better computations of the topological complexity of\nsome sets of dictionaries considered by the second author in [Omega-Powers and\nDescriptive Set Theory, Journal of Symbolic Logic, Volume 70 (4), 2005, p.\n1210-1232].\n", "versions": [{"version": "v1", "created": "Thu, 30 Aug 2007 14:56:24 GMT"}, {"version": "v2", "created": "Tue, 4 Aug 2009 17:02:41 GMT"}], "update_date": "2009-08-04", "authors_parsed": [["Finkel", "Olivier", "", "LIP, ELM"], ["Lecomte", "Dominique", "", "UMR 7586"]]}]