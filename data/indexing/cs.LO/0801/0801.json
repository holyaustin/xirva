[{"id": "0801.0232", "submitter": "Patrizio Frosini", "authors": "Patrizio Frosini", "title": "Does intelligence imply contradiction?", "comments": "39 pages, 6 figures; added Remark 9 (page 19) and Remark 12 (page\n  25); changed some comments after Definition 13 and in Section 5; some minor\n  changes", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.AI cs.LO", "license": null, "abstract": "  Contradiction is often seen as a defect of intelligent systems and a\ndangerous limitation on efficiency. In this paper we raise the question of\nwhether, on the contrary, it could be considered a key tool in increasing\nintelligence in biological structures. A possible way of answering this\nquestion in a mathematical context is shown, formulating a proposition that\nsuggests a link between intelligence and contradiction.\n  A concrete approach is presented in the well-defined setting of cellular\nautomata. Here we define the models of ``observer'', ``entity'',\n``environment'', ``intelligence'' and ``contradiction''. These definitions,\nwhich roughly correspond to the common meaning of these words, allow us to\ndeduce a simple but strong result about these concepts in an unbiased,\nmathematical manner. Evidence for a real-world counterpart to the demonstrated\nformal link between intelligence and contradiction is provided by three\ncomputational experiments.\n", "versions": [{"version": "v1", "created": "Mon, 31 Dec 2007 19:07:22 GMT"}, {"version": "v2", "created": "Tue, 18 Mar 2008 11:16:24 GMT"}], "update_date": "2008-03-18", "authors_parsed": [["Frosini", "Patrizio", ""]]}, {"id": "0801.0349", "submitter": "Marie Ferbus-Zanda", "authors": "Marie Ferbus-Zanda (LIAFA), Serge Grigorieff (LIAFA)", "title": "Church, Cardinal and Ordinal Representations of Integers and Kolmogorov\n  complexity", "comments": "16 pages", "journal-ref": "Dans Denis Richard's 60th Biirthday Conference - Denis Richard's\n  60th Biirthday Conference, France (2002)", "doi": null, "report-no": null, "categories": "math.LO cs.CC cs.LO", "license": null, "abstract": "  We consider classical representations of integers: Church's function\niterators, cardinal equivalence classes of sets, ordinal equivalence classes of\ntotally ordered sets. Since programs do not work on abstract entities and\nrequire formal representations of objects, we effectivize these abstract\nnotions in order to allow them to be computed by programs. To any such\neffectivized representation is then associated a notion of Kolmogorov\ncomplexity. We prove that these Kolmogorov complexities form a strict hierarchy\nwhich coincides with that obtained by relativization to jump oracles and/or\nallowance of infinite computations.\n", "versions": [{"version": "v1", "created": "Wed, 2 Jan 2008 08:35:27 GMT"}], "update_date": "2008-01-03", "authors_parsed": [["Ferbus-Zanda", "Marie", "", "LIAFA"], ["Grigorieff", "Serge", "", "LIAFA"]]}, {"id": "0801.0351", "submitter": "Marie Ferbus-Zanda", "authors": "Marie Ferbus-Zanda (LIAFA), Serge Grigorieff (LIAFA)", "title": "Kolmogorov complexities Kmax, Kmin on computable partially ordered sets", "comments": "35 pages", "journal-ref": "Theoretical Computer Science 352 (2006) 159-180", "doi": null, "report-no": null, "categories": "math.LO cs.LO", "license": null, "abstract": "  We introduce a machine free mathematical framework to get a natural\nformalization of some general notions of infinite computation in the context of\nKolmogorov complexity. Namely, the classes Max^{X\\to D}_{PR} and Max^{X\\to\nD}_{Rec} of functions X \\to D which are pointwise maximum of partial or total\ncomputable sequences of functions where D = (D,<) is some computable partially\nordered set. The enumeration theorem and the invariance theorem always hold for\nMax^{X\\to D}_{PR}, leading to a variant KD;max of Kolmogorov complexity. We\ncharacterize the orders D such that the enumeration theorem (resp. the\ninvariance theorem) also holds for Max^{X\\to D}_{Rec} . It turns out that\nMax^{X\\to D}_{Rec} may satisfy the invariance theorem but not the enumeration\ntheorem. Also, when Max^{X\\to D}_{Rec} satisfies the invariance theorem then\nthe Kolmogorov complexities associated to Max^{X\\to D}_{Rec} and Max^{X\\to\nD}_{PR} are equal (up to a constant).\n  Letting K^D_{min} = K^{D^{rev}}_{max}, where D^{rev} is the reverse order, we\nprove that either K^D_{min} =_{ct} K^D_{max} =_{ct} K^D (=_{ct} is equality up\nto a constant) or K^D_{min}, K^D_{max} are <=_{ct} incomparable and <_{ct} K^D\nand >_{ct} K^{0',D}. We characterize the orders leading to each case. We also\nshow that K^D_{min}, K^D_{max} cannot be both much smaller than K^D at any\npoint.\n  These results are proved in a more general setting with two orders on D, one\nextending the other.\n", "versions": [{"version": "v1", "created": "Wed, 2 Jan 2008 08:36:29 GMT"}], "update_date": "2008-01-07", "authors_parsed": [["Ferbus-Zanda", "Marie", "", "LIAFA"], ["Grigorieff", "Serge", "", "LIAFA"]]}, {"id": "0801.0533", "submitter": "Olivier Finkel", "authors": "Olivier Finkel (ELM), Pierre Simonnet (SPE)", "title": "Topology and Ambiguity in Omega Context Free Languages", "comments": null, "journal-ref": "Bulletin of the Belgian Mathematical Society 10 (5) (2003) 707-722", "doi": null, "report-no": null, "categories": "cs.LO math.LO", "license": null, "abstract": "  We study the links between the topological complexity of an omega context\nfree language and its degree of ambiguity. In particular, using known facts\nfrom classical descriptive set theory, we prove that non Borel omega context\nfree languages which are recognized by B\\\"uchi pushdown automata have a maximum\ndegree of ambiguity. This result implies that degrees of ambiguity are really\nnot preserved by the operation of taking the omega power of a finitary context\nfree language. We prove also that taking the adherence or the delta-limit of a\nfinitary language preserves neither unambiguity nor inherent ambiguity. On the\nother side we show that methods used in the study of omega context free\nlanguages can also be applied to study the notion of ambiguity in infinitary\nrational relations accepted by B\\\"uchi 2-tape automata and we get first results\nin that direction.\n", "versions": [{"version": "v1", "created": "Thu, 3 Jan 2008 14:47:36 GMT"}], "update_date": "2008-01-04", "authors_parsed": [["Finkel", "Olivier", "", "ELM"], ["Simonnet", "Pierre", "", "SPE"]]}, {"id": "0801.0534", "submitter": "Olivier Finkel", "authors": "Olivier Finkel (ELM)", "title": "On the Length of the Wadge Hierarchy of Omega Context Free Languages", "comments": null, "journal-ref": "Journal of Automata, Languages and Combinatorics 10 (4) (2005)\n  439-464", "doi": null, "report-no": null, "categories": "cs.LO cs.CC cs.GT math.LO", "license": null, "abstract": "  We prove in this paper that the length of the Wadge hierarchy of omega\ncontext free languages is greater than the Cantor ordinal epsilon_omega, which\nis the omega-th fixed point of the ordinal exponentiation of base omega. The\nsame result holds for the conciliating Wadge hierarchy, defined by J. Duparc,\nof infinitary context free languages, studied by D. Beauquier. We show also\nthat there exist some omega context free languages which are\nSigma^0_omega-complete Borel sets, improving previous results on omega context\nfree languages and the Borel hierarchy.\n", "versions": [{"version": "v1", "created": "Thu, 3 Jan 2008 14:48:48 GMT"}], "update_date": "2008-01-04", "authors_parsed": [["Finkel", "Olivier", "", "ELM"]]}, {"id": "0801.0535", "submitter": "Olivier Finkel", "authors": "Olivier Finkel (ELM)", "title": "An omega-Power of a Finitary Language Which is a Borel Set of Infinite\n  Rank", "comments": null, "journal-ref": "Fundamenta Informaticae 62 (3-4) (2004) 333-342", "doi": null, "report-no": null, "categories": "cs.LO math.LO", "license": null, "abstract": "  Omega-powers of finitary languages are omega languages in the form V^omega,\nwhere V is a finitary language over a finite alphabet X. Since the set of\ninfinite words over X can be equipped with the usual Cantor topology, the\nquestion of the topological complexity of omega-powers naturally arises and has\nbeen raised by Niwinski, by Simonnet, and by Staiger. It has been recently\nproved that for each integer n > 0, there exist some omega-powers of context\nfree languages which are Pi^0_n-complete Borel sets, and that there exists a\ncontext free language L such that L^omega is analytic but not Borel. But the\nquestion was still open whether there exists a finitary language V such that\nV^omega is a Borel set of infinite rank. We answer this question in this paper,\ngiving an example of a finitary language whose omega-power is Borel of infinite\nrank.\n", "versions": [{"version": "v1", "created": "Thu, 3 Jan 2008 14:49:23 GMT"}], "update_date": "2008-01-04", "authors_parsed": [["Finkel", "Olivier", "", "ELM"]]}, {"id": "0801.0537", "submitter": "Olivier Finkel", "authors": "Olivier Finkel (ELM), Jean-Pierre Ressayre (ELM), Pierre Simonnet\n  (SPE)", "title": "On Infinite Real Trace Rational Languages of Maximum Topological\n  Complexity", "comments": null, "journal-ref": "Zapiski Nauchnyh Seminarov POMI 316 (2004) 205-223", "doi": null, "report-no": null, "categories": "cs.LO math.LO", "license": null, "abstract": "  We consider the set of infinite real traces, over a dependence alphabet\n(Gamma, D) with no isolated letter, equipped with the topology induced by the\nprefix metric. We then prove that all rational languages of infinite real\ntraces are analytic sets and that there exist some rational languages of\ninfinite real traces which are analytic but non Borel sets, and even\nSigma^1_1-complete, hence of maximum possible topological complexity.\n", "versions": [{"version": "v1", "created": "Thu, 3 Jan 2008 14:51:16 GMT"}], "update_date": "2008-01-04", "authors_parsed": [["Finkel", "Olivier", "", "ELM"], ["Ressayre", "Jean-Pierre", "", "ELM"], ["Simonnet", "Pierre", "", "SPE"]]}, {"id": "0801.0649", "submitter": "Frederic Prost", "authors": "F. Prost and C. Zerrari", "title": "A logical analysis of entanglement and separability in quantum\n  higher-order functions", "comments": "19 pages", "journal-ref": null, "doi": "10.1007/978-3-642-03745-0_25", "report-no": null, "categories": "cs.LO", "license": null, "abstract": "  We present a logical separability analysis for a functional quantum\ncomputation language. This logic is inspired by previous works on logical\nanalysis of aliasing for imperative functional programs. Both analyses share\nsimilarities notably because they are highly non-compositional. Quantum setting\nis harder to deal with since it introduces non determinism and thus\nconsiderably modifies semantics and validity of logical assertions. This logic\nis the first proposal of entanglement/separability analysis dealing with a\nfunctional quantum programming language with higher-order functions.\n", "versions": [{"version": "v1", "created": "Fri, 4 Jan 2008 10:12:59 GMT"}], "update_date": "2015-05-13", "authors_parsed": [["Prost", "F.", ""], ["Zerrari", "C.", ""]]}, {"id": "0801.0677", "submitter": "Jad Saklawi", "authors": "Paul C. Attie", "title": "Finite-state concurrent programs can be expressed pairwise", "comments": "14 pages", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO", "license": null, "abstract": "  We present a \\emph{pairwise normal form} for finite-state shared memory\nconcurrent programs: all variables are shared between exactly two processes,\nand the guards on transitions are conjunctions of conditions over this pairwise\nshared state. This representation has been used to efficiently (in polynomial\ntime) synthesize and model-check correctness properties of concurrent programs.\nOur main result is that any finite state concurrent program can be transformed\ninto pairwise normal form. Specifically, if $Q$ is an arbitrary finite-state\nshared memory concurrent program, then there exists a finite-state shared\nmemory concurrent program $P$ expressed in pairwise normal form such that $P$\nis strongly bisimilar to $Q$. Our result is constructive: we give an algorithm\nfor producing $P$, given $Q$.\n", "versions": [{"version": "v1", "created": "Fri, 4 Jan 2008 13:14:31 GMT"}], "update_date": "2008-01-07", "authors_parsed": [["Attie", "Paul C.", ""]]}, {"id": "0801.0813", "submitter": "Beno\\^it Valiron", "authors": "Peter Selinger (1), Beno\\^it Valiron (2) ((1) Dalhousie University,\n  (2) University of Ottawa)", "title": "A linear-non-linear model for a computational call-by-value lambda\n  calculus (extended abstract)", "comments": "15 pages. Preprint, to appear in the proceedings of FOSSACS'08", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO", "license": null, "abstract": "  We give a categorical semantics for a call-by-value linear lambda calculus.\nSuch a lambda calculus was used by Selinger and Valiron as the backbone of a\nfunctional programming language for quantum computation. One feature of this\nlambda calculus is its linear type system, which includes a duplicability\noperator \"!\" as in linear logic. Another main feature is its call-by-value\nreduction strategy, together with a side-effect to model probabilistic\nmeasurements. The \"!\" operator gives rise to a comonad, as in the linear logic\nmodels of Seely, Bierman, and Benton. The side-effects give rise to a monad, as\nin Moggi's computational lambda calculus. It is this combination of a monad and\na comonad that makes the present paper interesting. We show that our\ncategorical semantics is sound and complete.\n", "versions": [{"version": "v1", "created": "Sat, 5 Jan 2008 15:21:17 GMT"}], "update_date": "2008-01-08", "authors_parsed": [["Selinger", "Peter", ""], ["Valiron", "Beno\u00eet", ""]]}, {"id": "0801.0949", "submitter": "Jad Saklawi", "authors": "Paul C. Attie", "title": "On the Refinement of Liveness Properties of Distributed Systems", "comments": "54 pages, 12 figures", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO", "license": null, "abstract": "  We present a new approach for reasoning about liveness properties of\ndistributed systems, represented as automata. Our approach is based on\nsimulation relations, and requires reasoning only over finite execution\nfragments. Current simulation-relation based methods for reasoning about\nliveness properties of automata require reasoning over entire executions, since\nthey involve a proof obligation of the form: if a concrete and abstract\nexecution ``correspond'' via the simulation, and the concrete execution is\nlive, then so is the abstract execution.\n  Our contribution consists of (1) a formalism for defining liveness\nproperties, (2) a proof method for liveness properties based on that formalism,\nand (3) two expressive completeness results: firstly, our formalism can express\nany liveness property which satisfies a natural ``robustness'' condition, and\nsecondly, our formalism can express any liveness property at all, provided that\nhistory variables can be used\n", "versions": [{"version": "v1", "created": "Mon, 7 Jan 2008 11:55:03 GMT"}], "update_date": "2008-01-08", "authors_parsed": [["Attie", "Paul C.", ""]]}, {"id": "0801.1251", "submitter": "Andrew Pitts", "authors": "Andrew M. Pitts and Mark R. Shinwell", "title": "Generative Unbinding of Names", "comments": null, "journal-ref": "Logical Methods in Computer Science, Volume 4, Issue 1 (March 18,\n  2008) lmcs:916", "doi": "10.2168/LMCS-4(1:4)2008", "report-no": null, "categories": "cs.PL cs.LO", "license": null, "abstract": "  This paper is concerned with the form of typed name binding used by the\nFreshML family of languages. Its characteristic feature is that a name binding\nis represented by an abstract (name,value)-pair that may only be deconstructed\nvia the generation of fresh bound names. The paper proves a new result about\nwhat operations on names can co-exist with this construct. In FreshML the only\nobservation one can make of names is to test whether or not they are equal.\nThis restricted amount of observation was thought necessary to ensure that\nthere is no observable difference between alpha-equivalent name binders. Yet\nfrom an algorithmic point of view it would be desirable to allow other\noperations and relations on names, such as a total ordering. This paper shows\nthat, contrary to expectations, one may add not just ordering, but almost any\nrelation or numerical function on names without disturbing the fundamental\ncorrectness result about this form of typed name binding (that object-level\nalpha-equivalence precisely corresponds to contextual equivalence at the\nprogramming meta-level), so long as one takes the state of dynamically created\nnames into account.\n", "versions": [{"version": "v1", "created": "Tue, 8 Jan 2008 15:04:56 GMT"}, {"version": "v2", "created": "Tue, 18 Mar 2008 18:23:41 GMT"}], "update_date": "2015-07-01", "authors_parsed": [["Pitts", "Andrew M.", ""], ["Shinwell", "Mark R.", ""]]}, {"id": "0801.1253", "submitter": "Damiano Mazza", "authors": "Patrick Baillot and Damiano Mazza", "title": "Linear Logic by Levels and Bounded Time Complexity", "comments": "63 pages. To appear in Theoretical Computer Science. This version\n  corrects minor fonts problems from v2", "journal-ref": "Theoretical Computer Science 411 (2010) 470-503", "doi": "10.1016/j.tcs.2009.09.015", "report-no": null, "categories": "cs.LO cs.CC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We give a new characterization of elementary and deterministic polynomial\ntime computation in linear logic through the proofs-as-programs correspondence.\nGirard's seminal results, concerning elementary and light linear logic, achieve\nthis characterization by enforcing a stratification principle on proofs, using\nthe notion of depth in proof nets. Here, we propose a more general form of\nstratification, based on inducing levels in proof nets by means of indexes,\nwhich allows us to extend Girard's systems while keeping the same complexity\nproperties. In particular, it turns out that Girard's systems can be recovered\nby forcing depth and level to coincide. A consequence of the higher flexibility\nof levels with respect to depth is the absence of boxes for handling the\nparagraph modality. We use this fact to propose a variant of our polytime\nsystem in which the paragraph modality is only allowed on atoms, and which may\nthus serve as a basis for developing lambda-calculus type assignment systems\nwith more efficient typing algorithms than existing ones.\n", "versions": [{"version": "v1", "created": "Tue, 8 Jan 2008 15:08:20 GMT"}, {"version": "v2", "created": "Mon, 20 Jul 2009 19:00:04 GMT"}, {"version": "v3", "created": "Sun, 26 Jul 2009 13:07:48 GMT"}], "update_date": "2012-07-17", "authors_parsed": [["Baillot", "Patrick", ""], ["Mazza", "Damiano", ""]]}, {"id": "0801.1300", "submitter": "Igor Razgon", "authors": "Igor Razgon and Barry O'Sullivan", "title": "Almost 2-SAT is Fixed-Parameter Tractable", "comments": "This new version fixes the bug found by Somnath Sikdar in the proof\n  of Claim 8. In the repaired version the modification of the Almost 2-SAT\n  problem called 2-SLASAT is no longer needed and only the modification called\n  2-ASLASAT remains relevant. Hence the whole manuscript is updated so that the\n  2-SLASAT problem is not mentioned there anymore", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DS cs.CG cs.LO", "license": null, "abstract": "  We consider the following problem. Given a 2-CNF formula, is it possible to\nremove at most $k$ clauses so that the resulting 2-CNF formula is satisfiable?\nThis problem is known to different research communities in Theoretical Computer\nScience under the names 'Almost 2-SAT', 'All-but-$k$ 2-SAT', '2-CNF deletion',\n'2-SAT deletion'. The status of fixed-parameter tractability of this problem is\na long-standing open question in the area of Parameterized Complexity. We\nresolve this open question by proposing an algorithm which solves this problem\nin $O(15^k*k*m^3)$ and thus we show that this problem is fixed-parameter\ntractable.\n", "versions": [{"version": "v1", "created": "Tue, 8 Jan 2008 19:04:14 GMT"}, {"version": "v2", "created": "Wed, 9 Jan 2008 19:24:05 GMT"}, {"version": "v3", "created": "Mon, 18 Feb 2008 15:14:49 GMT"}, {"version": "v4", "created": "Fri, 18 Apr 2008 14:07:04 GMT"}], "update_date": "2008-04-18", "authors_parsed": [["Razgon", "Igor", ""], ["O'Sullivan", "Barry", ""]]}, {"id": "0801.1307", "submitter": "Chris Pollett", "authors": "Chris Pollett and Eric Miles", "title": "Alternating Hierarchies for Time-Space Tradeoffs", "comments": "14 pages", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.CC cs.LO", "license": null, "abstract": "  Nepomnjascii's Theorem states that for all 0 <= \\epsilon < 1 and k > 0 the\nclass of languages recognized in nondeterministic time n^k and space\nn^\\epsilon, NTISP[n^k, n^\\epsilon ], is contained in the linear time hierarchy.\nBy considering restrictions on the size of the universal quantifiers in the\nlinear time hierarchy, this paper refines Nepomnjascii's result to give a sub-\nhierarchy, Eu-LinH, of the linear time hierarchy that is contained in NP and\nwhich contains NTISP[n^k, n^\\epsilon ]. Hence, Eu-LinH contains NL and SC. This\npaper investigates basic structural properties of Eu-LinH. Then the\nrelationships between Eu-LinH and the classes NL, SC, and NP are considered to\nsee if they can shed light on the NL = NP or SC = NP questions. Finally, a new\nhierarchy, zeta -LinH, is defined to reduce the space requirements needed for\nthe upper bound on Eu-LinH.\n", "versions": [{"version": "v1", "created": "Tue, 8 Jan 2008 19:59:05 GMT"}], "update_date": "2008-01-09", "authors_parsed": [["Pollett", "Chris", ""], ["Miles", "Eric", ""]]}, {"id": "0801.1687", "submitter": "Jad Saklawi", "authors": "Paul C. Attie", "title": "Synthesis of Large Dynamic Concurrent Programs from Dynamic\n  Specifications", "comments": "46 pages", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO", "license": null, "abstract": "  We present a tractable method for synthesizing arbitrarily large concurrent\nprograms, for a shared memory model with common hardware-available primitives\nsuch as atomic registers, compare-and-swap, load-linked/store conditional, etc.\nThe programs we synthesize are dynamic: new processes can be created and added\nat run-time, and so our programs are not finite-state, in general.\nNevertheless, we successfully exploit automatic synthesis and model-checking\nmethods based on propositional temporal logic. Our method is algorithmically\nefficient, with complexity polynomial in the number of component processes (of\nthe program) that are ``alive'' at any time. Our method does not explicitly\nconstruct the automata-theoretic product of all processes that are alive,\nthereby avoiding \\intr{state explosion}. Instead, for each pair of processes\nwhich interact, our method constructs an automata-theoretic product\n(\\intr{pair-machine}) which embodies all the possible interactions of these two\nprocesses. From each pair-machine, we can synthesize a correct\n\\intr{pair-program} which coordinates the two involved processes as needed. We\nallow such pair-programs to be added dynamically at run-time. They are then\n``composed conjunctively'' with the currently alive pair-programs to\nre-synthesize the program as it results after addition of the new pair-program.\nWe are thus able to add new behaviors, which result in new properties being\nsatisfied, at run-time. We establish a ``large model'' theorem which shows that\nthe synthesized large program inherits correctness properties from the\npair-programs.\n", "versions": [{"version": "v1", "created": "Thu, 10 Jan 2008 21:27:42 GMT"}], "update_date": "2008-01-14", "authors_parsed": [["Attie", "Paul C.", ""]]}, {"id": "0801.1783", "submitter": "Olivier Finkel", "authors": "Jacques Duparc (UNIL), Olivier Finkel (LIP)", "title": "An omega-power of a context-free language which is Borel above\n  Delta^0_omega", "comments": "To appear in the Proceedings of the International Conference\n  Foundations of the Formal Sciences V : Infinite Games, November 26th to 29th,\n  2004, Bonn, Germany, Stefan Bold, Benedikt L\\\"owe, Thoralf R\\\"asch, Johan van\n  Benthem (eds.), College Publications at King's College (Studies in Logic),\n  2007", "journal-ref": "Dans Proceedings of the International Conference on Foundations of\n  the Formal Sciences V : Infinite Games - Foundations of the Formal Sciences V\n  : Infinite Games, November 26-29, 2004, Bonn : Allemagne", "doi": null, "report-no": null, "categories": "cs.CC cs.GT cs.LO math.LO", "license": null, "abstract": "  We use erasers-like basic operations on words to construct a set that is both\nBorel and above Delta^0_omega, built as a set V^\\omega where V is a language of\nfinite words accepted by a pushdown automaton. In particular, this gives a\nfirst example of an omega-power of a context free language which is a Borel set\nof infinite rank.\n", "versions": [{"version": "v1", "created": "Fri, 11 Jan 2008 14:20:30 GMT"}], "update_date": "2008-09-10", "authors_parsed": [["Duparc", "Jacques", "", "UNIL"], ["Finkel", "Olivier", "", "LIP"]]}, {"id": "0801.2498", "submitter": "Alexis B\\`es", "authors": "Alexis B\\`es", "title": "An Application of the Feferman-Vaught Theorem to Automata and Logics\n  for<br> Words over an Infinite Alphabet", "comments": "24 pages", "journal-ref": "Logical Methods in Computer Science, Volume 4, Issue 1 (March 25,\n  2008) lmcs:1202", "doi": "10.2168/LMCS-4(1:8)2008", "report-no": null, "categories": "cs.LO", "license": null, "abstract": "  We show that a special case of the Feferman-Vaught composition theorem gives\nrise to a natural notion of automata for finite words over an infinite\nalphabet, with good closure and decidability properties, as well as several\nlogical characterizations. We also consider a slight extension of the\nFeferman-Vaught formalism which allows to express more relations between\ncomponent values (such as equality), and prove related decidability results.\n  From this result we get new classes of decidable logics for words over an\ninfinite alphabet.\n", "versions": [{"version": "v1", "created": "Wed, 16 Jan 2008 14:39:27 GMT"}, {"version": "v2", "created": "Tue, 25 Mar 2008 12:02:49 GMT"}], "update_date": "2015-07-01", "authors_parsed": [["B\u00e8s", "Alexis", ""]]}, {"id": "0801.3065", "submitter": "Alwen Tiu", "authors": "Alwen Tiu", "title": "Cut Elimination for a Logic with Generic Judgments and Induction", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO", "license": null, "abstract": "  This paper presents a cut-elimination proof for the logic $LG^\\omega$, which\nis an extension of a proof system for encoding generic judgments, the logic\n$\\FOLDNb$ of Miller and Tiu, with an induction principle. The logic\n$LG^\\omega$, just as $\\FOLDNb$, features extensions of first-order\nintuitionistic logic with fixed points and a ``generic quantifier'', $\\nabla$,\nwhich is used to reason about the dynamics of bindings in object systems\nencoded in the logic. A previous attempt to extend $\\FOLDNb$ with an induction\nprinciple has been unsuccessful in modeling some behaviours of bindings in\ninductive specifications. It turns out that this problem can be solved by\nrelaxing some restrictions on $\\nabla$, in particular by adding the axiom $B\n\\equiv \\nabla x. B$, where $x$ is not free in $B$. We show that by adopting the\nequivariance principle, the presentation of the extended logic can be much\nsimplified. This paper contains the technical proofs for the results stated in\n\\cite{tiu07entcs}; readers are encouraged to consult \\cite{tiu07entcs} for\nmotivations and examples for $LG^\\omega.$\n", "versions": [{"version": "v1", "created": "Sun, 20 Jan 2008 08:34:22 GMT"}], "update_date": "2008-01-22", "authors_parsed": [["Tiu", "Alwen", ""]]}, {"id": "0801.3117", "submitter": "Yongzhi Cao", "authors": "Yongzhi Cao", "title": "A hierarchy of behavioral equivalences in the $\\pi$-calculus with noisy\n  channels", "comments": "30 pages, 2 figures", "journal-ref": "Comput. J., vol. 53, no. 1, pp. 3-20, 2010", "doi": null, "report-no": null, "categories": "cs.LO", "license": null, "abstract": "  The $\\pi$-calculus is a process algebra where agents interact by sending\ncommunication links to each other via noiseless communication channels. Taking\ninto account the reality of noisy channels, an extension of the $\\pi$-calculus,\ncalled the $\\pi_N$-calculus, has been introduced recently. In this paper, we\npresent an early transitional semantics of the $\\pi_N$-calculus, which is not a\ndirectly translated version of the late semantics of $\\pi_N$, and then extend\nsix kinds of behavioral equivalences consisting of reduction bisimilarity,\nbarbed bisimilarity, barbed equivalence, barbed congruence, bisimilarity, and\nfull bisimilarity into the $\\pi_N$-calculus. Such behavioral equivalences are\ncast in a hierarchy, which is helpful to verify behavioral equivalence of two\nagents. In particular, we show that due to the noisy nature of channels, the\ncoincidence of bisimilarity and barbed equivalence, as well as the coincidence\nof full bisimilarity and barbed congruence, in the $\\pi$-calculus does not hold\nin $\\pi_N$.\n", "versions": [{"version": "v1", "created": "Mon, 21 Jan 2008 00:42:52 GMT"}], "update_date": "2011-10-04", "authors_parsed": [["Cao", "Yongzhi", ""]]}, {"id": "0801.3715", "submitter": "Annie Ressouche", "authors": "Annie Ressouche, Daniel Gaff\\'e (LEAT), Val\\'erie Roy", "title": "Modular Compilation of a Synchronous Language", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.PL cs.LO", "license": null, "abstract": "  Synchronous languages rely on formal methods to ease the development of\napplications in an efficient and reusable way. Formal methods have been\nadvocated as a means of increasing the reliability of systems, especially those\nwhich are safety or business critical. It is still difficult to develop\nautomatic specification and verification tools due to limitations like state\nexplosion, undecidability, etc... In this work, we design a new specification\nmodel based on a reactive synchronous approach. Then, we benefit from a formal\nframework well suited to perform compilation and formal validation of systems.\nIn practice, we design and implement a special purpose language (LE) and its\ntwo semantics: the ehavioral semantics helps us to define a program by the set\nof its behaviors and avoid ambiguousness in programs' interpretation; the\nexecution equational semantics allows the modular compilation of programs into\nsoftware and hardware targets (c code, vhdl code, fpga synthesis, observers).\nOur approach is pertinent considering the two main requirements of critical\nrealistic applications: the modular compilation allows us to deal with large\nsystems, the model-based approach provides us with formal validation.\n", "versions": [{"version": "v1", "created": "Thu, 24 Jan 2008 15:24:46 GMT"}], "update_date": "2009-04-20", "authors_parsed": [["Ressouche", "Annie", "", "LEAT"], ["Gaff\u00e9", "Daniel", "", "LEAT"], ["Roy", "Val\u00e9rie", ""]]}, {"id": "0801.3912", "submitter": "Olivier Finkel", "authors": "Olivier Carton (LIAFA), Olivier Finkel (LIP), Pierre Simonnet (SPE)", "title": "On the Continuity Set of an omega Rational Function", "comments": "Dedicated to Serge Grigorieff on the occasion of his 60th Birthday", "journal-ref": "Theoretical Informatics and Applications (1), 42 (2008) 183-196", "doi": null, "report-no": null, "categories": "cs.CC cs.LO", "license": null, "abstract": "  In this paper, we study the continuity of rational functions realized by\nB\\\"uchi finite state transducers. It has been shown by Prieur that it can be\ndecided whether such a function is continuous. We prove here that surprisingly,\nit cannot be decided whether such a function F has at least one point of\ncontinuity and that its continuity set C(F) cannot be computed. In the case of\na synchronous rational function, we show that its continuity set is rational\nand that it can be computed. Furthermore we prove that any rational\nPi^0_2-subset of X^omega for some alphabet X is the continuity set C(F) of an\nomega-rational synchronous function F defined on X^omega.\n", "versions": [{"version": "v1", "created": "Fri, 25 Jan 2008 10:54:05 GMT"}], "update_date": "2008-01-28", "authors_parsed": [["Carton", "Olivier", "", "LIAFA"], ["Finkel", "Olivier", "", "LIP"], ["Simonnet", "Pierre", "", "SPE"]]}, {"id": "0801.4105", "submitter": "Steven Perron", "authors": "Steven Perron (University of Toronto)", "title": "Quantified Propositional Logspace Reasoning", "comments": "28 pages", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO cs.CC", "license": null, "abstract": "  In this paper, we develop a quantified propositional proof systems that\ncorresponds to logarithmic-space reasoning. We begin by defining a class\nSigmaCNF(2) of quantified formulas that can be evaluated in log space. Then our\nnew proof system GL^* is defined as G_1^* with cuts restricted to SigmaCNF(2)\nformulas and no cut formula that is not quantifier free contains a free\nvariable that does not appear in the final formula.\n  To show that GL^* is strong enough to capture log space reasoning, we\ntranslate theorems of VL into a family of tautologies that have polynomial-size\nGL^* proofs. VL is a theory of bounded arithmetic that is known to correspond\nto logarithmic-space reasoning. To do the translation, we find an appropriate\naxiomatization of VL, and put VL proofs into a new normal form.\n  To show that GL^* is not too strong, we prove the soundness of GL^* in such a\nway that it can be formalized in VL. This is done by giving a logarithmic-space\nalgorithm that witnesses GL^* proofs.\n", "versions": [{"version": "v1", "created": "Sun, 27 Jan 2008 19:53:39 GMT"}], "update_date": "2008-01-29", "authors_parsed": [["Perron", "Steven", "", "University of Toronto"]]}, {"id": "0801.4230", "submitter": "Simon Perdrix", "authors": "Simon Perdrix", "title": "Quantum entanglement analysis based on abstract interpretation", "comments": "13 pages", "journal-ref": "Proc. of 15th International Static Analysis Symposium (SAS 2008).\n  LNCS 5079, pp 270-282", "doi": "10.1007/978-3-540-69166-2_18", "report-no": null, "categories": "cs.LO cs.PL quant-ph", "license": null, "abstract": "  Entanglement is a non local property of quantum states which has no classical\ncounterpart and plays a decisive role in quantum information theory. Several\nprotocols, like the teleportation, are based on quantum entangled states.\nMoreover, any quantum algorithm which does not create entanglement can be\nefficiently simulated on a classical computer. The exact role of the\nentanglement is nevertheless not well understood. Since an exact analysis of\nentanglement evolution induces an exponential slowdown, we consider\napproximative analysis based on the framework of abstract interpretation. In\nthis paper, a concrete quantum semantics based on superoperators is associated\nwith a simple quantum programming language. The representation of entanglement,\ni.e. the design of the abstract domain is a key issue. A representation of\nentanglement as a partition of the memory is chosen. An abstract semantics is\nintroduced, and the soundness of the approximation is proven.\n", "versions": [{"version": "v1", "created": "Mon, 28 Jan 2008 10:45:47 GMT"}], "update_date": "2008-12-08", "authors_parsed": [["Perdrix", "Simon", ""]]}, {"id": "0801.4746", "submitter": "W Saba", "authors": "Walid S. Saba", "title": "Concerning Olga, the Beautiful Little Street Dancer (Adjectives as\n  Higher-Order Polymorphic Functions)", "comments": "6 pages", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.CL cs.LO", "license": null, "abstract": "  In this paper we suggest a typed compositional seman-tics for nominal\ncompounds of the form [Adj Noun] that models adjectives as higher-order\npolymorphic functions, and where types are assumed to represent concepts in an\nontology that reflects our commonsense view of the world and the way we talk\nabout it in or-dinary language. In addition to [Adj Noun] compounds our\nproposal seems also to suggest a plausible explana-tion for well known\nadjective ordering restrictions.\n", "versions": [{"version": "v1", "created": "Wed, 30 Jan 2008 19:40:45 GMT"}, {"version": "v2", "created": "Thu, 31 Jan 2008 17:10:22 GMT"}, {"version": "v3", "created": "Fri, 1 Feb 2008 01:34:55 GMT"}, {"version": "v4", "created": "Mon, 4 Feb 2008 22:36:04 GMT"}, {"version": "v5", "created": "Sun, 10 Feb 2008 08:26:02 GMT"}], "update_date": "2008-02-10", "authors_parsed": [["Saba", "Walid S.", ""]]}]