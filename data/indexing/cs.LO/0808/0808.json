[{"id": "0808.0441", "submitter": "Martin Escardo", "authors": "Martin Escardo", "title": "Exhaustible sets in higher-type computation", "comments": null, "journal-ref": "Logical Methods in Computer Science, Volume 4, Issue 3 (August 27,\n  2008) lmcs:693", "doi": "10.2168/LMCS-4(3:3)2008", "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We say that a set is exhaustible if it admits algorithmic universal\nquantification for continuous predicates in finite time, and searchable if\nthere is an algorithm that, given any continuous predicate, either selects an\nelement for which the predicate holds or else tells there is no example. The\nCantor space of infinite sequences of binary digits is known to be searchable.\nSearchable sets are exhaustible, and we show that the converse also holds for\nsets of hereditarily total elements in the hierarchy of continuous functionals;\nmoreover, a selection functional can be constructed uniformly from a\nquantification functional. We prove that searchable sets are closed under\nintersections with decidable sets, and under the formation of computable images\nand of finite and countably infinite products. This is related to the fact,\nestablished here, that exhaustible sets are topologically compact. We obtain a\ncomplete description of exhaustible total sets by developing a computational\nversion of a topological Arzela--Ascoli type characterization of compact\nsubsets of function spaces. We also show that, in the non-empty case, they are\nprecisely the computable images of the Cantor space. The emphasis of this paper\nis on the theory of exhaustible and searchable sets, but we also briefly sketch\napplications.\n", "versions": [{"version": "v1", "created": "Mon, 4 Aug 2008 13:41:09 GMT"}, {"version": "v2", "created": "Wed, 27 Aug 2008 21:18:36 GMT"}], "update_date": "2015-07-01", "authors_parsed": [["Escardo", "Martin", ""]]}, {"id": "0808.0521", "submitter": "Ian Pratt-Hartmann", "authors": "Ian Pratt-Hartmann and Lawrence S. Moss", "title": "Logics for the Relational Syllogistic", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO cs.CC cs.CL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The Aristotelian syllogistic cannot account for the validity of many\ninferences involving relational facts. In this paper, we investigate the\nprospects for providing a relational syllogistic. We identify several fragments\nbased on (a) whether negation is permitted on all nouns, including those in the\nsubject of a sentence; and (b) whether the subject noun phrase may contain a\nrelative clause. The logics we present are extensions of the classical\nsyllogistic, and we pay special attention to the question of whether reductio\nad absurdum is needed. Thus our main goal is to derive results on the existence\n(or non-existence) of syllogistic proof systems for relational fragments. We\nalso determine the computational complexity of all our fragments.\n", "versions": [{"version": "v1", "created": "Mon, 4 Aug 2008 22:26:38 GMT"}], "update_date": "2008-08-06", "authors_parsed": [["Pratt-Hartmann", "Ian", ""], ["Moss", "Lawrence S.", ""]]}, {"id": "0808.0540", "submitter": "Paul Tarau", "authors": "Paul Tarau", "title": "Executable Set Theory and Arithmetic Encodings in Prolog", "comments": "Unpublished draft", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO cs.DM cs.DS cs.MS cs.SC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The paper is organized as a self-contained literate Prolog program that\nimplements elements of an executable finite set theory with focus on\ncombinatorial generation and arithmetic encodings. The complete Prolog code is\navailable at http://logic.csci.unt.edu/tarau/research/2008/pHFS.zip . First,\nranking and unranking functions for some \"mathematically elegant\" data types in\nthe universe of Hereditarily Finite Sets with Urelements are provided,\nresulting in arithmetic encodings for powersets, hypergraphs, ordinals and\nchoice functions. After implementing a digraph representation of Hereditarily\nFinite Sets we define {\\em decoration functions} that can recover well-founded\nsets from encodings of their associated acyclic digraphs. We conclude with an\nencoding of arbitrary digraphs and discuss a concept of duality induced by the\nset membership relation. In the process, we uncover the surprising possibility\nof internally sharing isomorphic objects, independently of their language level\ntypes and meanings.\n", "versions": [{"version": "v1", "created": "Tue, 5 Aug 2008 04:59:56 GMT"}], "update_date": "2009-09-29", "authors_parsed": [["Tarau", "Paul", ""]]}, {"id": "0808.0554", "submitter": "Paul Tarau", "authors": "Paul Tarau", "title": "Ranking and Unranking of Hereditarily Finite Functions and Permutations", "comments": "unpublished draft", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO cs.MS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Prolog's ability to return multiple answers on backtracking provides an\nelegant mechanism to derive reversible encodings of combinatorial objects as\nNatural Numbers i.e. {\\em ranking} and {\\em unranking} functions. Starting from\na generalization of Ackerman's encoding of Hereditarily Finite Sets with\nUrelements and a novel tupling/untupling operation, we derive encodings for\nFinite Functions and use them as building blocks for an executable theory of\n{\\em Hereditarily Finite Functions}. The more difficult problem of {\\em\nranking} and {\\em unranking} {\\em Hereditarily Finite Permutations} is then\ntackled using Lehmer codes and factoradics.\n  The paper is organized as a self-contained literate Prolog program available\nat \\url{http://logic.csci.unt.edu/tarau/research/2008/pHFF.zip}\n", "versions": [{"version": "v1", "created": "Tue, 5 Aug 2008 05:20:51 GMT"}], "update_date": "2008-08-06", "authors_parsed": [["Tarau", "Paul", ""]]}, {"id": "0808.0555", "submitter": "Paul Tarau", "authors": "Paul Tarau", "title": "Pairing Functions, Boolean Evaluation and Binary Decision Diagrams in\n  Prolog", "comments": "also in the informal proceedings of CICLOPS 2008 workshop at:\n  http://clip.dia.fi.upm.es/Conferences/CICLOPS-2008/CICLOPS-2008-proceedings.pdf", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO cs.SC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  A \"pairing function\" J associates a unique natural number z to any two\nnatural numbers x,y such that for two \"unpairing functions\" K and L, the\nequalities K(J(x,y))=x, L(J(x,y))=y and J(K(z),L(z))=z hold. Using pairing\nfunctions on natural number representations of truth tables, we derive an\nencoding for Binary Decision Diagrams with the unique property that its boolean\nevaluation faithfully mimics its structural conversion to a a natural number\nthrough recursive application of a matching pairing function. We then use this\nresult to derive {\\em ranking} and {\\em unranking} functions for BDDs and\nreduced BDDs. The paper is organized as a self-contained literate Prolog\nprogram, available at http://logic.csci.unt.edu/tarau/research/2008/pBDD.zip\n  Keywords: logic programming and computational mathematics, pairing/unpairing\nfunctions, encodings of boolean functions, binary decision diagrams, natural\nnumber representations of truth tables\n", "versions": [{"version": "v1", "created": "Tue, 5 Aug 2008 05:33:09 GMT"}, {"version": "v2", "created": "Wed, 4 Feb 2009 03:25:22 GMT"}], "update_date": "2009-02-04", "authors_parsed": [["Tarau", "Paul", ""]]}, {"id": "0808.0647", "submitter": "Barnaby Martin", "authors": "Barnaby Martin", "title": "Model Checking Positive Equality-free FO: Boolean Structures and\n  Digraphs of Size Three", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.CC cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We study the model checking problem, for fixed structures A, over positive\nequality-free first-order logic -- a natural generalisation of the non-uniform\nquantified constraint satisfaction problem QCSP(A). We prove a complete\ncomplexity classification for this problem when A ranges over 1.) boolean\nstructures and 2.) digraphs of size (less than or equal to) three. The former\nclass displays dichotomy between Logspace and Pspace-complete, while the latter\nclass displays tetrachotomy between Logspace, NP-complete, co-NP-complete and\nPspace-complete.\n", "versions": [{"version": "v1", "created": "Tue, 5 Aug 2008 13:33:43 GMT"}], "update_date": "2008-08-06", "authors_parsed": [["Martin", "Barnaby", ""]]}, {"id": "0808.0962", "submitter": "Amin Ansari", "authors": "Amin Ansari", "title": "Verification of Peterson's Algorithm for Leader Election in a\n  Unidirectional Asynchronous Ring Using NuSMV", "comments": "11 pages, 6 figures", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO cs.DC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The finite intrinsic nature of the most distributed algorithms gives us this\nability to use model checking tools for verification of this type of\nalgorithms. In this paper, I attempt to use NuSMV as a model checking tool for\nverifying necessary properties of Peterson's algorithm for leader election\nproblem in a unidirectional asynchronous ring topology. Peterson's algorithm\nfor an asynchronous ring supposes that each node in the ring has a unique ID\nand also a queue for dealing with storage problem. By considering that the\nqueue can have any combination of values, a constructed model for a ring with\nonly four nodes will have more than a billion states. Although it seems that\nmodel checking is not a feasible approach for this problem, I attempt to use\nseveral effective limiting assumptions for hiring formal model checking\napproach without losing the correct functionality of the Peterson's algorithm.\nThese enforced limiting assumptions target the degree of freedom in the model\nchecking process and significantly decrease the CPU time, memory usage and the\ntotal number of page faults. By deploying these limitations, the number of\nnodes can be increased from four to eight in the model checking process with\nNuSMV.\n", "versions": [{"version": "v1", "created": "Thu, 7 Aug 2008 06:02:59 GMT"}], "update_date": "2008-08-08", "authors_parsed": [["Ansari", "Amin", ""]]}, {"id": "0808.1215", "submitter": "Joseph Y. Halpern", "authors": "Joseph Y. Halpern and Vicky Weissman", "title": "A Formal Foundation for XrML", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.CR cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  XrML is becoming a popular language in industry for writing software\nlicenses. The semantics for XrML is implicitly given by an algorithm that\ndetermines if a permission follows from a set of licenses. We focus on a\nfragment of the language and use it to highlight some problematic aspects of\nthe algorithm. We then correct the problems, introduce formal semantics, and\nshow that our semantics captures the (corrected) algorithm. Next, we consider\nthe complexity of determining if a permission is implied by a set of XrML\nlicenses. We prove that the general problem is undecidable, but it is\npolynomial-time computable for an expressive fragment of the language. We\nextend XrML to capture a wider range of licenses by adding negation to the\nlanguage. Finally, we discuss the key differences between XrML and MPEG-21, an\ninternational standard based on XrML.\n", "versions": [{"version": "v1", "created": "Fri, 8 Aug 2008 16:25:58 GMT"}], "update_date": "2008-08-11", "authors_parsed": [["Halpern", "Joseph Y.", ""], ["Weissman", "Vicky", ""]]}, {"id": "0808.1354", "submitter": "Mehrnoosh Sadrzadeh", "authors": "Mehrnoosh Sadrzadeh", "title": "Ockham's razor and reasoning about information flow", "comments": "15 pages", "journal-ref": null, "doi": null, "report-no": null, "categories": "math.LO cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  What is the minimal algebraic structure to reason about information flow? Do\nwe really need the full power of Boolean algebras with co-closure and de Morgan\ndual operators? How much can we weaken and still be able to reason about\nmulti-agent scenarios in a tidy compositional way? This paper provides some\nanswers.\n", "versions": [{"version": "v1", "created": "Sat, 9 Aug 2008 13:51:44 GMT"}], "update_date": "2008-08-12", "authors_parsed": [["Sadrzadeh", "Mehrnoosh", ""]]}, {"id": "0808.1508", "submitter": "Michel Rueher", "authors": "H\\'el\\`ene Collavizza (I3S), Michel Rueher (I3S), Pascal Van\n  Hentenryck (Brown University)", "title": "Comparison between CPBPV, ESC/Java, CBMC, Blast, EUREKA and Why for\n  Bounded Program Verification", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.SE cs.AI cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This report describes experimental results for a set of benchmarks on program\nverification. It compares the capabilities of CPBVP \"Constraint Programming\nframework for Bounded Program Verification\" [4] with the following frameworks:\nESC/Java, CBMC, Blast, EUREKA and Why.\n", "versions": [{"version": "v1", "created": "Mon, 11 Aug 2008 12:55:19 GMT"}], "update_date": "2008-08-12", "authors_parsed": [["Collavizza", "H\u00e9l\u00e8ne", "", "I3S"], ["Rueher", "Michel", "", "I3S"], ["Van Hentenryck", "Pascal", "", "Brown University"]]}, {"id": "0808.2220", "submitter": "Cristian S. Calude", "authors": "Cristian S. Calude, Nicholas J. Hay", "title": "Every Computably Enumerable Random Real Is Provably Computably\n  Enumerable Random", "comments": "28 pages, minor update. Logic Journal of the IGPL, to appear in 2009", "journal-ref": null, "doi": null, "report-no": "CDMTCS Research Report 328, 2008", "categories": "cs.CC cs.LO math.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We prove that every computably enumerable (c.e.) random real is provable in\nPeano Arithmetic (PA) to be c.e. random. A major step in the proof is to show\nthat the theorem stating that \"a real is c.e. and random iff it is the halting\nprobability of a universal prefix-free Turing machine\" can be proven in PA. Our\nproof, which is simpler than the standard one, can also be used for the\noriginal theorem.\n  Our positive result can be contrasted with the case of computable functions,\nwhere not every computable function is provably computable in PA, or even more\ninterestingly, with the fact that almost all random finite strings are not\nprovably random in PA.\n  We also prove two negative results: a) there exists a universal machine whose\nuniversality cannot be proved in PA, b) there exists a universal machine $U$\nsuch that, based on $U$, PA cannot prove the randomness of its halting\nprobability.\n  The paper also includes a sharper form of the Kraft-Chaitin Theorem, as well\nas a formal proof of this theorem written with the proof assistant Isabelle.\n", "versions": [{"version": "v1", "created": "Fri, 15 Aug 2008 23:46:48 GMT"}, {"version": "v2", "created": "Sat, 23 Aug 2008 03:33:39 GMT"}, {"version": "v3", "created": "Wed, 10 Sep 2008 16:25:29 GMT"}, {"version": "v4", "created": "Fri, 12 Sep 2008 05:33:16 GMT"}, {"version": "v5", "created": "Sun, 7 Jun 2009 19:50:04 GMT"}], "update_date": "2009-06-08", "authors_parsed": [["Calude", "Cristian S.", ""], ["Hay", "Nicholas J.", ""]]}, {"id": "0808.3574", "submitter": "Mehrnoosh Sadrzadeh", "authors": "Ellie D'Hondt and Mehrnoosh Sadrzadeh", "title": "Classical Knowledge for Quantum Security", "comments": "extended abstract, 13 pages", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.CR cs.LO quant-ph", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We propose a decision procedure for analysing security of quantum\ncryptographic protocols, combining a classical algebraic rewrite system for\nknowledge with an operational semantics for quantum distributed computing. As a\ntest case, we use our procedure to reason about security properties of a\nrecently developed quantum secret sharing protocol that uses graph states. We\nanalyze three different scenarios based on the safety assumptions of the\nclassical and quantum channels and discover the path of an attack in the\npresence of an adversary. The epistemic analysis that leads to this and similar\ntypes of attacks is purely based on our classical notion of knowledge.\n", "versions": [{"version": "v1", "created": "Tue, 26 Aug 2008 19:34:07 GMT"}], "update_date": "2008-08-28", "authors_parsed": [["D'Hondt", "Ellie", ""], ["Sadrzadeh", "Mehrnoosh", ""]]}, {"id": "0808.3651", "submitter": "Lijun Zhang", "authors": "Lijun Zhang, Holger Hermanns, Friedrich Eisenbrand and David N. Jansen", "title": "Flow Faster: Efficient Decision Algorithms for Probabilistic Simulations", "comments": "LMCS", "journal-ref": "Logical Methods in Computer Science, Volume 4, Issue 4 (November\n  11, 2008) lmcs:989", "doi": "10.2168/LMCS-4(4:6)2008", "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Strong and weak simulation relations have been proposed for Markov chains,\nwhile strong simulation and strong probabilistic simulation relations have been\nproposed for probabilistic automata. However, decision algorithms for strong\nand weak simulation over Markov chains, and for strong simulation over\nprobabilistic automata are not efficient, which makes it as yet unclear whether\nthey can be used as effectively as their non-probabilistic counterparts. This\npaper presents drastically improved algorithms to decide whether some\n(discrete- or continuous-time) Markov chain strongly or weakly simulates\nanother, or whether a probabilistic automaton strongly simulates another. The\nkey innovation is the use of parametric maximum flow techniques to amortize\ncomputations. We also present a novel algorithm for deciding strong\nprobabilistic simulation preorders on probabilistic automata, which has\npolynomial complexity via a reduction to an LP problem. When extending the\nalgorithms for probabilistic automata to their continuous-time counterpart, we\nretain the same complexity for both strong and strong probabilistic\nsimulations.\n", "versions": [{"version": "v1", "created": "Wed, 27 Aug 2008 08:35:44 GMT"}, {"version": "v2", "created": "Mon, 10 Nov 2008 23:56:01 GMT"}, {"version": "v3", "created": "Tue, 18 Nov 2008 17:00:30 GMT"}], "update_date": "2015-07-01", "authors_parsed": [["Zhang", "Lijun", ""], ["Hermanns", "Holger", ""], ["Eisenbrand", "Friedrich", ""], ["Jansen", "David N.", ""]]}, {"id": "0808.3884", "submitter": "Michael Thomas", "authors": "Olaf Beyersdorff, Arne Meier, Michael Thomas, Heribert Vollmer", "title": "The Complexity of Reasoning for Fragments of Default Logic", "comments": "Corrected version", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.CC cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Default logic was introduced by Reiter in 1980. In 1992, Gottlob classified\nthe complexity of the extension existence problem for propositional default\nlogic as $\\SigmaPtwo$-complete, and the complexity of the credulous and\nskeptical reasoning problem as SigmaP2-complete, resp. PiP2-complete.\nAdditionally, he investigated restrictions on the default rules, i.e.,\nsemi-normal default rules. Selman made in 1992 a similar approach with\ndisjunction-free and unary default rules. In this paper we systematically\nrestrict the set of allowed propositional connectives. We give a complete\ncomplexity classification for all sets of Boolean functions in the meaning of\nPost's lattice for all three common decision problems for propositional default\nlogic. We show that the complexity is a hexachotomy (SigmaP2-, DeltaP2-, NP-,\nP-, NL-complete, trivial) for the extension existence problem, while for the\ncredulous and skeptical reasoning problem we obtain similar classifications\nwithout trivial cases.\n", "versions": [{"version": "v1", "created": "Thu, 28 Aug 2008 11:14:41 GMT"}, {"version": "v2", "created": "Mon, 1 Sep 2008 09:20:55 GMT"}, {"version": "v3", "created": "Mon, 17 Nov 2008 21:48:08 GMT"}, {"version": "v4", "created": "Mon, 23 Aug 2010 12:37:06 GMT"}], "update_date": "2010-08-24", "authors_parsed": [["Beyersdorff", "Olaf", ""], ["Meier", "Arne", ""], ["Thomas", "Michael", ""], ["Vollmer", "Heribert", ""]]}, {"id": "0808.3928", "submitter": "Benjamin Werner", "authors": "Benjamin Werner", "title": "On the strength of proof-irrelevant type theories", "comments": "20 pages, Logical Methods in Computer Science, Long version of IJCAR\n  2006 paper", "journal-ref": "Logical Methods in Computer Science, Volume 4, Issue 3 (September\n  26, 2008) lmcs:1142", "doi": "10.2168/LMCS-4(3:13)2008", "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We present a type theory with some proof-irrelevance built into the\nconversion rule. We argue that this feature is useful when type theory is used\nas the logical formalism underlying a theorem prover. We also show a close\nrelation with the subset types of the theory of PVS. We show that in these\ntheories, because of the additional extentionality, the axiom of choice implies\nthe decidability of equality, that is, almost classical logic. Finally we\ndescribe a simple set-theoretic semantics.\n", "versions": [{"version": "v1", "created": "Thu, 28 Aug 2008 15:31:31 GMT"}, {"version": "v2", "created": "Thu, 25 Sep 2008 22:32:15 GMT"}], "update_date": "2015-07-01", "authors_parsed": [["Werner", "Benjamin", ""]]}, {"id": "0808.4133", "submitter": "Dmitry Shkatov", "authors": "Valentin Goranko, Dmitry Shkatov", "title": "Tableau-based decision procedure for the multi-agent epistemic logic\n  with operators of common and distributed knowledge", "comments": "To appear in the Proceedings of the 6th IEEE Conference on Software\n  Engineering and Formal Methods (SEFM 2008)", "journal-ref": null, "doi": "10.1109/SEFM.2008.27", "report-no": null, "categories": "cs.LO cs.MA", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We develop an incremental-tableau-based decision procedure for the\nmulti-agent epistemic logic MAEL(CD) (aka S5_n (CD)), whose language contains\noperators of individual knowledge for a finite set Ag of agents, as well as\noperators of distributed and common knowledge among all agents in Ag. Our\ntableau procedure works in (deterministic) exponential time, thus establishing\nan upper bound for MAEL(CD)-satisfiability that matches the (implicit)\nlower-bound known from earlier results, which implies ExpTime-completeness of\nMAEL(CD)-satisfiability. Therefore, our procedure provides a complexity-optimal\nalgorithm for checking MAEL(CD)-satisfiability, which, however, in most cases\nis much more efficient. We prove soundness and completeness of the procedure,\nand illustrate it with an example.\n", "versions": [{"version": "v1", "created": "Fri, 29 Aug 2008 17:09:06 GMT"}], "update_date": "2016-11-17", "authors_parsed": [["Goranko", "Valentin", ""], ["Shkatov", "Dmitry", ""]]}]