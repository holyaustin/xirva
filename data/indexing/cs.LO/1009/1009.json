[{"id": "1009.0673", "submitter": "Viorica  Sofronie-Stokkermans", "authors": "Carsten Ihlemann, Viorica Sofronie-Stokkermans", "title": "System Description: H-PILoT (Version 1.9)", "comments": "43 pages; A version of this system description appeared as AVACS\n  technical report Nr. 61 (SFB/TR 14) http://www.avacs.org", "journal-ref": null, "doi": null, "report-no": "AVACS technical report Nr. 61 (SFB/TR 14)", "categories": "cs.LO cs.SC cs.SE", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This system description provides an overview of H-PILoT (Hierarchical Proving\nby Instantiation in Local Theory extensions), a program for hierarchical\nreasoning in extensions of logical theories. H-PILoT reduces deduction problems\nin the theory extension to deduction problems in the base theory. Specialized\nprovers and standard SMT solvers can be used for testing the satisfiability of\nthe formulae obtained after the reduction. For a certain type of theory\nextension (namely for local theory extensions) this hierarchical reduction is\nsound and complete and -- if the formulae obtained this way belong to a\nfragment decidable in the base theory -- H-PILoT provides a decision procedure\nfor testing satisfiability of ground formulae, and can also be used for model\ngeneration.\n", "versions": [{"version": "v1", "created": "Fri, 3 Sep 2010 14:02:24 GMT"}], "update_date": "2010-09-06", "authors_parsed": [["Ihlemann", "Carsten", ""], ["Sofronie-Stokkermans", "Viorica", ""]]}, {"id": "1009.1076", "submitter": "leroux jerome", "authors": "leroux jerome (LABRI, CNRS)", "title": "The General Vector Addition System Reachability Problem by Presburger\n  Inductive Invariants", "comments": null, "journal-ref": "Logical Methods in Computer Science, Volume 6, Issue 3 (September\n  9, 2010) lmcs:1024", "doi": "10.2168/LMCS-6(3:22)2010", "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The reachability problem for Vector Addition Systems (VASs) is a central\nproblem of net theory. The general problem is known to be decidable by\nalgorithms exclusively based on the classical\nKosaraju-Lambert-Mayr-Sacerdote-Tenney decomposition. This decomposition is\nused in this paper to prove that the Parikh images of languages recognized by\nVASs are semi-pseudo-linear; a class that extends the semi-linear sets, a.k.a.\nthe sets definable in Presburger arithmetic. We provide an application of this\nresult; we prove that a final configuration is not reachable from an initial\none if and only if there exists a semi-linear inductive invariant that contains\nthe initial configuration but not the final one. Since we can decide if a\nPresburger formula denotes an inductive invariant, we deduce that there exist\ncheckable certificates of non-reachability. In particular, there exists a\nsimple algorithm for deciding the general VAS reachability problem based on two\nsemi-algorithms. A first one that tries to prove the reachability by\nenumerating finite sequences of actions and a second one that tries to prove\nthe non-reachability by enumerating Presburger formulas.\n", "versions": [{"version": "v1", "created": "Mon, 6 Sep 2010 15:08:07 GMT"}, {"version": "v2", "created": "Thu, 9 Sep 2010 12:48:05 GMT"}], "update_date": "2015-07-01", "authors_parsed": [["jerome", "leroux", "", "LABRI, CNRS"]]}, {"id": "1009.1861", "submitter": "William Lovas", "authors": "William Lovas (Carnegie Mellon University), Frank Pfenning (Carnegie\n  Mellon University)", "title": "Refinement Types for Logical Frameworks and Their Interpretation as\n  Proof Irrelevance", "comments": null, "journal-ref": "Logical Methods in Computer Science, Volume 6, Issue 4 (December\n  5, 2010) lmcs:1063", "doi": "10.2168/LMCS-6(4:5)2010", "report-no": null, "categories": "cs.PL cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Refinement types sharpen systems of simple and dependent types by offering\nexpressive means to more precisely classify well-typed terms. We present a\nsystem of refinement types for LF in the style of recent formulations where\nonly canonical forms are well-typed. Both the usual LF rules and the rules for\ntype refinements are bidirectional, leading to a straightforward proof of\ndecidability of typechecking even in the presence of intersection types.\nBecause we insist on canonical forms, structural rules for subtyping can now be\nderived rather than being assumed as primitive. We illustrate the expressive\npower of our system with examples and validate its design by demonstrating a\nprecise correspondence with traditional presentations of subtyping. Proof\nirrelevance provides a mechanism for selectively hiding the identities of terms\nin type theories. We show that LF refinement types can be interpreted as\npredicates using proof irrelevance, establishing a uniform relationship between\ntwo previously studied concepts in type theory. The interpretation and its\ncorrectness proof are surprisingly complex, lending support to the claim that\nrefinement types are a fundamental construct rather than just a convenient\nsurface syntax for certain uses of proof irrelevance.\n", "versions": [{"version": "v1", "created": "Thu, 9 Sep 2010 19:17:53 GMT"}, {"version": "v2", "created": "Sun, 5 Dec 2010 11:11:08 GMT"}, {"version": "v3", "created": "Thu, 9 Dec 2010 20:50:29 GMT"}, {"version": "v4", "created": "Mon, 13 Dec 2010 10:21:38 GMT"}], "update_date": "2015-07-01", "authors_parsed": [["Lovas", "William", "", "Carnegie Mellon University"], ["Pfenning", "Frank", "", "Carnegie\n  Mellon University"]]}, {"id": "1009.1976", "submitter": "Carlos A. Romero-Diaz", "authors": "Rafael Caballero, Mario Rodr\\'iguez-Artalejo and Carlos A.\n  Romero-D\\'iaz", "title": "A Transformation-based Implementation for CLP with Qualification and\n  Proximity", "comments": "49 pages, 5 figures, 1 table, preliminary version of an article of\n  the same title, published as Technical Report SIC-4-10, Universidad\n  Complutense, Departamento de Sistemas Inform\\'aticos y Computaci\\'on, Madrid,\n  Spain", "journal-ref": null, "doi": null, "report-no": "SIC-4-10", "categories": "cs.LO cs.PL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Uncertainty in logic programming has been widely investigated in the last\ndecades, leading to multiple extensions of the classical LP paradigm. However,\nfew of these are designed as extensions of the well-established and powerful\nCLP scheme for Constraint Logic Programming. In a previous work we have\nproposed the SQCLP (proximity-based qualified constraint logic programming)\nscheme as a quite expressive extension of CLP with support for qualification\nvalues and proximity relations as generalizations of uncertainty values and\nsimilarity relations, respectively. In this paper we provide a transformation\ntechnique for transforming SQCLP programs and goals into semantically\nequivalent CLP programs and goals, and a practical Prolog-based implementation\nof some particularly useful instances of the SQCLP scheme. We also illustrate,\nby showing some simple-and working-examples, how the prototype can be\neffectively used as a tool for solving problems where qualification values and\nproximity relations play a key role. Intended use of SQCLP includes flexible\ninformation retrieval applications.\n", "versions": [{"version": "v1", "created": "Fri, 10 Sep 2010 10:26:38 GMT"}], "update_date": "2010-09-13", "authors_parsed": [["Caballero", "Rafael", ""], ["Rodr\u00edguez-Artalejo", "Mario", ""], ["Romero-D\u00edaz", "Carlos A.", ""]]}, {"id": "1009.1977", "submitter": "Carlos A. Romero-Diaz", "authors": "Mario Rodr\\'iguez-Artalejo and Carlos A. Romero-D\\'iaz", "title": "Fixpoint & Proof-theoretic Semantics for CLP with Qualification and\n  Proximity", "comments": "47 pages, 2 figures, extended version with full proofs of A\n  Declarative Semantics for CLP with Qualification and Proximity\n  (arXiv:1007.3629). Theory and Practice of Logic Programming, 26th Int'l.\n  Conference on Logic Programming (ICLP'10) Special Issue, 10(4-6):627-642,\n  2010. Revised definition 2.10, theorem 2.1 & proposition 2.2, results\n  unchanged", "journal-ref": null, "doi": null, "report-no": "SIC-1-10", "categories": "cs.LO cs.PL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Uncertainty in Logic Programming has been investigated during the last\ndecades, dealing with various extensions of the classical LP paradigm and\ndifferent applications. Existing proposals rely on different approaches, such\nas clause annotations based on uncertain truth values, qualification values as\na generalization of uncertain truth values, and unification based on proximity\nrelations. On the other hand, the CLP scheme has established itself as a\npowerful extension of LP that supports efficient computation over specialized\ndomains while keeping a clean declarative semantics. In this report we propose\na new scheme SQCLP designed as an extension of CLP that supports qualification\nvalues and proximity relations. We show that several previous proposals can be\nviewed as particular cases of the new scheme, obtained by partial\ninstantiation. We present a declarative semantics for SQCLP that is based on\nobservables, providing fixpoint and proof-theoretical characterizations of\nleast program models as well as an implementation-independent notion of goal\nsolutions.\n", "versions": [{"version": "v1", "created": "Fri, 10 Sep 2010 10:42:09 GMT"}, {"version": "v2", "created": "Fri, 14 Jan 2011 14:21:03 GMT"}], "update_date": "2011-01-17", "authors_parsed": [["Rodr\u00edguez-Artalejo", "Mario", ""], ["Romero-D\u00edaz", "Carlos A.", ""]]}, {"id": "1009.1990", "submitter": "Michael Thomas", "authors": "Michael Thomas and Heribert Vollmer", "title": "Complexity of Non-Monotonic Logics", "comments": "To appear in Bulletin of the EATCS", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.CC cs.AI cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Over the past few decades, non-monotonic reasoning has developed to be one of\nthe most important topics in computational logic and artificial intelligence.\nDifferent ways to introduce non-monotonic aspects to classical logic have been\nconsidered, e.g., extension with default rules, extension with modal belief\noperators, or modification of the semantics. In this survey we consider a\nlogical formalism from each of the above possibilities, namely Reiter's default\nlogic, Moore's autoepistemic logic and McCarthy's circumscription.\nAdditionally, we consider abduction, where one is not interested in inferences\nfrom a given knowledge base but in computing possible explanations for an\nobservation with respect to a given knowledge base.\n  Complexity results for different reasoning tasks for propositional variants\nof these logics have been studied already in the nineties. In recent years,\nhowever, a renewed interest in complexity issues can be observed. One current\nfocal approach is to consider parameterized problems and identify reasonable\nparameters that allow for FPT algorithms. In another approach, the emphasis\nlies on identifying fragments, i.e., restriction of the logical language, that\nallow more efficient algorithms for the most important reasoning tasks. In this\nsurvey we focus on this second aspect. We describe complexity results for\nfragments of logical languages obtained by either restricting the allowed set\nof operators (e.g., forbidding negations one might consider only monotone\nformulae) or by considering only formulae in conjunctive normal form but with\ngeneralized clause types.\n  The algorithmic problems we consider are suitable variants of satisfiability\nand implication in each of the logics, but also counting problems, where one is\nnot only interested in the existence of certain objects (e.g., models of a\nformula) but asks for their number.\n", "versions": [{"version": "v1", "created": "Fri, 10 Sep 2010 12:03:44 GMT"}], "update_date": "2010-09-13", "authors_parsed": [["Thomas", "Michael", ""], ["Vollmer", "Heribert", ""]]}, {"id": "1009.2084", "submitter": "Massimiliano Dal Mas", "authors": "Massimiliano Dal Mas", "title": "Ontology Temporal Evolution for Multi-Entity Bayesian Networks under\n  Exogenous and Endogenous Semantic Updating", "comments": "20 pages", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.AI cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  It is a challenge for any Knowledge Base reasoning to manage ubiquitous\nuncertain ontology as well as uncertain updating times, while achieving\nacceptable service levels at minimum computational cost. This paper proposes an\napplication-independent merging ontologies for any open interaction system. A\nsolution that uses Multi-Entity Bayesan Networks with SWRL rules, and a Java\nprogram is presented to dynamically monitor Exogenous and Endogenous temporal\nevolution on updating merging ontologies on a probabilistic framework for the\nSemantic Web.\n", "versions": [{"version": "v1", "created": "Fri, 10 Sep 2010 19:44:07 GMT"}], "update_date": "2010-09-13", "authors_parsed": [["Mas", "Massimiliano Dal", ""]]}, {"id": "1009.2107", "submitter": "David Snyder Ph.D.", "authors": "L.G. Meredith and David F. Snyder", "title": "Knots as processes: a new kind of invariant", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "math.GT cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We exhibit an encoding of knots into processes in the {\\pi}-calculus such\nthat knots are ambient isotopic if and only their encodings are weakly\nbisimilar.\n", "versions": [{"version": "v1", "created": "Fri, 10 Sep 2010 21:34:02 GMT"}], "update_date": "2010-09-20", "authors_parsed": [["Meredith", "L. G.", ""], ["Snyder", "David F.", ""]]}, {"id": "1009.2178", "submitter": "Lunjin Lu", "authors": "Lunjin Lu and John G. Cleary", "title": "Simplifying Negative Goals Using Typed Existence Properties", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.PL cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  A method for extracting positive information from negative goals is proposed.\nIt makes use of typed existence properties between arguments of a predicate to\nrewrite negative goals in a logic program. A typed existence property is a\ngeneralization of functional dependencies in that an input value maps to a\nfixed number of output values. Types are used to specify the domains of the\ninput and output values. An implementation of the simplification method is\npresented and its complexity is analyzed. A key algorithm of the implementation\nchecks if an atom in a negative goal can be extracted using a given typed\nexistence property. A digraph links an atom to the quantified variables\noccurring in the atom and is used to quickly retrieve atoms in the negative\ngoal that may become extractable after some other atom is extracted.\n", "versions": [{"version": "v1", "created": "Sat, 11 Sep 2010 14:56:36 GMT"}], "update_date": "2010-09-14", "authors_parsed": [["Lu", "Lunjin", ""], ["Cleary", "John G.", ""]]}, {"id": "1009.2189", "submitter": "EPTCS", "authors": "Karl Crary, Marino Miculan", "title": "Proceedings 5th International Workshop on Logical Frameworks and\n  Meta-languages: Theory and Practice", "comments": null, "journal-ref": "EPTCS 34, 2010", "doi": "10.4204/EPTCS.34", "report-no": null, "categories": "cs.LO cs.PL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Type theories, logical frameworks and meta-languages form a common foundation\nfor designing, implementing, and reasoning about formal languages and their\nsemantics. They are central to the design of modern programming languages,\ncertified software, and domain specific logics. More generally, they continue\nto influence applications in many areas in mathematics, logic and computer\nscience.\n  The Logical Frameworks and Meta-languages: Theory and Practice workshop aims\nto bring together designers, implementers, and practitioners working on these\nareas, and in particular about: the automation and implementation of the\nmeta-theory of programming languages and related calculi; the design of proof\nassistants, automated theorem provers, and formal digital libraries building\nupon logical framework technology; theoretical and practical issues concerning\nthe encoding of variable binding and fresh name generation, especially the\nrepresentation of, and reasoning about, datatypes defined from binding\nsignatures; case studies of meta-programming, and the mechanization of the\n(meta) theory of descriptions of programming languages and other calculi.\n  This volume contains the final and revised versions of the papers presented\nat LFMTP 2010, which was held on July 14, 2010 in Edinburgh (UK). LFMTP 2010\nwas part of the Federated Logic Conference (FLoC 2010), and affilated with LICS\n2010.\n", "versions": [{"version": "v1", "created": "Sat, 11 Sep 2010 17:43:53 GMT"}], "update_date": "2010-09-14", "authors_parsed": [["Crary", "Karl", ""], ["Miculan", "Marino", ""]]}, {"id": "1009.2259", "submitter": "Andrew Mironov", "authors": "Andrew M. Mironov", "title": "Theory of processes", "comments": "290 pages", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The book gives a detailed exposition of basic concepts and results of a\ntheory of processes. The presentation of theoretical concepts and results is\naccompanied with illustrations of their application to solving various problems\nof verification of processes. Along with well-known results there are presented\nauthor's results related to verification of processes with message passing, and\nthere are given examples of an application of these results.\n", "versions": [{"version": "v1", "created": "Sun, 12 Sep 2010 19:11:05 GMT"}], "update_date": "2010-09-14", "authors_parsed": [["Mironov", "Andrew M.", ""]]}, {"id": "1009.2789", "submitter": "EPTCS", "authors": "Andreas Abel (Ludwig-Maximilians-University), Brigitte Pientka (McGill\n  University)", "title": "Explicit Substitutions for Contextual Type Theory", "comments": "In Proceedings LFMTP 2010, arXiv:1009.2189", "journal-ref": "EPTCS 34, 2010, pp. 5-20", "doi": "10.4204/EPTCS.34.3", "report-no": null, "categories": "cs.LO cs.PL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In this paper, we present an explicit substitution calculus which\ndistinguishes between ordinary bound variables and meta-variables. Its typing\ndiscipline is derived from contextual modal type theory. We first present a\ndependently typed lambda calculus with explicit substitutions for ordinary\nvariables and explicit meta-substitutions for meta-variables. We then present a\nweak head normalization procedure which performs both substitutions lazily and\nin a single pass thereby combining substitution walks for the two different\nclasses of variables. Finally, we describe a bidirectional type checking\nalgorithm which uses weak head normalization and prove soundness.\n", "versions": [{"version": "v1", "created": "Tue, 14 Sep 2010 21:33:26 GMT"}], "update_date": "2010-09-16", "authors_parsed": [["Abel", "Andreas", "", "Ludwig-Maximilians-University"], ["Pientka", "Brigitte", "", "McGill\n  University"]]}, {"id": "1009.2790", "submitter": "EPTCS", "authors": "John Tang Boyland", "title": "Generating Bijections between HOAS and the Natural Numbers", "comments": "In Proceedings LFMTP 2010, arXiv:1009.2189", "journal-ref": "EPTCS 34, 2010, pp. 21-35", "doi": "10.4204/EPTCS.34.4", "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  A provably correct bijection between higher-order abstract syntax (HOAS) and\nthe natural numbers enables one to define a \"not equals\" relationship between\nterms and also to have an adequate encoding of sets of terms, and maps from one\nterm family to another. Sets and maps are useful in many situations and are\npreferably provided in a library of some sort. I have released a map and set\nlibrary for use with Twelf which can be used with any type for which a\nbijection to the natural numbers exists.\n  Since creating such bijections is tedious and error-prone, I have created a\n\"bijection generator\" that generates such bijections automatically together\nwith proofs of correctness, all in the context of Twelf.\n", "versions": [{"version": "v1", "created": "Tue, 14 Sep 2010 21:33:30 GMT"}], "update_date": "2010-09-16", "authors_parsed": [["Boyland", "John Tang", ""]]}, {"id": "1009.2791", "submitter": "EPTCS", "authors": "Maribel Fern\\'andez (King's College London), Murdoch J. Gabbay\n  (Heriot-Watt University)", "title": "Closed nominal rewriting and efficiently computable nominal algebra\n  equality", "comments": "In Proceedings LFMTP 2010, arXiv:1009.2189", "journal-ref": "EPTCS 34, 2010, pp. 37-51", "doi": "10.4204/EPTCS.34.5", "report-no": null, "categories": "cs.LO cs.PL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We analyse the relationship between nominal algebra and nominal rewriting,\ngiving a new and concise presentation of equational deduction in nominal\ntheories. With some new results, we characterise a subclass of equational\ntheories for which nominal rewriting provides a complete procedure to check\nnominal algebra equality. This subclass includes specifications of the\nlambda-calculus and first-order logic.\n", "versions": [{"version": "v1", "created": "Tue, 14 Sep 2010 21:33:35 GMT"}], "update_date": "2010-09-16", "authors_parsed": [["Fern\u00e1ndez", "Maribel", "", "King's College London"], ["Gabbay", "Murdoch J.", "", "Heriot-Watt University"]]}, {"id": "1009.2792", "submitter": "EPTCS", "authors": "Herman Geuvers (Radboud University Nijmegen), Robbert Krebbers\n  (Radboud University Nijmegen), James McKinna (Radboud University Nijmegen),\n  Freek Wiedijk (Radboud University Nijmegen)", "title": "Pure Type Systems without Explicit Contexts", "comments": "In Proceedings LFMTP 2010, arXiv:1009.2189", "journal-ref": "EPTCS 34, 2010, pp. 53-67", "doi": "10.4204/EPTCS.34.6", "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We present an approach to type theory in which the typing judgments do not\nhave explicit contexts. Instead of judgments of shape \"Gamma |- A : B\", our\nsystems just have judgments of shape \"A : B\". A key feature is that we\ndistinguish free and bound variables even in pseudo-terms.\n  Specifically we give the rules of the \"Pure Type System\" class of type\ntheories in this style. We prove that the typing judgments of these systems\ncorrespond in a natural way with those of Pure Type Systems as traditionally\nformulated. I.e., our systems have exactly the same well-typed terms as\ntraditional presentations of type theory.\n  Our system can be seen as a type theory in which all type judgments share an\nidentical, infinite, typing context that has infinitely many variables for each\npossible type. For this reason we call our system \"Gamma_infinity\". This name\nmeans to suggest that our type judgment \"A : B\" should be read as\n\"Gamma_infinity |- A : B\", with a fixed infinite type context called\n\"Gamma_infinity\".\n", "versions": [{"version": "v1", "created": "Tue, 14 Sep 2010 21:33:39 GMT"}], "update_date": "2010-09-16", "authors_parsed": [["Geuvers", "Herman", "", "Radboud University Nijmegen"], ["Krebbers", "Robbert", "", "Radboud University Nijmegen"], ["McKinna", "James", "", "Radboud University Nijmegen"], ["Wiedijk", "Freek", "", "Radboud University Nijmegen"]]}, {"id": "1009.2793", "submitter": "EPTCS", "authors": "Daniel R. Licata (Carnegie Mellon University), Robert Harper (Carnegie\n  Mellon University)", "title": "A Monadic Formalization of ML5", "comments": "In Proceedings LFMTP 2010, arXiv:1009.2189", "journal-ref": "EPTCS 34, 2010, pp. 69-83", "doi": "10.4204/EPTCS.34.7", "report-no": null, "categories": "cs.PL cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  ML5 is a programming language for spatially distributed computing, based on a\nCurry-Howard correspondence with the modal logic S5. Despite being designed by\na correspondence with S5 modal logic, the ML5 programming language differs from\nthe logic in several ways. In this paper, we explain these discrepancies\nbetween ML5 and S5 by translating ML5 into a slightly different logic:\nintuitionistic S5 extended with a lax modality that encapsulates effectful\ncomputations in a monad. This translation both explains the existing ML5 design\nand suggests some simplifications and generalizations. We have formalized our\ntranslation within the Agda proof assistant. Rather than formalizing lax S5 as\na proof theory, we \\emph{embed} it as a universe within the the dependently\ntyped host language, with the universe elimination given by implementing the\nmodal logic's Kripke semantics. This representation technique saves us the work\nof defining a proof theory for the logic and proving it correct, and\nadditionally allows us to inherit the equational theory of the meta-language,\nwhich can be exploited in proving that the semantics validates the operational\nsemantics of ML5.\n", "versions": [{"version": "v1", "created": "Tue, 14 Sep 2010 21:33:45 GMT"}], "update_date": "2010-09-16", "authors_parsed": [["Licata", "Daniel R.", "", "Carnegie Mellon University"], ["Harper", "Robert", "", "Carnegie\n  Mellon University"]]}, {"id": "1009.2794", "submitter": "EPTCS", "authors": "Florian Rabe (Jacobs University Bremen)", "title": "Representing Isabelle in LF", "comments": "In Proceedings LFMTP 2010, arXiv:1009.2189", "journal-ref": "EPTCS 34, 2010, pp. 85-99", "doi": "10.4204/EPTCS.34.8", "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  LF has been designed and successfully used as a meta-logical framework to\nrepresent and reason about object logics. Here we design a representation of\nthe Isabelle logical framework in LF using the recently introduced module\nsystem for LF. The major novelty of our approach is that we can naturally\nrepresent the advanced Isabelle features of type classes and locales.\n  Our representation of type classes relies on a feature so far lacking in the\nLF module system: morphism variables and abstraction over them. While\nconservative over the present system in terms of expressivity, this feature is\nneeded for a representation of type classes that preserves the modular\nstructure. Therefore, we also design the necessary extension of the LF module\nsystem.\n", "versions": [{"version": "v1", "created": "Tue, 14 Sep 2010 21:33:49 GMT"}], "update_date": "2010-09-16", "authors_parsed": [["Rabe", "Florian", "", "Jacobs University Bremen"]]}, {"id": "1009.2795", "submitter": "EPTCS", "authors": "Anders Schack-Nielsen (IT University of Copenhagen), Carsten\n  Sch\\\"urmann (IT University of Copenhagen)", "title": "Pattern Unification for the Lambda Calculus with Linear and Affine Types", "comments": "In Proceedings LFMTP 2010, arXiv:1009.2189", "journal-ref": "EPTCS 34, 2010, pp. 101-116", "doi": "10.4204/EPTCS.34.9", "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We define the pattern fragment for higher-order unification problems in\nlinear and affine type theory and give a deterministic unification algorithm\nthat computes most general unifiers.\n", "versions": [{"version": "v1", "created": "Tue, 14 Sep 2010 21:33:54 GMT"}], "update_date": "2010-09-16", "authors_parsed": [["Schack-Nielsen", "Anders", "", "IT University of Copenhagen"], ["Sch\u00fcrmann", "Carsten", "", "IT University of Copenhagen"]]}, {"id": "1009.2803", "submitter": "Jacob Vosmaer", "authors": "Mai Gehrke and Jacob Vosmaer", "title": "A view of canonical extension", "comments": "24 pages, 2 figures. Presented at the Eighth International Tbilisi\n  Symposium on Language, Logic and Computation Bakuriani, Georgia, September\n  21-25 2009", "journal-ref": "N. Bezhanishvili and L. Spada (eds) TbiLLC 2009 proceedings, LNAI\n  6618, pp. 77-100, 2011", "doi": null, "report-no": null, "categories": "math.LO cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This is a short survey illustrating some of the essential aspects of the\ntheory of canonical extensions. In addition some topological results about\ncanonical extensions of lattices with additional operations in finitely\ngenerated varieties are given. In particular, they are doubly algebraic\nlattices and their interval topologies agree with their double Scott topologies\nand make them Priestley topological algebras.\n", "versions": [{"version": "v1", "created": "Tue, 14 Sep 2010 22:27:27 GMT"}], "update_date": "2012-02-16", "authors_parsed": [["Gehrke", "Mai", ""], ["Vosmaer", "Jacob", ""]]}, {"id": "1009.2854", "submitter": "Mikolaj Bojanczyk", "authors": "Mikolaj Bojanczyk (Warsaw University), Luc Segoufin (INRIA)", "title": "Tree Languages Defined in First-Order Logic with One Quantifier\n  Alternation", "comments": null, "journal-ref": "Logical Methods in Computer Science, Volume 6, Issue 4 (October\n  20, 2010) lmcs:699", "doi": "10.2168/LMCS-6(4:1)2010", "report-no": null, "categories": "cs.FL cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We study tree languages that can be defined in \\Delta_2 . These are tree\nlanguages definable by a first-order formula whose quantifier prefix is forall\nexists, and simultaneously by a first-order formula whose quantifier prefix is\n. For the quantifier free part we consider two signatures, either the\ndescendant relation alone or together with the lexicographical order relation\non nodes. We provide an effective characterization of tree and forest languages\ndefinable in \\Delta_2 . This characterization is in terms of algebraic\nequations. Over words, the class of word languages definable in \\Delta_2 forms\na robust class, which was given an effective algebraic characterization by Pin\nand Weil.\n", "versions": [{"version": "v1", "created": "Wed, 15 Sep 2010 07:15:59 GMT"}, {"version": "v2", "created": "Wed, 20 Oct 2010 08:28:48 GMT"}], "update_date": "2019-03-14", "authors_parsed": [["Bojanczyk", "Mikolaj", "", "Warsaw University"], ["Segoufin", "Luc", "", "INRIA"]]}, {"id": "1009.2893", "submitter": "Juha Kontinen", "authors": "Juha Kontinen (University of Helsinki, Finland), Heribert Vollmer\n  (University of Hannover, Germany)", "title": "On Second-Order Monadic Monoidal and Groupoidal Quantifiers", "comments": null, "journal-ref": "Logical Methods in Computer Science, Volume 6, Issue 3 (September\n  20, 2010) lmcs:1006", "doi": "10.2168/LMCS-6(3:25)2010", "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We study logics defined in terms of second-order monadic monoidal and\ngroupoidal quantifiers. These are generalized quantifiers defined by monoid and\ngroupoid word-problems, equivalently, by regular and context-free languages. We\ngive a computational classification of the expressive power of these logics\nover strings with varying built-in predicates. In particular, we show that\nATIME(n) can be logically characterized in terms of second-order monadic\nmonoidal quantifiers.\n", "versions": [{"version": "v1", "created": "Wed, 15 Sep 2010 10:30:50 GMT"}, {"version": "v2", "created": "Mon, 20 Sep 2010 08:22:57 GMT"}], "update_date": "2015-07-01", "authors_parsed": [["Kontinen", "Juha", "", "University of Helsinki, Finland"], ["Vollmer", "Heribert", "", "University of Hannover, Germany"]]}, {"id": "1009.3306", "submitter": "EPTCS", "authors": "Gwen Sala\\\"un, Xiang Fu, Sylvain Hall\\'e", "title": "Proceedings Fourth International Workshop on Testing, Analysis and\n  Verification of Web Software", "comments": null, "journal-ref": "EPTCS 35, 2010", "doi": "10.4204/EPTCS.35", "report-no": null, "categories": "cs.SE cs.FL cs.LO cs.PL cs.SC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This volume contains the papers presented at the fourth international\nworkshop on Testing, Analysis and Verification of Software, which was\nassociated with the 25th IEEE/ACM International Conference on Automated\nSoftware Engineering (ASE 2010). The collection of papers includes research on\nformal specification, model-checking, testing, and debugging of Web software.\n", "versions": [{"version": "v1", "created": "Fri, 17 Sep 2010 00:54:03 GMT"}], "update_date": "2010-09-20", "authors_parsed": [["Sala\u00fcn", "Gwen", ""], ["Fu", "Xiang", ""], ["Hall\u00e9", "Sylvain", ""]]}, {"id": "1009.3391", "submitter": "Fernando Bobillo", "authors": "Fernando Bobillo, Umberto Straccia", "title": "Fuzzy Ontology Representation using OWL 2", "comments": "v3: 32 pages, LaTeX; the new version includes a restriction in the\n  syntax of weighted sum concepts, and changes the order of the paragraph\n  \"Notation\". v2: 32 pages, LaTeX; the new version extends the previous one\n  with fuzzy modified datatypes, which means changes in the syntax (Section\n  3.1), semantics (Section 3.2), and their representation using OWL 2 (Section\n  4.4)", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The need to deal with vague information in Semantic Web languages is rising\nin importance and, thus, calls for a standard way to represent such\ninformation. We may address this issue by either extending current Semantic Web\nlanguages to cope with vagueness, or by providing a procedure to represent such\ninformation within current standard languages and tools. In this work, we\nfollow the latter approach, by identifying the syntactic differences that a\nfuzzy ontology language has to cope with, and by proposing a concrete\nmethodology to represent fuzzy ontologies using OWL 2 annotation properties. We\nalso report on the prototypical implementations.\n", "versions": [{"version": "v1", "created": "Fri, 17 Sep 2010 10:30:14 GMT"}, {"version": "v2", "created": "Tue, 26 Oct 2010 15:37:26 GMT"}, {"version": "v3", "created": "Thu, 4 Nov 2010 11:54:09 GMT"}], "update_date": "2010-11-05", "authors_parsed": [["Bobillo", "Fernando", ""], ["Straccia", "Umberto", ""]]}, {"id": "1009.3410", "submitter": "Sam van Gool", "authors": "Sam van Gool", "title": "Duality and canonical extensions for stably compact spaces", "comments": "29 pages, 1 figure", "journal-ref": "Topology and its Applications, Vol. 159, No. 1, pp. 341-359 (2012)", "doi": "10.1016/j.topol.2011.09.040", "report-no": null, "categories": "math.GN cs.LO math.CT math.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We construct a canonical extension for strong proximity lattices in order to\ngive an algebraic, point-free description of a finitary duality for stably\ncompact spaces. In this setting not only morphisms, but also objects may have\ndistinct pi- and sigma-extensions.\n", "versions": [{"version": "v1", "created": "Fri, 17 Sep 2010 13:00:25 GMT"}, {"version": "v2", "created": "Sat, 8 Oct 2011 11:18:14 GMT"}], "update_date": "2012-06-28", "authors_parsed": [["van Gool", "Sam", ""]]}, {"id": "1009.3429", "submitter": "Barbara Petit", "authors": "Barbara Petit (LIP - ENS Lyon - Universite de Lyon)", "title": "Semantics of Typed Lambda-Calculus with Constructors", "comments": null, "journal-ref": "Logical Methods in Computer Science, Volume 7, Issue 1 (March 16,\n  2011) lmcs:1067", "doi": "10.2168/LMCS-7(1:2)2011", "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We present a Curry-style second-order type system with union and intersection\ntypes for the lambda-calculus with constructors of Arbiser, Miquel and Rios, an\nextension of lambda-calculus with a pattern matching mechanism for variadic\nconstructors. We then prove the strong normalisation and the absence of match\nfailure for a restriction of this system, by adapting the standard reducibility\nmethod.\n", "versions": [{"version": "v1", "created": "Fri, 17 Sep 2010 14:09:12 GMT"}, {"version": "v2", "created": "Tue, 21 Dec 2010 23:46:24 GMT"}, {"version": "v3", "created": "Wed, 16 Mar 2011 17:35:40 GMT"}], "update_date": "2019-03-14", "authors_parsed": [["Petit", "Barbara", "", "LIP - ENS Lyon - Universite de Lyon"]]}, {"id": "1009.3682", "submitter": "Richard Garner", "authors": "Richard Garner", "title": "An abstract view on syntax with sharing", "comments": "26 pages; v2: final journal version", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO math.CT", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The notion of term graph encodes a refinement of inductively generated syntax\nin which regard is paid to the the sharing and discard of subterms. Inductively\ngenerated syntax has an abstract expression in terms of initial algebras for\ncertain endofunctors on the category of sets, which permits one to go beyond\nthe set-based case, and speak of inductively generated syntax in other\nsettings. In this paper we give a similar abstract expression to the notion of\nterm graph. Aspects of the concrete theory are redeveloped in this setting, and\napplications beyond the realm of sets discussed.\n", "versions": [{"version": "v1", "created": "Mon, 20 Sep 2010 02:36:08 GMT"}, {"version": "v2", "created": "Fri, 14 Oct 2011 05:28:42 GMT"}], "update_date": "2011-10-17", "authors_parsed": [["Garner", "Richard", ""]]}, {"id": "1009.3716", "submitter": "EPTCS", "authors": "Gwen Sala\\\"un", "title": "Analysis and Verification of Service Interaction Protocols - A Brief\n  Survey", "comments": "In Proceedings TAV-WEB 2010, arXiv:1009.3306", "journal-ref": "EPTCS 35, 2010, pp. 75-86", "doi": "10.4204/EPTCS.35.7", "report-no": null, "categories": "cs.SE cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Modeling and analysis of interactions among services is a crucial issue in\nService-Oriented Computing. Composing Web services is a complicated task which\nrequires techniques and tools to verify that the new system will behave\ncorrectly. In this paper, we first overview some formal models proposed in the\nliterature to describe services. Second, we give a brief survey of verification\ntechniques that can be used to analyse services and their interaction. Last, we\nfocus on the realizability and conformance of choreographies.\n", "versions": [{"version": "v1", "created": "Mon, 20 Sep 2010 07:19:58 GMT"}], "update_date": "2010-09-21", "authors_parsed": [["Sala\u00fcn", "Gwen", ""]]}, {"id": "1009.3765", "submitter": "Germ\\'an Vidal", "authors": "Peter Biener, Fran\\c{c}ois Degrave, Wim Vanhoof", "title": "A Test Automation Framework for Mercury", "comments": "Online proceedings of the Joint Workshop on Implementation of\n  Constraint Logic Programming Systems and Logic-based Methods in Programming\n  Environments (CICLOPS-WLPE 2010), Edinburgh, Scotland, U.K., July 15, 2010", "journal-ref": "Proceedings of CICLOPS-WLPE 2010", "doi": null, "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This paper presents a test automation framework for Mercury programs. We\ndeveloped a method that generates runnable Mercury code from a formalized test\nsuite, and which code provides a report on execution about the success of test\ncases. We also developed a coverage tool for the framework, which identifies\nand provide a visualization of the reached parts of the program when executing\na given test suite.\n", "versions": [{"version": "v1", "created": "Mon, 20 Sep 2010 10:43:19 GMT"}], "update_date": "2010-09-21", "authors_parsed": [["Biener", "Peter", ""], ["Degrave", "Fran\u00e7ois", ""], ["Vanhoof", "Wim", ""]]}, {"id": "1009.3770", "submitter": "Germ\\'an Vidal", "authors": "Petra Hofstedt", "title": "Realizing evaluation strategies by hierarchical graph rewriting", "comments": "Online proceedings of the Joint Workshop on Implementation of\n  Constraint Logic Programming Systems and Logic-based Methods in Programming\n  Environments (CICLOPS-WLPE 2010), Edinburgh, Scotland, U.K., July 15, 2010", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO cs.PL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We discuss the realization of evaluation strategies for the concurrent\nconstraint-based functional language CCFL within the translation schemata when\ncompiling CCFL programs into the hierarchical graph rewriting language LMNtal.\n  The support of LMNtal to express local computations and to describe the\nmigration of processes and rules between local computation spaces allows a\nclear and simple encoding of typical evaluation strategies.\n", "versions": [{"version": "v1", "created": "Mon, 20 Sep 2010 10:50:09 GMT"}], "update_date": "2010-09-21", "authors_parsed": [["Hofstedt", "Petra", ""]]}, {"id": "1009.3798", "submitter": "Germ\\'an Vidal", "authors": "Dimitar Sht. Shterionov, Angelika Kimmig, Theofrastos Mantadelis,\n  Gerda Janssens", "title": "DNF Sampling for ProbLog Inference", "comments": "Online proceedings of the Joint Workshop on Implementation of\n  Constraint Logic Programming Systems and Logic-based Methods in Programming\n  Environments (CICLOPS-WLPE 2010), Edinburgh, Scotland, U.K., July 15, 2010", "journal-ref": "Proceedings of CICLOPS-WLPE 2010", "doi": null, "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Inference in probabilistic logic languages such as ProbLog, an extension of\nProlog with probabilistic facts, is often based on a reduction to a\npropositional formula in DNF. Calculating the probability of such a formula\ninvolves the disjoint-sum-problem, which is computationally hard. In this work\nwe introduce a new approximation method for ProbLog inference which exploits\nthe DNF to focus sampling. While this DNF sampling technique has been applied\nto a variety of tasks before, to the best of our knowledge it has not been used\nfor inference in probabilistic logic systems. The paper also presents an\nexperimental comparison with another sampling based inference method previously\nintroduced for ProbLog.\n", "versions": [{"version": "v1", "created": "Mon, 20 Sep 2010 12:45:09 GMT"}, {"version": "v2", "created": "Tue, 21 Sep 2010 08:40:49 GMT"}], "update_date": "2010-09-22", "authors_parsed": [["Shterionov", "Dimitar Sht.", ""], ["Kimmig", "Angelika", ""], ["Mantadelis", "Theofrastos", ""], ["Janssens", "Gerda", ""]]}, {"id": "1009.3822", "submitter": "Sergio Giro", "authors": "Sergio Giro", "title": "An algorithmic approximation of the infimum reachability probability for\n  Probabilistic Finite Automata", "comments": "7 pages, 2 figures", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Given a Probabilistic Finite Automata (PFA), a set of states S, and an error\nthreshold e > 0, our algorithm approximates the infimum probability\n(quantifying over all infinite words) that the automata reaches S. Our result\ncontrasts with the known result that the approximation problem is undecidable\nif we consider the supremum instead of the infimum. Since we study the\nprobability of reaching a set of states, instead of the probability of ending\nin an accepting state, our work is more related to model checking than to\nformal languages.\n", "versions": [{"version": "v1", "created": "Mon, 20 Sep 2010 14:02:21 GMT"}], "update_date": "2010-09-21", "authors_parsed": [["Giro", "Sergio", ""]]}, {"id": "1009.3982", "submitter": "EPTCS", "authors": "Peter Csaba \\\"Olveczky (University of Oslo)", "title": "Proceedings First International Workshop on Rewriting Techniques for\n  Real-Time Systems", "comments": null, "journal-ref": "EPTCS 36, 2010", "doi": "10.4204/EPTCS.36", "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This volume contains the proceedings of the First International Workshop on\nRewriting Techniques for Real-Time Systems (RTRTS 2010), held in Longyearbyen,\nSpitsbergen, on April 6-9, 2010.\n  The aim of the workshop is to bring together researchers with an interest in\nthe use of rewriting-based techniques (including rewriting logic) and tools for\nthe modeling, analysis, and/or implementation of real-time and hybrid systems,\nand to give them the opportunity to present their recent works, discuss future\nresearch directions, and exchange ideas. The topics of the workshop comprise,\nbut are not limited to: methods and tools supporting rewriting-based modeling\nand analysis of real-time and hybrid systems, and extensions of such systems;\nuse of rewriting techniques to provide rigorous support for model-based\nsoftware engineering of timed systems; applications and case studies; and\ncomparison with other formalisms and tools.\n", "versions": [{"version": "v1", "created": "Tue, 21 Sep 2010 02:19:53 GMT"}], "update_date": "2010-09-22", "authors_parsed": [["\u00d6lveczky", "Peter Csaba", "", "University of Oslo"]]}, {"id": "1009.4260", "submitter": "EPTCS", "authors": "Musab AlTurki (University of Illinois at Urbana-Champaign), Jos\\'e\n  Meseguer (University of Illinois at Urbana-Champaign)", "title": "Dist-Orc: A Rewriting-based Distributed Implementation of Orc with\n  Formal Analysis", "comments": "In Proceedings RTRTS 2010, arXiv:1009.3982", "journal-ref": "EPTCS 36, 2010, pp. 26-45", "doi": "10.4204/EPTCS.36.2", "report-no": null, "categories": "cs.LO cs.DC cs.PL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Orc is a theory of orchestration of services that allows structured\nprogramming of distributed and timed computations. Several formal semantics\nhave been proposed for Orc, including a rewriting logic semantics developed by\nthe authors. Orc also has a fully fledged implementation in Java with\nfunctional programming features. However, as with descriptions of most\ndistributed languages, there exists a fairly substantial gap between Orc's\nformal semantics and its implementation, in that: (i) programs in Orc are not\neasily deployable in a distributed implementation just by using Orc's formal\nsemantics, and (ii) they are not readily formally analyzable at the level of a\ndistributed Orc implementation. In this work, we overcome problems (i) and (ii)\nfor Orc. Specifically, we describe an implementation technique based on\nrewriting logic and Maude that narrows this gap considerably. The enabling\nfeature of this technique is Maude's support for external objects through TCP\nsockets. We describe how sockets are used to implement Orc site calls and\nreturns, and to provide real-time timing information to Orc expressions and\nsites. We then show how Orc programs in the resulting distributed\nimplementation can be formally analyzed at a reasonable level of abstraction by\ndefining an abstract model of time and the socket communication infrastructure,\nand discuss the assumptions under which the analysis can be deemed correct.\nFinally, the distributed implementation and the formal analysis methodology are\nillustrated with a case study.\n", "versions": [{"version": "v1", "created": "Wed, 22 Sep 2010 04:02:11 GMT"}], "update_date": "2010-09-23", "authors_parsed": [["AlTurki", "Musab", "", "University of Illinois at Urbana-Champaign"], ["Meseguer", "Jos\u00e9", "", "University of Illinois at Urbana-Champaign"]]}, {"id": "1009.4261", "submitter": "EPTCS", "authors": "Kyungmin Bae (University of Illinois at Urbana-Champaign), Peter Csaba\n  \\\"Olveczky (University of Oslo)", "title": "Extending the Real-Time Maude Semantics of Ptolemy to Hierarchical DE\n  Models", "comments": "In Proceedings RTRTS 2010, arXiv:1009.3982", "journal-ref": "EPTCS 36, 2010, pp. 46-66", "doi": "10.4204/EPTCS.36.3", "report-no": null, "categories": "cs.LO cs.FL cs.PL cs.SE", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This paper extends our Real-Time Maude formalization of the semantics of flat\nPtolemy II discrete-event (DE) models to hierarchical models, including modal\nmodels. This is a challenging task that requires combining synchronous\nfixed-point computations with hierarchical structure. The synthesis of a\nReal-Time Maude verification model from a Ptolemy II DE model, and the formal\nverification of the synthesized model in Real-Time Maude, have been integrated\ninto Ptolemy II, enabling a model-engineering process that combines the\nconvenience of Ptolemy II DE modeling and simulation with formal verification\nin Real-Time Maude.\n", "versions": [{"version": "v1", "created": "Wed, 22 Sep 2010 04:02:21 GMT"}], "update_date": "2010-09-23", "authors_parsed": [["Bae", "Kyungmin", "", "University of Illinois at Urbana-Champaign"], ["\u00d6lveczky", "Peter Csaba", "", "University of Oslo"]]}, {"id": "1009.4262", "submitter": "EPTCS", "authors": "Joakim Bj{\\o}rk (University of Oslo), Einar Broch Johnsen (University\n  of Oslo), Olaf Owe (University of Oslo), Rudolf Schlatte (University of Oslo)", "title": "Lightweight Time Modeling in Timed Creol", "comments": "In Proceedings RTRTS 2010, arXiv:1009.3982", "journal-ref": "EPTCS 36, 2010, pp. 67-81", "doi": "10.4204/EPTCS.36.4", "report-no": null, "categories": "cs.PL cs.LO cs.SE", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Creol is an object-oriented modeling language in which inherently concurrent\nobjects exchange asynchronous method calls. The operational semantics of Creol\nis written in an actor-based style, formulated in rewriting logic. The\noperational semantics yields a language interpreter in the Maude system, which\ncan be used to analyze models. Recently, Creol has been applied to the modeling\nof systems with radio communication, such as sensor systems. With radio\ncommunication, messages expire and, if sent simultaneously, they may collide in\nthe air. In order to capture these and other properties of distributed systems,\nwe extended Creol's operational semantics with a notion of time. We exploit the\nframework of a language interpreter to use a lightweight notion of time, in\ncontrast to that needed for a general purpose specification language. This\npaper presents a timed extension of Creol, including the semantics and the\nimplementation strategy, and discusses its properties using an extended\nexample. The approach can be generalized to other concurrent object or\nactor-based systems.\n", "versions": [{"version": "v1", "created": "Wed, 22 Sep 2010 04:02:27 GMT"}], "update_date": "2010-09-23", "authors_parsed": [["Bj\u00f8rk", "Joakim", "", "University of Oslo"], ["Johnsen", "Einar Broch", "", "University\n  of Oslo"], ["Owe", "Olaf", "", "University of Oslo"], ["Schlatte", "Rudolf", "", "University of Oslo"]]}, {"id": "1009.4263", "submitter": "EPTCS", "authors": "Muhammad Fadlisyah (University of Oslo), Erika \\'Abrah\\'am (RWTH\n  Aachen University), Daniela Lepri (University of Oslo), Peter Csaba\n  \\\"Olveczky (University of Oslo)", "title": "A Rewriting-Logic-Based Technique for Modeling Thermal Systems", "comments": "In Proceedings RTRTS 2010, arXiv:1009.3982", "journal-ref": "EPTCS 36, 2010, pp. 82-100", "doi": "10.4204/EPTCS.36.5", "report-no": null, "categories": "cs.LO cs.SE physics.comp-ph", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This paper presents a rewriting-logic-based modeling and analysis technique\nfor physical systems, with focus on thermal systems. The contributions of this\npaper can be summarized as follows: (i) providing a framework for modeling and\nexecuting physical systems, where both the physical components and their\nphysical interactions are treated as first-class citizens; (ii) showing how\nheat transfer problems in thermal systems can be modeled in Real-Time Maude;\n(iii) giving the implementation in Real-Time Maude of a basic numerical\ntechnique for executing continuous behaviors in object-oriented hybrid systems;\nand (iv) illustrating these techniques with a set of incremental case studies\nusing realistic physical parameters, with examples of simulation and model\nchecking analyses.\n", "versions": [{"version": "v1", "created": "Wed, 22 Sep 2010 04:02:33 GMT"}], "update_date": "2010-09-23", "authors_parsed": [["Fadlisyah", "Muhammad", "", "University of Oslo"], ["\u00c1brah\u00e1m", "Erika", "", "RWTH\n  Aachen University"], ["Lepri", "Daniela", "", "University of Oslo"], ["\u00d6lveczky", "Peter Csaba", "", "University of Oslo"]]}, {"id": "1009.4264", "submitter": "EPTCS", "authors": "Daniela Lepri, Peter Csaba \\\"Olveczky, Erika \\'Abrah\\'am", "title": "Model Checking Classes of Metric LTL Properties of Object-Oriented\n  Real-Time Maude Specifications", "comments": "In Proceedings RTRTS 2010, arXiv:1009.3982", "journal-ref": "EPTCS 36, 2010, pp. 117-136", "doi": "10.4204/EPTCS.36.7", "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This paper presents a transformational approach for model checking two\nimportant classes of metric temporal logic (MTL) properties, namely, bounded\nresponse and minimum separation, for nonhierarchical object-oriented Real-Time\nMaude specifications. We prove the correctness of our model checking\nalgorithms, which terminate under reasonable non-Zeno-ness assumptions when the\nreachable state space is finite. These new model checking features have been\nintegrated into Real-Time Maude, and are used to analyze a network of medical\ndevices and a 4-way traffic intersection system.\n", "versions": [{"version": "v1", "created": "Wed, 22 Sep 2010 04:02:44 GMT"}], "update_date": "2010-09-23", "authors_parsed": [["Lepri", "Daniela", ""], ["\u00d6lveczky", "Peter Csaba", ""], ["\u00c1brah\u00e1m", "Erika", ""]]}, {"id": "1009.4265", "submitter": "EPTCS", "authors": "Peter Csaba \\\"Olveczky (University of Oslo), Jos\\'e Meseguer\n  (University of Illinois at Urbana-Champaign)", "title": "Specification and Verification of Distributed Embedded Systems: A\n  Traffic Intersection Product Family", "comments": "In Proceedings RTRTS 2010, arXiv:1009.3982", "journal-ref": "EPTCS 36, 2010, pp. 137-157", "doi": "10.4204/EPTCS.36.8", "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Distributed embedded systems (DESs) are no longer the exception; they are the\nrule in many application areas such as avionics, the automotive industry,\ntraffic systems, sensor networks, and medical devices. Formal DES specification\nand verification is challenging due to state space explosion and the need to\nsupport real-time features. This paper reports on an extensive industry-based\ncase study involving a DES product family for a pedestrian and car 4-way\ntraffic intersection in which autonomous devices communicate by asynchronous\nmessage passing without a centralized controller. All the safety requirements\nand a liveness requirement informally specified in the requirements document\nhave been formally verified using Real-Time Maude and its model checking\nfeatures.\n", "versions": [{"version": "v1", "created": "Wed, 22 Sep 2010 04:02:51 GMT"}], "update_date": "2010-09-23", "authors_parsed": [["\u00d6lveczky", "Peter Csaba", "", "University of Oslo"], ["Meseguer", "Jos\u00e9", "", "University of Illinois at Urbana-Champaign"]]}, {"id": "1009.4266", "submitter": "EPTCS", "authors": "Mu Sun (University of Illinois at Urbana-Champaign), Jos\\'e Meseguer\n  (University of Illinois at Urbana-Champaign)", "title": "Distributed Real-Time Emulation of Formally-Defined Patterns for Safe\n  Medical Device Control", "comments": "In Proceedings RTRTS 2010, arXiv:1009.3982", "journal-ref": "EPTCS 36, 2010, pp. 158-177", "doi": "10.4204/EPTCS.36.9", "report-no": null, "categories": "cs.LO cs.SE", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Safety of medical devices and of their interoperation is an unresolved issue\ncausing severe and sometimes deadly accidents for patients with shocking\nfrequency. Formal methods, particularly in support of highly reusable and\nprovably safe patterns which can be instantiated to many device instances can\nhelp in this regard. However, this still leaves open the issue of how to pass\nfrom their formal specifications in logical time to executable emulations that\ncan interoperate in physical time with other devices and with simulations of\npatient and/or doctor behaviors. This work presents a specification-based\nmethodology in which virtual emulation environments can be easily developed\nfrom formal specifications in Real-Time Maude, and can support interactions\nwith other real devices and with simulation models. This general methodology is\nexplained in detail and is illustrated with two concrete scenarios which are\nboth instances of a common safe formal pattern: one scenario involves the\ninteraction of a provably safe pacemaker with a simulated heart; the other\ninvolves the interaction of a safe controller for patient-induced analgesia\nwith a real syringe pump.\n", "versions": [{"version": "v1", "created": "Wed, 22 Sep 2010 04:03:04 GMT"}], "update_date": "2010-09-23", "authors_parsed": [["Sun", "Mu", "", "University of Illinois at Urbana-Champaign"], ["Meseguer", "Jos\u00e9", "", "University of Illinois at Urbana-Champaign"]]}, {"id": "1009.4400", "submitter": "Olivier Laurent", "authors": "Olivier Laurent (CNRS - ENS Lyon)", "title": "Game semantics for first-order logic", "comments": null, "journal-ref": "Logical Methods in Computer Science, Volume 6, Issue 4 (October\n  20, 2010) lmcs:1130", "doi": "10.2168/LMCS-6(4:3)2010", "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We refine HO/N game semantics with an additional notion of pointer\n(mu-pointers) and extend it to first-order classical logic with completeness\nresults. We use a Church style extension of Parigot's lambda-mu-calculus to\nrepresent proofs of first-order classical logic. We present some relations with\nKrivine's classical realizability and applications to type isomorphisms.\n", "versions": [{"version": "v1", "created": "Wed, 22 Sep 2010 15:59:53 GMT"}, {"version": "v2", "created": "Wed, 20 Oct 2010 20:19:23 GMT"}], "update_date": "2015-07-01", "authors_parsed": [["Laurent", "Olivier", "", "CNRS - ENS Lyon"]]}, {"id": "1009.4601", "submitter": "EPTCS", "authors": "Michael Katelman (University of Illinois at Urbana-Champaign), Jos\\'e\n  Meseguer (University of Illinois at Urbana-Champaign)", "title": "Using the PALS Architecture to Verify a Distributed Topology Control\n  Protocol for Wireless Multi-Hop Networks in the Presence of Node Failures", "comments": "In Proceedings RTRTS 2010, arXiv:1009.3982", "journal-ref": "EPTCS 36, 2010, pp. 101-116", "doi": "10.4204/EPTCS.36.6", "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The PALS architecture reduces distributed, real-time asynchronous system\ndesign to the design of a synchronous system under reasonable requirements.\nAssuming logical synchrony leads to fewer system behaviors and provides a\nconceptually simpler paradigm for engineering purposes. One of the current\nlimitations of the framework is that from a set of independent \"synchronous\nmachines\", one must compose the entire synchronous system by hand, which is\ntedious and error-prone. We use Maude's meta-level to automatically generate a\nsynchronous composition from user-provided component machines and a description\nof how the machines communicate with each other. We then use the new\ncapabilities to verify the correctness of a distributed topology control\nprotocol for wireless networks in the presence of nodes that may fail.\n", "versions": [{"version": "v1", "created": "Wed, 22 Sep 2010 04:02:38 GMT"}], "update_date": "2010-09-24", "authors_parsed": [["Katelman", "Michael", "", "University of Illinois at Urbana-Champaign"], ["Meseguer", "Jos\u00e9", "", "University of Illinois at Urbana-Champaign"]]}, {"id": "1009.4625", "submitter": "Luca Vigan\\`o", "authors": "Alberto Calvi and Silvio Ranise and Luca Vigan\\`o", "title": "Automated Validation of Security-sensitive Web Services specified in\n  BPEL and RBAC (Extended Version)", "comments": "12 pages, 3 figures, short version to appear in the Proceedings of\n  WOSS'10, 1st Workshop on Software Services: Frameworks and Platforms", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.CR cs.LO cs.SE", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We formalize automated analysis techniques for the validation of web services\nspecified in BPEL and a RBAC variant tailored to BPEL. The idea is to use\ndecidable fragments of first-order logic to describe the state space of a\ncertain class of web services and then use state-of-the-art SMT solvers to\nhandle their reachability problems. To assess the practical viability of our\napproach, we have developed a prototype tool implementing our techniques and\napplied it to a digital contract signing service inspired by an industrial case\nstudy.\n", "versions": [{"version": "v1", "created": "Tue, 7 Sep 2010 09:55:45 GMT"}], "update_date": "2010-11-13", "authors_parsed": [["Calvi", "Alberto", ""], ["Ranise", "Silvio", ""], ["Vigan\u00f2", "Luca", ""]]}, {"id": "1009.5028", "submitter": "Marius Buliga", "authors": "Marius Buliga", "title": "What is a space? Computations in emergent algebras and the front end\n  visual system", "comments": "comments welcomed", "journal-ref": null, "doi": null, "report-no": null, "categories": "math.GR cs.LO q-bio.NC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  With the help of link diagrams with decorated crossings, I explain\ncomputations in emergent algebras, introduced in arXiv:0907.1520, as the kind\nof computations done in the front end visual system.\n", "versions": [{"version": "v1", "created": "Sat, 25 Sep 2010 19:27:41 GMT"}], "update_date": "2010-09-28", "authors_parsed": [["Buliga", "Marius", ""]]}, {"id": "1009.5206", "submitter": "Stephane Demri", "authors": "Stephane Demri (LSV, ENS Cachan, CNRS, INRIA), Alexander Rabinovich\n  (School of CS, Tel Aviv University)", "title": "The complexity of linear-time temporal logic over the class of ordinals", "comments": "Accepted for publication in LMCS", "journal-ref": "Logical Methods in Computer Science, Volume 6, Issue 4 (December\n  21, 2010) lmcs:1230", "doi": "10.2168/LMCS-6(4:9)2010", "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We consider the temporal logic with since and until modalities. This temporal\nlogic is expressively equivalent over the class of ordinals to first-order\nlogic by Kamp's theorem. We show that it has a PSPACE-complete satisfiability\nproblem over the class of ordinals. Among the consequences of our proof, we\nshow that given the code of some countable ordinal alpha and a formula, we can\ndecide in PSPACE whether the formula has a model over alpha. In order to show\nthese results, we introduce a class of simple ordinal automata, as expressive\nas B\\\"uchi ordinal automata. The PSPACE upper bound for the satisfiability\nproblem of the temporal logic is obtained through a reduction to the\nnonemptiness problem for the simple ordinal automata.\n", "versions": [{"version": "v1", "created": "Mon, 27 Sep 2010 09:58:46 GMT"}, {"version": "v2", "created": "Tue, 21 Dec 2010 12:39:09 GMT"}], "update_date": "2015-07-01", "authors_parsed": [["Demri", "Stephane", "", "LSV, ENS Cachan, CNRS, INRIA"], ["Rabinovich", "Alexander", "", "School of CS, Tel Aviv University"]]}, {"id": "1009.6171", "submitter": "Alberto Momigliano", "authors": "Alwen Tiu and Alberto Momigliano", "title": "Cut Elimination for a Logic with Induction and Co-induction", "comments": "42 pages, submitted to the Journal of Applied Logic", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Proof search has been used to specify a wide range of computation systems. In\norder to build a framework for reasoning about such specifications, we make use\nof a sequent calculus involving induction and co-induction. These proof\nprinciples are based on a proof theoretic (rather than set-theoretic) notion of\ndefinition. Definitions are akin to logic programs, where the left and right\nrules for defined atoms allow one to view theories as \"closed\" or defining\nfixed points. The use of definitions and free equality makes it possible to\nreason intentionally about syntax. We add in a consistent way rules for pre and\npost fixed points, thus allowing the user to reason inductively and\nco-inductively about properties of computational system making full use of\nhigher-order abstract syntax. Consistency is guaranteed via cut-elimination,\nwhere we give the first, to our knowledge, cut-elimination procedure in the\npresence of general inductive and co-inductive definitions.\n", "versions": [{"version": "v1", "created": "Thu, 30 Sep 2010 15:41:34 GMT"}], "update_date": "2010-10-01", "authors_parsed": [["Tiu", "Alwen", ""], ["Momigliano", "Alberto", ""]]}]