[{"id": "0905.2004", "submitter": "Yi-Dong Shen", "authors": "Yi-Dong Shen, Danny De Schreye, Dean Voets", "title": "Termination Prediction for General Logic Programs", "comments": "28 pages, 12 figures. to appear in Theory and Practice of Logic\n  Programming (TPLP)", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.PL cs.AI cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We present a heuristic framework for attacking the undecidable termination\nproblem of logic programs, as an alternative to current\ntermination/non-termination proof approaches. We introduce an idea of\ntermination prediction, which predicts termination of a logic program in case\nthat neither a termination nor a non-termination proof is applicable. We\nestablish a necessary and sufficient characterization of infinite (generalized)\nSLDNF-derivations with arbitrary (concrete or moded) queries, and develop an\nalgorithm that predicts termination of general logic programs with arbitrary\nnon-floundering queries. We have implemented a termination prediction tool and\nobtained quite satisfactory experimental results. Except for five programs\nwhich break the experiment time limit, our prediction is 100% correct for all\n296 benchmark programs of the Termination Competition 2007, of which eighteen\nprograms cannot be proved by any of the existing state-of-the-art analyzers\nlike AProVE07, NTI, Polytool and TALP.\n", "versions": [{"version": "v1", "created": "Wed, 13 May 2009 02:47:06 GMT"}], "update_date": "2009-05-14", "authors_parsed": [["Shen", "Yi-Dong", ""], ["De Schreye", "Danny", ""], ["Voets", "Dean", ""]]}, {"id": "0905.2195", "submitter": "Krishnendu Chatterjee", "authors": "Krishnendu Chatterjee and Laurent Doyen and Thomas A. Henzinger", "title": "Expressiveness and Closure Properties for Quantitative Languages", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Weighted automata are nondeterministic automata with numerical weights on\ntransitions. They can define quantitative languages $L$ that assign to each\nword $w$ a real number $L(w)$. In the case of infinite words, the value of a\nrun is naturally computed as the maximum, limsup, liminf, limit average, or\ndiscounted sum of the transition weights. We study expressiveness and closure\nquestions about these quantitative languages.\n  We first show that the set of words with value greater than a threshold can\nbe non-$\\omega$-regular for deterministic limit-average and discounted-sum\nautomata, while this set is always $\\omega$-regular when the threshold is\nisolated (i.e., some neighborhood around the threshold contains no word). In\nthe latter case, we prove that the $\\omega$-regular language is robust against\nsmall perturbations of the transition weights.\n  We next consider automata with transition weights 0 or 1 and show that they\nare as expressive as general weighted automata in the limit-average case, but\nnot in the discounted-sum case.\n  Third, for quantitative languages $L_1$ and $L_2$, we consider the operations\n$\\max(L_1,L_2)$, $\\min(L_1,L_2)$, and $1-L_1$, which generalize the boolean\noperations on languages, as well as the sum $L_1 + L_2$. We establish the\nclosure properties of all classes of quantitative languages with respect to\nthese four operations.\n", "versions": [{"version": "v1", "created": "Wed, 13 May 2009 20:27:01 GMT"}], "update_date": "2009-05-15", "authors_parsed": [["Chatterjee", "Krishnendu", ""], ["Doyen", "Laurent", ""], ["Henzinger", "Thomas A.", ""]]}, {"id": "0905.2435", "submitter": "Christoph Benzmueller", "authors": "Christoph Benzmueller, Lawrence C. Paulson", "title": "Quantified Multimodal Logics in Simple Type Theory", "comments": "ii + 22 pages", "journal-ref": null, "doi": null, "report-no": "SEKI Report SR-2009-02", "categories": "cs.AI cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We present a straightforward embedding of quantified multimodal logic in\nsimple type theory and prove its soundness and completeness. Modal operators\nare replaced by quantification over a type of possible worlds. We present\nsimple experiments, using existing higher-order theorem provers, to demonstrate\nthat the embedding allows automated proofs of statements in these logics, as\nwell as meta properties of them.\n", "versions": [{"version": "v1", "created": "Thu, 14 May 2009 22:25:24 GMT"}], "update_date": "2009-05-18", "authors_parsed": [["Benzmueller", "Christoph", ""], ["Paulson", "Lawrence C.", ""]]}, {"id": "0905.2539", "submitter": "Delia Kesner", "authors": "Delia Kesner", "title": "A Theory of Explicit Substitutions with Safe and Full Composition", "comments": "29 pages Special Issue: Selected Papers of the Conference\n  \"International Colloquium on Automata, Languages and Programming 2008\" edited\n  by Giuseppe Castagna and Igor Walukiewicz", "journal-ref": "Logical Methods in Computer Science, Volume 5, Issue 3 (July 15,\n  2009) lmcs:816", "doi": "10.2168/LMCS-5(3:1)2009", "report-no": null, "categories": "cs.PL cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Many different systems with explicit substitutions have been proposed to\nimplement a large class of higher-order languages. Motivations and challenges\nthat guided the development of such calculi in functional frameworks are\nsurveyed in the first part of this paper. Then, very simple technology in named\nvariable-style notation is used to establish a theory of explicit substitutions\nfor the lambda-calculus which enjoys a whole set of useful properties such as\nfull composition, simulation of one-step beta-reduction, preservation of\nbeta-strong normalisation, strong normalisation of typed terms and confluence\non metaterms. Normalisation of related calculi is also discussed.\n", "versions": [{"version": "v1", "created": "Fri, 15 May 2009 13:35:58 GMT"}, {"version": "v2", "created": "Wed, 15 Jul 2009 12:33:03 GMT"}, {"version": "v3", "created": "Wed, 15 Jul 2009 21:06:30 GMT"}], "update_date": "2015-07-01", "authors_parsed": [["Kesner", "Delia", ""]]}, {"id": "0905.2545", "submitter": "Rene David", "authors": "Ren\\'e David (LAMA)", "title": "A direct proof of the confluence of combinatory strong reduction", "comments": "To appear in TCS", "journal-ref": null, "doi": null, "report-no": null, "categories": "math.LO cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  I give a proof of the confluence of combinatory strong reduction that does\nnot use the one of lambda-calculus. I also give simple and direct proofs of a\nstandardization theorem for this reduction and the strong normalization of\nsimply typed terms.\n", "versions": [{"version": "v1", "created": "Fri, 15 May 2009 13:42:46 GMT"}], "update_date": "2009-05-19", "authors_parsed": [["David", "Ren\u00e9", "", "LAMA"]]}, {"id": "0905.2880", "submitter": "Rene David", "authors": "Ren\\'e David (LAMA), Marek Zaionc", "title": "Counting proofs in propositional logic", "comments": null, "journal-ref": "Archive for Mathematical Logic 48 (2009) P 185-199", "doi": "10.1007/s00153-009-0119-5", "report-no": null, "categories": "math.LO cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We give a procedure for counting the number of different proofs of a formula\nin various sorts of propositional logic. This number is either an integer (that\nmay be 0 if the formula is not provable) or infinite.\n", "versions": [{"version": "v1", "created": "Mon, 18 May 2009 13:14:01 GMT"}], "update_date": "2009-05-19", "authors_parsed": [["David", "Ren\u00e9", "", "LAMA"], ["Zaionc", "Marek", ""]]}, {"id": "0905.2892", "submitter": "Rene David", "authors": "Ren\\'e David (LAMA), Karim Nour (LAMA)", "title": "Strong normalization results by translation", "comments": "Submitted to APAL", "journal-ref": null, "doi": null, "report-no": null, "categories": "math.LO cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We prove the strong normalization of full classical natural deduction (i.e.\nwith conjunction, disjunction and permutative conversions) by using a\ntranslation into the simply typed lambda-mu-calculus. We also extend Mendler's\nresult on recursive equations to this system.\n", "versions": [{"version": "v1", "created": "Mon, 18 May 2009 14:13:58 GMT"}], "update_date": "2009-05-19", "authors_parsed": [["David", "Ren\u00e9", "", "LAMA"], ["Nour", "Karim", "", "LAMA"]]}, {"id": "0905.3108", "submitter": "Ian Pratt-Hartmann", "authors": "Yevgeny Kazakov and Ian Pratt-Hartmann", "title": "A Note on the Complexity of the Satisfiability Problem for Graded Modal\n  Logics", "comments": "Full proofs for paper presented at the IEEE Conference on Logic in\n  Computer Science, 2009", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO cs.AI cs.CC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Graded modal logic is the formal language obtained from ordinary\n(propositional) modal logic by endowing its modal operators with cardinality\nconstraints. Under the familiar possible-worlds semantics, these augmented\nmodal operators receive interpretations such as \"It is true at no fewer than 15\naccessible worlds that...\", or \"It is true at no more than 2 accessible worlds\nthat...\". We investigate the complexity of satisfiability for this language\nover some familiar classes of frames. This problem is more challenging than its\nordinary modal logic counterpart--especially in the case of transitive frames,\nwhere graded modal logic lacks the tree-model property. We obtain tight\ncomplexity bounds for the problem of determining the satisfiability of a given\ngraded modal logic formula over the classes of frames characterized by any\ncombination of reflexivity, seriality, symmetry, transitivity and the Euclidean\nproperty.\n", "versions": [{"version": "v1", "created": "Tue, 19 May 2009 15:27:04 GMT"}], "update_date": "2009-05-20", "authors_parsed": [["Kazakov", "Yevgeny", ""], ["Pratt-Hartmann", "Ian", ""]]}, {"id": "0905.3668", "submitter": "Balder ten Cate", "authors": "Johan van Benthem, Balder ten Cate, Jouko Vaananen", "title": "Lindstrom theorems for fragments of first-order logic", "comments": "Appears in Logical Methods in Computer Science (LMCS)", "journal-ref": "Logical Methods in Computer Science, Volume 5, Issue 3 (August 3,\n  2009) lmcs:895", "doi": "10.2168/LMCS-5(3:3)2009", "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Lindstr\\\"om theorems characterize logics in terms of model-theoretic\nconditions such as Compactness and the L\\\"owenheim-Skolem property. Most\nexisting characterizations of this kind concern extensions of first-order\nlogic. But on the other hand, many logics relevant to computer science are\nfragments or extensions of fragments of first-order logic, e.g., k-variable\nlogics and various modal logics. Finding Lindstr\\\"om theorems for these\nlanguages can be challenging, as most known techniques rely on coding arguments\nthat seem to require the full expressive power of first-order logic. In this\npaper, we provide Lindstr\\\"om theorems for several fragments of first-order\nlogic, including the k-variable fragments for k>2, Tarski's relation algebra,\ngraded modal logic, and the binary guarded fragment. We use two different proof\ntechniques. One is a modification of the original Lindstr\\\"om proof. The other\ninvolves the modal concepts of bisimulation, tree unraveling, and finite depth.\nOur results also imply semantic preservation theorems.\n", "versions": [{"version": "v1", "created": "Fri, 22 May 2009 12:10:07 GMT"}, {"version": "v2", "created": "Tue, 4 Aug 2009 09:39:35 GMT"}], "update_date": "2015-07-01", "authors_parsed": [["van Benthem", "Johan", ""], ["Cate", "Balder ten", ""], ["Vaananen", "Jouko", ""]]}, {"id": "0905.3802", "submitter": "Fabio Fassetti", "authors": "Fabio Fassetti, Luigi Palopoli", "title": "On the complexity of identifying Head Elementary Set Free programs", "comments": "11 pages. To appear in Theory and Practice of Logic Programming\n  (TPLP)", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO cs.CC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Head-elementary-set-free programs were proposed in (Gebser et al. 2007) and\nshown to generalize over head-cycle-free programs while retaining their nice\nproperties. It was left as an open problem in (Gebser et al. 2007) to establish\nthe complexity of identifying head-elementary-set-free programs. This note\nsolves the open problem, by showing that the problem is complete for co-NP.\n", "versions": [{"version": "v1", "created": "Mon, 25 May 2009 11:00:13 GMT"}], "update_date": "2009-05-26", "authors_parsed": [["Fassetti", "Fabio", ""], ["Palopoli", "Luigi", ""]]}, {"id": "0905.3946", "submitter": "Chih-Hong Cheng", "authors": "Chih-Hong Cheng, Christian Buckl, Javier Esparza, Alois Knoll", "title": "FTOS-Verify: Analysis and Verification of Non-Functional Properties for\n  Fault-Tolerant Systems", "comments": "(bibliography update)", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DC cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The focus of the tool FTOS is to alleviate designers' burden by offering code\ngeneration for non-functional aspects including fault-tolerance mechanisms. One\ncrucial aspect in this context is to ensure that user-selected mechanisms for\nthe system model are sufficient to resist faults as specified in the underlying\nfault hypothesis. In this paper, formal approaches in verification are proposed\nto assist the claim. We first raise the precision of FTOS into pure\nmathematical constructs, and formulate the deterministic assumption, which is\nnecessary as an extension of Giotto-like systems (e.g., FTOS) to equip with\nfault-tolerance abilities. We show that local properties of a system with the\ndeterministic assumption will be preserved in a modified synchronous system\nused as the verification model. This enables the use of techniques known from\nhardware verification. As for implementation, we develop a prototype tool\ncalled FTOS-Verify, deploy it as an Eclipse add-on for FTOS, and conduct\nseveral case studies.\n", "versions": [{"version": "v1", "created": "Mon, 25 May 2009 06:11:42 GMT"}], "update_date": "2009-05-26", "authors_parsed": [["Cheng", "Chih-Hong", ""], ["Buckl", "Christian", ""], ["Esparza", "Javier", ""], ["Knoll", "Alois", ""]]}, {"id": "0905.3951", "submitter": "Chih-Hong Cheng", "authors": "Chih-Hong Cheng, Christian Buckl, Javier Esparza, Alois Knoll", "title": "Modeling and Verification for Timing Satisfaction of Fault-Tolerant\n  Systems with Finiteness", "comments": "1. Appear in the 13-th IEEE/ACM International Symposium on\n  Distributed Simulation and Real Time Applications (DS-RT'09). 2. Compared to\n  the DS-RT version, we add motivations for editing automata, and footnote that\n  the sketch of editing algo is only applicable in our job-processing element\n  to avoid ambiguity (because actions are chained)", "journal-ref": null, "doi": "10.1109/DS-RT.2009.20", "report-no": null, "categories": "cs.DC cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The increasing use of model-based tools enables further use of formal\nverification techniques in the context of distributed real-time systems. To\navoid state explosion, it is necessary to construct verification models that\nfocus on the aspects under consideration.\n  In this paper, we discuss how we construct a verification model for timing\nanalysis in distributed real-time systems. We (1) give observations concerning\nrestrictions of timed automata to model these systems, (2) formulate\nmathematical representations on how to perform model-to-model transformation to\nderive verification models from system models, and (3) propose some theoretical\ncriteria how to reduce the model size. The latter is in particular important,\nas for the verification of complex systems, an efficient model reflecting the\nproperties of the system under consideration is equally important to the\nverification algorithm itself. Finally, we present an extension of the\nmodel-based development tool FTOS, designed to develop fault-tolerant systems,\nto demonstrate %the benefits of our approach.\n", "versions": [{"version": "v1", "created": "Mon, 25 May 2009 05:58:03 GMT"}, {"version": "v2", "created": "Wed, 3 Jun 2009 09:21:10 GMT"}, {"version": "v3", "created": "Wed, 21 Oct 2009 09:24:30 GMT"}], "update_date": "2016-11-18", "authors_parsed": [["Cheng", "Chih-Hong", ""], ["Buckl", "Christian", ""], ["Esparza", "Javier", ""], ["Knoll", "Alois", ""]]}, {"id": "0905.3998", "submitter": "Pierre Hyvernat", "authors": "Pierre Hyvernat (IML)", "title": "Predicate Transformers and Linear Logic, yet another denotational model", "comments": null, "journal-ref": "Computer Science and Logic 2004, Karpacz : Pologne (2004)", "doi": null, "report-no": null, "categories": "cs.LO math.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In the refinement calculus, monotonic predicate transformers are used to\nmodel specifications for (imperative) programs. Together with a natural notion\nof simulation, they form a category enjoying many algebraic properties. We\nbuild on this structure to make predicate transformers into a de notational\nmodel of full linear logic: all the logical constructions have a natural\ninterpretation in terms of predicate transformers (i.e. in terms of\nspecifications). We then interpret proofs of a formula by a safety property for\nthe corresponding specification.\n", "versions": [{"version": "v1", "created": "Mon, 25 May 2009 19:16:00 GMT"}], "update_date": "2009-05-26", "authors_parsed": [["Hyvernat", "Pierre", "", "IML"]]}, {"id": "0905.4059", "submitter": "Pierre Hyvernat", "authors": "Pierre Hyvernat (Universit\\'e de Savoie)", "title": "Coherent and finiteness spaces", "comments": "short note", "journal-ref": "Logical Methods in Computer Science, Volume 7, Issue 3 (September\n  22, 2011) lmcs:1131", "doi": "10.2168/LMCS-7(3:15)2011", "report-no": null, "categories": "cs.LO math.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This short note presents a new relation between coherent spaces and\nfiniteness spaces. This takes the form of a functor from COH to FIN commuting\nwith the additive and multiplicative structure of linear logic. What makes this\ncorrespondence possible and conceptually interesting is the use of the infinite\nRamsey theorem. Along the way, the question of the cardinality of the\ncollection of finiteness spaces on N is answered. Basic knowledge about\ncoherent spaces and finiteness spaces is assumed.\n", "versions": [{"version": "v1", "created": "Mon, 25 May 2009 19:05:41 GMT"}, {"version": "v2", "created": "Tue, 3 Nov 2009 17:46:25 GMT"}, {"version": "v3", "created": "Mon, 26 Jul 2010 19:17:05 GMT"}, {"version": "v4", "created": "Sun, 31 Jul 2011 09:49:07 GMT"}, {"version": "v5", "created": "Tue, 20 Sep 2011 20:14:31 GMT"}], "update_date": "2015-07-01", "authors_parsed": [["Hyvernat", "Pierre", "", "Universit\u00e9 de Savoie"]]}, {"id": "0905.4060", "submitter": "Pierre Hyvernat", "authors": "Pierre Hyvernat (LAMA)", "title": "A Completeness Theorem for \"Total Boolean Functions\"", "comments": "short note", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO math.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Christine Tasson introduced an algebraic notion of totality for a\ndenotational model of linear logic in the category of vector spaces. The notion\nof total boolean function is, in a way, quite intuitive. This note provides a\npositive answer to the question of completeness of the \"boolean centroidal\ncalculus\" w.r.t. total boolean functions.\n", "versions": [{"version": "v1", "created": "Mon, 25 May 2009 19:08:20 GMT"}, {"version": "v2", "created": "Tue, 3 Nov 2009 17:46:04 GMT"}], "update_date": "2009-11-03", "authors_parsed": [["Hyvernat", "Pierre", "", "LAMA"]]}, {"id": "0905.4062", "submitter": "Pierre Hyvernat", "authors": "Pierre Hyvernat (LAMA)", "title": "Interaction Systems and Linear Logic, a different games semantics", "comments": "39 pages", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO math.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We define a model for linear logic based on two well-known ingredients: games\nand simulations. This model is interesting in the following respect: while it\nis obvious that the objects interpreting formulas are games and that everything\nis developed with the intuition of interaction in mind, the notion of morphism\nis very different from traditional morphisms in games semantics. In particular,\nwe make no use of the notion of strategy! The resulting structure is very\ndifferent from what is usually found in categories of games. We start by\ndefining several constructions on those games and show, using elementary\nconsiderations, that they enjoy the appropriate algebraic properties making\nthis category a denotational model for intuitionistic linear logic. An\ninteresting point is that the tensor product corresponds to a strongly\nsynchronous operation on games. This category can also, using traditional\ntranslations, serve as a model for the simply typed -calculus. We use some of\nthe additional structure of the category to extend this to a model of the\nsimply typed differential -calculus. Once this is done, we go a little further\nby constructing a reflexive object in this category, thus getting a concrete\nnon-trivial model for the untyped differential -calculus. We then show, using a\nhighly non-constructive principle, that this category is in fact a model for\nfull classical linear logic ; and we finally have a brief look at the related\nnotions of predicate transformers and containers.\n", "versions": [{"version": "v1", "created": "Mon, 25 May 2009 19:09:58 GMT"}], "update_date": "2009-05-26", "authors_parsed": [["Hyvernat", "Pierre", "", "LAMA"]]}, {"id": "0905.4063", "submitter": "Pierre Hyvernat", "authors": "Peter Hancock, Pierre Hyvernat (IML)", "title": "Programming interfaces and basic topology", "comments": null, "journal-ref": "Annals of Pure and Applied Logic 137, 1--3 (2006) 189--239", "doi": null, "report-no": null, "categories": "cs.LO math.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  A pattern of interaction that arises again and again in programming is a\n\"handshake\", in which two agents exchange data. The exchange is thought of as\nprovision of a service. Each interaction is initiated by a specific agent--the\nclient or Angel--and concluded by the other--the server or Demon. We present a\ncategory in which the objects--called interaction structures in the\npaper--serve as descriptions of services provided across such handshaken\ninterfaces. The morphisms--called (general) simulations--model components that\nprovide one such service, relying on another. The morphisms are relations\nbetween the underlying sets of the interaction structures. The proof that a\nrelation is a simulation can serve (in principle) as an executable program,\nwhose specification is that it provides the service described by its domain,\ngiven an implementation of the service described by its codomain. This category\nis then shown to coincide with the subcategory of \"generated\" basic topologies\nin Sambin's terminology, where a basic topology is given by a closure operator\nwhose induced sup-lattice structure need not be distributive; and moreover,\nthis operator is inductively generated from a basic cover relation. This\ncoincidence provides topologists with a natural source of examples for\nnon-distributive formal topology. It raises a number of questions of interest\nboth for formal topology and programming. The extra structure needed to make\nsuch a basic topology into a real formal topology is then interpreted in the\ncontext of interaction structures.\n", "versions": [{"version": "v1", "created": "Mon, 25 May 2009 19:11:54 GMT"}], "update_date": "2009-05-26", "authors_parsed": [["Hancock", "Peter", "", "IML"], ["Hyvernat", "Pierre", "", "IML"]]}, {"id": "0905.4064", "submitter": "Tom Hirschowitz", "authors": "Andr\\'e Hirschowitz (JAD), Michel Hirschowitz (LIX, LIST), Tom\n  Hirschowitz (LAMA)", "title": "Contraction-free proofs and finitary games for Linear Logic", "comments": "19 pages, uses tikz and Paul Taylor's diagrams", "journal-ref": "MFPS 2009, Oxford : Royaume-Uni (2009)", "doi": "10.1016/j.entcs.2009.07.095", "report-no": null, "categories": "cs.LO math.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In the standard sequent presentations of Girard's Linear Logic (LL), there\nare two \"non-decreasing\" rules, where the premises are not smaller than the\nconclusion, namely the cut and the contraction rules. It is a universal concern\nto eliminate the cut rule. We show that, using an admissible modification of\nthe tensor rule, contractions can be eliminated, and that cuts can be\nsimultaneously limited to a single initial occurrence. This view leads to a\nconsistent, but incomplete game model for LL with exponentials, which is\nfinitary, in the sense that each play is finite. The game is based on a set of\ninference rules which does not enjoy cut elimination. Nevertheless, the cut\nrule is valid in the model.\n", "versions": [{"version": "v1", "created": "Mon, 25 May 2009 19:14:40 GMT"}], "update_date": "2009-09-04", "authors_parsed": [["Hirschowitz", "Andr\u00e9", "", "JAD"], ["Hirschowitz", "Michel", "", "LIX, LIST"], ["Hirschowitz", "Tom", "", "LAMA"]]}, {"id": "0905.4066", "submitter": "Pierre Hyvernat", "authors": "Pierre Hyvernat (IML)", "title": "Synchronous Games, Simulations and lambda-calculus", "comments": null, "journal-ref": "Games for Logic and Programming Languages, European Conferences on\n  Theory and Practice of Software (ETAPS 2005), Edinburgh : Royaume-Uni (2005)", "doi": null, "report-no": null, "categories": "cs.LO math.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We refine a model for linear logic based on two well-known ingredients: games\nand simulations. We have already shown that usual simulation relations form a\nsound notion of morphism between games; and that we can interpret all linear\nlogic in this way. One particularly interesting point is that we interpret\nmultiplicative connectives by synchronous operations on games. We refine this\nwork by giving computational contents to our simulation relations. To achieve\nthat, we need to restrict to intuitionistic linear logic. This allows to work\nin a constructive setting, thus keeping a computational content to the proofs.\nWe then extend it by showing how to interpret some of the additional structure\nof the exponentials. To be more precise, we first give a denotational model for\nthe typed lambda-calculus; and then give a denotational model for the\ndifferential lambda-calculus of Ehrhard and Regnier. Both this models are\nproved correct constructively.\n", "versions": [{"version": "v1", "created": "Mon, 25 May 2009 19:36:05 GMT"}], "update_date": "2009-05-26", "authors_parsed": [["Hyvernat", "Pierre", "", "IML"]]}, {"id": "0905.4090", "submitter": "Bart Jacobs", "authors": "Bart Jacobs", "title": "Orthomodular lattices, Foulis Semigroups and Dagger Kernel Categories", "comments": "31 pages", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This paper is a sequel to arXiv:0902.2355 and continues the study of quantum\nlogic via dagger kernel categories. It develops the relation between these\ncategories and both orthomodular lattices and Foulis semigroups. The relation\nbetween the latter two notions has been uncovered in the 1960s. The current\ncategorical perspective gives a broader context and reconstructs this\nrelationship between orthomodular lattices and Foulis semigroups as special\ninstance.\n", "versions": [{"version": "v1", "created": "Mon, 25 May 2009 22:38:41 GMT"}], "update_date": "2009-05-27", "authors_parsed": [["Jacobs", "Bart", ""]]}, {"id": "0905.4200", "submitter": "Tom Hirschowitz", "authors": "Richard Garner, Tom Hirschowitz (LAMA), Aur\\'elien Pardon (LIP)", "title": "Variable binding, symmetric monoidal closed theories, and bigraphs", "comments": "An introduction to two more technical previous preprints. Accepted at\n  Concur '09", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO cs.PL math.CT", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This paper investigates the use of symmetric monoidal closed (SMC) structure\nfor representing syntax with variable binding, in particular for languages with\nlinear aspects. In our setting, one first specifies an SMC theory T, which may\nexpress binding operations, in a way reminiscent from higher-order abstract\nsyntax. This theory generates an SMC category S(T) whose morphisms are, in a\nsense, terms in the desired syntax. We apply our approach to Jensen and\nMilner's (abstract binding) bigraphs, which are linear w.r.t. processes. This\nleads to an alternative category of bigraphs, which we compare to the original.\n", "versions": [{"version": "v1", "created": "Tue, 26 May 2009 13:43:16 GMT"}], "update_date": "2009-05-27", "authors_parsed": [["Garner", "Richard", "", "LAMA"], ["Hirschowitz", "Tom", "", "LAMA"], ["Pardon", "Aur\u00e9lien", "", "LIP"]]}, {"id": "0905.4251", "submitter": "Daniel de Carvalho", "authors": "Daniel de Carvalho", "title": "Execution Time of lambda-Terms via Denotational Semantics and\n  Intersection Types", "comments": "36 pages", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO cs.CC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The multiset based relational model of linear logic induces a semantics of\nthe type free lambda-calculus, which corresponds to a non-idempotent\nintersection type system, System R. We prove that, in System R, the size of the\ntype derivations and the size of the types are closely related to the execution\ntime of lambda-terms in a particular environment machine, Krivine's machine.\n", "versions": [{"version": "v1", "created": "Tue, 26 May 2009 17:21:53 GMT"}], "update_date": "2009-05-27", "authors_parsed": [["de Carvalho", "Daniel", ""]]}, {"id": "0905.4332", "submitter": "Francien Dechesne", "authors": "Yanjing Wang and Francien Dechesne", "title": "On expressive power and class invariance", "comments": "18 pages", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In computer science, various logical languages are defined to analyze\nproperties of systems. One way to pinpoint the essential differences between\nthose logics is to compare their expressivity in terms of distinguishing power\nand expressive power. In this paper, we study those two concepts by regarding\nthe latter notion as the former lifted to classes of models. We show some\ngeneral results on lifting an invariance relation on models to one on classes\nof models, such that when the former corresponds to the distinguishing power of\na logic, the latter corresponds to its expressive power, given certain\ncompactness requirements. In particular, we introduce the notion of class\nbisimulation to capture the expressive power of modal logics. We demonstrate\nthe application of our results by revisiting modal definability with our new\ninsights.\n", "versions": [{"version": "v1", "created": "Wed, 27 May 2009 13:15:37 GMT"}], "update_date": "2009-05-28", "authors_parsed": [["Wang", "Yanjing", ""], ["Dechesne", "Francien", ""]]}, {"id": "0905.4369", "submitter": "Christoph Benzmueller", "authors": "Christoph Benzmueller", "title": "Automating Quantified Multimodal Logics in Simple Type Theory -- A Case\n  Study", "comments": "ii + 30 pages", "journal-ref": null, "doi": null, "report-no": "SEKI Working-Paper SWP-2009-02", "categories": "cs.AI cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In a case study we investigate whether off the shelf higher-order theorem\nprovers and model generators can be employed to automate reasoning in and about\nquantified multimodal logics. In our experiments we exploit the new TPTP\ninfrastructure for classical higher-order logic.\n", "versions": [{"version": "v1", "created": "Wed, 27 May 2009 10:13:57 GMT"}], "update_date": "2009-05-28", "authors_parsed": [["Benzmueller", "Christoph", ""]]}, {"id": "0905.4567", "submitter": "Ugo Dal Lago", "authors": "Ugo Dal Lago, Andrea Masini and Margherita Zorzi", "title": "Confluence Results for a Quantum Lambda Calculus with Measurements", "comments": "21 pages", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  A strong confluence result for Q*, a quantum lambda-calculus with\nmeasurements, is proved. More precisely, confluence is shown to hold both for\nfinite and infinite computations. The technique used in the confluence proof is\nsyntactical but innovative. This makes Q* different from similar quantum lambda\ncalculi, which are either measurement-free or provided with a reduction\nstrategy.\n", "versions": [{"version": "v1", "created": "Thu, 28 May 2009 07:46:18 GMT"}], "update_date": "2009-05-29", "authors_parsed": [["Lago", "Ugo Dal", ""], ["Masini", "Andrea", ""], ["Zorzi", "Margherita", ""]]}, {"id": "0905.4596", "submitter": "Dominique Duval", "authors": "Dominique Duval (LMC - IMAG), Jean-Claude Reynaud (LSR - IMAG)", "title": "About raising and handling exceptions", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.PL cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This paper presents a unified framework for dealing with a deduction system\nand a denotational semantics of exceptions. It is based on the fact that\nhandling exceptions can be seen as a kind of generalized case distinction. This\npoint of view on exceptions has been introduced in 2004, it is based on the\nnotion of diagrammatic logic, which assumes some familiarity with category\ntheory. Extensive sums of types can be used for dealing with case distinctions.\nThe aim of this new paper is to focus on the role of generalized extensivity\nproperty for dealing with exceptions. Moreover, the presentation of this paper\nmakes only a restricted use of category theory.\n", "versions": [{"version": "v1", "created": "Thu, 28 May 2009 10:01:47 GMT"}], "update_date": "2009-05-29", "authors_parsed": [["Duval", "Dominique", "", "LMC - IMAG"], ["Reynaud", "Jean-Claude", "", "LSR - IMAG"]]}, {"id": "0905.4612", "submitter": "Inge Bethke", "authors": "Jan A. Bergstra and Inge Bethke", "title": "Straight-line instruction sequence completeness for total calculation on\n  cancellation meadows", "comments": "24 pages", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  A combination of program algebra with the theory of meadows is designed\nleading to a theory of computation in algebraic structures which use in\naddition to a zero test and copying instructions the instruction set $\\{x\n\\Leftarrow 0, x \\Leftarrow 1, x\\Leftarrow -x, x\\Leftarrow x^{-1}, x\\Leftarrow\nx+y, x\\Leftarrow x\\cdot y\\}$. It is proven that total functions on cancellation\nmeadows can be computed by straight-line programs using at most 5 auxiliary\nvariables. A similar result is obtained for signed meadows.\n", "versions": [{"version": "v1", "created": "Thu, 28 May 2009 11:13:58 GMT"}, {"version": "v2", "created": "Fri, 29 May 2009 14:14:17 GMT"}], "update_date": "2009-05-29", "authors_parsed": [["Bergstra", "Jan A.", ""], ["Bethke", "Inge", ""]]}, {"id": "0905.4813", "submitter": "Peter Hancock", "authors": "Neil Ghani, Peter Hancock, Dirk Pattinson", "title": "Representations of Stream Processors Using Nested Fixed Points", "comments": null, "journal-ref": "Logical Methods in Computer Science, Volume 5, Issue 3 (September\n  15, 2009) lmcs:713", "doi": "10.2168/LMCS-5(3:9)2009", "report-no": null, "categories": "cs.DS cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We define representations of continuous functions on infinite streams of\ndiscrete values, both in the case of discrete-valued functions, and in the case\nof stream-valued functions. We define also an operation on the representations\nof two continuous functions between streams that yields a representation of\ntheir composite.\n  In the case of discrete-valued functions, the representatives are\nwell-founded (finite-path) trees of a certain kind. The underlying idea can be\ntraced back to Brouwer's justification of bar-induction, or to Kreisel and\nTroelstra's elimination of choice-sequences. In the case of stream-valued\nfunctions, the representatives are non-wellfounded trees pieced together in a\ncoinductive fashion from well-founded trees. The definition requires an\nalternating fixpoint construction of some ubiquity.\n", "versions": [{"version": "v1", "created": "Fri, 29 May 2009 09:40:23 GMT"}, {"version": "v2", "created": "Tue, 15 Sep 2009 07:10:30 GMT"}], "update_date": "2015-07-01", "authors_parsed": [["Ghani", "Neil", ""], ["Hancock", "Peter", ""], ["Pattinson", "Dirk", ""]]}, {"id": "0905.4905", "submitter": "Florentina Pintea", "authors": "Lucian Luca, Lucian L. Luca", "title": "Aspects Regarding Operations with Fuzzy Processes", "comments": "10 pages, exposed on 5th International Conference \"Actualities and\n  Perspectives on Hardware and Software\" - APHS2009, Timisoara, Romania", "journal-ref": "Ann. Univ. Tibiscus Comp. Sci. Series VII(2009),205-214", "doi": null, "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This paper introduces the notion of fuzzy process as a formalism for the idea\nof fuzzy contact between a device and its environment. The notions of absolute\ncorrectness and relative correctness are defined. In order to work with\nconcurrency it has been built an approach to manipulate the interactive\nprocesses as a single process and the resulted behavior has been observed.\n", "versions": [{"version": "v1", "created": "Fri, 29 May 2009 15:43:32 GMT"}], "update_date": "2009-06-01", "authors_parsed": [["Luca", "Lucian", ""], ["Luca", "Lucian L.", ""]]}, {"id": "0905.4906", "submitter": "Florentina Pintea", "authors": "Lucian Luca, Lucian L. Luca", "title": "On Some Manipulations with Fuzzy Processes", "comments": "10 pages, exposed on 5th International Conference \"Actualities and\n  Perspectives on Hardware and Software\" - APHS2009, Timisoara, Romania", "journal-ref": "Ann. Univ. Tibiscus Comp. Sci. Series VII(2009),215-224", "doi": null, "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The paper starts from the observation on the complexity of the manipulation\nof fuzzy processes that increases very rapidly with the extents of the\nprocesses representation. Therefore, a productive approach is to divide the\nproblem into smaller parts, treated separately and then the results combined.\nSome algebraic results obtained by the authors are presented.\n", "versions": [{"version": "v1", "created": "Fri, 29 May 2009 15:47:17 GMT"}], "update_date": "2009-06-01", "authors_parsed": [["Luca", "Lucian", ""], ["Luca", "Lucian L.", ""]]}]