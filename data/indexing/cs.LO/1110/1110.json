[{"id": "1110.0624", "submitter": "Agostino Dovier", "authors": "Agostino Dovier and Andrea Formisano and Enrico Pontelli", "title": "Autonomous Agents Coordination: Action Languages meet CLP(FD) and Linda", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO cs.AI cs.PL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The paper presents a knowledge representation formalism, in the form of a\nhigh-level Action Description Language for multi-agent systems, where\nautonomous agents reason and act in a shared environment. Agents are\nautonomously pursuing individual goals, but are capable of interacting through\na shared knowledge repository. In their interactions through shared portions of\nthe world, the agents deal with problems of synchronization and concurrency;\nthe action language allows the description of strategies to ensure a consistent\nglobal execution of the agents' autonomously derived plans. A distributed\nplanning problem is formalized by providing the declarative specifications of\nthe portion of the problem pertaining a single agent. Each of these\nspecifications is executable by a stand-alone CLP-based planner. The\ncoordination among agents exploits a Linda infrastructure. The proposal is\nvalidated in a prototype implementation developed in SICStus Prolog.\n  To appear in Theory and Practice of Logic Programming (TPLP).\n", "versions": [{"version": "v1", "created": "Tue, 4 Oct 2011 09:55:41 GMT"}], "update_date": "2011-10-05", "authors_parsed": [["Dovier", "Agostino", ""], ["Formisano", "Andrea", ""], ["Pontelli", "Enrico", ""]]}, {"id": "1110.0631", "submitter": "Fabrizio Riguzzi PhD", "authors": "Fabrizio Riguzzi and Terrance Swift", "title": "Well-Definedness and Efficient Inference for Probabilistic Logic\n  Programming under the Distribution Semantics", "comments": "31 pages, 8 figures", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.AI cs.LO cs.PL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The distribution semantics is one of the most prominent approaches for the\ncombination of logic programming and probability theory. Many languages follow\nthis semantics, such as Independent Choice Logic, PRISM, pD, Logic Programs\nwith Annotated Disjunctions (LPADs) and ProbLog. When a program contains\nfunctions symbols, the distribution semantics is well-defined only if the set\nof explanations for a query is finite and so is each explanation.\nWell-definedness is usually either explicitly imposed or is achieved by\nseverely limiting the class of allowed programs. In this paper we identify a\nlarger class of programs for which the semantics is well-defined together with\nan efficient procedure for computing the probability of queries. Since LPADs\noffer the most general syntax, we present our results for them, but our results\nare applicable to all languages under the distribution semantics. We present\nthe algorithm \"Probabilistic Inference with Tabling and Answer subsumption\"\n(PITA) that computes the probability of queries by transforming a probabilistic\nprogram into a normal program and then applying SLG resolution with answer\nsubsumption. PITA has been implemented in XSB and tested on six domains: two\nwith function symbols and four without. The execution times are compared with\nthose of ProbLog, cplint and CVE, PITA was almost always able to solve larger\nproblems in a shorter time, on domains with and without function symbols.\n", "versions": [{"version": "v1", "created": "Tue, 4 Oct 2011 10:29:32 GMT"}], "update_date": "2011-10-05", "authors_parsed": [["Riguzzi", "Fabrizio", ""], ["Swift", "Terrance", ""]]}, {"id": "1110.0715", "submitter": "Robert Frank Carslaw Walters", "authors": "R. Rosebrugh, N. Sabadini, R.F.C. Walters", "title": "Tangled Circuits", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "math.CT cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The theme of the paper is the use of commutative Frobenius algebras in\nbraided strict monoidal categories in the study of varieties of circuits and\ncommunicating systems which occur in Computer Science, including circuits in\nwhich the wires are tangled. We indicate also some possible novel geometric\ninterest in such algebras.\n", "versions": [{"version": "v1", "created": "Tue, 4 Oct 2011 15:11:29 GMT"}], "update_date": "2011-10-05", "authors_parsed": [["Rosebrugh", "R.", ""], ["Sabadini", "N.", ""], ["Walters", "R. F. C.", ""]]}, {"id": "1110.0999", "submitter": "Alberto Pettorossi", "authors": "Fabio Fioravanti, Alberto Pettorossi, Maurizio Proietti, Valerio Senni", "title": "Generalization Strategies for the Verification of Infinite State Systems", "comments": "24 pages, 2 figures, 5 tables", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO cs.AI cs.SE", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We present a method for the automated verification of temporal properties of\ninfinite state systems. Our verification method is based on the specialization\nof constraint logic programs (CLP) and works in two phases: (1) in the first\nphase, a CLP specification of an infinite state system is specialized with\nrespect to the initial state of the system and the temporal property to be\nverified, and (2) in the second phase, the specialized program is evaluated by\nusing a bottom-up strategy. The effectiveness of the method strongly depends on\nthe generalization strategy which is applied during the program specialization\nphase. We consider several generalization strategies obtained by combining\ntechniques already known in the field of program analysis and program\ntransformation, and we also introduce some new strategies. Then, through many\nverification experiments, we evaluate the effectiveness of the generalization\nstrategies we have considered. Finally, we compare the implementation of our\nspecialization-based verification method to other constraint-based model\nchecking tools. The experimental results show that our method is competitive\nwith the methods used by those other tools. To appear in Theory and Practice of\nLogic Programming (TPLP).\n", "versions": [{"version": "v1", "created": "Wed, 5 Oct 2011 14:27:07 GMT"}], "update_date": "2015-03-19", "authors_parsed": [["Fioravanti", "Fabio", ""], ["Pettorossi", "Alberto", ""], ["Proietti", "Maurizio", ""], ["Senni", "Valerio", ""]]}, {"id": "1110.1221", "submitter": "Ahmet Kara", "authors": "Ahmet Kara, Thomas Schwentick, Tony Tan", "title": "Feasible Automata for Two-Variable Logic with Successor on Data Words", "comments": "21 pages", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We introduce an automata model for data words, that is words that carry at\neach position a symbol from a finite alphabet and a value from an unbounded\ndata domain. The model is (semantically) a restriction of data automata,\nintroduced by Bojanczyk, et. al. in 2006, therefore it is called weak data\nautomata. It is strictly less expressive than data automata and the expressive\npower is incomparable with register automata. The expressive power of weak data\nautomata corresponds exactly to existential monadic second order logic with\nsuccessor +1 and data value equality \\sim, EMSO2(+1,\\sim). It follows from\nprevious work, David, et. al. in 2010, that the nonemptiness problem for weak\ndata automata can be decided in 2-NEXPTIME. Furthermore, we study weak B\\\"uchi\nautomata on data omega-strings. They can be characterized by the extension of\nEMSO2(+1,\\sim) with existential quantifiers for infinite sets. Finally, the\nsame complexity bound for its nonemptiness problem is established by a\nnondeterministic polynomial time reduction to the nonemptiness problem of weak\ndata automata.\n", "versions": [{"version": "v1", "created": "Thu, 6 Oct 2011 10:54:25 GMT"}], "update_date": "2015-03-19", "authors_parsed": [["Kara", "Ahmet", ""], ["Schwentick", "Thomas", ""], ["Tan", "Tony", ""]]}, {"id": "1110.1439", "submitter": "Thomas Schwentick", "authors": "Thomas Schwentick (TU Dortmund University), Thomas Zeume (TU Dortmund\n  University)", "title": "Two-Variable Logic with Two Order Relations", "comments": null, "journal-ref": "Logical Methods in Computer Science, Volume 8, Issue 1 (March 2,\n  2012) lmcs:715", "doi": "10.2168/LMCS-8(1:15)2012", "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  It is shown that the finite satisfiability problem for two-variable logic\nover structures with one total preorder relation, its induced successor\nrelation, one linear order relation and some further unary relations is\nEXPSPACE-complete. Actually, EXPSPACE-completeness already holds for structures\nthat do not include the induced successor relation. As a special case, the\nEXPSPACE upper bound applies to two-variable logic over structures with two\nlinear orders. A further consequence is that satisfiability of two-variable\nlogic over data words with a linear order on positions and a linear order and\nsuccessor relation on the data is decidable in EXPSPACE. As a complementing\nresult, it is shown that over structures with two total preorder relations as\nwell as over structures with one total preorder and two linear order relations,\nthe finite satisfiability problem for two-variable logic is undecidable.\n", "versions": [{"version": "v1", "created": "Fri, 7 Oct 2011 06:38:33 GMT"}, {"version": "v2", "created": "Wed, 29 Feb 2012 21:23:45 GMT"}, {"version": "v3", "created": "Sat, 3 Mar 2012 12:46:00 GMT"}], "update_date": "2015-07-01", "authors_parsed": [["Schwentick", "Thomas", "", "TU Dortmund University"], ["Zeume", "Thomas", "", "TU Dortmund\n  University"]]}, {"id": "1110.1614", "submitter": "James Entwood", "authors": "Robert Constable, Mark Bickford", "title": "Intuitionistic Completeness of First-Order Logic", "comments": "2011-10-17: Abstract updated to match 10/14 version. 2011-10-14:\n  Edited version posted", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We establish completeness for intuitionistic first-order logic, iFOL, showing\nthat a formula is provable if and only if its embedding into minimal logic,\nmFOL, is uniformly valid under the Brouwer Heyting Kolmogorov (BHK) semantics,\nthe intended semantics of iFOL and mFOL. Our proof is intuitionistic and\nprovides an effective procedure Prf that converts uniform minimal evidence into\na formal first-order proof. We have implemented Prf. Uniform validity is\ndefined using the intersection operator as a universal quantifier over the\ndomain of discourse and atomic predicates. Formulas of iFOL that are uniformly\nvalid are also intuitionistically valid, but not conversely. Our strongest\nresult requires the Fan Theorem; it can also be proved classically by showing\nthat Prf terminates using Konig's Theorem.\n  The fundamental idea behind our completeness theorem is that a single\nevidence term evd witnesses the uniform validity of a minimal logic formula F.\nFinding even one uniform realizer guarantees intuitionistic validity because\nPrf(F, evd) builds a first-order proof of F, establishing its intuitionistic\nvalidity and providing a purely logical normalized realizer.\n  We establish completeness for iFOL as follows. Friedman showed that iFOL can\nbe embedded in minimal logic (mFOL) by his A-transformation, mapping formula F\nto FA. If F is uniformly valid, then so is FA, and by our completeness theorem,\nwe can find a proof of FA in minimal logic. Then we intuitionistically prove F\nfrom FFalse, i.e. by taking False for A and for \\bot of mFOL. Our result\nresolves an open question posed by Beth in 1947.\n", "versions": [{"version": "v1", "created": "Fri, 7 Oct 2011 19:23:03 GMT"}, {"version": "v2", "created": "Fri, 14 Oct 2011 16:03:56 GMT"}, {"version": "v3", "created": "Mon, 17 Oct 2011 14:23:30 GMT"}], "update_date": "2016-11-01", "authors_parsed": [["Constable", "Robert", ""], ["Bickford", "Mark", ""]]}, {"id": "1110.1848", "submitter": "Saeed Salehi", "authors": "Saeed Salehi", "title": "Herbrand Consistency of Some Finite Fragments of Bounded Arithmetical\n  Theories", "comments": null, "journal-ref": "Archive for Mathematical Logic 52:3 (2013) 317--333", "doi": "10.1007/s00153-012-0318-3", "report-no": null, "categories": "math.LO cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We formalize the notion of Herbrand Consistency in an appropriate way for\nbounded arithmetics, and show the existence of a finite fragment of ${\\rm\nI\\Delta_0}$ whose Herbrand Consistency is not provable in the thoery ${\\rm\nI\\Delta_0}$. We also show the existence of an ${\\rm I\\Delta_0}-$derivable\n$\\Pi_1-$sentence such that ${\\rm I\\Delta_0}$ cannot prove its Herbrand\nConsistency.\n", "versions": [{"version": "v1", "created": "Sun, 9 Oct 2011 15:05:23 GMT"}, {"version": "v2", "created": "Sat, 10 Dec 2016 06:53:42 GMT"}], "update_date": "2019-07-02", "authors_parsed": [["Salehi", "Saeed", ""]]}, {"id": "1110.2196", "submitter": "Bart Kuijpers", "authors": "Marc Giusti, Joos Heintz and Bart Kuijpers", "title": "The evaluation of geometric queries: constraint databases and quantifier\n  elimination", "comments": "This paper is representing work in progress of the authors. It is not\n  aimed for publication in the present form", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DB cs.CC cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We model the algorithmic task of geometric elimination (e.g., quantifier\nelimination in the elementary field theories of real and complex numbers) by\nmeans of certain constraint database queries, called geometric queries. As a\nparticular case of such a geometric elimination task, we consider sample point\nqueries. We show exponential lower complexity bounds for evaluating geometric\nqueries in the general and in the particular case of sample point queries.\nAlthough this paper is of theoretical nature, its aim is to explore the\npossibilities and (complexity-)limits of computer implemented query evaluation\nalgorithms for Constraint Databases, based on the principles of the most\nadvanced geometric elimination procedures and their implementations, like,\ne.g., the software package \"Kronecker\".\n", "versions": [{"version": "v1", "created": "Mon, 10 Oct 2011 20:55:17 GMT"}, {"version": "v2", "created": "Thu, 13 Oct 2011 18:59:22 GMT"}], "update_date": "2011-10-14", "authors_parsed": [["Giusti", "Marc", ""], ["Heintz", "Joos", ""], ["Kuijpers", "Bart", ""]]}, {"id": "1110.2317", "submitter": "Ian Pratt-Hartmann", "authors": "Ian Pratt-Hartmann", "title": "The Syllogistic with Unity", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO math.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We extend the language of the classical syllogisms with the sentence-forms\n\"At most 1 p is a q\" and \"More than 1 p is a q\". We show that the resulting\nlogic does not admit a finite set of syllogism-like rules whose associated\nderivation relation is sound and complete, even when reductio ad absurdum is\nallowed.\n", "versions": [{"version": "v1", "created": "Tue, 11 Oct 2011 10:10:21 GMT"}], "update_date": "2011-10-12", "authors_parsed": [["Pratt-Hartmann", "Ian", ""]]}, {"id": "1110.2613", "submitter": "EPTCS", "authors": "Alex Lang (University of Oxford), Bob Coecke (University of Oxford)", "title": "Trichromatic Open Digraphs for Understanding Qubits", "comments": "In Proceedings QPL 2011, arXiv:1210.0298", "journal-ref": "EPTCS 95, 2012, pp. 193-209", "doi": "10.4204/EPTCS.95.14", "report-no": null, "categories": "math.CT cs.LO math.QA quant-ph", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We introduce a trichromatic graphical calculus for quantum computing. The\ngenerators represent three complementary observables that are treated on equal\nfooting, hence reflecting the symmetries of the Bloch sphere. We derive the\nEuler angle decomposition of the Hadamard gate within it as well as the\nso-called supplementary relationships, which are valid equations for qubits\nthat were not derivable within Z/X-calculus of Coecke and Duncan. More\nspecifically, we have: dichromatic Z/X-calculus + Euler angle decomposition of\nthe Hadamard gate = trichromatic calculus.\n", "versions": [{"version": "v1", "created": "Wed, 12 Oct 2011 09:33:56 GMT"}, {"version": "v2", "created": "Thu, 13 Oct 2011 01:59:56 GMT"}, {"version": "v3", "created": "Tue, 2 Oct 2012 00:35:58 GMT"}], "update_date": "2012-10-03", "authors_parsed": [["Lang", "Alex", "", "University of Oxford"], ["Coecke", "Bob", "", "University of Oxford"]]}, {"id": "1110.2773", "submitter": "Cristina Feier", "authors": "Cristina Feier and Stijn Heymans", "title": "Reasoning with Forest Logic Programs and f-hybrid Knowledge Bases", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Open Answer Set Programming (OASP) is an undecidable framework for\nintegrating ontologies and rules. Although several decidable fragments of OASP\nhave been identified, few reasoning procedures exist. In this article, we\nprovide a sound, complete, and terminating algorithm for satisfiability\nchecking w.r.t. Forest Logic Programs (FoLPs), a fragment of OASP where rules\nhave a tree shape and allow for inequality atoms and constants. The algorithm\nestablishes a decidability result for FoLPs. Although believed to be decidable,\nso far only the decidability for two small subsets of FoLPs, local FoLPs and\nacyclic FoLPs, has been shown. We further introduce f-hybrid knowledge bases, a\nhybrid framework where \\SHOQ{} knowledge bases and forest logic programs\nco-exist, and we show that reasoning with such knowledge bases can be reduced\nto reasoning with forest logic programs only. We note that f-hybrid knowledge\nbases do not require the usual (weakly) DL-safety of the rule component,\nproviding thus a genuine alternative approach to current integration approaches\nof ontologies and rules.\n", "versions": [{"version": "v1", "created": "Wed, 12 Oct 2011 10:43:05 GMT"}], "update_date": "2011-10-14", "authors_parsed": [["Feier", "Cristina", ""], ["Heymans", "Stijn", ""]]}, {"id": "1110.2776", "submitter": "Tony Tan", "authors": "Tony Tan", "title": "Graph Reachability and Pebble Automata over Infinite Alphabets", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Let D denote an infinite alphabet -- a set that consists of infinitely many\nsymbols. A word w = a_0 b_0 a_1 b_1 ... a_n b_n of even length over D can be\nviewed as a directed graph G_w whose vertices are the symbols that appear in w,\nand the edges are (a_0,b_0),(a_1,b_1),...,(a_n,b_n). For a positive integer m,\ndefine a language R_m such that a word w = a_0 b_0 ... a_n b_n is in R_m if and\nonly if there is a path in the graph G_w of length <= m from the vertex a_0 to\nthe vertex b_n.\n  We establish the following hierarchy theorem for pebble automata over\ninfinite alphabet. For every positive integer k, (i) there exists a k-pebble\nautomaton that accepts the language R_{2^k-1}; (ii) there is no k-pebble\nautomaton that accepts the language R_{2^{k+1} - 2}. Based on this result, we\nestablish a number of previously unknown relations among some classes of\nlanguages over infinite alphabets.\n", "versions": [{"version": "v1", "created": "Wed, 12 Oct 2011 18:23:36 GMT"}, {"version": "v2", "created": "Tue, 10 Apr 2012 11:55:07 GMT"}], "update_date": "2012-04-11", "authors_parsed": [["Tan", "Tony", ""]]}, {"id": "1110.2982", "submitter": "Troy Day", "authors": "Troy Day", "title": "Computability, G\\\"odel's Incompleteness Theorem, and an inherent limit\n  on the predictability of evolution", "comments": "Journal of the Royal Society, Interface 2011", "journal-ref": null, "doi": "10.1098/rsif.2011.0479", "report-no": null, "categories": "q-bio.PE cs.LO math.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The process of evolutionary diversification unfolds in a vast genotypic space\nof potential outcomes. During the past century there have been remarkable\nadvances in the development of theory for this diversification, and the\ntheory's success rests, in part, on the scope of its applicability. A great\ndeal of this theory focuses on a relatively small subset of the space of\npotential genotypes, chosen largely based on historical or contemporary\npatterns, and then predicts the evolutionary dynamics within this pre-defined\nset. To what extent can such an approach be pushed to a broader perspective\nthat accounts for the potential open-endedness of evolutionary diversification?\nThere have been a number of significant theoretical developments along these\nlines but the question of how far such theory can be pushed has not been\naddressed. Here a theorem is proven demonstrating that, because of the digital\nnature of inheritance, there are inherent limits on the kinds of questions that\ncan be answered using such an approach. In particular, even in extremely simple\nevolutionary systems a complete theory accounting for the potential\nopen-endedness of evolution is unattainable unless evolution is progressive.\nThe theorem is closely related to G\\\"odel's Incompleteness Theorem and to the\nHalting Problem from computability theory.\n", "versions": [{"version": "v1", "created": "Thu, 13 Oct 2011 15:43:28 GMT"}], "update_date": "2011-10-14", "authors_parsed": [["Day", "Troy", ""]]}, {"id": "1110.3294", "submitter": "Charles Grellois", "authors": "Charles Grellois", "title": "Algebraic theories, monads, and arities", "comments": "65 pages, this is a survey made for a Master thesis", "journal-ref": null, "doi": null, "report-no": null, "categories": "math.CT cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Monads are of interest both in semantics and in higher dimensional algebra.\nIt turns out that the idea behind usual notion finitary monads (whose values on\nall sets can be computed from their values on finite sets) extends to a more\ngeneral class of monads called monads with arities, so that not only algebraic\ntheories can be computed from a proper set of arities, but also more general\nstructures like n-categories, the computing process being realized using Kan\nextensions. This Master thesis compiles the required material in order to\nunderstand this question of arities and reconstruction of monads, and tries to\ngive some examples of relevant interest from both semantics and higher category\ntheory. A discussion on the promising field of operads is then provided as\nappendix.\n", "versions": [{"version": "v1", "created": "Fri, 14 Oct 2011 18:43:35 GMT"}], "update_date": "2012-01-18", "authors_parsed": [["Grellois", "Charles", ""]]}, {"id": "1110.3672", "submitter": "Daniele Theseider Dupr\\'e", "authors": "Laura Giordano, Alberto Martelli, Daniele Theseider Dupr\\'e", "title": "Reasoning about Actions with Temporal Answer Sets", "comments": "To appear in Theory and Practice of Logic Programming", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.AI cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In this paper we combine Answer Set Programming (ASP) with Dynamic Linear\nTime Temporal Logic (DLTL) to define a temporal logic programming language for\nreasoning about complex actions and infinite computations. DLTL extends\npropositional temporal logic of linear time with regular programs of\npropositional dynamic logic, which are used for indexing temporal modalities.\nThe action language allows general DLTL formulas to be included in domain\ndescriptions to constrain the space of possible extensions. We introduce a\nnotion of Temporal Answer Set for domain descriptions, based on the usual\nnotion of Answer Set. Also, we provide a translation of domain descriptions\ninto standard ASP and we use Bounded Model Checking techniques for the\nverification of DLTL constraints.\n", "versions": [{"version": "v1", "created": "Mon, 17 Oct 2011 14:12:07 GMT"}], "update_date": "2011-10-18", "authors_parsed": [["Giordano", "Laura", ""], ["Martelli", "Alberto", ""], ["Dupr\u00e9", "Daniele Theseider", ""]]}, {"id": "1110.3704", "submitter": "Fr\\'ed\\'eric Herbreteau", "authors": "Fr\\'ed\\'eric Herbreteau and Dileep Kini and B. Srivathsan and Igor\n  Walukiewicz", "title": "Using non-convex approximations for efficient analysis of timed automata", "comments": "Extended version of FSTTCS 2011 paper", "journal-ref": null, "doi": "10.4230/LIPIcs.FSTTCS.2011.78", "report-no": null, "categories": "cs.LO cs.FL", "license": "http://creativecommons.org/licenses/by-nc-sa/3.0/", "abstract": "  The reachability problem for timed automata asks if there exists a path from\nan initial state to a target state. The standard solution to this problem\ninvolves computing the zone graph of the automaton, which in principle could be\ninfinite. In order to make the graph finite, zones are approximated using an\nextrapolation operator. For reasons of efficiency in current algorithms\nextrapolation of a zone is always a zone and in particular it is convex.\n  In this paper, we propose to solve the reachability problem without such\nextrapolation operators. To ensure termination, we provide an efficient\nalgorithm to check if a zone is included in the so called region closure of\nanother. Although theoretically better, closure cannot be used in the standard\nalgorithm since a closure of a zone may not be convex.\n  An additional benefit of the proposed approach is that it permits to\ncalculate approximating parameters on-the-fly during exploration of the zone\ngraph, as opposed to the current methods which do it by a static analysis of\nthe automaton prior to the exploration. This allows for further improvements in\nthe algorithm. Promising experimental results are presented.\n", "versions": [{"version": "v1", "created": "Mon, 17 Oct 2011 15:43:54 GMT"}], "update_date": "2011-12-30", "authors_parsed": [["Herbreteau", "Fr\u00e9d\u00e9ric", ""], ["Kini", "Dileep", ""], ["Srivathsan", "B.", ""], ["Walukiewicz", "Igor", ""]]}, {"id": "1110.3705", "submitter": "Fr\\'ed\\'eric Herbreteau", "authors": "Fr\\'ed\\'eric Herbreteau and B. Srivathsan and Igor Walukiewicz", "title": "Better abstractions for timed automata", "comments": "Extended version of LICS 2012 paper (conference paper till v6). in\n  Information and Computation, available online 27 July 2016", "journal-ref": null, "doi": "10.1016/j.ic.2016.07.004", "report-no": null, "categories": "cs.LO cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We consider the reachability problem for timed automata. A standard solution\nto this problem involves computing a search tree whose nodes are abstractions\nof zones. These abstractions preserve underlying simulation relations on the\nstate space of the automaton. For both effectiveness and efficiency reasons,\nthey are parametrized by the maximal lower and upper bounds (LU-bounds)\noccurring in the guards of the automaton. We consider the aLU abstraction\ndefined by Behrmann et al. Since this abstraction can potentially yield\nnon-convex sets, it has not been used in implementations. We prove that aLU\nabstraction is the biggest abstraction with respect to LU-bounds that is sound\nand complete for reachability. We also provide an efficient technique to use\nthe aLU abstraction to solve the reachability problem.\n", "versions": [{"version": "v1", "created": "Mon, 17 Oct 2011 15:44:36 GMT"}, {"version": "v2", "created": "Sat, 14 Jan 2012 09:33:09 GMT"}, {"version": "v3", "created": "Tue, 24 Jan 2012 14:53:53 GMT"}, {"version": "v4", "created": "Tue, 4 Sep 2012 08:48:41 GMT"}, {"version": "v5", "created": "Thu, 17 Jan 2013 14:30:51 GMT"}, {"version": "v6", "created": "Fri, 18 Jan 2013 09:16:35 GMT"}, {"version": "v7", "created": "Thu, 28 Jul 2016 19:39:18 GMT"}], "update_date": "2016-07-29", "authors_parsed": [["Herbreteau", "Fr\u00e9d\u00e9ric", ""], ["Srivathsan", "B.", ""], ["Walukiewicz", "Igor", ""]]}, {"id": "1110.3706", "submitter": "Carroline Dewi Puspa  Kencana Ramli", "authors": "Carroline Dewi Puspa Kencana Ramli, Hanne Riis Nielson and Flemming\n  Nielson", "title": "The Logic of XACML - Extended", "comments": "Extended paper from The Logic of XACML, presented in FACS 2011 (8th\n  International Symposium on Formal Aspects of Component Software)", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.CR cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We study the international standard XACML 3.0 for describing security access\ncontrol policy in a compositional way. Our main contribution is to derive a\nlogic that precisely captures the idea behind the standard and to formally\ndefine the semantics of the policy combining algorithms of XACML. To guard\nagainst modelling artefacts we provide an alternative way of characterizing the\npolicy combining algorithms and we formally prove the equivalence of these\napproaches. This allows us to pinpoint the shortcoming of previous approaches\nto formalization based either on Belnap logic or on D-algebra.\n", "versions": [{"version": "v1", "created": "Mon, 17 Oct 2011 15:44:42 GMT"}], "update_date": "2011-10-18", "authors_parsed": [["Ramli", "Carroline Dewi Puspa Kencana", ""], ["Nielson", "Hanne Riis", ""], ["Nielson", "Flemming", ""]]}, {"id": "1110.4034", "submitter": "Ian Pratt-Hartmann", "authors": "Roman Kontchakov and Yavor Nenov and Ian Pratt-Hartmann and Michael\n  Zakharyaschev", "title": "Topological Logics with Connectedness over Euclidean Spaces", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO math.GT", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We consider the quantifier-free languages, Bc and Bc0, obtained by augmenting\nthe signature of Boolean algebras with a unary predicate representing,\nrespectively, the property of being connected, and the property of having a\nconnected interior. These languages are interpreted over the regular closed\nsets of n-dimensional Euclidean space (n greater than 1) and, additionally,\nover the regular closed polyhedral sets of n-dimensional Euclidean space. The\nresulting logics are examples of formalisms that have recently been proposed in\nthe Artificial Intelligence literature under the rubric \"Qualitative Spatial\nReasoning.\" We prove that the satisfiability problem for Bc is undecidable over\nthe regular closed polyhedra in all dimensions greater than 1, and that the\nsatisfiability problem for both languages is undecidable over both the regular\nclosed sets and the regular closed polyhedra in the Euclidean plane. However,\nwe also prove that the satisfiability problem for Bc0 is NP-complete over the\nregular closed sets in all dimensions greater than 2, while the corresponding\nproblem for the regular closed polyhedra is ExpTime-complete. Our results show,\nin particular, that spatial reasoning over Euclidean spaces is much harder than\nreasoning over arbitrary topological spaces.\n", "versions": [{"version": "v1", "created": "Tue, 18 Oct 2011 15:54:46 GMT"}], "update_date": "2011-10-19", "authors_parsed": [["Kontchakov", "Roman", ""], ["Nenov", "Yavor", ""], ["Pratt-Hartmann", "Ian", ""], ["Zakharyaschev", "Michael", ""]]}, {"id": "1110.4094", "submitter": "Paolo Baldan", "authors": "Paolo Baldan and Silvia Crafa", "title": "A Logic for True Concurrency", "comments": "31 pages, a preliminary version appeared in CONCUR 2010", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We propose a logic for true concurrency whose formulae predicate about events\nin computations and their causal dependencies. The induced logical equivalence\nis hereditary history preserving bisimilarity, and fragments of the logic can\nbe identified which correspond to other true concurrent behavioural\nequivalences in the literature: step, pomset and history preserving\nbisimilarity. Standard Hennessy-Milner logic, and thus (interleaving)\nbisimilarity, is also recovered as a fragment. We also propose an extension of\nthe logic with fixpoint operators, thus allowing to describe causal and\nconcurrency properties of infinite computations. We believe that this work\ncontributes to a rational presentation of the true concurrent spectrum and to a\ndeeper understanding of the relations between the involved behavioural\nequivalences.\n", "versions": [{"version": "v1", "created": "Tue, 18 Oct 2011 19:30:26 GMT"}, {"version": "v2", "created": "Fri, 17 Jan 2014 06:26:04 GMT"}], "update_date": "2015-03-19", "authors_parsed": [["Baldan", "Paolo", ""], ["Crafa", "Silvia", ""]]}, {"id": "1110.4159", "submitter": "EPTCS", "authors": "Marco Carbone (IT University of Copenhagen), Davide Grohmann (IT\n  University of Copenhagen), Thomas T. Hildebrandt (IT University of\n  Copenhagen), Hugo A. L\\'opez (IT University of Copenhagen)", "title": "A Logic for Choreographies", "comments": "In Proceedings PLACES 2010, arXiv:1110.3853", "journal-ref": "EPTCS 69, 2011, pp. 29-43", "doi": "10.4204/EPTCS.69.3", "report-no": null, "categories": "cs.PL cs.DC cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We explore logical reasoning for the global calculus, a coordination model\nbased on the notion of choreography, with the aim to provide a methodology for\nspecification and verification of structured communications. Starting with an\nextension of Hennessy-Milner logic, we present the global logic (GL), a modal\nlogic describing possible interactions among participants in a choreography. We\nillustrate its use by giving examples of properties on service specifications.\nFinally, we show that, despite GL is undecidable, there is a significant\ndecidable fragment which we provide with a sound and complete proof system for\nchecking validity of formulae.\n", "versions": [{"version": "v1", "created": "Wed, 19 Oct 2011 02:25:48 GMT"}], "update_date": "2011-10-20", "authors_parsed": [["Carbone", "Marco", "", "IT University of Copenhagen"], ["Grohmann", "Davide", "", "IT\n  University of Copenhagen"], ["Hildebrandt", "Thomas T.", "", "IT University of\n  Copenhagen"], ["L\u00f3pez", "Hugo A.", "", "IT University of Copenhagen"]]}, {"id": "1110.4161", "submitter": "EPTCS", "authors": "Thomas T. Hildebrandt (IT University of Copenhagen), Raghava Rao\n  Mukkamala (IT University of Copenhagen)", "title": "Declarative Event-Based Workflow as Distributed Dynamic Condition\n  Response Graphs", "comments": "In Proceedings PLACES 2010, arXiv:1110.3853", "journal-ref": "EPTCS 69, 2011, pp. 59-73", "doi": "10.4204/EPTCS.69.5", "report-no": null, "categories": "cs.LO cs.FL cs.PL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We present Dynamic Condition Response Graphs (DCR Graphs) as a declarative,\nevent-based process model inspired by the workflow language employed by our\nindustrial partner and conservatively generalizing prime event structures. A\ndynamic condition response graph is a directed graph with nodes representing\nthe events that can happen and arrows representing four relations between\nevents: condition, response, include, and exclude. Distributed DCR Graphs is\nthen obtained by assigning roles to events and principals. We give a graphical\nnotation inspired by related work by van der Aalst et al. We exemplify the use\nof distributed DCR Graphs on a simple workflow taken from a field study at a\nDanish hospital, pointing out their flexibility compared to imperative workflow\nmodels. Finally we provide a mapping from DCR Graphs to Buchi-automata.\n", "versions": [{"version": "v1", "created": "Wed, 19 Oct 2011 02:31:40 GMT"}], "update_date": "2011-10-20", "authors_parsed": [["Hildebrandt", "Thomas T.", "", "IT University of Copenhagen"], ["Mukkamala", "Raghava Rao", "", "IT University of Copenhagen"]]}, {"id": "1110.4201", "submitter": "Arnaud Durand", "authors": "Arnaud Durand and Stefan Mengel", "title": "The Complexity of Weighted Counting for Acyclic Conjunctive Queries", "comments": "28 pages, 1 figure", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.CC cs.LO math.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This paper is a study of weighted counting of the solutions of acyclic\nconjunctive queries ($\\ACQ$). The unweighted quantifier free version of this\nproblem is known to be tractable (for combined complexity), but it is also\nknown that introducing even a single quantified variable makes it $\\sP$-hard.\nWe first show that weighted counting for quantifier-free $\\ACQ$ is still\ntractable and that even minimalistic extensions of the problem lead to hard\ncases. We then introduce a new parameter for quantified queries that permits to\nisolate large island of tractability. We show that, up to a standard assumption\nfrom parameterized complexity, this parameter fully characterizes tractable\nsubclasses for counting weighted solutions of $\\ACQ$ queries. Thus we\ncompletely determine the tractability frontier for weighted counting for\n$\\ACQ$.\n", "versions": [{"version": "v1", "created": "Wed, 19 Oct 2011 07:49:15 GMT"}, {"version": "v2", "created": "Wed, 7 Dec 2011 20:38:22 GMT"}], "update_date": "2011-12-08", "authors_parsed": [["Durand", "Arnaud", ""], ["Mengel", "Stefan", ""]]}, {"id": "1110.4473", "submitter": "EPTCS", "authors": "David Hardin (Rockwell Collins), Julien Schmaltz (Open University of\n  the Netherlands)", "title": "Proceedings 10th International Workshop on the ACL2 Theorem Prover and\n  its Applications", "comments": null, "journal-ref": "EPTCS 70, 2011", "doi": "10.4204/EPTCS.70", "report-no": null, "categories": "cs.LO cs.MS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This volume contains the proceedings of ACL2 2011, the International Workshop\non the ACL2 Theorem Prover and its Applications. The workshop was held in\nAustin, Texas, USA, on November 3-4 2011. ACL2 2011 is the tenth in a series of\nworkshops on the ACL2 Theorem Prover and its Applications. The workshop was\nco-located with the eleventh Conference on Formal Methods in Computer Aided\nDesign (FMCAD'11). The ACL2 Workshop series provide a major technical forum for\nresearchers to present and discuss improvements and extensions to the theorem\nprover, comparisons of ACL2 with other systems, and applications of ACL2 in\nformal verification or formalized mathematics. Workshops have been held at\napproxiamately 18 month intervals since 1999. ACL2 is the most recent\nincarnation of the Boyer-Moore family of theorem provers, for which, Robert\nBoyer, Matt Kaufmann and J Strother Moore received the 2005 ACM Software System\nAward. It is state-of-the-art automated reasoning system that has been\nsuccessfully used in academia, government and industry for specification and\nverification of computing systems. More details can be found in the proceedings\nand on the workshop web page (www.cs.ru.nl/~julien/acl2-11/).\n", "versions": [{"version": "v1", "created": "Thu, 20 Oct 2011 08:48:32 GMT"}], "update_date": "2011-10-21", "authors_parsed": [["Hardin", "David", "", "Rockwell Collins"], ["Schmaltz", "Julien", "", "Open University of\n  the Netherlands"]]}, {"id": "1110.4671", "submitter": "EPTCS", "authors": "John R. Cowles (University of Wyoming), Ruben Gamboa (University of\n  Wyoming)", "title": "Verifying Sierpi\\'nski and Riesel Numbers in ACL2", "comments": "In Proceedings ACL2 2011, arXiv:1110.4473", "journal-ref": "EPTCS 70, 2011, pp. 20-27", "doi": "10.4204/EPTCS.70.2", "report-no": null, "categories": "cs.DM cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  A Sierpinski number is an odd positive integer, k, such that no positive\ninteger of the form k * 2^n + 1 is prime. Similar to a Sierpinski number, a\nRiesel number is an odd positive integer, k, such that no positive integer of\nthe form k * 2^n + 1 is prime. A cover for such a k is a finite list of\npositive integers such that each integer j of the appropriate form has a\nfactor, d, in the cover, with 1 < d < j. Given a k and its cover, ACL2 is used\nto systematically verify that each integer of the given form has a non-trivial\nfactor in the cover.\n", "versions": [{"version": "v1", "created": "Fri, 21 Oct 2011 00:45:23 GMT"}], "update_date": "2011-10-24", "authors_parsed": [["Cowles", "John R.", "", "University of Wyoming"], ["Gamboa", "Ruben", "", "University of\n  Wyoming"]]}, {"id": "1110.4672", "submitter": "EPTCS", "authors": "Mike Dahlin (Department of Computer Science, University of Texas at\n  Austin), Ryan Johnson (Department of Computer Science, University of Texas at\n  Austin), Robert Bellarmine Krug (Department of Computer Science, University\n  of Texas at Austin), Michael McCoyd (Department of Computer Science,\n  University of Texas at Austin), William Young (Department of Computer\n  Science, University of Texas at Austin)", "title": "Toward the Verification of a Simple Hypervisor", "comments": "In Proceedings ACL2 2011, arXiv:1110.4473", "journal-ref": "EPTCS 70, 2011, pp. 28-45", "doi": "10.4204/EPTCS.70.3", "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Virtualization promises significant benefits in security, efficiency,\ndependability, and cost. Achieving these benefits depends upon the reliability\nof the underlying virtual machine monitors (hypervisors). This paper describes\nan ongoing project to develop and verify MinVisor, a simple but functional\nType-I x86 hypervisor, proving protection properties at the assembly level\nusing ACL2. Originally based on an existing research hypervisor, MinVisor\nprovides protection of its own memory from a malicious guest. Our long-term\ngoal is to fully verify MinVisor, providing a vehicle to investigate the\nmodeling and verification of hypervisors at the implementation level, and also\na basis for further systems research. Functional segments of the MinVisor C\ncode base are translated into Y86 assembly, and verified with respect to the\nY86 model. The inductive assertions (also known as \"compositional cutpoints\")\nmethodology is used to prove the correctness of the code. The proof of the code\nthat sets up the nested page tables is described. We compare this project to\nrelated efforts in systems code verification and outline some useful steps\nforward.\n", "versions": [{"version": "v1", "created": "Fri, 21 Oct 2011 00:45:30 GMT"}], "update_date": "2011-10-24", "authors_parsed": [["Dahlin", "Mike", "", "Department of Computer Science, University of Texas at\n  Austin"], ["Johnson", "Ryan", "", "Department of Computer Science, University of Texas at\n  Austin"], ["Krug", "Robert Bellarmine", "", "Department of Computer Science, University\n  of Texas at Austin"], ["McCoyd", "Michael", "", "Department of Computer Science,\n  University of Texas at Austin"], ["Young", "William", "", "Department of Computer\n  Science, University of Texas at Austin"]]}, {"id": "1110.4673", "submitter": "EPTCS", "authors": "Matt Kaufmann (Univ. of Texas at Austin), J Strother Moore (Univ. of\n  Texas at Austin)", "title": "How Can I Do That with ACL2? Recent Enhancements to ACL2", "comments": "In Proceedings ACL2 2011, arXiv:1110.4473", "journal-ref": "EPTCS 70, 2011, pp. 46-60", "doi": "10.4204/EPTCS.70.4", "report-no": null, "categories": "cs.MS cs.LO cs.SC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The last several years have seen major enhancements to ACL2 functionality,\nlargely driven by requests from its user community, including utilities now in\ncommon use such as 'make-event', 'mbe', and trust tags. In this paper we\nprovide user-level summaries of some ACL2 enhancements introduced after the\nrelease of Version 3.5 (in May, 2009, at about the time of the 2009 ACL2\nworkshop) up through the release of Version 4.3 in July, 2011, roughly a couple\nof years later. Many of these features are not particularly well known yet, but\nmost ACL2 users could take advantage of at least some of them. Some of the\nchanges could affect existing proof efforts, such as a change that treats pairs\nof functions such as 'member' and 'member-equal' as the same function.\n", "versions": [{"version": "v1", "created": "Fri, 21 Oct 2011 00:45:38 GMT"}], "update_date": "2011-10-24", "authors_parsed": [["Kaufmann", "Matt", "", "Univ. of Texas at Austin"], ["Moore", "J Strother", "", "Univ. of\n  Texas at Austin"]]}, {"id": "1110.4674", "submitter": "EPTCS", "authors": "Peter Reid (University of Oklahoma), Ruben Gamboa (University of\n  Wyoming)", "title": "Implementing an Automatic Differentiator in ACL2", "comments": "In Proceedings ACL2 2011, arXiv:1110.4473", "journal-ref": "EPTCS 70, 2011, pp. 61-69", "doi": "10.4204/EPTCS.70.5", "report-no": null, "categories": "cs.SC cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The foundational theory of differentiation was developed as part of the\noriginal release of ACL2(r). In work reported at the last ACL2 Workshop, we\npresented theorems justifying the usual differentiation rules, including the\nchain rule and the derivative of inverse functions. However, the process of\napplying these theorems to formalize the derivative of a particular function is\ncompletely manual. More recently, we developed a macro and supporting functions\nthat can automate this process. This macro uses the ACL2 table facility to keep\ntrack of functions and their derivatives, and it also interacts with the macro\nthat introduces inverse functions in ACL2(r), so that their derivatives can\nalso be automated. In this paper, we present the implementation of this macro\nand related functions.\n", "versions": [{"version": "v1", "created": "Fri, 21 Oct 2011 00:45:44 GMT"}], "update_date": "2011-10-24", "authors_parsed": [["Reid", "Peter", "", "University of Oklahoma"], ["Gamboa", "Ruben", "", "University of\n  Wyoming"]]}, {"id": "1110.4675", "submitter": "EPTCS", "authors": "Peter-Michael Seidel (Advanced Micro Devices)", "title": "Formal Verification of an Iterative Low-Power x86 Floating-Point\n  Multiplier with Redundant Feedback", "comments": "In Proceedings ACL2 2011, arXiv:1110.4473", "journal-ref": "EPTCS 70, 2011, pp. 70-83", "doi": "10.4204/EPTCS.70.6", "report-no": null, "categories": "cs.LO cs.AR cs.MS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We present the formal verification of a low-power x86 floating-point\nmultiplier. The multiplier operates iteratively and feeds back intermediate\nresults in redundant representation. It supports x87 and SSE instructions in\nvarious precisions and can block the issuing of new instructions. The design\nhas been optimized for low-power operation and has not been constrained by the\nformal verification effort. Additional improvements for the implementation were\nidentified through formal verification. The formal verification of the design\nalso incorporates the implementation of clock-gating and control logic. The\ncore of the verification effort was based on ACL2 theorem proving.\nAdditionally, model checking has been used to verify some properties of the\nfloating-point scheduler that are relevant for the correct operation of the\nunit.\n", "versions": [{"version": "v1", "created": "Fri, 21 Oct 2011 00:45:53 GMT"}], "update_date": "2011-10-24", "authors_parsed": [["Seidel", "Peter-Michael", "", "Advanced Micro Devices"]]}, {"id": "1110.4676", "submitter": "EPTCS", "authors": "Sol Swords (Centaur Technology), Jared Davis (Centaur Technology)", "title": "Bit-Blasting ACL2 Theorems", "comments": "In Proceedings ACL2 2011, arXiv:1110.4473", "journal-ref": "EPTCS 70, 2011, pp. 84-102", "doi": "10.4204/EPTCS.70.7", "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Interactive theorem proving requires a lot of human guidance. Proving a\nproperty involves (1) figuring out why it holds, then (2) coaxing the theorem\nprover into believing it. Both steps can take a long time. We explain how to\nuse GL, a framework for proving finite ACL2 theorems with BDD- or SAT-based\nreasoning. This approach makes it unnecessary to deeply understand why a\nproperty is true, and automates the process of admitting it as a theorem. We\nuse GL at Centaur Technology to verify execution units for x86 integer, MMX,\nSSE, and floating-point arithmetic.\n", "versions": [{"version": "v1", "created": "Fri, 21 Oct 2011 00:45:59 GMT"}], "update_date": "2011-10-24", "authors_parsed": [["Swords", "Sol", "", "Centaur Technology"], ["Davis", "Jared", "", "Centaur Technology"]]}, {"id": "1110.4677", "submitter": "EPTCS", "authors": "Freek Verbeek (Radboud University), Julien Schmaltz (Open University\n  of The Netherlands)", "title": "Formal verification of a deadlock detection algorithm", "comments": "In Proceedings ACL2 2011, arXiv:1110.4473", "journal-ref": "EPTCS 70, 2011, pp. 103-112", "doi": "10.4204/EPTCS.70.8", "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Deadlock detection is a challenging issue in the analysis and design of\non-chip networks. We have designed an algorithm to detect deadlocks\nautomatically in on-chip networks with wormhole switching. The algorithm has\nbeen specified and proven correct in ACL2. To enable a top-down proof\nmethodology, some parts of the algorithm have been left unimplemented. For\nthese parts, the ACL2 specification contains constrained functions introduced\nwith defun-sk. We used single-threaded objects to represent the data structures\nused by the algorithm. In this paper, we present details on the proof of\ncorrectness of the algorithm. The process of formal verification was crucial to\nget the algorithm flawless. Our ultimate objective is to have an efficient\nexecutable, and formally proven correct implementation of the algorithm running\nin ACL2.\n", "versions": [{"version": "v1", "created": "Fri, 21 Oct 2011 00:46:07 GMT"}], "update_date": "2011-10-24", "authors_parsed": [["Verbeek", "Freek", "", "Radboud University"], ["Schmaltz", "Julien", "", "Open University\n  of The Netherlands"]]}, {"id": "1110.4978", "submitter": "W{\\l}odzimierz Drabent", "authors": "W{\\l}odzimierz Drabent", "title": "Logic + control: On program construction and verification", "comments": "29 pages. Version 3 substantially reworked, in particular all\n  informal reasoning replaced by proofs, part of the content moved to 1412.8739\n  and 1411.3015. Versions 4, 5 and this one -- various modifications and\n  extensions. Under consideration in Theory and Practice of Logic Programming\n  (TPLP)", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO cs.PL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This paper presents an example of formal reasoning about the semantics of a\nProlog program of practical importance (the SAT solver of Howe and King). The\nprogram is treated as a definite clause logic program with added control. The\nlogic program is constructed by means of stepwise refinement, hand in hand with\nits correctness and completeness proofs. The proofs are declarative - they do\nnot refer to any operational semantics. Each step of the logic program\nconstruction follows a systematic approach to constructing programs which are\nprovably correct and complete. We also prove that correctness and completeness\nof the logic program is preserved in the final Prolog program. Additionally, we\nprove termination, occur-check freedom and non-floundering.\n  Our example shows how dealing with \"logic\" and with \"control\" can be\nseparated. Most of the proofs can be done at the \"logic\" level, abstracting\nfrom any operational semantics.\n  The example employs approximate specifications; they are crucial in\nsimplifying reasoning about logic programs. It also shows that the paradigm of\nsemantics-preserving program transformations may be not sufficient. We suggest\nconsidering transformations which preserve correctness and completeness with\nrespect to an approximate specification.\n", "versions": [{"version": "v1", "created": "Sat, 22 Oct 2011 15:29:28 GMT"}, {"version": "v2", "created": "Sat, 26 May 2012 15:19:39 GMT"}, {"version": "v3", "created": "Wed, 30 Dec 2015 23:16:26 GMT"}, {"version": "v4", "created": "Wed, 28 Dec 2016 21:36:40 GMT"}, {"version": "v5", "created": "Fri, 13 Jan 2017 14:04:45 GMT"}, {"version": "v6", "created": "Fri, 12 May 2017 16:54:29 GMT"}], "update_date": "2017-05-15", "authors_parsed": [["Drabent", "W\u0142odzimierz", ""]]}, {"id": "1110.5805", "submitter": "Kira Adaricheva V", "authors": "Kira Adaricheva, J.B. Nation, Robert Rand", "title": "Ordered direct implicational basis of a finite closure system", "comments": "25 pages, 10 figures; presented at AMS conference,\n  TACL-2011,ISAIM-2012 and at RUTCOR seminar", "journal-ref": "Discrete Applied Mathematics 161 (2013), pp. 707-723", "doi": "10.1016/j.dam.2012.08.031", "report-no": null, "categories": "math.CO cs.LO math.RA", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Closure system on a finite set is a unifying concept in logic programming,\nrelational data bases and knowledge systems. It can also be presented in the\nterms of finite lattices, and the tools of economic description of a finite\nlattice have long existed in lattice theory. We present this approach by\ndescribing the so-called D-basis and introducing the concept of ordered direct\nbasis of an implicational system. A direct basis of a closure operator, or an\nimplicational system, is a set of implications that allows one to compute the\nclosure of an arbitrary set by a single iteration. This property is preserved\nby the D-basis at the cost of following a prescribed order in which\nimplications will be attended. In particular, using an ordered direct basis\nallows to optimize the forward chaining procedure in logic programming that\nuses the Horn fragment of propositional logic. One can extract the D-basis from\nany direct unit basis S in time polynomial in the size of S, and it takes only\nlinear time of the cardinality of the D-basis to put it into a proper order. We\nproduce examples of closure systems on a 6-element set, for which the canonical\nbasis of Duquenne and Guigues is not ordered direct.\n", "versions": [{"version": "v1", "created": "Wed, 26 Oct 2011 14:47:29 GMT"}, {"version": "v2", "created": "Thu, 22 Mar 2012 02:19:40 GMT"}, {"version": "v3", "created": "Sun, 13 May 2012 16:50:44 GMT"}], "update_date": "2014-01-29", "authors_parsed": [["Adaricheva", "Kira", ""], ["Nation", "J. B.", ""], ["Rand", "Robert", ""]]}, {"id": "1110.5867", "submitter": "Nachum Dershowitz", "authors": "Nachum Dershowitz and Alexander Nadel", "title": "From Total Assignment Enumeration to Modern SAT Solver", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  A new framework for presenting and analyzing the functionality of a modern\nDLL-based SAT solver is proposed. Our approach exploits the inherent relation\nbetween backtracking and resolution. We show how to derive the algorithm of a\nmodern SAT solver from DLL step-by-step. We analyze the inference power of\nBoolean Constraint Propagation, Non-Chronological Backtracking and 1UIP-based\nConflict-Directed Backjumping. Our work can serve as an introduction to a\nmodern SAT solver functionality and as a basis for future work on the inference\npower of a modern SAT solver and on practical SAT solver design.\n", "versions": [{"version": "v1", "created": "Wed, 26 Oct 2011 18:23:56 GMT"}], "update_date": "2011-10-27", "authors_parsed": [["Dershowitz", "Nachum", ""], ["Nadel", "Alexander", ""]]}, {"id": "1110.5942", "submitter": "EPTCS", "authors": "Yang Cai (MIT CSAIL), Ting Zhang (Iowa State University)", "title": "Can Nondeterminism Help Complementation?", "comments": "In Proceedings GandALF 2012, arXiv:1210.2028", "journal-ref": "EPTCS 96, 2012, pp. 57-70", "doi": "10.4204/EPTCS.96.5", "report-no": null, "categories": "cs.LO cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Complementation and determinization are two fundamental notions in automata\ntheory. The close relationship between the two has been well observed in the\nliterature. In the case of nondeterministic finite automata on finite words\n(NFA), complementation and determinization have the same state complexity,\nnamely Theta(2^n) where n is the state size. The same similarity between\ndeterminization and complementation was found for Buchi automata, where both\noperations were shown to have 2^\\Theta(n lg n) state complexity. An intriguing\nquestion is whether there exists a type of omega-automata whose determinization\nis considerably harder than its complementation. In this paper, we show that\nfor all common types of omega-automata, the determinization problem has the\nsame state complexity as the corresponding complementation problem at the\ngranularity of 2^\\Theta(.).\n", "versions": [{"version": "v1", "created": "Wed, 26 Oct 2011 22:23:48 GMT"}, {"version": "v2", "created": "Thu, 3 Nov 2011 07:50:32 GMT"}, {"version": "v3", "created": "Wed, 22 Feb 2012 05:37:33 GMT"}, {"version": "v4", "created": "Tue, 9 Oct 2012 00:53:29 GMT"}], "update_date": "2012-10-10", "authors_parsed": [["Cai", "Yang", "", "MIT CSAIL"], ["Zhang", "Ting", "", "Iowa State University"]]}, {"id": "1110.6140", "submitter": "Takayuki Kihara", "authors": "Takayuki Kihara", "title": "Incomputability of Simply Connected Planar Continua", "comments": "25 pages", "journal-ref": null, "doi": null, "report-no": null, "categories": "math.LO cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Le Roux and Ziegler asked whether every simply connected compact nonempty\nplanar co-c.e. closed set always contains a computable point. In this paper, we\nsolve the problem of le Roux and Ziegler by showing that there exists a\ncontractible planar co-c.e. dendroid without computable points. We also provide\nseveral pathological examples of tree-like co-c.e. continua fulfilling certain\nglobal incomputability properties: there is a computable dendrite which does\nnot *-include a co-c.e. tree; there is a co-c.e. dendrite which does not\n*-include a computable dendrite; there is a computable dendroid which does not\n*-include a co-c.e. dendrite. Here, a continuum A *-includes a member of a\nclass P of continua if, for every positive real, A includes a P-continuum B\nsuch that the Hausdorff distance between A and B is smaller than the real.\n", "versions": [{"version": "v1", "created": "Thu, 27 Oct 2011 16:53:25 GMT"}], "update_date": "2011-10-28", "authors_parsed": [["Kihara", "Takayuki", ""]]}, {"id": "1110.6685", "submitter": "EPTCS", "authors": "Herman Geuvers, Gopalan Nadathur", "title": "Proceedings Sixth International Workshop on Logical Frameworks and\n  Meta-languages: Theory and Practice", "comments": null, "journal-ref": "EPTCS 71, 2011", "doi": "10.4204/EPTCS.71", "report-no": null, "categories": "cs.LO cs.PL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This volume constitutes the proceedings of LFMTP 2011, the Sixth\nInternational Workshop on Logical Frameworks and Meta-languages: Theory and\nPractice. The LFMTP workshop series brings together designers, implementors,\nand practitioners to discuss varied aspects of the structure of logical\nframeworks and meta-languages that impinge on their use in representing,\nimplementing, and reasoning about a wide variety of deductive systems of\ninterest in logic and computer science. LFMTP 2011 was held on August 26, 2011\nin Nijmegen, Netherlands, as a workshop associated with ITP 2011, the Second\nInternational Conference on Interactive Theorem Proving. Its program consisted\nof contributed and invited presentations and was integrated with that of MLPA\n11, the Third Workshop on Modules and Libraries for Proof Assistants. This\nproceedings contains only the contributed papers that were accepted for\npresentation at the workshop. Each of these papers was accepted based on the\nreviews of three members of the program committee. Authors were subsequently\ngiven the opportunity to revise their submissions based on the comments\nprovided by the reviewers and the feedback obtained during their presentations\nat the workshop.\n", "versions": [{"version": "v1", "created": "Mon, 31 Oct 2011 03:38:41 GMT"}], "update_date": "2011-11-01", "authors_parsed": [["Geuvers", "Herman", ""], ["Nadathur", "Gopalan", ""]]}, {"id": "1110.6738", "submitter": "Manoj Raut", "authors": "Manoj K. Raut", "title": "An Incremental Knowledge Compilation in First Order Logic", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  An algorithm to compute the set of prime implicates of a quantifier-free\nclausal formula X in first order logic had been presented in earlier work. As\nthe knowledge base X is dynamic, new clauses are added to the old knowledge\nbase. In this paper an incremental algorithm is presented to compute the prime\nimplicates of X and a clause C from $\\pi(X)\\cup C$. The correctness of the\nalgorithm is also proved.\n", "versions": [{"version": "v1", "created": "Mon, 31 Oct 2011 10:16:24 GMT"}, {"version": "v2", "created": "Wed, 16 Nov 2011 08:31:00 GMT"}], "update_date": "2011-11-17", "authors_parsed": [["Raut", "Manoj K.", ""]]}]