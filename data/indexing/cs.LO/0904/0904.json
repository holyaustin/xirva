[{"id": "0904.0019", "submitter": "Josep Argelich", "authors": "Josep Argelich, Ines Lynce, and Joao Marques-Silva", "title": "On Solving Boolean Multilevel Optimization Problems", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO cs.AI", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Many combinatorial optimization problems entail a number of hierarchically\ndependent optimization problems. An often used solution is to associate a\nsuitably large cost with each individual optimization problem, such that the\nsolution of the resulting aggregated optimization problem solves the original\nset of hierarchically dependent optimization problems. This paper starts by\nstudying the package upgradeability problem in software distributions.\nStraightforward solutions based on Maximum Satisfiability (MaxSAT) and\npseudo-Boolean (PB) optimization are shown to be ineffective, and unlikely to\nscale for large problem instances. Afterwards, the package upgradeability\nproblem is related to multilevel optimization. The paper then develops new\nalgorithms for Boolean Multilevel Optimization (BMO) and highlights a large\nnumber of potential applications. The experimental results indicate that the\nproposed algorithms for BMO allow solving optimization problems that existing\nMaxSAT and PB solvers would otherwise be unable to solve.\n", "versions": [{"version": "v1", "created": "Tue, 31 Mar 2009 21:01:07 GMT"}], "update_date": "2009-04-02", "authors_parsed": [["Argelich", "Josep", ""], ["Lynce", "Ines", ""], ["Marques-Silva", "Joao", ""]]}, {"id": "0904.0034", "submitter": "Luis Menasch\\'e Schechter", "authors": "Mario R. F. Benevides and L. Menasch\\'e Schechter", "title": "CCS-Based Dynamic Logics for Communicating Concurrent Programs", "comments": "28 pages", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This work presents three increasingly expressive Dynamic Logics in which the\nprograms are CCS processes (sCCS-PDL, CCS-PDL and XCCS-PDL). Their goal is to\nreason about properties of concurrent programs and systems described using CCS.\nIn order to accomplish that, CCS's operators and constructions are added to a\nbasic modal logic in order to create dynamic logics that are suitable for the\ndescription and verification of properties of communicating, concurrent and\nnon-deterministic programs and systems, in a similar way as PDL is used for the\nsequential case. We provide complete axiomatizations for the three logics.\nUnlike Peleg's Concurrent PDL with Channels, our logics have a simple Kripke\nsemantics, complete axiomatizations and the finite model property.\n", "versions": [{"version": "v1", "created": "Wed, 1 Apr 2009 02:07:44 GMT"}], "update_date": "2009-04-02", "authors_parsed": [["Benevides", "Mario R. F.", ""], ["Schechter", "L. Menasch\u00e9", ""]]}, {"id": "0904.0071", "submitter": "Danko Ilik", "authors": "Danko Ilik (PPS, INRIA Paris - Rocquencourt, LIX), Gyesik Lee\n  (ROSAEC), Hugo Herbelin (PPS, INRIA Paris - Rocquencourt)", "title": "Kripke Models for Classical Logic", "comments": null, "journal-ref": "Annals of Pure and Applied Logic 161(11), 2010", "doi": "10.1016/j.apal.2010.04.007", "report-no": null, "categories": "math.LO cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We introduce a notion of Kripke model for classical logic for which we\nconstructively prove soundness and cut-free completeness. We discuss the\nnovelty of the notion and its potential applications.\n", "versions": [{"version": "v1", "created": "Wed, 1 Apr 2009 06:26:47 GMT"}, {"version": "v2", "created": "Mon, 12 Oct 2009 09:59:49 GMT"}, {"version": "v3", "created": "Fri, 26 Feb 2010 07:40:29 GMT"}, {"version": "v4", "created": "Thu, 29 Apr 2010 11:58:04 GMT"}, {"version": "v5", "created": "Mon, 7 Jun 2010 13:57:55 GMT"}], "update_date": "2014-11-04", "authors_parsed": [["Ilik", "Danko", "", "PPS, INRIA Paris - Rocquencourt, LIX"], ["Lee", "Gyesik", "", "ROSAEC"], ["Herbelin", "Hugo", "", "PPS, INRIA Paris - Rocquencourt"]]}, {"id": "0904.0125", "submitter": "Jonathan Cohen", "authors": "Jonathan Asher Cohen", "title": "Coherence for rewriting 2-theories", "comments": "PhD thesis, 88 pages", "journal-ref": null, "doi": null, "report-no": null, "categories": "math.CT cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  General coherence theorems are constructed that yield explicit presentations\nof categorical and algebraic objects. The categorical structures involved are\nfinitary discrete Lawvere 2-theories, though they are approached within the\nlanguage of term rewriting theory. Two general coherence theorems are obtained.\nThe first applies to terminating and confluent rewriting 2-theories. This\nresult is exploited to construct systematic presentations for the higher\nThompson groups and the Higman-Thompson groups. The presentations are\ncategorically interesting as they arise from higher-arity analogues of the\nStasheff/Mac Lane coherence axioms, which involve phenomena not present in the\nclassical binary axioms. The second general coherence theorem holds for\n2-theories that are not necessarily confluent or terminating and is used to\nconstruct a new proof of coherence for iterated monoidal categories, which\narise as categorical models of iterated loop spaces and fail to be confluent.\n", "versions": [{"version": "v1", "created": "Wed, 1 Apr 2009 12:59:15 GMT"}], "update_date": "2009-04-03", "authors_parsed": [["Cohen", "Jonathan Asher", ""]]}, {"id": "0904.0300", "submitter": "Petar Kormushev", "authors": "Petar Kormushev", "title": "Design, development and implementation of a tool for construction of\n  declarative functional descriptions of semantic web services based on WSMO\n  methodology", "comments": "Master's Thesis in Artificial Intelligence, 105 pages, in Bulgarian.\n  Submitted to Faculty of Mathematics and Informatics, Sofia University, 2005", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.AI cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Semantic web services (SWS) are self-contained, self-describing, semantically\nmarked-up software resources that can be published, discovered, composed and\nexecuted across the Web in a semi-automatic way. They are a key component of\nthe future Semantic Web, in which networked computer programs become providers\nand users of information at the same time. This work focuses on developing a\nfull-life-cycle software toolset for creating and maintaining Semantic Web\nServices (SWSs) based on the Web Service Modelling Ontology (WSMO) framework. A\nmain part of WSMO-based SWS is service capability - a declarative description\nof Web service functionality. A formal syntax and semantics for such a\ndescription is provided by Web Service Modeling Language (WSML), which is based\non different logical formalisms, namely, Description Logics, First-Order Logic\nand Logic Programming. A WSML description of a Web service capability is\nrepresented as a set of complex logical expressions (axioms). We develop a\nspecialized user-friendly tool for constructing and editing WSMO-based SWS\ncapabilities. Since the users of this tool are not specialists in first-order\nlogic, a graphical way for constricting and editing axioms is proposed. The\ndesigned process for constructing logical expressions is ontology-driven, which\nabstracts away as much as possible from any concrete syntax of logical\nlanguage. We propose several mechanisms to guarantees the semantic consistency\nof the produced logical expressions. The tool is implemented in Java using\nEclipse for IDE and GEF (Graphical Editing Framework) for visualization.\n", "versions": [{"version": "v1", "created": "Thu, 2 Apr 2009 05:34:17 GMT"}], "update_date": "2009-04-03", "authors_parsed": [["Kormushev", "Petar", ""]]}, {"id": "0904.0570", "submitter": "Andreas Schnabl", "authors": "Georg Moser (University of Innsbruck), Andreas Schnabl (University of\n  Innsbruck)", "title": "The Derivational Complexity Induced by the Dependency Pair Method", "comments": null, "journal-ref": "Logical Methods in Computer Science, Volume 7, Issue 3 (July 13,\n  2011) lmcs:805", "doi": "10.2168/LMCS-7(3:1)2011", "report-no": null, "categories": "cs.LO cs.AI cs.CC cs.PL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We study the derivational complexity induced by the dependency pair method,\nenhanced with standard refinements. We obtain upper bounds on the derivational\ncomplexity induced by the dependency pair method in terms of the derivational\ncomplexity of the base techniques employed. In particular we show that the\nderivational complexity induced by the dependency pair method based on some\ndirect technique, possibly refined by argument filtering, the usable rules\ncriterion, or dependency graphs, is primitive recursive in the derivational\ncomplexity induced by the direct method. This implies that the derivational\ncomplexity induced by a standard application of the dependency pair method\nbased on traditional termination orders like KBO, LPO, and MPO is exactly the\nsame as if those orders were applied as the only termination technique.\n", "versions": [{"version": "v1", "created": "Fri, 3 Apr 2009 15:10:50 GMT"}, {"version": "v2", "created": "Fri, 26 Jun 2009 11:33:52 GMT"}, {"version": "v3", "created": "Tue, 21 Sep 2010 08:52:40 GMT"}, {"version": "v4", "created": "Wed, 1 Jun 2011 17:22:27 GMT"}, {"version": "v5", "created": "Mon, 11 Jul 2011 21:10:44 GMT"}], "update_date": "2015-07-01", "authors_parsed": [["Moser", "Georg", "", "University of Innsbruck"], ["Schnabl", "Andreas", "", "University of\n  Innsbruck"]]}, {"id": "0904.0578", "submitter": "Gergely Luk\\'acsy", "authors": "Gergely Luk\\'acsy, P\\'eter Szeredi", "title": "Efficient Description Logic Reasoning in Prolog: The DLog system", "comments": "73 pages, 5 Postscript figures, uses\n  {rotating,multirow,fancyvrb,psfrag}.sty To appear in Theory and Practice of\n  Logic Programming (TPLP)", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This paper describes a resolution based Description Logic reasoning system\ncalled DLog. DLog transforms Description Logic axioms into a Prolog program and\nuses the standard Prolog execution for efficiently answering instance retrieval\nqueries. From the Description Logic point of view, DLog is an ABox reasoning\nengine for the full SHIQ language. The DLog approach makes it possible to store\nthe individuals in a database instead of memory, which results in better\nscalability and helps using description logic ontologies directly on top of\nexisting information sources.\n  To appear in Theory and Practice of Logic Programming (TPLP).\n", "versions": [{"version": "v1", "created": "Fri, 3 Apr 2009 13:52:57 GMT"}, {"version": "v2", "created": "Thu, 9 Apr 2009 13:31:10 GMT"}], "update_date": "2009-04-09", "authors_parsed": [["Luk\u00e1csy", "Gergely", ""], ["Szeredi", "P\u00e9ter", ""]]}, {"id": "0904.0589", "submitter": "Van Hung Le", "authors": "Van Hung Le (1), Fei Liu (1), and Dinh Khang Tran (2) ((1)La Trobe\n  University, Australia (2)Hanoi University of Technology, Vietnam)", "title": "Fuzzy Linguistic Logic Programming and its Applications", "comments": "33 pages, to appear in Theory and Practice of Logic Programming\n  (TPLP)", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The paper introduces fuzzy linguistic logic programming, which is a\ncombination of fuzzy logic programming, introduced by P. Vojtas, and hedge\nalgebras in order to facilitate the representation and reasoning on human\nknowledge expressed in natural languages. In fuzzy linguistic logic\nprogramming, truth values are linguistic ones, e.g., VeryTrue,\nVeryProbablyTrue, and LittleFalse, taken from a hedge algebra of a linguistic\ntruth variable, and linguistic hedges (modifiers) can be used as unary\nconnectives in formulae. This is motivated by the fact that humans reason\nmostly in terms of linguistic terms rather than in terms of numbers, and\nlinguistic hedges are often used in natural languages to express different\nlevels of emphasis. The paper presents: (i) the language of fuzzy linguistic\nlogic programming; (ii) a declarative semantics in terms of Herbrand\ninterpretations and models; (iii) a procedural semantics which directly\nmanipulates linguistic terms to compute a lower bound to the truth value of a\nquery, and proves its soundness; (iv) a fixpoint semantics of logic programs,\nand based on it, proves the completeness of the procedural semantics; (v)\nseveral applications of fuzzy linguistic logic programming; and (vi) an idea of\nimplementing a system to execute fuzzy linguistic logic programs.\n", "versions": [{"version": "v1", "created": "Fri, 3 Apr 2009 14:45:20 GMT"}], "update_date": "2009-04-06", "authors_parsed": [["Le", "Van Hung", ""], ["Liu", "Fei", ""], ["Tran", "Dinh Khang", ""]]}, {"id": "0904.0721", "submitter": "Linh Anh Nguyen D.Sc.", "authors": "Linh Anh Nguyen and Andrzej Sza{\\l}as", "title": "Optimal Tableau Decision Procedures for PDL", "comments": null, "journal-ref": "Fund. Inform. 104(4), pp. 349-384, 2010", "doi": null, "report-no": null, "categories": "cs.LO cs.AI cs.CC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We reformulate Pratt's tableau decision procedure of checking satisfiability\nof a set of formulas in PDL. Our formulation is simpler and more direct for\nimplementation. Extending the method we give the first EXPTIME (optimal)\ntableau decision procedure not based on transformation for checking consistency\nof an ABox w.r.t. a TBox in PDL (here, PDL is treated as a description logic).\nWe also prove the new result that the data complexity of the instance checking\nproblem in PDL is coNP-complete.\n", "versions": [{"version": "v1", "created": "Sat, 4 Apr 2009 15:20:07 GMT"}, {"version": "v2", "created": "Mon, 1 Jun 2009 09:39:45 GMT"}], "update_date": "2011-04-12", "authors_parsed": [["Nguyen", "Linh Anh", ""], ["Sza\u0142as", "Andrzej", ""]]}, {"id": "0904.0981", "submitter": "Martin Avanzini", "authors": "Martin Avanzini and Georg Moser", "title": "Dependency Pairs and Polynomial Path Orders", "comments": "23 pages, conference version accepted at RTA 2009", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO cs.AI cs.CC cs.SC", "license": "http://creativecommons.org/licenses/by/3.0/", "abstract": "  We show how polynomial path orders can be employed efficiently in conjunction\nwith weak innermost dependency pairs to automatically certify polynomial\nruntime complexity of term rewrite systems and the polytime computability of\nthe functions computed. The established techniques have been implemented and we\nprovide ample experimental data to assess the new method.\n", "versions": [{"version": "v1", "created": "Mon, 6 Apr 2009 18:10:53 GMT"}, {"version": "v2", "created": "Mon, 22 Jun 2009 14:44:02 GMT"}, {"version": "v3", "created": "Wed, 8 Jun 2011 07:03:03 GMT"}], "update_date": "2011-06-09", "authors_parsed": [["Avanzini", "Martin", ""], ["Moser", "Georg", ""]]}, {"id": "0904.1110", "submitter": "David Nowak", "authors": "David Nowak", "title": "On formal verification of arithmetic-based cryptographic primitives", "comments": "13 pages", "journal-ref": "In Information Security and Cryptology - ICISC 2008, 11th\n  International Conference, Seoul, Korea, December 3-5, 2008, Proceedings,\n  volume 5461 of Lecture Notes in Computer Science, pages 368-382, Springer", "doi": "10.1007/978-3-642-00730-9_23", "report-no": null, "categories": "cs.CR cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Cryptographic primitives are fundamental for information security: they are\nused as basic components for cryptographic protocols or public-key\ncryptosystems. In many cases, their security proofs consist in showing that\nthey are reducible to computationally hard problems. Those reductions can be\nsubtle and tedious, and thus not easily checkable. On top of the proof\nassistant Coq, we had implemented in previous work a toolbox for writing and\nchecking game-based security proofs of cryptographic primitives. In this paper\nwe describe its extension with number-theoretic capabilities so that it is now\npossible to write and check arithmetic-based cryptographic primitives in our\ntoolbox. We illustrate our work by machine checking the game-based proofs of\nunpredictability of the pseudo-random bit generator of Blum, Blum and Shub, and\nsemantic security of the public-key cryptographic scheme of Goldwasser and\nMicali.\n", "versions": [{"version": "v1", "created": "Tue, 7 Apr 2009 11:04:39 GMT"}], "update_date": "2009-04-08", "authors_parsed": [["Nowak", "David", ""]]}, {"id": "0904.1302", "submitter": "Stephan Kreutzer", "authors": "Stephan Kreutzer", "title": "On the Parameterised Intractability of Monadic Second-Order Logic", "comments": "23 pages", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO cs.CC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  One of Courcelle's celebrated results states that if C is a class of graphs\nof bounded tree-width, then model-checking for monadic second order logic is\nfixed-parameter tractable on C by linear time parameterised algorithms. An\nimmediate question is whether this is best possible or whether the result can\nbe extended to classes of unbounded tree-width.\n  In this paper we show that in terms of tree-width, the theorem can not be\nextended much further. More specifically, we show that if C is a class of\ngraphs which is closed under colourings and satisfies certain constructibility\nconditions such that the tree-width of C is not bounded by log^{16}(n) then\nMSO_2-model checking is not fixed-parameter tractable unless the satisfiability\nproblem SAT for propositional logic can be solved in sub-exponential time. If\nthe tree-width of C is not poly-logarithmically bounded, then MSO_2-model\nchecking is not fixed-parameter tractable unless all problems in the\npolynomial-time hierarchy, and hence in particular all problems in NP, can be\nsolved in sub-exponential time.\n", "versions": [{"version": "v1", "created": "Wed, 8 Apr 2009 10:36:24 GMT"}], "update_date": "2009-04-09", "authors_parsed": [["Kreutzer", "Stephan", ""]]}, {"id": "0904.1488", "submitter": "Francesco Ranzato", "authors": "Francesco Ranzato and Francesco Tapparo", "title": "Computing Stuttering Simulations", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Stuttering bisimulation is a well-known behavioral equivalence that preserves\nCTL-X, namely CTL without the next-time operator X. Correspondingly, the\nstuttering simulation preorder induces a coarser behavioral equivalence that\npreserves the existential fragment ECTL-{X,G}, namely ECTL without the\nnext-time X and globally G operators. While stuttering bisimulation equivalence\ncan be computed by the well-known Groote and Vaandrager's [1990] algorithm, to\nthe best of our knowledge, no algorithm for computing the stuttering simulation\npreorder and equivalence is available. This paper presents such an algorithm\nfor finite state systems.\n", "versions": [{"version": "v1", "created": "Thu, 9 Apr 2009 09:40:33 GMT"}], "update_date": "2009-04-10", "authors_parsed": [["Ranzato", "Francesco", ""], ["Tapparo", "Francesco", ""]]}, {"id": "0904.1529", "submitter": "Luigi Santocanale", "authors": "Luigi Santocanale (LIF), Robin Cockett", "title": "On the word problem for SP-categories, and the properties of two-way\n  communication", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO math.CT math.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The word problem for categories with free products and coproducts (sums),\nSP-categories, is directly related to the problem of determining the\nequivalence of certain processes. Indeed, the maps in these categories may be\ndirectly interpreted as processes which communicate by two-way channels. The\nmaps of an SP-category may also be viewed as a proof theory for a simple logic\nwith a game theoretic intepretation. The cut-elimination procedure for this\nlogic determines equality only up to certain permuting conversions. As the\nequality classes under these permuting conversions are finite, it is easy to\nsee that equality between cut-free terms (even in the presence of the additive\nunits) is decidable. Unfortunately, this does not yield a tractable decision\nalgorithm as these equivalence classes can contain exponentially many terms.\nHowever, the rather special properties of these free categories -- and, thus,\nof two-way communication -- allow one to devise a tractable algorithm for\nequality. We show that, restricted to cut-free terms s,t : X --> A, the\ndecision procedure runs in time polynomial on |X||A|, the product of the sizes\nof the domain and codomain type.\n", "versions": [{"version": "v1", "created": "Thu, 9 Apr 2009 13:31:00 GMT"}], "update_date": "2009-04-10", "authors_parsed": [["Santocanale", "Luigi", "", "LIF"], ["Cockett", "Robin", ""]]}, {"id": "0904.1672", "submitter": "Joost Vennekens", "authors": "Joost Vennekens, Marc Denecker, Maurice Bruynooghe", "title": "CP-logic: A Language of Causal Probabilistic Events and Its Relation to\n  Logic Programming", "comments": "To be published in Theory and Practice of Logic Programming (TPLP)", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.AI cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This papers develops a logical language for representing probabilistic causal\nlaws. Our interest in such a language is twofold. First, it can be motivated as\na fundamental study of the representation of causal knowledge. Causality has an\ninherent dynamic aspect, which has been studied at the semantical level by\nShafer in his framework of probability trees. In such a dynamic context, where\nthe evolution of a domain over time is considered, the idea of a causal law as\nsomething which guides this evolution is quite natural. In our formalization, a\nset of probabilistic causal laws can be used to represent a class of\nprobability trees in a concise, flexible and modular way. In this way, our work\nextends Shafer's by offering a convenient logical representation for his\nsemantical objects.\n  Second, this language also has relevance for the area of probabilistic logic\nprogramming. In particular, we prove that the formal semantics of a theory in\nour language can be equivalently defined as a probability distribution over the\nwell-founded models of certain logic programs, rendering it formally quite\nsimilar to existing languages such as ICL or PRISM. Because we can motivate and\nexplain our language in a completely self-contained way as a representation of\nprobabilistic causal laws, this provides a new way of explaining the intuitions\nbehind such probabilistic logic programs: we can say precisely which knowledge\nsuch a program expresses, in terms that are equally understandable by a\nnon-logician. Moreover, we also obtain an additional piece of knowledge\nrepresentation methodology for probabilistic logic programs, by showing how\nthey can express probabilistic causal laws.\n", "versions": [{"version": "v1", "created": "Fri, 10 Apr 2009 10:00:55 GMT"}], "update_date": "2009-04-13", "authors_parsed": [["Vennekens", "Joost", ""], ["Denecker", "Marc", ""], ["Bruynooghe", "Maurice", ""]]}, {"id": "0904.1701", "submitter": "Walid Belkhir", "authors": "Walid Belkhir", "title": "The Star Height Hierarchy Vs. The Variable Hierarchy", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO cs.GT", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The star height hierarchy (resp. the variable hierarchy) results in\nclassifying $\\mu$-terms into classes according to the nested depth of fixed\npoint operators (resp. to the number of bound variables). We prove, under some\nassumptions, that the variable hierarchy is a proper refinement of the star\nheight hierarchy. We mean that the non collapse of the variable hierarchy\nimplies the non collapse of the star height hierarchy. The proof relies on the\ncombinatorial characterization of the two hierarchies.\n", "versions": [{"version": "v1", "created": "Fri, 10 Apr 2009 15:25:49 GMT"}], "update_date": "2009-04-13", "authors_parsed": [["Belkhir", "Walid", ""]]}, {"id": "0904.1902", "submitter": "Zhilin Wu", "authors": "Stephane Grumbach (INRIA Liama), Zhilin Wu (CASIA Liama)", "title": "On Distributed Model Checking of MSO on Graphs", "comments": "30 pages, 4 figures, llncs.cls,llncsdoc.sty", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO cs.DC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We consider distributed model-checking of Monadic Second-Order logic (MSO) on\ngraphs which constitute the topology of communication networks. The graph is\nthus both the structure being checked and the system on which the distributed\ncomputation is performed. We prove that MSO can be distributively model-checked\nwith only a constant number of messages sent over each link for planar networks\nwith bounded diameter, as well as for networks with bounded degree and bounded\ntree-length. The distributed algorithms rely on nontrivial transformations of\nlinear time sequential algorithms for tree decompositions of bounded tree-width\ngraphs.\n", "versions": [{"version": "v1", "created": "Mon, 13 Apr 2009 04:33:15 GMT"}], "update_date": "2009-04-14", "authors_parsed": [["Grumbach", "Stephane", "", "INRIA Liama"], ["Wu", "Zhilin", "", "CASIA Liama"]]}, {"id": "0904.1915", "submitter": "Zhilin Wu", "authors": "Stephane Grumbach (INRIA Liama), Zhilin Wu (CASIA Liama)", "title": "Logical locality entails frugal distributed computation over graphs", "comments": "31 pages, 0 figures", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO cs.DC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  First-order logic is known to have limited expressive power over finite\nstructures. It enjoys in particular the locality property, which states that\nfirst-order formulae cannot have a global view of a structure. This limitation\nensures on their low sequential computational complexity. We show that the\nlocality impacts as well on their distributed computational complexity. We use\nfirst-order formulae to describe the properties of finite connected graphs,\nwhich are the topology of communication networks, on which the first-order\nformulae are also evaluated. We show that over bounded degree networks and\nplanar networks, first-order properties can be frugally evaluated, that is,\nwith only a bounded number of messages, of size logarithmic in the number of\nnodes, sent over each link. Moreover, we show that the result carries over for\nthe extension of first-order logic with unary counting.\n", "versions": [{"version": "v1", "created": "Mon, 13 Apr 2009 06:16:39 GMT"}], "update_date": "2009-04-14", "authors_parsed": [["Grumbach", "Stephane", "", "INRIA Liama"], ["Wu", "Zhilin", "", "CASIA Liama"]]}, {"id": "0904.2076", "submitter": "Roberto Amadio", "authors": "Roberto Amadio (PPS)", "title": "On stratified regions", "comments": null, "journal-ref": "Programming Languages and Systems, 7th Asian Symposium, APLAS\n  2009, Cor\\'ee, R\\'epublique De (2009)", "doi": null, "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Type and effect systems are a tool to analyse statically the behaviour of\nprograms with effects. We present a proof based on the so called reducibility\ncandidates that a suitable stratification of the type and effect system entails\nthe termination of the typable programs. The proof technique covers a simply\ntyped, multi-threaded, call-by-value lambda-calculus, equipped with a variety\nof scheduling (preemptive, cooperative) and interaction mechanisms (references,\nchannels, signals).\n", "versions": [{"version": "v1", "created": "Tue, 14 Apr 2009 09:22:16 GMT"}, {"version": "v2", "created": "Tue, 9 Jun 2009 07:39:01 GMT"}], "update_date": "2010-07-01", "authors_parsed": [["Amadio", "Roberto", "", "PPS"]]}, {"id": "0904.2340", "submitter": "Diletta Romana Cacciagrano", "authors": "D. Cacciagrano, F. Corradini, C. Palamidessi", "title": "Explicit fairness in testing semantics", "comments": "27 pages, 1 figure, appeared in LMCS", "journal-ref": "Logical Methods in Computer Science, Volume 5, Issue 2 (June 22,\n  2009) lmcs:1134", "doi": "10.2168/LMCS-5(2:15)2009", "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In this paper we investigate fair computations in the pi-calculus. Following\nCosta and Stirling's approach for CCS-like languages, we consider a method to\nlabel process actions in order to filter out unfair computations. We contrast\nthe existing fair-testing notion with those that naturally arise by imposing\nweak and strong fairness. This comparison provides insight about the\nexpressiveness of the various `fair' testing semantics and about their\ndiscriminating power.\n", "versions": [{"version": "v1", "created": "Wed, 15 Apr 2009 15:55:56 GMT"}, {"version": "v2", "created": "Mon, 22 Jun 2009 11:30:11 GMT"}], "update_date": "2015-07-01", "authors_parsed": [["Cacciagrano", "D.", ""], ["Corradini", "F.", ""], ["Palamidessi", "C.", ""]]}, {"id": "0904.2385", "submitter": "Stefan Milius", "authors": "Stefan Milius, Lawrence S. Moss", "title": "The Category Theoretic Solution of Recursive Program Schemes", "comments": "this version includes the corrections from the corrigendum in\n  Theoret. Comput. Sci. 403 (2008), 409-415", "journal-ref": "Theoret. Comput. Sci. 366 (2006), 3-59", "doi": null, "report-no": null, "categories": "cs.LO math.CT", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This paper provides a general account of the notion of recursive program\nschemes, studying both uninterpreted and interpreted solutions. It can be\nregarded as the category-theoretic version of the classical area of algebraic\nsemantics. The overall assumptions needed are small indeed: working only in\ncategories with \"enough final coalgebras\" we show how to formulate, solve, and\nstudy recursive program schemes. Our general theory is algebraic and so avoids\nusing ordered, or metric structures. Our work generalizes the previous\napproaches which do use this extra structure by isolating the key concepts\nneeded to study substitution in infinite trees, including second-order\nsubstitution. As special cases of our interpreted solutions we obtain the usual\ndenotational semantics using complete partial orders, and the one using\ncomplete metric spaces. Our theory also encompasses implicitly defined objects\nwhich are not usually taken to be related to recursive program schemes. For\nexample, the classical Cantor two-thirds set falls out as an interpreted\nsolution (in our sense) of a recursive program scheme.\n", "versions": [{"version": "v1", "created": "Wed, 15 Apr 2009 19:57:26 GMT"}, {"version": "v2", "created": "Wed, 15 Apr 2009 20:27:58 GMT"}], "update_date": "2011-01-26", "authors_parsed": [["Milius", "Stefan", ""], ["Moss", "Lawrence S.", ""]]}, {"id": "0904.2457", "submitter": "Guillaume Theyssier", "authors": "Emmanuel Jeandel (LIF), Guillaume Theyssier (LM-Savoie)", "title": "Subshifts, Languages and Logic", "comments": null, "journal-ref": "13th International Conference on Developments in Language Theory,\n  Stuttgart : Allemagne (2009)", "doi": null, "report-no": null, "categories": "cs.DM cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We study the Monadic Second Order (MSO) Hierarchy over infinite pictures,\nthat is tilings. We give a characterization of existential MSO in terms of\ntilings and projections of tilings. Conversely, we characterise logic fragments\ncorresponding to various classes of infinite pictures (subshifts of finite\ntype, so?c subshifts).\n", "versions": [{"version": "v1", "created": "Thu, 16 Apr 2009 09:53:05 GMT"}], "update_date": "2016-11-25", "authors_parsed": [["Jeandel", "Emmanuel", "", "LIF"], ["Theyssier", "Guillaume", "", "LM-Savoie"]]}, {"id": "0904.2521", "submitter": "Florent Madelaine", "authors": "Florent R. Madelaine", "title": "Universal Structures and the logic of Forbidden Patterns", "comments": "25 pages, 3 figures, extended version of conference papers at CSR'06\n  and CSL'06", "journal-ref": "Logical Methods in Computer Science, Volume 5, Issue 2 (June 2,\n  2009) lmcs:1237", "doi": "10.2168/LMCS-5(2:13)2009", "report-no": null, "categories": "cs.LO cs.DM", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Forbidden Patterns Problems (FPPs) are a proper generalisation of Constraint\nSatisfaction Problems (CSPs). However, we show that when the input is connected\nand belongs to a class which has low tree-depth decomposition (e.g. structure\nof bounded degree, proper minor closed class and more generally class of\nbounded expansion) any FPP becomes a CSP. This result can also be rephrased in\nterms of expressiveness of the logic MMSNP, introduced by Feder and Vardi in\nrelation with CSPs. Our proof generalises that of a recent paper by Nesetril\nand Ossona de Mendez. Note that our result holds in the general setting of\nproblems over arbitrary relational structures (not just for graphs).\n", "versions": [{"version": "v1", "created": "Thu, 16 Apr 2009 15:26:40 GMT"}, {"version": "v2", "created": "Tue, 2 Jun 2009 12:56:10 GMT"}], "update_date": "2015-07-01", "authors_parsed": [["Madelaine", "Florent R.", ""]]}, {"id": "0904.2638", "submitter": "Krishnendu Chatterjee", "authors": "Roderick Bloem, Krishnendu Chatterjee, Thomas A. Henzinger and Barbara\n  Jobstmann", "title": "Better Quality in Synthesis through Quantitative Objectives", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO cs.GT", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Most specification languages express only qualitative constraints.\n  However, among two implementations that satisfy a given specification, one\nmay be preferred to another. For example, if a specification asks that every\nrequest is followed by a response, one may prefer an implementation that\ngenerates responses quickly but does not generate unnecessary responses. We use\nquantitative properties to measure the \"goodness\" of an implementation. Using\ngames with corresponding quantitative objectives, we can synthesize \"optimal\"\nimplementations, which are preferred among the set of possible implementations\nthat satisfy a given specification. In particular, we show how automata with\nlexicographic mean-payoff conditions can be used to express many interesting\nquantitative properties for reactive systems. In this framework, the synthesis\nof optimal implementations requires the solution of lexicographic mean-payoff\ngames (for safety requirements), and the solution of games with both\nlexicographic mean-payoff and parity objectives (for liveness requirements). We\npresent algorithms for solving both kinds of novel graph games.\n", "versions": [{"version": "v1", "created": "Fri, 17 Apr 2009 05:56:33 GMT"}, {"version": "v2", "created": "Fri, 17 May 2013 06:17:49 GMT"}, {"version": "v3", "created": "Tue, 28 May 2013 07:13:59 GMT"}], "update_date": "2013-05-29", "authors_parsed": [["Bloem", "Roderick", ""], ["Chatterjee", "Krishnendu", ""], ["Henzinger", "Thomas A.", ""], ["Jobstmann", "Barbara", ""]]}, {"id": "0904.2675", "submitter": "Ugo Dal Lago", "authors": "Ugo Dal Lago (Universit\\`a di Bologna), Martin Hofmann (LMU, Munchen)", "title": "Bounded Linear Logic, Revisited", "comments": null, "journal-ref": "Logical Methods in Computer Science, Volume 6, Issue 4 (December\n  18, 2010) lmcs:1064", "doi": "10.2168/LMCS-6(4:7)2010", "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We present QBAL, an extension of Girard, Scedrov and Scott's bounded linear\nlogic. The main novelty of the system is the possibility of quantifying over\nresource variables. This generalization makes bounded linear logic considerably\nmore flexible, while preserving soundness and completeness for polynomial time.\nIn particular, we provide compositional embeddings of Leivant's RRW and\nHofmann's LFPL into QBAL.\n", "versions": [{"version": "v1", "created": "Fri, 17 Apr 2009 10:44:18 GMT"}, {"version": "v2", "created": "Thu, 18 Nov 2010 14:07:31 GMT"}, {"version": "v3", "created": "Sat, 18 Dec 2010 16:54:05 GMT"}, {"version": "v4", "created": "Tue, 21 Dec 2010 23:22:35 GMT"}, {"version": "v5", "created": "Thu, 23 Dec 2010 13:48:35 GMT"}], "update_date": "2015-07-01", "authors_parsed": [["Lago", "Ugo Dal", "", "Universit\u00e0 di Bologna"], ["Hofmann", "Martin", "", "LMU, Munchen"]]}, {"id": "0904.2894", "submitter": "Pascal Weil", "authors": "Manfred Kufleitner, Pascal Weil (LaBRI)", "title": "On FO2 quantifier alternation over words", "comments": null, "journal-ref": "Mathematical Foundations of Computer Science 2009, slovaque,\n  R\\'epublique (2009)", "doi": "10.1007/978-3-642-03816-7_44", "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We show that each level of the quantifier alternation hierarchy within\nFO^2[<] -- the 2-variable fragment of the first order logic of order on words\n-- is a variety of languages. We then use the notion of condensed rankers, a\nrefinement of the rankers defined by Weis and Immerman, to produce a decidable\nhierarchy of varieties which is interwoven with the quantifier alternation\nhierarchy -- and conjecturally equal to it. It follows that the latter\nhierarchy is decidable within one unit: given a formula alpha in FO^2[<], one\ncan effectively compute an integer m such that alpha is equivalent to a formula\nwith at most m+1 alternating blocks of quantifiers, but not to a formula with\nonly m-1 blocks. This is a much more precise result than what is known about\nthe quantifier alternation hierarchy within FO[<], where no decidability result\nis known beyond the very first levels.\n", "versions": [{"version": "v1", "created": "Sun, 19 Apr 2009 08:01:34 GMT"}], "update_date": "2015-05-13", "authors_parsed": [["Kufleitner", "Manfred", "", "LaBRI"], ["Weil", "Pascal", "", "LaBRI"]]}, {"id": "0904.2955", "submitter": "Rene David", "authors": "Ren\\'e David (LAMA)", "title": "A short proof that adding some permutation rules to beta preserves SN", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "math.LO cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  I show that, if a term is $SN$ for $\\beta$, it remains $SN$ when some\npermutation rules are added.\n", "versions": [{"version": "v1", "created": "Mon, 20 Apr 2009 07:21:04 GMT"}, {"version": "v2", "created": "Mon, 27 Apr 2009 08:23:55 GMT"}], "update_date": "2009-04-27", "authors_parsed": [["David", "Ren\u00e9", "", "LAMA"]]}, {"id": "0904.3036", "submitter": "Carl Hewitt", "authors": "Carl Hewitt", "title": "Inconsistency Robustness in Logic Programs", "comments": "Limits of Classical Logic", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Inconsistency robustness is \"information system performance in the face of\ncontinually pervasive inconsistencies.\" A fundamental principle of\nInconsistency Robustness is to make contradictions explicit so that arguments\nfor and against propositions can be formalized. This paper explores the role of\nInconsistency Robustness in the history and theory of Logic Programs.\n  Robert Kowalski put forward a bold thesis: \"Looking back on our early\ndiscoveries, I value most the discovery that computation could be subsumed by\ndeduction.\" However, mathematical logic cannot always infer computational steps\nbecause computational systems make use of arbitration for determining which\nmessage is processed next by a recipient that is sent multiple messages\nconcurrently. Since reception orders are in general indeterminate, they cannot\nbe inferred from prior information by mathematical logic alone. Therefore\nmathematical logic cannot in general implement computation.\n  Over the course of history, the term \"Functional Program\" has grown more\nprecise and technical as the field has matured. \"Logic Program\" should be on a\nsimilar trajectory. Accordingly, \"Logic Program\" should have a general precise\ncharacterization. In the fall of 1972, different characterizations of Logic\nPrograms that have continued to this day:\n  * A Logic Program uses Horn-Clause syntax for forward and backward chaining\n  * Each computational step (according to Actor Model) of a Logic Program is\ndeductively inferred (e.g. in Direct Logic).\n  The above examples are illustrative of how issues of inconsistency robustness\nhave repeatedly arisen in Logic Programs.\n", "versions": [{"version": "v1", "created": "Mon, 20 Apr 2009 14:07:18 GMT"}, {"version": "v10", "created": "Fri, 18 Jun 2010 16:44:09 GMT"}, {"version": "v11", "created": "Mon, 4 Oct 2010 21:02:55 GMT"}, {"version": "v12", "created": "Mon, 28 Feb 2011 19:02:29 GMT"}, {"version": "v13", "created": "Thu, 3 Mar 2011 01:33:09 GMT"}, {"version": "v14", "created": "Fri, 18 Mar 2011 18:31:18 GMT"}, {"version": "v15", "created": "Tue, 17 May 2011 14:34:20 GMT"}, {"version": "v16", "created": "Tue, 21 Jun 2011 02:36:46 GMT"}, {"version": "v17", "created": "Sun, 26 Jun 2011 23:31:58 GMT"}, {"version": "v18", "created": "Mon, 5 Sep 2011 19:11:43 GMT"}, {"version": "v19", "created": "Sun, 18 Sep 2011 14:07:27 GMT"}, {"version": "v2", "created": "Tue, 21 Apr 2009 15:24:23 GMT"}, {"version": "v20", "created": "Mon, 26 Sep 2011 20:47:04 GMT"}, {"version": "v21", "created": "Tue, 11 Oct 2011 06:40:19 GMT"}, {"version": "v22", "created": "Fri, 13 Jan 2012 19:21:20 GMT"}, {"version": "v23", "created": "Sun, 4 Mar 2012 13:53:31 GMT"}, {"version": "v24", "created": "Wed, 20 Jun 2012 21:15:29 GMT"}, {"version": "v25", "created": "Sun, 13 Jan 2013 16:51:38 GMT"}, {"version": "v26", "created": "Tue, 26 Nov 2013 15:26:43 GMT"}, {"version": "v27", "created": "Wed, 1 Jan 2014 02:23:44 GMT"}, {"version": "v28", "created": "Mon, 13 Jan 2014 21:14:32 GMT"}, {"version": "v29", "created": "Mon, 3 Feb 2014 21:37:44 GMT"}, {"version": "v3", "created": "Fri, 24 Apr 2009 19:52:06 GMT"}, {"version": "v30", "created": "Fri, 14 Feb 2014 20:53:33 GMT"}, {"version": "v31", "created": "Mon, 24 Feb 2014 12:36:29 GMT"}, {"version": "v32", "created": "Mon, 3 Mar 2014 20:07:10 GMT"}, {"version": "v33", "created": "Sun, 9 Mar 2014 22:19:34 GMT"}, {"version": "v34", "created": "Mon, 24 Mar 2014 22:10:32 GMT"}, {"version": "v35", "created": "Sun, 4 May 2014 21:48:36 GMT"}, {"version": "v36", "created": "Wed, 23 Jul 2014 20:25:43 GMT"}, {"version": "v37", "created": "Tue, 4 Nov 2014 20:43:00 GMT"}, {"version": "v38", "created": "Sun, 23 Nov 2014 23:13:49 GMT"}, {"version": "v39", "created": "Mon, 29 Dec 2014 18:41:01 GMT"}, {"version": "v4", "created": "Mon, 27 Apr 2009 08:22:06 GMT"}, {"version": "v40", "created": "Tue, 17 Feb 2015 18:30:46 GMT"}, {"version": "v41", "created": "Mon, 2 Mar 2015 06:23:10 GMT"}, {"version": "v5", "created": "Mon, 29 Jun 2009 15:37:33 GMT"}, {"version": "v6", "created": "Thu, 13 Aug 2009 07:30:37 GMT"}, {"version": "v7", "created": "Sat, 31 Oct 2009 21:59:49 GMT"}, {"version": "v8", "created": "Thu, 3 Dec 2009 15:57:46 GMT"}, {"version": "v9", "created": "Mon, 26 Apr 2010 13:24:20 GMT"}], "update_date": "2015-03-03", "authors_parsed": [["Hewitt", "Carl", ""]]}, {"id": "0904.3157", "submitter": "Zhilin Wu", "authors": "Stephane Grumbach (INRIA Liama), Fang Wang (ISCAS Sklcs) and Zhilin Wu\n  (CASIA Liama)", "title": "On the distributed evaluation of recursive queries over graphs", "comments": "28 pages, 0 figures, NOTERE 2009", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO cs.DC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Logical formalisms such as first-order logic (FO) and fixpoint logic (FP) are\nwell suited to express in a declarative manner fundamental graph\nfunctionalities required in distributed systems. We show that these logics\nconstitute good abstractions for programming distributed systems as a whole,\nsince they can be evaluated in a fully distributed manner with reasonable\ncomplexity upper-bounds. We first prove that FO and FP can be evaluated with a\npolynomial number of messages of logarithmic size. We then show that the\n(global) logical formulas can be translated into rule programs describing the\nlocal behavior of the nodes of the distributed system, which compute equivalent\nresults. Finally, we introduce local fragments of these logics, which preserve\nas much as possible the locality of their distributed computation, while\noffering a rich expressive power for networking functionalities. We prove that\nthey admit tighter upper-bounds with bounded number of messages of bounded\nsize. Finally, we show that the semantics and the complexity of the local\nfragments are preserved over locally consistent networks as well as anonymous\nnetworks, thus showing the robustness of the proposed local logical formalisms.\n", "versions": [{"version": "v1", "created": "Tue, 21 Apr 2009 02:24:13 GMT"}], "update_date": "2009-04-22", "authors_parsed": [["Grumbach", "Stephane", "", "INRIA Liama"], ["Wang", "Fang", "", "ISCAS Sklcs"], ["Wu", "Zhilin", "", "CASIA Liama"]]}, {"id": "0904.3325", "submitter": "Michael Ummels", "authors": "Michael Ummels and Dominik Wojtczak", "title": "Decision Problems for Nash Equilibria in Stochastic Games", "comments": "22 pages, revised version", "journal-ref": null, "doi": "10.1007/978-3-642-04027-6_37", "report-no": "EDI-INF-RR-1325", "categories": "cs.GT cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We analyse the computational complexity of finding Nash equilibria in\nstochastic multiplayer games with $\\omega$-regular objectives. While the\nexistence of an equilibrium whose payoff falls into a certain interval may be\nundecidable, we single out several decidable restrictions of the problem.\nFirst, restricting the search space to stationary, or pure stationary,\nequilibria results in problems that are typically contained in PSPACE and NP,\nrespectively. Second, we show that the existence of an equilibrium with a\nbinary payoff (i.e. an equilibrium where each player either wins or loses with\nprobability 1) is decidable. We also establish that the existence of a Nash\nequilibrium with a certain binary payoff entails the existence of an\nequilibrium with the same payoff in pure, finite-state strategies.\n", "versions": [{"version": "v1", "created": "Tue, 21 Apr 2009 19:53:36 GMT"}, {"version": "v2", "created": "Tue, 21 Apr 2009 21:01:30 GMT"}, {"version": "v3", "created": "Mon, 8 Jun 2009 17:15:29 GMT"}], "update_date": "2010-06-24", "authors_parsed": [["Ummels", "Michael", ""], ["Wojtczak", "Dominik", ""]]}, {"id": "0904.3469", "submitter": "Giorgi Japaridze", "authors": "Giorgi Japaridze", "title": "Toggling operators in computability logic", "comments": null, "journal-ref": "Theoretical Computer Science 412 (2011), pp. 971-1004", "doi": "10.1016/j.tcs.2010.11.037", "report-no": null, "categories": "cs.LO cs.AI math.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Computability logic (CL) (see http://www.cis.upenn.edu/~giorgi/cl.html ) is a\nresearch program for redeveloping logic as a formal theory of computability, as\nopposed to the formal theory of truth which it has more traditionally been.\nFormulas in CL stand for interactive computational problems, seen as games\nbetween a machine and its environment; logical operators represent operations\non such entities; and \"truth\" is understood as existence of an effective\nsolution. The formalism of CL is open-ended, and may undergo series of\nextensions as the studies of the subject advance. So far three -- parallel,\nsequential and choice -- sorts of conjunction and disjunction have been\nstudied. The present paper adds one more natural kind to this collection,\ntermed toggling. The toggling operations can be characterized as lenient\nversions of choice operations where choices are retractable, being allowed to\nbe reconsidered any finite number of times. This way, they model\ntrial-and-error style decision steps in interactive computation. The main\ntechnical result of this paper is constructing a sound and complete\naxiomatization for the propositional fragment of computability logic whose\nvocabulary, together with negation, includes all four -- parallel, toggling,\nsequential and choice -- kinds of conjunction and disjunction. Along with\ntoggling conjunction and disjunction, the paper also introduces the toggling\nversions of quantifiers and recurrence operations.\n", "versions": [{"version": "v1", "created": "Wed, 22 Apr 2009 14:32:01 GMT"}, {"version": "v2", "created": "Sat, 1 May 2010 21:40:22 GMT"}], "update_date": "2011-02-08", "authors_parsed": [["Japaridze", "Giorgi", ""]]}, {"id": "0904.3525", "submitter": "David Monniaux", "authors": "David Monniaux (VERIMAG - Imag)", "title": "On using floating-point computations to help an exact linear arithmetic\n  decision procedure", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO cs.NA", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We consider the decision problem for quantifier-free formulas whose atoms are\nlinear inequalities interpreted over the reals or rationals. This problem may\nbe decided using satisfiability modulo theory (SMT), using a mixture of a SAT\nsolver and a simplex-based decision procedure for conjunctions.\nState-of-the-art SMT solvers use simplex implementations over rational numbers,\nwhich perform well for typical problems arising from model-checking and program\nanalysis (sparse inequalities, small coefficients) but are slow for other\napplications (denser problems, larger coefficients). We propose a simple\npreprocessing phase that can be adapted on existing SMT solvers and that may be\noptionally triggered. Despite using floating-point computations, our method is\nsound and complete - it merely affects efficiency. We implemented the method\nand provide benchmarks showing that this change brings a naive and slow\ndecision procedure (\"textbook simplex\" with rational numbers) up to the\nefficiency of recent SMT solvers, over test cases arising from model-checking,\nand makes it definitely faster than state-of-the-art SMT solvers on dense\nexamples.\n", "versions": [{"version": "v1", "created": "Wed, 22 Apr 2009 18:40:01 GMT"}], "update_date": "2009-04-23", "authors_parsed": [["Monniaux", "David", "", "VERIMAG - Imag"]]}, {"id": "0904.3528", "submitter": "Pierre Lescanne", "authors": "Pierre Lescanne (LIP)", "title": "Deconstruction of Infinite Extensive Games using coinduction", "comments": "19 p", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.GT cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Finite objects and more specifically finite games are formalized using\ninduction, whereas infinite objects are formalized using coinduction. In this\narticle, after an introduction to the concept of coinduction, we revisit on\ninfinite (discrete) extensive games the basic notions of game theory. Among\nothers, we introduce a definition of Nash equilibrium and a notion of subgame\nperfect equilibrium for infinite games. We use those concepts to analyze well\nknown infinite games, like the dollar auction game and the centipede game and\nwe show that human behaviors that are often considered as illogic are perfectly\nrational, if one admits that human agents reason coinductively.\n", "versions": [{"version": "v1", "created": "Wed, 22 Apr 2009 18:45:26 GMT"}, {"version": "v2", "created": "Tue, 28 Apr 2009 13:58:32 GMT"}], "update_date": "2009-04-28", "authors_parsed": [["Lescanne", "Pierre", "", "LIP"]]}, {"id": "0904.3588", "submitter": "Zhihai Zhang", "authors": "Bican Xia, Zhihai Zhang", "title": "Termination of Linear Programs with Nonlinear Constraints", "comments": "17pages, 0 figures", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Tiwari proved that termination of linear programs (loops with linear loop\nconditions and updates) over the reals is decidable through Jordan forms and\neigenvectors computation. Braverman proved that it is also decidable over the\nintegers. In this paper, we consider the termination of loops with polynomial\nloop conditions and linear updates over the reals and integers. First, we prove\nthat the termination of such loops over the integers is undecidable. Second,\nwith an assumption, we provide an complete algorithm to decide the termination\nof a class of such programs over the reals. Our method is similar to that of\nTiwari in spirit but uses different techniques. Finally, we conjecture that the\ntermination of linear programs with polynomial loop conditions over the reals\nis undecidable in general by %constructing a loop and reducing the problem to\nanother decision problem related to number theory and ergodic theory, which we\nguess undecidable.\n", "versions": [{"version": "v1", "created": "Thu, 23 Apr 2009 02:52:15 GMT"}], "update_date": "2009-04-24", "authors_parsed": [["Xia", "Bican", ""], ["Zhang", "Zhihai", ""]]}, {"id": "0904.3789", "submitter": "Serguei Mokhov", "authors": "Serguei A. Mokhov and Joey Paquet", "title": "Formally Specifying and Proving Operational Aspects of Forensic Lucid in\n  Isabelle", "comments": "23 pages, 3 listings, 3 figures, 1 table, 1 Appendix with theorems,\n  pp. 76--98. TPHOLs 2008 Emerging Trends Proceedings, August 18-21, Montreal,\n  Canada. Editors: Otmane Ait Mohamed and Cesar Munoz and Sofiene Tahar. The\n  individual paper's PDF is at\n  http://users.encs.concordia.ca/~tphols08/TPHOLs2008/ET/76-98.pdf", "journal-ref": null, "doi": null, "report-no": "2008-1-Ait Mohamed", "categories": "cs.LO cs.CR cs.PL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  A Forensic Lucid intensional programming language has been proposed for\nintensional cyberforensic analysis. In large part, the language is based on\nvarious predecessor and codecessor Lucid dialects bound by the higher-order\nintensional logic (HOIL) that is behind them. This work formally specifies the\noperational aspects of the Forensic Lucid language and compiles a theory of its\nconstructs using Isabelle, a proof assistant system.\n", "versions": [{"version": "v1", "created": "Fri, 24 Apr 2009 03:30:20 GMT"}], "update_date": "2009-05-08", "authors_parsed": [["Mokhov", "Serguei A.", ""], ["Paquet", "Joey", ""]]}, {"id": "0904.4119", "submitter": "Miko{\\l}aj Boja\\'nczyk", "authors": "Mikolaj Bojanczyk", "title": "Two-Way Unary Temporal Logic over Trees", "comments": "29 pages. Journal version of a LICS 07 paper", "journal-ref": "Logical Methods in Computer Science, Volume 5, Issue 3 (August 5,\n  2009) lmcs:917", "doi": "10.2168/LMCS-5(3:5)2009", "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We consider a temporal logic EF+F^-1 for unranked, unordered finite trees.\nThe logic has two operators: EF\\phi, which says \"in some proper descendant \\phi\nholds\", and F^-1\\phi, which says \"in some proper ancestor \\phi holds\". We\npresent an algorithm for deciding if a regular language of unranked finite\ntrees can be expressed in EF+F^-1. The algorithm uses a characterization\nexpressed in terms of forest algebras.\n", "versions": [{"version": "v1", "created": "Mon, 27 Apr 2009 09:33:44 GMT"}, {"version": "v2", "created": "Wed, 5 Aug 2009 18:19:12 GMT"}], "update_date": "2015-07-01", "authors_parsed": [["Bojanczyk", "Mikolaj", ""]]}, {"id": "0904.4120", "submitter": "Ugo Dal Lago", "authors": "Ugo Dal Lago and Simone Martini", "title": "On Constructor Rewrite Systems and the Lambda-Calculus (Long Version)", "comments": "20 pages. Extended version of a paper in the proceedings of ICALP\n  2009, Track B", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.PL cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We prove that orthogonal constructor term rewrite systems and lambda-calculus\nwith weak (i.e., no reduction is allowed under the scope of a\nlambda-abstraction) call-by-value reduction can simulate each other with a\nlinear overhead. In particular, weak call-by-value beta-reduction can be\nsimulated by an orthogonal constructor term rewrite system in the same number\nof reduction steps. Conversely, each reduction in a term rewrite system can be\nsimulated by a constant number of beta-reduction steps. This is relevant to\nimplicit computational complexity, because the number of beta steps to normal\nform is polynomially related to the actual cost (that is, as performed on a\nTuring machine) of normalization, under weak call-by-value reduction.\nOrthogonal constructor term rewrite systems and lambda-calculus are thus both\npolynomially related to Turing machines, taking as notion of cost their natural\nparameters.\n", "versions": [{"version": "v1", "created": "Mon, 27 Apr 2009 09:49:14 GMT"}, {"version": "v2", "created": "Sun, 5 Jul 2009 16:31:15 GMT"}, {"version": "v3", "created": "Tue, 20 Oct 2009 13:32:34 GMT"}, {"version": "v4", "created": "Thu, 2 Aug 2012 15:16:46 GMT"}], "update_date": "2012-08-03", "authors_parsed": [["Lago", "Ugo Dal", ""], ["Martini", "Simone", ""]]}, {"id": "0904.4331", "submitter": "Prabhu Manyem", "authors": "Prabhu Manyem", "title": "Lower Bounds on Syntactic Logic Expressions for Optimization Problems\n  and Duality using Lagrangian Dual to characterize optimality conditions", "comments": "An expansion of the previous version to include: a single call to a\n  decision Turing machine to solve optimization problems obeying strong duality\n  in polynomial time", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO cs.CC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We show that simple syntactic expressions such as existential second order\n(ESO) universal Horn formulae can express NP-hard optimisation problems. There\nis a significant difference between the expressibilities of decision problems\nand optimisation problems. This is similar to the difference in computation\ntimes for the two classes of problems; for example, a 2SAT Horn formula can be\nsatisfied in polynomial time, whereas the optimisation version in NP-hard. It\nis known that all polynomially solvable decision problems can be expressed as\nESO universal ($\\Pi_1$) Horn sentences in the presence of a successor relation.\nWe show here that, on the other hand, if $P \\neq NP$, optimisation problems\ndefy such a characterisation, by demonstrating that even a $\\Pi_0$ (quantifier\nfree) Horn formula is unable to guarantee polynomial time solvability. Finally,\nby connecting concepts in optimisation duality with those in descriptive\ncomplexity, we will show a method by which optimisation problems can be solved\nby a single call to a \"decision\" Turing machine, as opposed to multiple calls\nusing a classical binary search setting.\n", "versions": [{"version": "v1", "created": "Tue, 28 Apr 2009 08:28:11 GMT"}, {"version": "v2", "created": "Wed, 6 May 2009 04:08:41 GMT"}, {"version": "v3", "created": "Sun, 24 Jul 2011 09:15:16 GMT"}], "update_date": "2011-07-26", "authors_parsed": [["Manyem", "Prabhu", ""]]}, {"id": "0904.4727", "submitter": "Yi-Dong Shen", "authors": "Yi-Dong Shen, Jia-Huai You, Li-Yan Yuan", "title": "Characterizations of Stable Model Semantics for Logic Programs with\n  Arbitrary Constraint Atoms", "comments": "34 pages. To appear in Theory and Practice of Logic Programming\n  (TPLP)", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.AI cs.LO cs.PL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This paper studies the stable model semantics of logic programs with\n(abstract) constraint atoms and their properties. We introduce a succinct\nabstract representation of these constraint atoms in which a constraint atom is\nrepresented compactly. We show two applications. First, under this\nrepresentation of constraint atoms, we generalize the Gelfond-Lifschitz\ntransformation and apply it to define stable models (also called answer sets)\nfor logic programs with arbitrary constraint atoms. The resulting semantics\nturns out to coincide with the one defined by Son et al., which is based on a\nfixpoint approach. One advantage of our approach is that it can be applied, in\na natural way, to define stable models for disjunctive logic programs with\nconstraint atoms, which may appear in the disjunctive head as well as in the\nbody of a rule. As a result, our approach to the stable model semantics for\nlogic programs with constraint atoms generalizes a number of previous\napproaches. Second, we show that our abstract representation of constraint\natoms provides a means to characterize dependencies of atoms in a program with\nconstraint atoms, so that some standard characterizations and properties\nrelying on these dependencies in the past for logic programs with ordinary\natoms can be extended to logic programs with constraint atoms.\n", "versions": [{"version": "v1", "created": "Thu, 30 Apr 2009 01:15:51 GMT"}], "update_date": "2009-05-01", "authors_parsed": [["Shen", "Yi-Dong", ""], ["You", "Jia-Huai", ""], ["Yuan", "Li-Yan", ""]]}, {"id": "0904.4756", "submitter": "Giulio Manzonetto", "authors": "Giulio Manzonetto (INRIA Rocquencourt)", "title": "Models and theories of lambda calculus", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In this paper we briefly summarize the contents of Manzonetto's PhD thesis\nwhich concerns denotational semantics and equational/order theories of the pure\nuntyped lambda-calculus. The main research achievements include: (i) a general\nconstruction of lambda-models from reflexive objects in (possibly\nnon-well-pointed) categories; (ii) a Stone-style representation theorem for\ncombinatory algebras; (iii) a proof that no effective lambda-model can have\nlambda-beta or lambda-beta-eta as its equational theory (this can be seen as a\npartial answer to an open problem introduced by Honsell-Ronchi Della Rocca in\n1984).\n", "versions": [{"version": "v1", "created": "Thu, 30 Apr 2009 08:27:38 GMT"}], "update_date": "2009-05-01", "authors_parsed": [["Manzonetto", "Giulio", "", "INRIA Rocquencourt"]]}, {"id": "0904.4902", "submitter": "Tal Lev-Ami", "authors": "Tal Lev-Ami, Neil Immerman, Thomas Reps, Mooly Sagiv, Siddharth\n  Srivastava, Greta Yorsh", "title": "Simulating reachability using first-order logic with applications to\n  verification of linked data structures", "comments": "30 pages, LMCS", "journal-ref": "Logical Methods in Computer Science, Volume 5, Issue 2 (May 28,\n  2009) lmcs:680", "doi": "10.2168/LMCS-5(2:12)2009", "report-no": null, "categories": "cs.LO cs.PL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This paper shows how to harness existing theorem provers for first-order\nlogic to automatically verify safety properties of imperative programs that\nperform dynamic storage allocation and destructive updating of pointer-valued\nstructure fields. One of the main obstacles is specifying and proving the\n(absence) of reachability properties among dynamically allocated cells.\n  The main technical contributions are methods for simulating reachability in a\nconservative way using first-order formulas--the formulas describe a superset\nof the set of program states that would be specified if one had a precise way\nto express reachability. These methods are employed for semi-automatic program\nverification (i.e., using programmer-supplied loop invariants) on programs such\nas mark-and-sweep garbage collection and destructive reversal of a singly\nlinked list. (The mark-and-sweep example has been previously reported as being\nbeyond the capabilities of ESC/Java.)\n", "versions": [{"version": "v1", "created": "Thu, 30 Apr 2009 17:54:54 GMT"}, {"version": "v2", "created": "Wed, 27 May 2009 22:05:51 GMT"}], "update_date": "2015-07-01", "authors_parsed": [["Lev-Ami", "Tal", ""], ["Immerman", "Neil", ""], ["Reps", "Thomas", ""], ["Sagiv", "Mooly", ""], ["Srivastava", "Siddharth", ""], ["Yorsh", "Greta", ""]]}]