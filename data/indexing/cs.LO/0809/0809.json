[{"id": "0809.0060", "submitter": "Jeremy Sproston", "authors": "Marcin Jurdzinski, Francois Laroussinie, Jeremy Sproston", "title": "Model Checking Probabilistic Timed Automata with One or Two Clocks", "comments": null, "journal-ref": "Logical Methods in Computer Science, Volume 4, Issue 3 (September\n  26, 2008) lmcs:988", "doi": "10.2168/LMCS-4(3:12)2008", "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Probabilistic timed automata are an extension of timed automata with discrete\nprobability distributions. We consider model-checking algorithms for the\nsubclasses of probabilistic timed automata which have one or two clocks.\nFirstly, we show that PCTL probabilistic model-checking problems (such as\ndetermining whether a set of target states can be reached with probability at\nleast 0.99 regardless of how nondeterminism is resolved) are PTIME-complete for\none-clock probabilistic timed automata, and are EXPTIME-complete for\nprobabilistic timed automata with two clocks. Secondly, we show that, for\none-clock probabilistic timed automata, the model-checking problem for the\nprobabilistic timed temporal logic PCTL is EXPTIME-complete. However, the\nmodel-checking problem for the subclass of PCTL which does not permit both\npunctual timing bounds, which require the occurrence of an event at an exact\ntime point, and comparisons with probability bounds other than 0 or 1, is\nPTIME-complete for one-clock probabilistic timed automata.\n", "versions": [{"version": "v1", "created": "Sat, 30 Aug 2008 13:26:48 GMT"}, {"version": "v2", "created": "Sun, 21 Sep 2008 22:46:00 GMT"}, {"version": "v3", "created": "Thu, 25 Sep 2008 22:14:27 GMT"}], "update_date": "2019-03-14", "authors_parsed": [["Jurdzinski", "Marcin", ""], ["Laroussinie", "Francois", ""], ["Sproston", "Jeremy", ""]]}, {"id": "0809.0195", "submitter": "Ugo Dal Lago", "authors": "Paolo Coppola, Ugo Dal Lago, Simona Ronchi Della Rocca", "title": "Light Logics and the Call-by-Value Lambda Calculus", "comments": "28 pages", "journal-ref": "Logical Methods in Computer Science, Volume 4, Issue 4 (November\n  7, 2008) lmcs:820", "doi": "10.2168/LMCS-4(4:5)2008", "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The so-called light logics have been introduced as logical systems enjoying\nquite remarkable normalization properties. Designing a type assignment system\nfor pure lambda calculus from these logics, however, is problematic. In this\npaper we show that shifting from usual call-by-name to call-by-value lambda\ncalculus allows regaining strong connections with the underlying logic. This\nwill be done in the context of Elementary Affine Logic (EAL), designing a type\nsystem in natural deduction style assigning EAL formulae to lambda terms.\n", "versions": [{"version": "v1", "created": "Mon, 1 Sep 2008 09:46:36 GMT"}, {"version": "v2", "created": "Fri, 7 Nov 2008 17:12:02 GMT"}], "update_date": "2015-07-01", "authors_parsed": [["Coppola", "Paolo", ""], ["Lago", "Ugo Dal", ""], ["Della Rocca", "Simona Ronchi", ""]]}, {"id": "0809.0360", "submitter": "Aniello Murano", "authors": "Piero A. Bonatti, Carsten Lutz, Aniello Murano, Moshe Y. Vardi", "title": "The Complexity of Enriched Mu-Calculi", "comments": "A preliminary version of this paper appears in the Proceedings of the\n  33rd International Colloquium on Automata, Languages and Programming (ICALP),\n  2006. This paper has been selected for a special issue in LMCS", "journal-ref": "Logical Methods in Computer Science, Volume 4, Issue 3 (September\n  22, 2008) lmcs:993", "doi": "10.2168/LMCS-4(3:11)2008", "report-no": null, "categories": "cs.LO cs.CL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The fully enriched &mu;-calculus is the extension of the propositional\n&mu;-calculus with inverse programs, graded modalities, and nominals. While\nsatisfiability in several expressive fragments of the fully enriched\n&mu;-calculus is known to be decidable and ExpTime-complete, it has recently\nbeen proved that the full calculus is undecidable. In this paper, we study the\nfragments of the fully enriched &mu;-calculus that are obtained by dropping at\nleast one of the additional constructs. We show that, in all fragments obtained\nin this way, satisfiability is decidable and ExpTime-complete. Thus, we\nidentify a family of decidable logics that are maximal (and incomparable) in\nexpressive power. Our results are obtained by introducing two new automata\nmodels, showing that their emptiness problems are ExpTime-complete, and then\nreducing satisfiability in the relevant logics to these problems. The automata\nmodels we introduce are two-way graded alternating parity automata over\ninfinite trees (2GAPTs) and fully enriched automata (FEAs) over infinite\nforests. The former are a common generalization of two incomparable automata\nmodels from the literature. The latter extend alternating automata in a similar\nway as the fully enriched &mu;-calculus extends the standard &mu;-calculus.\n", "versions": [{"version": "v1", "created": "Tue, 2 Sep 2008 07:51:04 GMT"}, {"version": "v2", "created": "Mon, 22 Sep 2008 19:10:39 GMT"}], "update_date": "2015-07-01", "authors_parsed": [["Bonatti", "Piero A.", ""], ["Lutz", "Carsten", ""], ["Murano", "Aniello", ""], ["Vardi", "Moshe Y.", ""]]}, {"id": "0809.0494", "submitter": "Bruno Guillaume", "authors": "Bruno Guillaume (INRIA Lorraine - LORIA), Guy Perrier (INRIA Lorraine\n  - LORIA)", "title": "Interaction Grammars", "comments": null, "journal-ref": null, "doi": null, "report-no": "RR-6621", "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Interaction Grammar (IG) is a grammatical formalism based on the notion of\npolarity. Polarities express the resource sensitivity of natural languages by\nmodelling the distinction between saturated and unsaturated syntactic\nstructures. Syntactic composition is represented as a chemical reaction guided\nby the saturation of polarities. It is expressed in a model-theoretic framework\nwhere grammars are constraint systems using the notion of tree description and\nparsing appears as a process of building tree description models satisfying\ncriteria of saturation and minimality.\n", "versions": [{"version": "v1", "created": "Tue, 2 Sep 2008 18:37:01 GMT"}], "update_date": "2008-09-03", "authors_parsed": [["Guillaume", "Bruno", "", "INRIA Lorraine - LORIA"], ["Perrier", "Guy", "", "INRIA Lorraine\n  - LORIA"]]}, {"id": "0809.0788", "submitter": "Hubie Chen", "authors": "Manuel Bodirsky and Hubie Chen", "title": "Peek Arc Consistency", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.AI cs.CC cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This paper studies peek arc consistency, a reasoning technique that extends\nthe well-known arc consistency technique for constraint satisfaction. In\ncontrast to other more costly extensions of arc consistency that have been\nstudied in the literature, peek arc consistency requires only linear space and\nquadratic time and can be parallelized in a straightforward way such that it\nruns in linear time with a linear number of processors. We demonstrate that for\nvarious constraint languages, peek arc consistency gives a polynomial-time\ndecision procedure for the constraint satisfaction problem. We also present an\nalgebraic characterization of those constraint languages that can be solved by\npeek arc consistency, and study the robustness of the algorithm.\n", "versions": [{"version": "v1", "created": "Thu, 4 Sep 2008 11:15:50 GMT"}, {"version": "v2", "created": "Fri, 3 Feb 2012 18:53:00 GMT"}], "update_date": "2015-03-13", "authors_parsed": [["Bodirsky", "Manuel", ""], ["Chen", "Hubie", ""]]}, {"id": "0809.0922", "submitter": "Matthias Horbach", "authors": "Matthias Horbach, Christoph Weidenbach", "title": "Superposition for Fixed Domains", "comments": "34 pages; to appear in ACM Transactions on Computational Logic", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.AI cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Superposition is an established decision procedure for a variety of\nfirst-order logic theories represented by sets of clauses. A satisfiable\ntheory, saturated by superposition, implicitly defines a minimal term-generated\nmodel for the theory. Proving universal properties with respect to a saturated\ntheory directly leads to a modification of the minimal model's term-generated\ndomain, as new Skolem functions are introduced. For many applications, this is\nnot desired.\n  Therefore, we propose the first superposition calculus that can explicitly\nrepresent existentially quantified variables and can thus compute with respect\nto a given domain. This calculus is sound and refutationally complete in the\nlimit for a first-order fixed domain semantics. For saturated Horn theories and\nclasses of positive formulas, we can even employ the calculus to prove\nproperties of the minimal model itself, going beyond the scope of known\nsuperposition-based approaches.\n", "versions": [{"version": "v1", "created": "Thu, 4 Sep 2008 21:58:58 GMT"}, {"version": "v2", "created": "Thu, 27 Aug 2009 11:40:16 GMT"}, {"version": "v3", "created": "Mon, 30 Nov 2009 12:43:51 GMT"}], "update_date": "2009-11-30", "authors_parsed": [["Horbach", "Matthias", ""], ["Weidenbach", "Christoph", ""]]}, {"id": "0809.1236", "submitter": "Pierre Ganty", "authors": "Pierre Ganty, Rupak Majumdar, Benjamin Monmege", "title": "Bounded Underapproximations", "comments": "30 pages, 2 figures, v4 added complexity results, various\n  improvements", "journal-ref": "Formal Methods in System Design 40(2) (2012) 206-231", "doi": "10.1007/s10703-011-0136-y", "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We show a new and constructive proof of the following language-theoretic\nresult: for every context-free language L, there is a bounded context-free\nlanguage L' included in L which has the same Parikh (commutative) image as L.\nBounded languages, introduced by Ginsburg and Spanier, are subsets of regular\nlanguages of the form w1*w2*...wk* for some finite words w1,...,wk. In\nparticular bounded subsets of context-free languages have nice structural and\ndecidability properties. Our proof proceeds in two parts. First, using Newton's\niterations on the language semiring, we construct a context-free subset Ls of L\nthat can be represented as a sequence of substitutions on a linear language and\nhas the same Parikh image as L. Second, we inductively construct a\nParikh-equivalent bounded context-free subset of Ls.\n  We show two applications of this result in model checking: to\nunderapproximate the reachable state space of multithreaded procedural programs\nand to underapproximate the reachable state space of recursive counter\nprograms. The bounded language constructed above provides a decidable\nunderapproximation for the original problems. By iterating the construction, we\nget a semi-algorithm for the original problems that constructs a sequence of\nunderapproximations such that no two underapproximations of the sequence can be\ncompared. This provides a progress guarantee: every word w in L is in some\nunderapproximation of the sequence. In addition, we show that our approach\nsubsumes context-bounded reachability for multithreaded programs.\n", "versions": [{"version": "v1", "created": "Sun, 7 Sep 2008 22:21:33 GMT"}, {"version": "v2", "created": "Fri, 3 Oct 2008 20:35:08 GMT"}, {"version": "v3", "created": "Thu, 8 Oct 2009 10:16:06 GMT"}, {"version": "v4", "created": "Sun, 17 Jan 2010 15:00:58 GMT"}], "update_date": "2012-07-03", "authors_parsed": [["Ganty", "Pierre", ""], ["Majumdar", "Rupak", ""], ["Monmege", "Benjamin", ""]]}, {"id": "0809.1465", "submitter": "Krishnendu Chatterjee", "authors": "Krishnendu Chatterjee and Thomas A. Henzinger", "title": "Probabilistic Systems with LimSup and LimInf Objectives", "comments": "The paper will appear in ILC proceedings", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.GT cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We give polynomial-time algorithms for computing the values of Markov\ndecision processes (MDPs) with limsup and liminf objectives. A real-valued\nreward is assigned to each state, and the value of an infinite path in the MDP\nis the limsup (resp. liminf) of all rewards along the path. The value of an MDP\nis the maximal expected value of an infinite path that can be achieved by\nresolving the decisions of the MDP. Using our result on MDPs, we show that\nturn-based stochastic games with limsup and liminf objectives can be solved in\nNP \\cap coNP.\n", "versions": [{"version": "v1", "created": "Tue, 9 Sep 2008 00:12:05 GMT"}], "update_date": "2008-09-10", "authors_parsed": [["Chatterjee", "Krishnendu", ""], ["Henzinger", "Thomas A.", ""]]}, {"id": "0809.1552", "submitter": "Bas Spitters", "authors": "Russell O'Connor and Bas Spitters", "title": "A computer verified, monadic, functional implementation of the integral", "comments": null, "journal-ref": "Theoretical Computer Science, Volume 411, Issue 37, 7 August 2010,\n  Pages 3386-3402", "doi": "10.1016/j.tcs.2010.05.031", "report-no": null, "categories": "cs.LO cs.NA", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We provide a computer verified exact monadic functional implementation of the\nRiemann integral in type theory. Together with previous work by O'Connor, this\nmay be seen as the beginning of the realization of Bishop's vision to use\nconstructive mathematics as a programming language for exact analysis.\n", "versions": [{"version": "v1", "created": "Mon, 8 Sep 2008 20:54:36 GMT"}, {"version": "v2", "created": "Thu, 3 Jun 2010 11:23:20 GMT"}], "update_date": "2010-08-11", "authors_parsed": [["O'Connor", "Russell", ""], ["Spitters", "Bas", ""]]}, {"id": "0809.1644", "submitter": "Russell O'Connor", "authors": "Cezary Kaliszyk and Russell O'Connor", "title": "Computing with Classical Real Numbers", "comments": null, "journal-ref": "Journal of Formalized Reasoning, 2(1):27-39, 2009", "doi": null, "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  There are two incompatible Coq libraries that have a theory of the real\nnumbers; the Coq standard library gives an axiomatic treatment of classical\nreal numbers, while the CoRN library from Nijmegen defines constructively valid\nreal numbers. Unfortunately, this means results about one structure cannot\neasily be used in the other structure. We present a way interfacing these two\nlibraries by showing that their real number structures are isomorphic assuming\nthe classical axioms already present in the standard library reals. This allows\nus to use O'Connor's decision procedure for solving ground inequalities present\nin CoRN to solve inequalities about the reals from the Coq standard library,\nand it allows theorems from the Coq standard library to apply to problem about\nthe CoRN reals.\n", "versions": [{"version": "v1", "created": "Tue, 9 Sep 2008 19:55:03 GMT"}], "update_date": "2010-08-04", "authors_parsed": [["Kaliszyk", "Cezary", ""], ["O'Connor", "Russell", ""]]}, {"id": "0809.1812", "submitter": "Olivier Finkel", "authors": "Olivier Finkel (LIP), Dominique Lecomte (UMR 7586)", "title": "Topological Complexity of omega-Powers : Extended Abstract", "comments": null, "journal-ref": null, "doi": null, "report-no": "LIP Research Report RR 2008-27", "categories": "cs.LO cs.CC math.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This is an extended abstract presenting new results on the topological\ncomplexity of omega-powers (which are included in a paper \"Classical and\neffective descriptive complexities of omega-powers\" available from\narXiv:0708.4176) and reflecting also some open questions which were discussed\nduring the Dagstuhl seminar on \"Topological and Game-Theoretic Aspects of\nInfinite Computations\" 29.06.08 - 04.07.08.\n", "versions": [{"version": "v1", "created": "Wed, 10 Sep 2008 15:13:34 GMT"}], "update_date": "2008-09-11", "authors_parsed": [["Finkel", "Olivier", "", "LIP"], ["Lecomte", "Dominique", "", "UMR 7586"]]}, {"id": "0809.2061", "submitter": "Robin Adams", "authors": "Robin Adams and Zhaohui Luo", "title": "Weyl's Predicative Classical Mathematics as a Logic-Enriched Type Theory", "comments": "31 pages, 6 figures. Accepted for publication in ACM TOCL. v2:\n  Corrected a broken citation in v1. v3: Final version, revised after referees'\n  comments", "journal-ref": "ACM TOCL 11(2), 2010", "doi": "10.1145/1656242.1656246", "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We construct a logic-enriched type theory LTTW that corresponds closely to\nthe predicative system of foundations presented by Hermann Weyl in Das\nKontinuum. We formalise many results from that book in LTTW, including Weyl's\ndefinition of the cardinality of a set and several results from real analysis,\nusing the proof assistant Plastic that implements the logical framework LF.\nThis case study shows how type theory can be used to represent a\nnon-constructive foundation for mathematics.\n", "versions": [{"version": "v1", "created": "Thu, 11 Sep 2008 17:25:28 GMT"}, {"version": "v2", "created": "Fri, 12 Sep 2008 13:21:45 GMT"}, {"version": "v3", "created": "Thu, 15 Jan 2009 16:59:09 GMT"}], "update_date": "2009-12-26", "authors_parsed": [["Adams", "Robin", ""], ["Luo", "Zhaohui", ""]]}, {"id": "0809.2214", "submitter": "Axel Legay", "authors": "Axel Legay and Pierre Wolper", "title": "On (Omega-)Regular Model Checking", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Checking infinite-state systems is frequently done by encoding infinite sets\nof states as regular languages. Computing such a regular representation of,\nsay, the set of reachable states of a system requires acceleration techniques\nthat can finitely compute the effect of an unbounded number of transitions.\nAmong the acceleration techniques that have been proposed, one finds both\nspecific and generic techniques. Specific techniques exploit the particular\ntype of system being analyzed, e.g. a system manipulating queues or integers,\nwhereas generic techniques only assume that the transition relation is\nrepresented by a finite-state transducer, which has to be iterated. In this\npaper, we investigate the possibility of using generic techniques in cases\nwhere only specific techniques have been exploited so far. Finding that\nexisting generic techniques are often not applicable in cases easily handled by\nspecific techniques, we have developed a new approach to iterating transducers.\nThis new approach builds on earlier work, but exploits a number of new\nconceptual and algorithmic ideas, often induced with the help of experiments,\nthat give it a broad scope, as well as good performances.\n", "versions": [{"version": "v1", "created": "Fri, 12 Sep 2008 13:40:37 GMT"}], "update_date": "2009-09-29", "authors_parsed": [["Legay", "Axel", ""], ["Wolper", "Pierre", ""]]}, {"id": "0809.2386", "submitter": "Manuel Bodirsky", "authors": "Manuel Bodirsky, Victor Dalmau", "title": "Datalog and Constraint Satisfaction with Infinite Templates", "comments": "28 pages. This is an extended long version of a conference paper that\n  appeared at STACS'06. In the third version in the arxiv we have revised the\n  presentation again and added a section that relates our results to\n  formalizations of CSPs using relation algebras", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO cs.CC", "license": "http://creativecommons.org/licenses/by-nc-sa/3.0/", "abstract": "  On finite structures, there is a well-known connection between the expressive\npower of Datalog, finite variable logics, the existential pebble game, and\nbounded hypertree duality. We study this connection for infinite structures.\nThis has applications for constraint satisfaction with infinite templates. If\nthe template Gamma is omega-categorical, we present various equivalent\ncharacterizations of those Gamma such that the constraint satisfaction problem\n(CSP) for Gamma can be solved by a Datalog program. We also show that\nCSP(Gamma) can be solved in polynomial time for arbitrary omega-categorical\nstructures Gamma if the input is restricted to instances of bounded treewidth.\nFinally, we characterize those omega-categorical templates whose CSP has\nDatalog width 1, and those whose CSP has strict Datalog width k.\n", "versions": [{"version": "v1", "created": "Sun, 14 Sep 2008 10:01:27 GMT"}, {"version": "v2", "created": "Thu, 18 Dec 2008 21:11:57 GMT"}, {"version": "v3", "created": "Sun, 15 Apr 2012 11:44:24 GMT"}], "update_date": "2012-04-17", "authors_parsed": [["Bodirsky", "Manuel", ""], ["Dalmau", "Victor", ""]]}, {"id": "0809.2394", "submitter": "Jean-Louis Krivine", "authors": "Jean-Louis Krivine (PPS)", "title": "Structures de r\\'ealisabilit\\'e, RAM et ultrafiltre sur N", "comments": "34 p", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We show how to transform into programs the proofs in classical Analysis which\nuse the existence of an ultrafilter on the integers. The method mixes the\nclassical realizability introduced by the author, with the \"forcing\" of P.\nCohen. The programs we obtain, use read and write instructions in random access\nmemory.\n", "versions": [{"version": "v1", "created": "Sun, 14 Sep 2008 12:01:24 GMT"}], "update_date": "2008-09-16", "authors_parsed": [["Krivine", "Jean-Louis", "", "PPS"]]}, {"id": "0809.3140", "submitter": "Fang Wei", "authors": "Georg Gottlob, Reinhard Pichler, Fang Wei", "title": "Monadic Datalog over Finite Structures with Bounded Treewidth", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DB cs.CC cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Bounded treewidth and Monadic Second Order (MSO) logic have proved to be key\nconcepts in establishing fixed-parameter tractability results. Indeed, by\nCourcelle's Theorem we know: Any property of finite structures, which is\nexpressible by an MSO sentence, can be decided in linear time (data complexity)\nif the structures have bounded treewidth.\n  In principle, Courcelle's Theorem can be applied directly to construct\nconcrete algorithms by transforming the MSO evaluation problem into a tree\nlanguage recognition problem. The latter can then be solved via a finite tree\nautomaton (FTA). However, this approach has turned out to be problematical,\nsince even relatively simple MSO formulae may lead to a ``state explosion'' of\nthe FTA.\n  In this work we propose monadic datalog (i.e., datalog where all intentional\npredicate symbols are unary) as an alternative method to tackle this class of\nfixed-parameter tractable problems. We show that if some property of finite\nstructures is expressible in MSO then this property can also be expressed by\nmeans of a monadic datalog program over the structure plus the tree\ndecomposition.\n  Moreover, we show that the resulting fragment of datalog can be evaluated in\nlinear time (both w.r.t. the program size and w.r.t. the data size). This new\napproach is put to work by devising new algorithms for the 3-Colorability\nproblem of graphs and for the PRIMALITY problem of relational schemas (i.e.,\ntesting if some attribute in a relational schema is part of a key). We also\nreport on experimental results with a prototype implementation.\n", "versions": [{"version": "v1", "created": "Thu, 18 Sep 2008 12:40:49 GMT"}], "update_date": "2008-09-19", "authors_parsed": [["Gottlob", "Georg", ""], ["Pichler", "Reinhard", ""], ["Wei", "Fang", ""]]}, {"id": "0809.3960", "submitter": "Jesper Bengtson Mr", "authors": "Jesper Bengtson, Joachim Parrow", "title": "Formalising the pi-calculus using nominal logic", "comments": "36 pages, 3 figures", "journal-ref": "Logical Methods in Computer Science, Volume 5, Issue 2 (June 30,\n  2009) lmcs:832", "doi": "10.2168/LMCS-5(2:16)2009", "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We formalise the pi-calculus using the nominal datatype package, based on\nideas from the nominal logic by Pitts et al., and demonstrate an implementation\nin Isabelle/HOL. The purpose is to derive powerful induction rules for the\nsemantics in order to conduct machine checkable proofs, closely following the\nintuitive arguments found in manual proofs. In this way we have covered many of\nthe standard theorems of bisimulation equivalence and congruence, both late and\nearly, and both strong and weak in a uniform manner. We thus provide one of the\nmost extensive formalisations of a process calculus ever done inside a theorem\nprover.\n  A significant gain in our formulation is that agents are identified up to\nalpha-equivalence, thereby greatly reducing the arguments about bound names.\nThis is a normal strategy for manual proofs about the pi-calculus, but that\nkind of hand waving has previously been difficult to incorporate smoothly in an\ninteractive theorem prover. We show how the nominal logic formalism and its\nsupport in Isabelle accomplishes this and thus significantly reduces the tedium\nof conducting completely formal proofs. This improves on previous work using\nweak higher order abstract syntax since we do not need extra assumptions to\nfilter out exotic terms and can keep all arguments within a familiar\nfirst-order logic.\n", "versions": [{"version": "v1", "created": "Tue, 23 Sep 2008 16:39:03 GMT"}, {"version": "v2", "created": "Tue, 30 Jun 2009 13:23:59 GMT"}], "update_date": "2015-07-01", "authors_parsed": [["Bengtson", "Jesper", ""], ["Parrow", "Joachim", ""]]}, {"id": "0809.4017", "submitter": "Krishnendu Chatterjee", "authors": "Krishnendu Chatterjee and Luca de Alfaro and Thomas A. Henzinger", "title": "Termination Criteria for Solving Concurrent Safety and Reachability\n  Games", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.GT cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We consider concurrent games played on graphs. At every round of a game, each\nplayer simultaneously and independently selects a move; the moves jointly\ndetermine the transition to a successor state. Two basic objectives are the\nsafety objective to stay forever in a given set of states, and its dual, the\nreachability objective to reach a given set of states. We present in this paper\na strategy improvement algorithm for computing the value of a concurrent safety\ngame, that is, the maximal probability with which player~1 can enforce the\nsafety objective. The algorithm yields a sequence of player-1 strategies which\nensure probabilities of winning that converge monotonically to the value of the\nsafety game.\n  Our result is significant because the strategy improvement algorithm\nprovides, for the first time, a way to approximate the value of a concurrent\nsafety game from below. Since a value iteration algorithm, or a strategy\nimprovement algorithm for reachability games, can be used to approximate the\nsame value from above, the combination of both algorithms yields a method for\ncomputing a converging sequence of upper and lower bounds for the values of\nconcurrent reachability and safety games. Previous methods could approximate\nthe values of these games only from one direction, and as no rates of\nconvergence are known, they did not provide a practical way to solve these\ngames.\n", "versions": [{"version": "v1", "created": "Tue, 23 Sep 2008 20:29:37 GMT"}], "update_date": "2008-09-25", "authors_parsed": [["Chatterjee", "Krishnendu", ""], ["de Alfaro", "Luca", ""], ["Henzinger", "Thomas A.", ""]]}, {"id": "0809.4115", "submitter": "Paolo Baldan", "authors": "Paolo Baldan, Andrea Corradini, Hartmut Ehrig, Reiko Heckel, Barbara\n  K\\\"onig", "title": "Bisimilarity and Behaviour-Preserving Reconfigurations of Open Petri\n  Nets", "comments": "To appear in \"Logical Methods in Computer Science\", 41 pages", "journal-ref": "Logical Methods in Computer Science, Volume 4, Issue 4 (October\n  21, 2008) lmcs:1165", "doi": "10.2168/LMCS-4(4:3)2008", "report-no": null, "categories": "cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We propose a framework for the specification of behaviour-preserving\nreconfigurations of systems modelled as Petri nets. The framework is based on\nopen nets, a mild generalisation of ordinary Place/Transition nets suited to\nmodel open systems which might interact with the surrounding environment and\nendowed with a colimit-based composition operation. We show that natural\nnotions of bisimilarity over open nets are congruences with respect to the\ncomposition operation. The considered behavioural equivalences differ for the\nchoice of the observations, which can be single firings or parallel steps.\nAdditionally, we consider weak forms of such equivalences, arising in the\npresence of unobservable actions. We also provide an up-to technique for\nfacilitating bisimilarity proofs. The theory is used to identify suitable\nclasses of reconfiguration rules (in the double-pushout approach to rewriting)\nwhose application preserves the observational semantics of the net.\n", "versions": [{"version": "v1", "created": "Wed, 24 Sep 2008 09:28:18 GMT"}, {"version": "v2", "created": "Tue, 21 Oct 2008 21:29:11 GMT"}], "update_date": "2015-07-01", "authors_parsed": [["Baldan", "Paolo", ""], ["Corradini", "Andrea", ""], ["Ehrig", "Hartmut", ""], ["Heckel", "Reiko", ""], ["K\u00f6nig", "Barbara", ""]]}, {"id": "0809.4635", "submitter": "Jan Bergstra", "authors": "Jan A. Bergstra and Mark B. van der Zwaag", "title": "Mechanistic Behavior of Single-Pass Instruction Sequences", "comments": "12 pages", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.PL cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Earlier work on program and thread algebra detailed the functional,\nobservable behavior of programs under execution. In this article we add the\nmodeling of unobservable, mechanistic processing, in particular processing due\nto jump instructions. We model mechanistic processing preceding some further\nbehavior as a delay of that behavior; we borrow a unary delay operator from\ndiscrete time process algebra. We define a mechanistic improvement ordering on\nthreads and observe that some threads do not have an optimal implementation.\n", "versions": [{"version": "v1", "created": "Fri, 26 Sep 2008 13:57:36 GMT"}], "update_date": "2008-09-29", "authors_parsed": [["Bergstra", "Jan A.", ""], ["van der Zwaag", "Mark B.", ""]]}]