[{"id": "1011.1091", "submitter": "Frank Sottile", "authors": "Jonathan D. Hauenstein and Frank Sottile", "title": "alphaCertified: certifying solutions to polynomial systems", "comments": "21 pages", "journal-ref": null, "doi": null, "report-no": null, "categories": "math.NA cs.MS math.AG", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Smale's alpha-theory uses estimates related to the convergence of Newton's\nmethod to give criteria implying that Newton iterations will converge\nquadratically to solutions to a square polynomial system. The program\nalphaCertified implements algorithms based on alpha-theory to certify solutions\nto polynomial systems using both exact rational arithmetic and arbitrary\nprecision floating point arithmetic. It also implements an algorithm to certify\nwhether a given point corresponds to a real solution to a real polynomial\nsystem, as well as algorithms to heuristically validate solutions to\noverdetermined systems. Examples are presented to demonstrate the algorithms.\n", "versions": [{"version": "v1", "created": "Thu, 4 Nov 2010 09:57:00 GMT"}, {"version": "v2", "created": "Tue, 20 Sep 2011 20:19:43 GMT"}], "update_date": "2011-09-22", "authors_parsed": [["Hauenstein", "Jonathan D.", ""], ["Sottile", "Frank", ""]]}, {"id": "1011.3077", "submitter": "Ioana Dumitriu", "authors": "Grey Ballard, James Demmel, and Ioana Dumitriu", "title": "Minimizing Communication for Eigenproblems and the Singular Value\n  Decomposition", "comments": "43 pages, 11 figures", "journal-ref": null, "doi": null, "report-no": null, "categories": "math.NA cs.DC cs.MS cs.NA", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Algorithms have two costs: arithmetic and communication. The latter\nrepresents the cost of moving data, either between levels of a memory\nhierarchy, or between processors over a network. Communication often dominates\narithmetic and represents a rapidly increasing proportion of the total cost, so\nwe seek algorithms that minimize communication. In \\cite{BDHS10} lower bounds\nwere presented on the amount of communication required for essentially all\n$O(n^3)$-like algorithms for linear algebra, including eigenvalue problems and\nthe SVD. Conventional algorithms, including those currently implemented in\n(Sca)LAPACK, perform asymptotically more communication than these lower bounds\nrequire. In this paper we present parallel and sequential eigenvalue algorithms\n(for pencils, nonsymmetric matrices, and symmetric matrices) and SVD algorithms\nthat do attain these lower bounds, and analyze their convergence and\ncommunication costs.\n", "versions": [{"version": "v1", "created": "Sat, 13 Nov 2010 00:18:02 GMT"}], "update_date": "2010-11-16", "authors_parsed": [["Ballard", "Grey", ""], ["Demmel", "James", ""], ["Dumitriu", "Ioana", ""]]}, {"id": "1011.3318", "submitter": "Yusuke Osaki", "authors": "Yusuke Osaki and Ken-Ichi Ishikawa", "title": "Domain Decomposition method on GPU cluster", "comments": "7 pages, 1 figure, Lattice 2010 Proceeding", "journal-ref": null, "doi": null, "report-no": "HUPD-1006", "categories": "hep-lat cs.MS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Pallalel GPGPU computing for lattice QCD simulations has a bottleneck on the\nGPU to GPU data communication due to the lack of the direct data exchanging\nfacility. In this work we investigate the performance of quark solver using the\nrestricted additive Schwarz (RAS) preconditioner on a low cost GPU cluster. We\nexpect that the RAS preconditioner with appropriate domaindecomposition and\ntask distribution reduces the communication bottleneck. The GPU cluster we\nconstructed is composed of four PC boxes, two GPU cards are attached to each\nbox, and we have eight GPU cards in total. The compute nodes are connected with\nrather slow but low cost Gigabit-Ethernet. We include the RAS preconditioner in\nthe single-precision part of the mixedprecision nested-BiCGStab algorithm and\nthe single-precision task is distributed to the multiple GPUs. The benchmarking\nis done with the O(a)-improved Wilson quark on a randomly generated gauge\nconfiguration with the size of $32^4$. We observe a factor two improvment on\nthe solver performance with the RAS precoditioner compared to that without the\npreconditioner and find that the improvment mainly comes from the reduction of\nthe communication bottleneck as we expected.\n", "versions": [{"version": "v1", "created": "Mon, 15 Nov 2010 09:12:23 GMT"}], "update_date": "2010-11-16", "authors_parsed": [["Osaki", "Yusuke", ""], ["Ishikawa", "Ken-Ichi", ""]]}, {"id": "1011.3534", "submitter": "Matt Challacombe", "authors": "Matt Challacombe and Nicolas Bock", "title": "Fast Multiplication of Matrices with Decay", "comments": null, "journal-ref": null, "doi": null, "report-no": "LA-UR 10-07458", "categories": "cs.DS cond-mat.mtrl-sci cs.MS cs.NA", "license": "http://creativecommons.org/licenses/publicdomain/", "abstract": "  A fast algorithm for the approximate multiplication of matrices with decay is\nintroduced; the Sparse Approximate Matrix Multiply (SpAMM) reduces complexity\nin the product space, a different approach from current methods that economize\nwithin the matrix space through truncation or rank reduction. Matrix truncation\n(element dropping) is compared to SpAMM for quantum chemical matrices with\napproximate exponential and algebraic decay. For matched errors in the\nelectronic total energy, SpAMM is found to require fewer to far fewer floating\npoint operations relative to dropping. The challenges and opportunities\nafforded by this new approach are discussed, including the potential for high\nperformance implementations.\n", "versions": [{"version": "v1", "created": "Mon, 15 Nov 2010 21:59:11 GMT"}], "update_date": "2010-11-17", "authors_parsed": [["Challacombe", "Matt", ""], ["Bock", "Nicolas", ""]]}]