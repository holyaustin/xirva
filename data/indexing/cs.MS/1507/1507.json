[{"id": "1507.01066", "submitter": "Dylan Hutchison", "authors": "Dylan Hutchison and Jeremy Kepner and Vijay Gadepally and Adam Fuchs", "title": "Graphulo Implementation of Server-Side Sparse Matrix Multiply in the\n  Accumulo Database", "comments": "To be presented at IEEE HPEC 2015: http://www.ieee-hpec.org/", "journal-ref": null, "doi": "10.1109/HPEC.2015.7322448", "report-no": null, "categories": "cs.DB cs.DC cs.MS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The Apache Accumulo database excels at distributed storage and indexing and\nis ideally suited for storing graph data. Many big data analytics compute on\ngraph data and persist their results back to the database. These graph\ncalculations are often best performed inside the database server. The GraphBLAS\nstandard provides a compact and efficient basis for a wide range of graph\napplications through a small number of sparse matrix operations. In this\narticle, we implement GraphBLAS sparse matrix multiplication server-side by\nleveraging Accumulo's native, high-performance iterators. We compare the\nmathematics and performance of inner and outer product implementations, and\nshow how an outer product implementation achieves optimal performance near\nAccumulo's peak write rate. We offer our work as a core component to the\nGraphulo library that will deliver matrix math primitives for graph analytics\nwithin Accumulo.\n", "versions": [{"version": "v1", "created": "Sat, 4 Jul 2015 05:20:22 GMT"}, {"version": "v2", "created": "Sun, 30 Aug 2015 05:47:18 GMT"}], "update_date": "2016-08-12", "authors_parsed": [["Hutchison", "Dylan", ""], ["Kepner", "Jeremy", ""], ["Gadepally", "Vijay", ""], ["Fuchs", "Adam", ""]]}, {"id": "1507.01888", "submitter": "Matthew Reuter", "authors": "Robert J. Harrison, Gregory Beylkin, Florian A. Bischoff, Justus A.\n  Calvin, George I. Fann, Jacob Fosso-Tande, Diego Galindo, Jeff R. Hammond,\n  Rebecca Hartman-Baker, Judith C. Hill, Jun Jia, Jakob S. Kottmann, M-J.\n  Yvonne Ou, Laura E. Ratcliff, Matthew G. Reuter, Adam C. Richie-Halford,\n  Nichols A. Romero, Hideo Sekino, William A. Shelton, Bryan E. Sundahl, W.\n  Scott Thornton, Edward F. Valeev, \\'Alvaro V\\'azquez-Mayagoitia, Nicholas\n  Vence, Yukina Yokoi", "title": "MADNESS: A Multiresolution, Adaptive Numerical Environment for\n  Scientific Simulation", "comments": null, "journal-ref": "SIAM SISC 38, S123-S142 (2016)", "doi": "10.1137/15M1026171", "report-no": null, "categories": "cs.MS cs.CE math.NA", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  MADNESS (multiresolution adaptive numerical environment for scientific\nsimulation) is a high-level software environment for solving integral and\ndifferential equations in many dimensions that uses adaptive and fast harmonic\nanalysis methods with guaranteed precision based on multiresolution analysis\nand separated representations. Underpinning the numerical capabilities is a\npowerful petascale parallel programming environment that aims to increase both\nprogrammer productivity and code scalability. This paper describes the features\nand capabilities of MADNESS and briefly discusses some current applications in\nchemistry and several areas of physics.\n", "versions": [{"version": "v1", "created": "Sun, 5 Jul 2015 15:32:13 GMT"}], "update_date": "2016-11-01", "authors_parsed": [["Harrison", "Robert J.", ""], ["Beylkin", "Gregory", ""], ["Bischoff", "Florian A.", ""], ["Calvin", "Justus A.", ""], ["Fann", "George I.", ""], ["Fosso-Tande", "Jacob", ""], ["Galindo", "Diego", ""], ["Hammond", "Jeff R.", ""], ["Hartman-Baker", "Rebecca", ""], ["Hill", "Judith C.", ""], ["Jia", "Jun", ""], ["Kottmann", "Jakob S.", ""], ["Ou", "M-J. Yvonne", ""], ["Ratcliff", "Laura E.", ""], ["Reuter", "Matthew G.", ""], ["Richie-Halford", "Adam C.", ""], ["Romero", "Nichols A.", ""], ["Sekino", "Hideo", ""], ["Shelton", "William A.", ""], ["Sundahl", "Bryan E.", ""], ["Thornton", "W. Scott", ""], ["Valeev", "Edward F.", ""], ["V\u00e1zquez-Mayagoitia", "\u00c1lvaro", ""], ["Vence", "Nicholas", ""], ["Yokoi", "Yukina", ""]]}, {"id": "1507.02506", "submitter": "Christian Y. Cardall", "authors": "Reuben D. Budiardja and Christian Y. Cardall", "title": "GenASiS Basics: Object-oriented utilitarian functionality for\n  large-scale physics simulations (Version 3)", "comments": "The first Journal Reference and DOI are for the original publication\n  (v1 on this archive). The second and subsequent Journal References and DOIs\n  are for a New Version Announcements (successive versions on this archive)", "journal-ref": "Computer Physics Communications 196, 506 (2015); 214, 247 (2017);\n  244, 483 (2019)", "doi": "10.1016/j.cpc.2015.06.001; 10.1016/j.cpc.2016.12.019;\n  10.1016/j.cpc.2019.05.014", "report-no": null, "categories": "astro-ph.IM cs.MS physics.comp-ph", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  GenASiS Basics provides Fortran 2003 classes furnishing extensible\nobject-oriented utilitarian functionality for large-scale physics simulations\non distributed memory supercomputers. This functionality includes physical\nunits and constants; display to the screen or standard output device; message\npassing; I/O to disk; and runtime parameter management and usage statistics.\nThis revision---Version 3 of Basics---includes a significant name change, some\nminor additions to functionality, and a major addition to functionality:\ninfrastructure facilitating the offloading of computational kernels to devices\nsuch as GPUs.\n", "versions": [{"version": "v1", "created": "Thu, 9 Jul 2015 13:38:55 GMT"}, {"version": "v2", "created": "Fri, 25 Aug 2017 18:56:59 GMT"}, {"version": "v3", "created": "Fri, 6 Sep 2019 17:49:29 GMT"}], "update_date": "2019-09-09", "authors_parsed": [["Budiardja", "Reuben D.", ""], ["Cardall", "Christian Y.", ""]]}, {"id": "1507.08101", "submitter": "Moritz Kreutzer", "authors": "Moritz Kreutzer, Jonas Thies, Melven R\\\"ohrig-Z\\\"ollner, Andreas\n  Pieper, Faisal Shahzad, Martin Galgon, Achim Basermann, Holger Fehske, Georg\n  Hager, and Gerhard Wellein", "title": "GHOST: Building blocks for high performance sparse linear algebra on\n  heterogeneous systems", "comments": "32 pages, 11 figures", "journal-ref": null, "doi": "10.1007/s10766-016-0464-z", "report-no": null, "categories": "cs.DC cs.MS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  While many of the architectural details of future exascale-class high\nperformance computer systems are still a matter of intense research, there\nappears to be a general consensus that they will be strongly heterogeneous,\nfeaturing \"standard\" as well as \"accelerated\" resources. Today, such resources\nare available as multicore processors, graphics processing units (GPUs), and\nother accelerators such as the Intel Xeon Phi. Any software infrastructure that\nclaims usefulness for such environments must be able to meet their inherent\nchallenges: massive multi-level parallelism, topology, asynchronicity, and\nabstraction. The \"General, Hybrid, and Optimized Sparse Toolkit\" (GHOST) is a\ncollection of building blocks that targets algorithms dealing with sparse\nmatrix representations on current and future large-scale systems. It implements\nthe \"MPI+X\" paradigm, has a pure C interface, and provides hybrid-parallel\nnumerical kernels, intelligent resource management, and truly heterogeneous\nparallelism for multicore CPUs, Nvidia GPUs, and the Intel Xeon Phi. We\ndescribe the details of its design with respect to the challenges posed by\nmodern heterogeneous supercomputers and recent algorithmic developments.\nImplementation details which are indispensable for achieving high efficiency\nare pointed out and their necessity is justified by performance measurements or\npredictions based on performance models. The library code and several\napplications are available as open source. We also provide instructions on how\nto make use of GHOST in existing software packages, together with a case study\nwhich demonstrates the applicability and performance of GHOST as a component\nwithin a larger software stack.\n", "versions": [{"version": "v1", "created": "Wed, 29 Jul 2015 11:08:57 GMT"}, {"version": "v2", "created": "Tue, 15 Dec 2015 16:08:56 GMT"}, {"version": "v3", "created": "Mon, 15 Feb 2016 12:28:41 GMT"}], "update_date": "2016-10-05", "authors_parsed": [["Kreutzer", "Moritz", ""], ["Thies", "Jonas", ""], ["R\u00f6hrig-Z\u00f6llner", "Melven", ""], ["Pieper", "Andreas", ""], ["Shahzad", "Faisal", ""], ["Galgon", "Martin", ""], ["Basermann", "Achim", ""], ["Fehske", "Holger", ""], ["Hager", "Georg", ""], ["Wellein", "Gerhard", ""]]}]