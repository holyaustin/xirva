[{"id": "1001.1435", "submitter": "Arnaud Casteigts", "authors": "Arnaud Casteigts, R\\'emi Laplace", "title": "JBotSim, a Tool for Fast Prototyping of Distributed Algorithms in\n  Dynamic Networks", "comments": "A shorter version appeared in SIMUTOOLS 2015. For up to date\n  information and tutorials, visit http://jbotsim.io", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.MS cs.DC cs.NI", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  JBotSim is a java library that offers basic primitives for prototyping,\nrunning, and visualizing distributed algorithms in dynamic networks. With\nJBotSim, one can implement an idea in minutes and interact with it ({\\it e.g.\n}, add, move, or delete nodes) while it is running. JBotSim is well suited to\nprepare live demonstrations of your algorithms to colleagues or students; it\ncan also be used to evaluate performance at the algorithmic level (number of\nmessages, number of rounds, etc.). Unlike most tools, JBotSim is not an\nintegrated environment. It is a lightweight library to be used in your program.\nIn this paper, we present an overview of its distinctive features and\narchitecture.\n", "versions": [{"version": "v1", "created": "Sat, 9 Jan 2010 18:26:00 GMT"}, {"version": "v2", "created": "Mon, 1 Jul 2013 15:06:10 GMT"}, {"version": "v3", "created": "Mon, 22 Jul 2013 15:42:34 GMT"}, {"version": "v4", "created": "Wed, 25 Sep 2013 08:39:10 GMT"}, {"version": "v5", "created": "Mon, 11 May 2015 16:14:03 GMT"}, {"version": "v6", "created": "Mon, 18 May 2015 17:06:00 GMT"}, {"version": "v7", "created": "Sat, 3 Mar 2018 15:27:04 GMT"}, {"version": "v8", "created": "Mon, 15 Jul 2019 20:05:48 GMT"}, {"version": "v9", "created": "Wed, 25 Sep 2019 13:56:45 GMT"}], "update_date": "2019-09-26", "authors_parsed": [["Casteigts", "Arnaud", ""], ["Laplace", "R\u00e9mi", ""]]}, {"id": "1001.1654", "submitter": "Sebastian F. Walter", "authors": "S.F. Walter, L. Lehmann", "title": "Algorithmic Differentiation of Linear Algebra Functions with Application\n  in Optimum Experimental Design (Extended Version)", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DS cs.MS math.NA", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We derive algorithms for higher order derivative computation of the\nrectangular $QR$ and eigenvalue decomposition of symmetric matrices with\ndistinct eigenvalues in the forward and reverse mode of algorithmic\ndifferentiation (AD) using univariate Taylor propagation of matrices (UTPM).\nLinear algebra functions are regarded as elementary functions and not as\nalgorithms. The presented algorithms are implemented in the BSD licensed AD\ntool \\texttt{ALGOPY}. Numerical tests show that the UTPM algorithms derived in\nthis paper produce results close to machine precision accuracy. The theory\ndeveloped in this paper is applied to compute the gradient of an objective\nfunction motivated from optimum experimental design: $\\nabla_x\n\\Phi(C(J(F(x,y))))$, where $\\Phi = \\{\\lambda_1 : \\lambda_1 C\\}$, $C = (J^T\nJ)^{-1}$, $J = \\frac{\\dd F}{\\dd y}$ and $F = F(x,y)$.\n", "versions": [{"version": "v1", "created": "Mon, 11 Jan 2010 13:37:38 GMT"}, {"version": "v2", "created": "Fri, 19 Feb 2010 09:30:31 GMT"}], "update_date": "2010-02-19", "authors_parsed": [["Walter", "S. F.", ""], ["Lehmann", "L.", ""]]}, {"id": "1001.3213", "submitter": "Jean-Philippe Chancelier", "authors": "Jean-Philippe Chancelier (CERMICS), J\\'er\\^ome Lelong (LJK), Bernard\n  Lapeyre (CERMICS)", "title": "Using Premia and Nsp for Constructing a Risk Management Benchmark for\n  Testing Parallel Architecture", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.CE cs.DC cs.MS cs.NA q-fin.CP q-fin.PR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Financial institutions have massive computations to carry out overnight which\nare very demanding in terms of the consumed CPU. The challenge is to price many\ndifferent products on a cluster-like architecture. We have used the Premia\nsoftware to valuate the financial derivatives. In this work, we explain how\nPremia can be embedded into Nsp, a scientific software like Matlab, to provide\na powerful tool to valuate a whole portfolio. Finally, we have integrated an\nMPI toolbox into Nsp to enable to use Premia to solve a bunch of pricing\nproblems on a cluster. This unified framework can then be used to test\ndifferent parallel architectures.\n", "versions": [{"version": "v1", "created": "Tue, 19 Jan 2010 07:54:16 GMT"}, {"version": "v2", "created": "Mon, 21 May 2012 19:13:53 GMT"}], "update_date": "2012-05-23", "authors_parsed": [["Chancelier", "Jean-Philippe", "", "CERMICS"], ["Lelong", "J\u00e9r\u00f4me", "", "LJK"], ["Lapeyre", "Bernard", "", "CERMICS"]]}, {"id": "1001.5272", "submitter": "Daniel Roche", "authors": "David Harvey (New York University) and Daniel S. Roche (University of\n  Waterloo)", "title": "An in-place truncated Fourier transform and applications to polynomial\n  multiplication", "comments": "5 pages, 1 figure, pdflatex", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DS cs.MS cs.SC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The truncated Fourier transform (TFT) was introduced by van der Hoeven in\n2004 as a means of smoothing the \"jumps\" in running time of the ordinary FFT\nalgorithm that occur at power-of-two input sizes. However, the TFT still\nintroduces these jumps in memory usage. We describe in-place variants of the\nforward and inverse TFT algorithms, achieving time complexity O(n log n) with\nonly O(1) auxiliary space. As an application, we extend the second author's\nresults on space-restricted FFT-based polynomial multiplication to polynomials\nof arbitrary degree.\n", "versions": [{"version": "v1", "created": "Thu, 28 Jan 2010 21:10:41 GMT"}], "update_date": "2010-02-01", "authors_parsed": [["Harvey", "David", "", "New York University"], ["Roche", "Daniel S.", "", "University of\n  Waterloo"]]}]