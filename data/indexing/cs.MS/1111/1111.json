[{"id": "1111.1086", "submitter": "Aman Chadha Mr.", "authors": "Aman Chadha, Divya Jyoti and M. G. Bhatia", "title": "Design and Simulation of an 8-bit Dedicated Processor for calculating\n  the Sine and Cosine of an Angle using the CORDIC Algorithm", "comments": "CORDIC, VHDL, dedicated processor, datapath, finite state machine", "journal-ref": "Proceedings of the 2011 IEEE International Conference on\n  Computational Intelligence and Computing Research (ICCIC); IEEE Xplore:\n  CFB1120J-ART; ISBN: 978-1-61284-694-1; Print Version: CFB1120J-PRT; ISBN:\n  978-1-61284-766-5", "doi": null, "report-no": null, "categories": "cs.AR cs.DS cs.MS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This paper describes the design and simulation of an 8-bit dedicated\nprocessor for calculating the Sine and Cosine of an Angle using CORDIC\nAlgorithm (COordinate Rotation DIgital Computer), a simple and efficient\nalgorithm to calculate hyperbolic and trigonometric functions. We have proposed\na dedicated processor system, modeled by writing appropriate programs in VHDL,\nfor calculating the Sine and Cosine of an angle. System simulation was carried\nout using ModelSim 6.3f and Xilinx ISE Design Suite 12.3. A maximum frequency\nof 81.353 MHz was reached with a minimum period of 12.292 ns. 126 (3%) slices\nwere used. This paper attempts to survey the existing CORDIC algorithm with an\neye towards implementation in Field Programmable Gate Arrays (FPGAs). A brief\ndescription of the theory behind the algorithm and the derivation of the Sine\nand Cosine of an angle using the CORDIC algorithm has been presented. The\nsystem can be implemented using Spartan3 XC3S400 with Xilinx ISE 12.3 and VHDL.\n", "versions": [{"version": "v1", "created": "Fri, 4 Nov 2011 10:27:24 GMT"}], "update_date": "2017-04-07", "authors_parsed": [["Chadha", "Aman", ""], ["Jyoti", "Divya", ""], ["Bhatia", "M. G.", ""]]}, {"id": "1111.3124", "submitter": "Akira SaiToh", "authors": "Akira SaiToh", "title": "A multiprecision matrix calculation library and its extension library\n  for a matrix-product-state simulation of quantum computing", "comments": "5 pages, 1 figure, technical report (a software overview)", "journal-ref": null, "doi": null, "report-no": "QIT2011-80", "categories": "cs.MS quant-ph", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  A C++ library, named ZKCM, has been developed for the purpose of\nmultiprecision matrix calculations, which is based on the GNU MP and MPFR\nlibraries. It is especially convenient for writing programs involving\ntensor-product operations, tracing-out operations, and singular-value\ndecompositions. Its extension library, ZKCM_QC, for simulating quantum\ncomputing has been developed using the time-dependent matrix-product-state\nsimulation method. This report gives a brief introduction to the libraries with\nsample programs.\n", "versions": [{"version": "v1", "created": "Mon, 14 Nov 2011 07:50:31 GMT"}], "update_date": "2012-08-28", "authors_parsed": [["SaiToh", "Akira", ""]]}, {"id": "1111.3606", "submitter": "Hamid A. Toussi", "authors": "Hamid A. Toussi", "title": "tym: Typed Matlab", "comments": "Presented at University of Sistan and Baluchestan, 2011", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.PL cs.MS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Although, many scientists and engineers use Octave or MATLAB as their\npreferred programming language, dynamic nature of these languages can lead to\nslower running-time of programs written in these languages compared to programs\nwritten in languages which are not as dynamic, like C, C++ and Fortran. In this\nwork we developed a translator for a new programming language (tym) which tries\nto address performance issues, common in scientific programs, by adding new\nconstructs to a subset of Octave/MATLAB language. Our translator compiles\nprograms written in tym, to efficient C++ code.\n", "versions": [{"version": "v1", "created": "Tue, 15 Nov 2011 18:32:29 GMT"}, {"version": "v2", "created": "Thu, 10 Jan 2013 19:28:21 GMT"}, {"version": "v3", "created": "Thu, 12 Feb 2015 13:12:12 GMT"}], "update_date": "2015-03-19", "authors_parsed": [["Toussi", "Hamid A.", ""]]}, {"id": "1111.4144", "submitter": "Aravindh Krishnamoorthy", "authors": "Aravindh Krishnamoorthy and Deepak Menon", "title": "Matrix Inversion Using Cholesky Decomposition", "comments": "3pp with minor changes, pre-print; accepted for publication 2013 IEEE\n  Signal Processing: Algorithms, Architectures, Arrangements, and Applications\n  (SPA) conference", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.MS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In this paper we present a method for matrix inversion based on Cholesky\ndecomposition with reduced number of operations by avoiding computation of\nintermediate results; further, we use fixed point simulations to compare the\nnumerical accuracy of the method.\n", "versions": [{"version": "v1", "created": "Thu, 17 Nov 2011 16:44:40 GMT"}, {"version": "v2", "created": "Thu, 17 Oct 2013 20:33:59 GMT"}], "update_date": "2013-10-21", "authors_parsed": [["Krishnamoorthy", "Aravindh", ""], ["Menon", "Deepak", ""]]}, {"id": "1111.6374", "submitter": "Edoardo Di Napoli", "authors": "Jos\\'e I. Aliaga (1), Paolo Bientinesi (2), Davor Davidovi\\'c (3),\n  Edoardo Di Napoli (4), Francisco D. Igual (1), and Enrique S. Quintana-Ort\\'i\n  (1) ((1) Depto. de Ingenier\\'ia y Ciencia de Computadores, Universidad Jaume\n  I, (2) RWTH-Aachen University, (3) Institut Ruder Boskov\\'ic, Centarza\n  Informatiku i Racunarstvo, (4) JSC, Forschungszentrum J\\\"ulich)", "title": "Solving Dense Generalized Eigenproblems on Multi-threaded Architectures", "comments": "5 tables and 4 figures. In press by Applied Mathematics and\n  Computation. Accepted version", "journal-ref": null, "doi": "10.1016/j.amc.2012.05.020", "report-no": null, "categories": "cs.PF cond-mat.mtrl-sci cs.DC cs.MS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We compare two approaches to compute a portion of the spectrum of dense\nsymmetric definite generalized eigenproblems: one is based on the reduction to\ntridiagonal form, and the other on the Krylov-subspace iteration. Two\nlarge-scale applications, arising in molecular dynamics and material science,\nare employed to investigate the contributions of the application, architecture,\nand parallelism of the method to the performance of the solvers. The\nexperimental results on a state-of-the-art 8-core platform, equipped with a\ngraphics processing unit (GPU), reveal that in real applications, iterative\nKrylov-subspace methods can be a competitive approach also for the solution of\ndense problems.\n", "versions": [{"version": "v1", "created": "Mon, 28 Nov 2011 08:52:04 GMT"}, {"version": "v2", "created": "Sun, 17 Jun 2012 17:42:58 GMT"}], "update_date": "2012-06-19", "authors_parsed": [["Aliaga", "Jos\u00e9 I.", ""], ["Bientinesi", "Paolo", ""], ["Davidovi\u0107", "Davor", ""], ["Di Napoli", "Edoardo", ""], ["Igual", "Francisco D.", ""], ["Quintana-Ort\u00ed", "Enrique S.", ""]]}, {"id": "1111.6549", "submitter": "Martin Albrecht", "authors": "Martin R. Albrecht and Gregory V. Bard and Cl\\'ement Pernet", "title": "Efficient Dense Gaussian Elimination over the Finite Field with Two\n  Elements", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.MS math.AC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In this work we describe an efficient implementation of a hierarchy of\nalgorithms for Gaussian elimination upon dense matrices over the field with two\nelements. We discuss both well-known and new algorithms as well as our\nimplementations in the M4RI library, which has been adopted into Sage. The\nfocus of our discussion is a block iterative algorithm for PLE decomposition\nwhich is inspired by the M4RI algorithm. The implementation presented in this\nwork provides considerable performance gains in practice when compared to the\npreviously fastest implementation. We provide performance figures on x86_64\nCPUs to demonstrate the alacrity of our approach.\n", "versions": [{"version": "v1", "created": "Mon, 28 Nov 2011 18:55:12 GMT"}], "update_date": "2011-11-29", "authors_parsed": [["Albrecht", "Martin R.", ""], ["Bard", "Gregory V.", ""], ["Pernet", "Cl\u00e9ment", ""]]}, {"id": "1111.6583", "submitter": "David Ketcheson", "authors": "David I. Ketcheson, Kyle T. Mandli, Aron Ahmadia, Amal Alghamdi,\n  Manuel Quezada, Matteo Parsani, Matthew G. Knepley, Matthew Emmett", "title": "PyClaw: Accessible, Extensible, Scalable Tools for Wave Propagation\n  Problems", "comments": null, "journal-ref": "SISC 34(4):C210-C231 (2012)", "doi": "10.1137/110856976", "report-no": null, "categories": "math.NA cs.DC cs.MS physics.comp-ph", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Development of scientific software involves tradeoffs between ease of use,\ngenerality, and performance. We describe the design of a general hyperbolic PDE\nsolver that can be operated with the convenience of MATLAB yet achieves\nefficiency near that of hand-coded Fortran and scales to the largest\nsupercomputers. This is achieved by using Python for most of the code while\nemploying automatically-wrapped Fortran kernels for computationally intensive\nroutines, and using Python bindings to interface with a parallel computing\nlibrary and other numerical packages. The software described here is PyClaw, a\nPython-based structured grid solver for general systems of hyperbolic PDEs\n\\cite{pyclaw}. PyClaw provides a powerful and intuitive interface to the\nalgorithms of the existing Fortran codes Clawpack and SharpClaw, simplifying\ncode development and use while providing massive parallelism and scalable\nsolvers via the PETSc library. The package is further augmented by use of\nPyWENO for generation of efficient high-order weighted essentially\nnon-oscillatory reconstruction code. The simplicity, capability, and\nperformance of this approach are demonstrated through application to example\nproblems in shallow water flow, compressible flow and elasticity.\n", "versions": [{"version": "v1", "created": "Sun, 27 Nov 2011 10:53:39 GMT"}, {"version": "v2", "created": "Sat, 12 May 2012 17:40:07 GMT"}], "update_date": "2013-01-10", "authors_parsed": [["Ketcheson", "David I.", ""], ["Mandli", "Kyle T.", ""], ["Ahmadia", "Aron", ""], ["Alghamdi", "Amal", ""], ["Quezada", "Manuel", ""], ["Parsani", "Matteo", ""], ["Knepley", "Matthew G.", ""], ["Emmett", "Matthew", ""]]}, {"id": "1111.6900", "submitter": "Martin Albrecht", "authors": "Martin R. Albrecht", "title": "The M4RIE library for dense linear algebra over small fields with even\n  characteristic", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.MS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In this work, we present the M4RIE library which implements efficient\nalgorithms for linear algebra with dense matrices over GF(2^e) for 2 <= 2 <=\n10. As the name of the library indicates, it makes heavy use of the M4RI\nlibrary both directly (i.e., by calling it) and indirectly (i.e., by using its\nconcepts). We provide an open-source GPLv2+ C library for efficient linear\nalgebra over GF(2^e) for e small. In this library we implemented an idea due to\nBradshaw and Boothby which reduces matrix multiplication over GF(p^k) to a\nseries of matrix multiplications over GF(p). Furthermore, we propose a caching\ntechnique - Newton-John tables - to avoid finite field multiplications which is\ninspired by Kronrod's method (\"M4RM\") for matrix multiplication over GF(2).\nUsing these two techniques we provide asymptotically fast triangular solving\nwith matrices (TRSM) and PLE-based Gaussian elimination. As a result, we are\nable to significantly improve upon the state of the art in dense linear algebra\nover GF(2^e) with 2 <= e <= 10.\n", "versions": [{"version": "v1", "created": "Tue, 29 Nov 2011 17:05:00 GMT"}], "update_date": "2011-11-30", "authors_parsed": [["Albrecht", "Martin R.", ""]]}]