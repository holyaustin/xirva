[{"id": "1906.00039", "submitter": "Alexander Brandt", "authors": "Mohammadali Asadi, Alexander Brandt, Robert H. C. Moir, Marc Moreno\n  Maza, Yuzhen Xie", "title": "On the Parallelization of Triangular Decomposition of Polynomial Systems", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.SC cs.DC cs.MS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We discuss the parallelization of algorithms for solving polynomial systems\nsymbolically by way of triangular decomposition. Algorithms for solving\npolynomial systems combine low-level routines for performing arithmetic\noperations on polynomials and high-level procedures which produce the different\ncomponents (points, curves, surfaces) of the solution set. The latter\n\"component-level\" parallelization of triangular decompositions, our focus here,\nbelongs to the class of dynamic irregular parallel applications. Possible\nspeedup factors depend on geometrical properties of the solution set (number of\ncomponents, their dimensions and degrees); these algorithms do not scale with\nthe number of processors. In this paper we combine two different concurrency\nschemes, the fork-join model and producer-consumer patterns, to better capture\nopportunities for component-level parallelization. We report on our\nimplementation with the publicly available BPAS library. Our experimentation\nwith 340 systems yields promising results.\n", "versions": [{"version": "v1", "created": "Fri, 31 May 2019 19:16:47 GMT"}], "update_date": "2019-06-04", "authors_parsed": [["Asadi", "Mohammadali", ""], ["Brandt", "Alexander", ""], ["Moir", "Robert H. C.", ""], ["Maza", "Marc Moreno", ""], ["Xie", "Yuzhen", ""]]}, {"id": "1906.00785", "submitter": "Felix Wolf", "authors": "J. D\\\"olz, H. Harbrecht, S. Kurz, M. Multerer, S. Sch\\\"ops, F. Wolf", "title": "Bembel: The Fast Isogeometric Boundary Element C++ Library for Laplace,\n  Helmholtz, and Electric Wave Equation", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.MS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In this article, we present Bembel, the C++ library featuring higher order\nisogeometric Galerkin boundary element methods for Laplace, Helmholtz, and\nMaxwell problems. Bembel is compatible with geometries from the Octave NURBS\npackage and provides an interface to the Eigen template library for linear\nalgebra operations. For computational efficiency, it applies an embedded fast\nmultipole method tailored to the isogeometric analysis framework and a parallel\nmatrix assembly based on OpenMP.\n", "versions": [{"version": "v1", "created": "Mon, 3 Jun 2019 13:22:27 GMT"}], "update_date": "2019-06-04", "authors_parsed": [["D\u00f6lz", "J.", ""], ["Harbrecht", "H.", ""], ["Kurz", "S.", ""], ["Multerer", "M.", ""], ["Sch\u00f6ps", "S.", ""], ["Wolf", "F.", ""]]}, {"id": "1906.00874", "submitter": "Steffen B\\\"orm", "authors": "Roc\\'io Carratal\\'a-S\\'aez, Sven Christophersen, Jos\\'e I. Aliaga,\n  Vicen\\c{c} Beltran, Steffen B\\\"orm and Enrique S. Quintana-Ort\\'i", "title": "Exploiting nested task-parallelism in the $\\mathcal{H}-LU$ factorization", "comments": null, "journal-ref": "Journal of Computational Science, volume 33, pages 20-33 (2019)", "doi": "10.1016/j.jocs.2019.02.004", "report-no": null, "categories": "cs.MS cs.DC math.NA", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We address the parallelization of the LU factorization of hierarchical\nmatrices ($\\mathcal{H}$-matrices) arising from boundary element methods. Our\napproach exploits task-parallelism via the OmpSs programming model and runtime,\nwhich discovers the data-flow parallelism intrinsic to the operation at\nexecution time, via the analysis of data dependencies based on the memory\naddresses of the tasks' operands. This is especially challenging for\n$\\mathcal{H}$-matrices, as the structures containing the data vary in dimension\nduring the execution. We tackle this issue by decoupling the data structure\nfrom that used to detect dependencies. Furthermore, we leverage the support for\nweak operands and early release of dependencies, recently introduced in\nOmpSs-2, to accelerate the execution of parallel codes with nested\ntask-parallelism and fine-grain tasks.\n", "versions": [{"version": "v1", "created": "Mon, 3 Jun 2019 15:29:17 GMT"}], "update_date": "2019-06-10", "authors_parsed": [["Carratal\u00e1-S\u00e1ez", "Roc\u00edo", ""], ["Christophersen", "Sven", ""], ["Aliaga", "Jos\u00e9 I.", ""], ["Beltran", "Vicen\u00e7", ""], ["B\u00f6rm", "Steffen", ""], ["Quintana-Ort\u00ed", "Enrique S.", ""]]}, {"id": "1906.01211", "submitter": "Jean-Philip Piquemal", "authors": "Luc-Henri Jolly, Alejandro Duran, Louis Lagard\\`ere, Jay W. Ponder,\n  Pengyu Ren, Jean-Philip Piquemal", "title": "Raising the Performance of the Tinker-HP Molecular Modeling Package\n  [Article v1.0]", "comments": null, "journal-ref": "LiveCoMS, 2019, 1 (2), 10409", "doi": "10.33011/livecoms.1.2.10409", "report-no": null, "categories": "cs.MS cs.DC physics.chem-ph physics.comp-ph", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This living paper reviews the present High Performance Computing (HPC)\ncapabilities of the Tinker-HP molecular modeling package. We focus here on the\nreference, double precision, massively parallel molecular dynamics engine\npresent in Tinker-HP and dedicated to perform large scale simulations. We show\nhow it can be adapted to recent Intel Central Processing Unit (CPU) petascale\narchitectures. First, we discuss the new set of Intel Advanced Vector\nExtensions 512 (Intel AVX-512) instructions present in recent Intel processors\n(e.g., the Intel Xeon Scalable and Intel Xeon Phi 2nd generation processors)\nallowing for larger vectorization enhancements. These instructions constitute\nthe central source of potential computational gains when using the latest\nprocessors, justifying important vectorization efforts for developers. We then\nbriefly review the organization of the Tinker-HP code and identify the\ncomputational hotspots which require Intel AVX-512 optimization and we propose\na general and optimal strategy to vectorize those particular parts of the code.\nWe intended to present our optimization strategy in a pedagogical way so it\ncould benefit to other researchers and students interested in gaining\nperformances in their own software. Finally we present the performance\nenhancements obtained compared to the unoptimized code both sequentially and at\nthe scaling limit in parallel for classical non-polarizable (CHARMM) and\npolarizable force fields (AMOEBA). This paper never ceases to be updated as we\naccumulate new data on the associated Github repository between new versions of\nthis living paper.\n", "versions": [{"version": "v1", "created": "Tue, 4 Jun 2019 06:01:37 GMT"}, {"version": "v2", "created": "Thu, 8 Aug 2019 10:18:58 GMT"}, {"version": "v3", "created": "Sat, 14 Sep 2019 07:52:09 GMT"}], "update_date": "2021-03-29", "authors_parsed": [["Jolly", "Luc-Henri", ""], ["Duran", "Alejandro", ""], ["Lagard\u00e8re", "Louis", ""], ["Ponder", "Jay W.", ""], ["Ren", "Pengyu", ""], ["Piquemal", "Jean-Philip", ""]]}, {"id": "1906.03489", "submitter": "David Moxey", "authors": "David Moxey, Chris D. Cantwell, Yan Bao, Andrea Cassinelli, Giacomo\n  Castiglioni, Sehun Chun, Emilia Juda, Ehsan Kazemi, Kilian Lackhove, Julian\n  Marcon, Gianmarco Mengaldo, Douglas Serson, Michael Turner, Hui Xu, Joaquim\n  Peir\\'o, Robert M. Kirby, Spencer J. Sherwin", "title": "Nektar++: enhancing the capability and application of high-fidelity\n  spectral/$hp$ element methods", "comments": "21 pages, 14 figures", "journal-ref": "Computer Physics Communications 249 (2020) 107110", "doi": "10.1016/j.cpc.2019.107110", "report-no": null, "categories": "cs.MS cs.NA math.NA physics.flu-dyn", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Nektar++ is an open-source framework that provides a flexible,\nhigh-performance and scalable platform for the development of solvers for\npartial differential equations using the high-order spectral/$hp$ element\nmethod. In particular, Nektar++ aims to overcome the complex implementation\nchallenges that are often associated with high-order methods, thereby allowing\nthem to be more readily used in a wide range of application areas. In this\npaper, we present the algorithmic, implementation and application developments\nassociated with our Nektar++ version 5.0 release. We describe some of the key\nsoftware and performance developments, including our strategies on parallel\nI/O, on in situ processing, the use of collective operations for exploiting\ncurrent and emerging hardware, and interfaces to enable multi-solver coupling.\nFurthermore, we provide details on a newly developed Python interface that\nenables a more rapid introduction for new users unfamiliar with spectral/$hp$\nelement methods, C++ and/or Nektar++. This release also incorporates a number\nof numerical method developments - in particular: the method of moving frames,\nwhich provides an additional approach for the simulation of equations on\nembedded curvilinear manifolds and domains; a means of handling spatially\nvariable polynomial order; and a novel technique for quasi-3D simulations to\npermit spatially-varying perturbations to the geometry in the homogeneous\ndirection. Finally, we demonstrate the new application-level features provided\nin this release, namely: a facility for generating high-order curvilinear\nmeshes called NekMesh; a novel new AcousticSolver for aeroacoustic problems;\nour development of a 'thick' strip model for the modelling of fluid-structure\ninteraction problems in the context of vortex-induced vibrations. We conclude\nby commenting some directions for future code development and expansion.\n", "versions": [{"version": "v1", "created": "Sat, 8 Jun 2019 17:01:12 GMT"}, {"version": "v2", "created": "Tue, 26 Nov 2019 19:22:23 GMT"}], "update_date": "2020-02-18", "authors_parsed": [["Moxey", "David", ""], ["Cantwell", "Chris D.", ""], ["Bao", "Yan", ""], ["Cassinelli", "Andrea", ""], ["Castiglioni", "Giacomo", ""], ["Chun", "Sehun", ""], ["Juda", "Emilia", ""], ["Kazemi", "Ehsan", ""], ["Lackhove", "Kilian", ""], ["Marcon", "Julian", ""], ["Mengaldo", "Gianmarco", ""], ["Serson", "Douglas", ""], ["Turner", "Michael", ""], ["Xu", "Hui", ""], ["Peir\u00f3", "Joaquim", ""], ["Kirby", "Robert M.", ""], ["Sherwin", "Spencer J.", ""]]}, {"id": "1906.06507", "submitter": "Daniele Agostini", "authors": "Daniele Agostini and Lynn Chua", "title": "Computing Theta Functions with Julia", "comments": "v2: to appear in the Journal of Software for Algebra and Geometry.\n  Content reorganized according to the published version", "journal-ref": "J. Softw. Alg. Geom. 11 (2021) 41-51", "doi": "10.2140/jsag.2021.11.41", "report-no": null, "categories": "cs.MS math.AG math.CV", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We present a new package Theta.jl for computing with the Riemann theta\nfunction. It is implemented in Julia and offers accurate numerical evaluation\nof theta functions with characteristics and their derivatives of arbitrary\norder. Our package is optimized for multiple evaluations of theta functions for\nthe same Riemann matrix, in small dimensions. As an application, we report on\nexperimental approaches to the Schottky problem in genus five.\n", "versions": [{"version": "v1", "created": "Sat, 15 Jun 2019 09:22:03 GMT"}, {"version": "v2", "created": "Mon, 9 Nov 2020 16:41:43 GMT"}], "update_date": "2021-04-21", "authors_parsed": [["Agostini", "Daniele", ""], ["Chua", "Lynn", ""]]}, {"id": "1906.07574", "submitter": "Robert Ipanaqu\\'e", "authors": "R. Ipanaqu\\'e, R. Velezmoro and R. T. Urbina", "title": "Bspline solids manipulation with Mathematica", "comments": "12 pages, 19 figures", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.MS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Bspline solids are used for solid objects modeling in R3. Mathematica\nincorporates a several commands to manipulate symbolic and graphically Bspline\nbasis functions and to graphically manipulate Bsplines curves and surfaces;\nhowever, it does not incorporate any command to the graphical manipulation of\nBspline solids. In this paper, we describe a new Mathematica program to compute\nand plotting the Bspline solids. The output obtained is consistent with\nMathematica's notation. The performance of the commands are discussed by using\nsome illustrative examples.\n", "versions": [{"version": "v1", "created": "Fri, 14 Jun 2019 02:45:35 GMT"}], "update_date": "2019-06-19", "authors_parsed": [["Ipanaqu\u00e9", "R.", ""], ["Velezmoro", "R.", ""], ["Urbina", "R. T.", ""]]}, {"id": "1906.08613", "submitter": "Paolo Bientinesi", "authors": "Daniele G. Spampinato (1), Diego Fabregat-Traver (2), Markus P\\\"uschel\n  (1), Paolo Bientinesi (2) ((1) ETH Zurich, (2) RWTH Aachen University)", "title": "Program Generation for Linear Algebra Using Multiple Layers of DSLs", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.MS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Numerical software in computational science and engineering often relies on\nhighly-optimized building blocks from libraries such as BLAS and LAPACK, and\nwhile such libraries provide portable performance for a wide range of computing\narchitectures, they still present limitations in terms of flexibility. We\nadvocate a domain-specific program generator capable of producing library\nroutines tailored to the specific needs of the application in terms of sizes,\ninterface, and target architecture.\n", "versions": [{"version": "v1", "created": "Thu, 20 Jun 2019 13:44:41 GMT"}], "update_date": "2019-06-21", "authors_parsed": [["Spampinato", "Daniele G.", "", "ETH Zurich"], ["Fabregat-Traver", "Diego", "", "RWTH Aachen University"], ["P\u00fcschel", "Markus", "", "ETH Zurich"], ["Bientinesi", "Paolo", "", "RWTH Aachen University"]]}, {"id": "1906.09964", "submitter": "Mehdi Delkhosh", "authors": "Sobhan Latifi and Mehdi Delkhosh", "title": "SPSMAT: GNU Octave software package for spectral and pseudospectral\n  methods", "comments": "8 pages, 5 figures", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.MS cs.NA math.NA", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  SPSMAT (Spectral/Pseudospectral matrix method) is an add-on for Octave, that\nhelps you solve nonfractional-/fractional ordinary/partial\ndifferential/integral equations. In this version, as the first version, the\nwell-defined spectral or pseudospectral algorithms are considered to solve\ndifferential and integral equations. The motivation is that there are few\nsoftware packages available that make such methods easy to use for\npractitioners in the field of scientific computing. Additionally, one of the\nmost practical platforms in computation, MATLAB, is currently not supporting\nbeneficial and free numerical method for the solution of differential\nequations--to the best author's knowledge. To remedy this situation, this paper\nprovides a description of its relevant uploaded open source software package\nand is a broad guidance to describe how to work with this toolbox.\n", "versions": [{"version": "v1", "created": "Thu, 20 Jun 2019 21:18:49 GMT"}], "update_date": "2019-06-25", "authors_parsed": [["Latifi", "Sobhan", ""], ["Delkhosh", "Mehdi", ""]]}, {"id": "1906.10575", "submitter": "Wayne Mitchell", "authors": "Wayne B. Mitchell, Robert Strzodka, Robert D. Falgout", "title": "Parallel Performance of Algebraic Multigrid Domain Decomposition\n  (AMG-DD)", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.MS cs.DC cs.NA math.NA", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Algebraic multigrid (AMG) is a widely used scalable solver and preconditioner\nfor large-scale linear systems resulting from the discretization of a wide\nclass of elliptic PDEs. While AMG has optimal computational complexity, the\ncost of communication has become a significant bottleneck that limits its\nscalability as processor counts continue to grow on modern machines. This paper\nexamines the design, implementation, and parallel performance of a novel\nalgorithm, Algebraic Multigrid Domain Decomposition (AMG-DD), designed\nspecifically to limit communication. The goal of AMG-DD is to provide a\nlow-communication alternative to standard AMG V-cycles by trading some\nadditional computational overhead for a significant reduction in communication\ncost. Numerical results show that AMG-DD achieves superior accuracy per\ncommunication cost compared to AMG, and speedup over AMG is demonstrated on a\nlarge GPU cluster.\n", "versions": [{"version": "v1", "created": "Tue, 25 Jun 2019 14:47:23 GMT"}, {"version": "v2", "created": "Tue, 21 Jan 2020 12:18:59 GMT"}], "update_date": "2020-01-22", "authors_parsed": [["Mitchell", "Wayne B.", ""], ["Strzodka", "Robert", ""], ["Falgout", "Robert D.", ""]]}, {"id": "1906.10811", "submitter": "Vincenzo Pandolfo", "authors": "Vincenzo Pandolfo", "title": "Investigating the OPS intermediate representation to target GPUs in the\n  Devito DSL", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.MS cs.PL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The Devito DSL is a code generation tool for the solution of partial\ndifferential equations using the finite difference method specifically aimed at\nseismic inversion problems.\n  In this work we investigate the integration of OPS, an API to generate highly\noptimized code for applications running on structured meshes targeting various\nplatforms, within Devito as a mean of bringing it to the GPU realm by providing\nan implementation of a OPS backend in Devito, obtaining considerable speed ups\ncompared to the core Devito backend.\n", "versions": [{"version": "v1", "created": "Wed, 26 Jun 2019 02:11:08 GMT"}], "update_date": "2019-06-27", "authors_parsed": [["Pandolfo", "Vincenzo", ""]]}, {"id": "1906.10944", "submitter": "Linus Seelinger", "authors": "Linus Seelinger and Anne Reinarz and Robert Scheichl", "title": "A High-Performance Implementation of a Robust Preconditioner for\n  Heterogeneous Problems", "comments": "Fixed error in definition of partition of unity", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.MS cs.DC cs.NA math.NA", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We present an efficient implementation of the highly robust and scalable\nGenEO preconditioner in the high-performance PDE framework DUNE. The GenEO\ncoarse space is constructed by combining low energy solutions of a local\ngeneralised eigenproblem using a partition of unity. In this paper we\ndemonstrate both weak and strong scaling for the GenEO solver on over 15,000\ncores by solving an industrially motivated problem with over 200 million\ndegrees of freedom. Further, we show that for highly complex parameter\ndistributions arising in certain real-world applications, established methods\nbecome intractable while GenEO remains fully effective. The purpose of this\npaper is two-fold: to demonstrate the robustness and high parallel efficiency\nof the solver and to document the technical details that are crucial to the\nefficiency of the code.\n", "versions": [{"version": "v1", "created": "Wed, 26 Jun 2019 09:59:13 GMT"}, {"version": "v2", "created": "Tue, 16 Jun 2020 10:02:14 GMT"}], "update_date": "2020-06-17", "authors_parsed": [["Seelinger", "Linus", ""], ["Reinarz", "Anne", ""], ["Scheichl", "Robert", ""]]}, {"id": "1906.10963", "submitter": "Sebastian Eibl", "authors": "Sebastian Eibl and Ulrich R\\\"ude", "title": "A Modular and Extensible Software Architecture for Particle Dynamics", "comments": "Proceedings Of The 8Th International Conference On Discrete Element\n  Methods", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.SE cs.MS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Creating a highly parallel and flexible discrete element software requires an\ninterdisciplinary approach, where expertise from different disciplines is\ncombined. On the one hand domain specialists provide interaction models between\nparticles. On the other hand high-performance computing specialists optimize\nthe code to achieve good performance on different hardware architectures. In\nparticular, the software must be carefully crafted to achieve good scaling on\nmassively parallel supercomputers. Combining all this in a flexible and\nextensible, widely usable software is a challenging task. In this article we\noutline the design decisions and concepts of a newly developed particle\ndynamics code MESA-PD that is implemented as part of the waLBerla multi-physics\nframework. Extensibility, flexibility, but also performance and scalability are\nprimary design goals for the new software framework. In particular, the new\nmodular architecture is designed such that physical models can be modified and\nextended by domain scientists without understanding all details of the parallel\ncomputing functionality and the underlying distributed data structures that are\nneeded to achieve good performance on current supercomputer architectures. This\ngoal is achieved by combining the high performance simulation framework\nwaLBerla with code generation techniques. All code and the code generator are\nreleased as open source under GPLv3 within the publicly available waLBerla\nframework (www.walberla.net).\n", "versions": [{"version": "v1", "created": "Wed, 26 Jun 2019 10:45:40 GMT"}], "update_date": "2019-06-27", "authors_parsed": [["Eibl", "Sebastian", ""], ["R\u00fcde", "Ulrich", ""]]}, {"id": "1906.12199", "submitter": "Mofreh Zaghloul", "authors": "Mofreh Zaghloul", "title": "Remark on Algorithm 680: evaluation of the complex error function: Cause\n  and Remedy for the Loss of Accuracy Near the Real Axis", "comments": null, "journal-ref": "ACM Transactions on Mathematical Software, Vol. 45, No. 2, Article\n  24.(2019)", "doi": "10.1145/3309681", "report-no": null, "categories": "cs.MS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In this remark we identify the cause of the loss of accuracy in the\ncomputation of the Faddeyeva function, w(z), near the real axis when using\nAlgorithm 680. We provide a simple correction to this problem which allows us\nto restore this code as one of the important reference routines for accuracy\ncomparisons.\n", "versions": [{"version": "v1", "created": "Thu, 27 Jun 2019 11:56:05 GMT"}], "update_date": "2019-07-01", "authors_parsed": [["Zaghloul", "Mofreh", ""]]}]