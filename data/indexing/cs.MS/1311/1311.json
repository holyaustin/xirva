[{"id": "1311.0681", "submitter": "Javier Segura", "authors": "A. Gil, J. Segura, N.M. Temme", "title": "Computation of the Marcum Q-function", "comments": "Accepted for publication in ACM Trans. Math. Softw", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.MS math.CA", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Methods and an algorithm for computing the generalized Marcum $Q-$function\n($Q_{\\mu}(x,y)$) and the complementary function ($P_{\\mu}(x,y)$) are described.\nThese functions appear in problems of different technical and scientific areas\nsuch as, for example, radar detection and communications, statistics and\nprobability theory, where they are called the non-central chi-square or the non\ncentral gamma cumulative distribution functions.\n  The algorithm for computing the Marcum functions combines different methods\nof evaluation in different regions: series expansions, integral\nrepresentations, asymptotic expansions, and use of three-term homogeneous\nrecurrence relations. A relative accuracy close to $10^{-12}$ can be obtained\nin the parameter region $(x,y,\\mu) \\in [0,\\,A]\\times [0,\\,A]\\times [1,\\,A]$,\n$A=200$, while for larger parameters the accuracy decreases (close to\n$10^{-11}$ for $A=1000$ and close to $5\\times 10^{-11}$ for $A=10000$).\n", "versions": [{"version": "v1", "created": "Mon, 4 Nov 2013 12:50:09 GMT"}], "update_date": "2013-11-05", "authors_parsed": [["Gil", "A.", ""], ["Segura", "J.", ""], ["Temme", "N. M.", ""]]}, {"id": "1311.1753", "submitter": "Rolf Andreassen", "authors": "R. Andreassen, B. T. Meadows, M. de Silva, M. D. Sokoloff, and K.\n  Tomko", "title": "GooFit: A library for massively parallelising maximum-likelihood fits", "comments": "Presented at the CHEP 2013 conference", "journal-ref": null, "doi": "10.1088/1742-6596/513/5/052003", "report-no": null, "categories": "cs.DC cs.MS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Fitting complicated models to large datasets is a bottleneck of many\nanalyses. We present GooFit, a library and tool for constructing\narbitrarily-complex probability density functions (PDFs) to be evaluated on\nnVidia GPUs or on multicore CPUs using OpenMP. The massive parallelisation of\ndividing up event calculations between hundreds of processors can achieve\nspeedups of factors 200-300 in real-world problems.\n", "versions": [{"version": "v1", "created": "Thu, 7 Nov 2013 17:18:42 GMT"}], "update_date": "2015-06-17", "authors_parsed": [["Andreassen", "R.", ""], ["Meadows", "B. T.", ""], ["de Silva", "M.", ""], ["Sokoloff", "M. D.", ""], ["Tomko", "K.", ""]]}, {"id": "1311.2719", "submitter": "Pushan Majumdar", "authors": "Pushan Majumdar", "title": "Lattice Simulations using OpenACC compilers", "comments": "7 pages, 1 figure, presented at the 31st International Symposium on\n  Lattice Field Theory (Lattice 2013), 29 July - 3 August 2013, Mainz, Germany", "journal-ref": null, "doi": null, "report-no": null, "categories": "hep-lat cs.MS physics.comp-ph", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  OpenACC compilers allow one to use Graphics Processing Units without having\nto write explicit CUDA codes. Programs can be modified incrementally using\nOpenMP like directives which causes the compiler to generate CUDA kernels to be\nrun on the GPUs. In this article we look at the performance gain in lattice\nsimulations with dynamical fermions using OpenACC compilers.\n", "versions": [{"version": "v1", "created": "Tue, 12 Nov 2013 09:12:54 GMT"}], "update_date": "2013-11-13", "authors_parsed": [["Majumdar", "Pushan", ""]]}, {"id": "1311.4533", "submitter": "Kirana Kumara P", "authors": "Kirana Kumara P", "title": "A Study of Speed of the Boundary Element Method as applied to the\n  Realtime Computational Simulation of Biological Organs", "comments": "preprint, draft, 2 tables, 47 references, 7 files, Codes that can\n  solve three dimensional linear elastostatic problems using constant boundary\n  elements (of triangular shape) while ignoring body forces are provided as\n  supplementary files; codes are distributed under the MIT License in three\n  versions: i) MATLAB version ii) Fortran 90 version (sequential code) iii)\n  Fortran 90 version (parallel code)", "journal-ref": "Electronic Journal of Boundary Elements, Vol. 12, No. 2, pp. 1-25\n  (2014)", "doi": null, "report-no": null, "categories": "cs.CE cs.DC cs.MS physics.comp-ph physics.med-ph", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In this work, possibility of simulating biological organs in realtime using\nthe Boundary Element Method (BEM) is investigated. Biological organs are\nassumed to follow linear elastostatic material behavior, and constant boundary\nelement is the element type used. First, a Graphics Processing Unit (GPU) is\nused to speed up the BEM computations to achieve the realtime performance.\nNext, instead of the GPU, a computer cluster is used. Results indicate that BEM\nis fast enough to provide for realtime graphics if biological organs are\nassumed to follow linear elastostatic material behavior. Although the present\nwork does not conduct any simulation using nonlinear material models, results\nfrom using the linear elastostatic material model imply that it would be\ndifficult to obtain realtime performance if highly nonlinear material models\nthat properly characterize biological organs are used. Although the use of BEM\nfor the simulation of biological organs is not new, the results presented in\nthe present study are not found elsewhere in the literature.\n", "versions": [{"version": "v1", "created": "Mon, 18 Nov 2013 20:54:26 GMT"}, {"version": "v2", "created": "Mon, 6 Jan 2014 04:29:47 GMT"}, {"version": "v3", "created": "Tue, 14 Jan 2014 18:28:10 GMT"}], "update_date": "2014-02-11", "authors_parsed": [["P", "Kirana Kumara", ""]]}, {"id": "1311.5735", "submitter": "Jose A. Egea", "authors": "Jose A Egea, David Henriques, Thomas Cokelaer, Alejandro F Villaverde,\n  Julio R Banga, Julio Saez-Rodriguez", "title": "MEIGO: an open-source software suite based on metaheuristics for global\n  optimization in systems biology and bioinformatics", "comments": "12 pages, 7 figures, 1 table", "journal-ref": null, "doi": null, "report-no": null, "categories": "math.OC cs.CE cs.MS q-bio.QM", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Optimization is key to solve many problems in computational biology. Global\noptimization methods provide a robust methodology, and metaheuristics in\nparticular have proven to be the most efficient methods for many applications.\nDespite their utility, there is limited availability of metaheuristic tools. We\npresent MEIGO, an R and Matlab optimization toolbox (also available in Python\nvia a wrapper of the R version), that implements metaheuristics capable of\nsolving diverse problems arising in systems biology and bioinformatics:\nenhanced scatter search method (eSS) for continuous nonlinear programming\n(cNLP) and mixed-integer programming (MINLP) problems, and variable\nneighborhood search (VNS) for Integer Programming (IP) problems. Both methods\ncan be run on a single-thread or in parallel using a cooperative strategy. The\ncode is supplied under GPLv3 and is available at\n\\url{http://www.iim.csic.es/~gingproc/meigo.html}. Documentation and examples\nare included. The R package has been submitted to Bioconductor. We evaluate\nMEIGO against optimization benchmarks, and illustrate its applicability to a\nseries of case studies in bioinformatics and systems biology, outperforming\nother state-of-the-art methods. MEIGO provides a free, open-source platform for\noptimization, that can be applied to multiple domains of systems biology and\nbioinformatics. It includes efficient state of the art metaheuristics, and its\nopen and modular structure allows the addition of further methods.\n", "versions": [{"version": "v1", "created": "Fri, 22 Nov 2013 12:39:29 GMT"}], "update_date": "2013-11-25", "authors_parsed": [["Egea", "Jose A", ""], ["Henriques", "David", ""], ["Cokelaer", "Thomas", ""], ["Villaverde", "Alejandro F", ""], ["Banga", "Julio R", ""], ["Saez-Rodriguez", "Julio", ""]]}]