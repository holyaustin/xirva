[{"id": "1501.00179", "submitter": "Peter Bubenik", "authors": "Peter Bubenik and Pawel Dlotko", "title": "A persistence landscapes toolbox for topological statistics", "comments": "24 pages", "journal-ref": "Journal of Symbolic Computation, Volume 78, January-February 2017,\n  Pages 91-114", "doi": "10.1016/j.jsc.2016.03.009", "report-no": null, "categories": "cs.CG cs.MS math.AT stat.CO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Topological data analysis provides a multiscale description of the geometry\nand topology of quantitative data. The persistence landscape is a topological\nsummary that can be easily combined with tools from statistics and machine\nlearning. We give efficient algorithms for calculating persistence landscapes,\ntheir averages, and distances between such averages. We discuss an\nimplementation of these algorithms and some related procedures. These are\nintended to facilitate the combination of statistics and machine learning with\ntopological data analysis. We present an experiment showing that the\nlow-dimensional persistence landscapes of points sampled from spheres (and\nboxes) of varying dimensions differ.\n", "versions": [{"version": "v1", "created": "Wed, 31 Dec 2014 17:34:59 GMT"}, {"version": "v2", "created": "Mon, 6 Apr 2015 14:58:20 GMT"}, {"version": "v3", "created": "Fri, 28 Aug 2015 17:16:40 GMT"}], "update_date": "2017-07-21", "authors_parsed": [["Bubenik", "Peter", ""], ["Dlotko", "Pawel", ""]]}, {"id": "1501.00324", "submitter": "Jonathan Wong", "authors": "Jonathan Wong, Ellen Kuhl, Eric Darve", "title": "A New Sparse Matrix Vector Multiplication GPU Algorithm Designed for\n  Finite Element Problems", "comments": "35 pages, 22 figures", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.MS cs.CE", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Recently, graphics processors (GPUs) have been increasingly leveraged in a\nvariety of scientific computing applications. However, architectural\ndifferences between CPUs and GPUs necessitate the development of algorithms\nthat take advantage of GPU hardware. As sparse matrix vector multiplication\n(SPMV) operations are commonly used in finite element analysis, a new SPMV\nalgorithm and several variations are developed for unstructured finite element\nmeshes on GPUs. The effective bandwidth of current GPU algorithms and the newly\nproposed algorithms are measured and analyzed for 15 sparse matrices of varying\nsizes and varying sparsity structures. The effects of optimization and\ndifferences between the new GPU algorithm and its variants are then\nsubsequently studied. Lastly, both new and current SPMV GPU algorithms are\nutilized in the GPU CG Solver in GPU finite element simulations of the heart.\nThese results are then compared against parallel PETSc finite element\nimplementation results. The effective bandwidth tests indicate that the new\nalgorithms compare very favorably with current algorithms for a wide variety of\nsparse matrices and can yield very notable benefits. GPU finite element\nsimulation results demonstrate the benefit of using GPUs for finite element\nanalysis, and also show that the proposed algorithms can yield speedup factors\nup to 12-fold for real finite element applications.\n", "versions": [{"version": "v1", "created": "Thu, 1 Jan 2015 21:57:19 GMT"}], "update_date": "2015-01-05", "authors_parsed": [["Wong", "Jonathan", ""], ["Kuhl", "Ellen", ""], ["Darve", "Eric", ""]]}, {"id": "1501.01578", "submitter": "Javier Segura", "authors": "A. Gil, J. Segura and N. M. Temme", "title": "GammaCHI: a package for the inversion and computation of the gamma and\n  chi-square cumulative distribution functions (central and noncentral)", "comments": "To appear in Computer Physics Communications", "journal-ref": null, "doi": "10.1016/j.cpc.2015.01.004", "report-no": null, "categories": "cs.MS math.CA math.NA", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  A Fortran 90 module (GammaCHI) for computing and inverting the gamma and\nchi-square cumulative distribution functions (central and noncentral) is\npresented. The main novelty of this package are the reliable and accurate\ninversion routines for the noncentral cumulative distribution functions.\nAdditionally, the package also provides routines for computing the gamma\nfunction, the error function and other functions related to the gamma function.\nThe module includes the routines cdfgamC, invcdfgamC, cdfgamNC, invcdfgamNC,\nerrorfunction, inverfc, gamma, loggam, gamstar and quotgamm for the computation\nof the central gamma distribution function (and its complementary function),\nthe inversion of the central gamma distribution function, the computation of\nthe noncentral gamma distribution function (and its complementary function),\nthe inversion of the noncentral gamma distribution function, the computation of\nthe error function and its complementary function, the inversion of the\ncomplementary error function, the computation of: the gamma function, the\nlogarithm of the gamma function, the regulated gamma function and the ratio of\ntwo gamma functions, respectively.\n", "versions": [{"version": "v1", "created": "Wed, 7 Jan 2015 18:06:17 GMT"}], "update_date": "2015-06-23", "authors_parsed": [["Gil", "A.", ""], ["Segura", "J.", ""], ["Temme", "N. M.", ""]]}, {"id": "1501.01809", "submitter": "Lawrence Mitchell", "authors": "Florian Rathgeber, David A. Ham, Lawrence Mitchell, Michael Lange,\n  Fabio Luporini, Andrew T. T. McRae, Gheorghe-Teodor Bercea, Graham R.\n  Markall, Paul H. J. Kelly", "title": "Firedrake: automating the finite element method by composing\n  abstractions", "comments": "Minor revisions to v2", "journal-ref": "ACM Transactions on Mathematical Software 43(3):24:1--24:27 (2016)", "doi": "10.1145/2998441", "report-no": null, "categories": "cs.MS cs.NA math.NA", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Firedrake is a new tool for automating the numerical solution of partial\ndifferential equations. Firedrake adopts the domain-specific language for the\nfinite element method of the FEniCS project, but with a pure Python\nruntime-only implementation centred on the composition of several existing and\nnew abstractions for particular aspects of scientific computing. The result is\na more complete separation of concerns which eases the incorporation of\nseparate contributions from computer scientists, numerical analysts and\napplication specialists. These contributions may add functionality, or improve\nperformance.\n  Firedrake benefits from automatically applying new optimisations. This\nincludes factorising mixed function spaces, transforming and vectorising inner\nloops, and intrinsically supporting block matrix operations. Importantly,\nFiredrake presents a simple public API for escaping the UFL abstraction. This\nallows users to implement common operations that fall outside pure variational\nformulations, such as flux-limiters.\n", "versions": [{"version": "v1", "created": "Thu, 8 Jan 2015 11:57:05 GMT"}, {"version": "v2", "created": "Fri, 18 Dec 2015 17:33:48 GMT"}, {"version": "v3", "created": "Fri, 1 Jul 2016 13:24:51 GMT"}], "update_date": "2017-01-06", "authors_parsed": [["Rathgeber", "Florian", ""], ["Ham", "David A.", ""], ["Mitchell", "Lawrence", ""], ["Lange", "Michael", ""], ["Luporini", "Fabio", ""], ["McRae", "Andrew T. T.", ""], ["Bercea", "Gheorghe-Teodor", ""], ["Markall", "Graham R.", ""], ["Kelly", "Paul H. J.", ""]]}, {"id": "1501.03341", "submitter": "Nikica Hlupi\\'c", "authors": "Nikica Hlupic and Ivo Beros", "title": "Solving Polynomial Systems by Penetrating Gradient Algorithm Applying\n  Deepest Descent Strategy", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "math.OC cs.MS math.NA", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  An algorithm and associated strategy for solving polynomial systems within\nthe optimization framework is presented. The algorithm and strategy are named,\nrespectively, the penetrating gradient algorithm and the deepest descent\nstrategy. The most prominent feature of penetrating gradient algorithm, after\nwhich it was named, is its ability to see and penetrate through the obstacles\nin error space along the line of search direction and to jump to the global\nminimizer in a single step. The ability to find the deepest point in an\narbitrary direction, no matter how distant the point is and regardless of the\nrelief of error space between the current and the best point, motivates\nmovements in directions in which cost function can be maximally reduced, rather\nthan in directions that seem to be the best locally (like, for instance, the\nsteepest descent, i.e., negative gradient direction). Therefore, the strategy\nis named the deepest descent, in contrast but alluding to the steepest descent.\nPenetrating gradient algorithm is derived and its properties are proven\nmathematically, while features of the deepest descent strategy are shown by\ncomparative simulations. Extensive benchmark tests confirm that the proposed\nalgorithm and strategy jointly form an effective solver of polynomial systems.\nIn addition, further theoretical considerations in Section 5 about solving\nlinear systems by the proposed method reveal a surprising and interesting\nrelation of proposed and Gauss-Seidel method.\n", "versions": [{"version": "v1", "created": "Wed, 14 Jan 2015 13:34:50 GMT"}], "update_date": "2015-01-15", "authors_parsed": [["Hlupic", "Nikica", ""], ["Beros", "Ivo", ""]]}, {"id": "1501.04979", "submitter": "Thomas Goldstein", "authors": "Tom Goldstein, Christoph Studer, Richard Baraniuk", "title": "FASTA: A Generalized Implementation of Forward-Backward Splitting", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.MS cs.NA math.NA", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This is a user manual for the software package FASTA.\n", "versions": [{"version": "v1", "created": "Fri, 16 Jan 2015 01:22:55 GMT"}, {"version": "v2", "created": "Thu, 6 Aug 2015 16:54:50 GMT"}, {"version": "v3", "created": "Wed, 20 Jan 2016 23:51:33 GMT"}], "update_date": "2016-01-22", "authors_parsed": [["Goldstein", "Tom", ""], ["Studer", "Christoph", ""], ["Baraniuk", "Richard", ""]]}, {"id": "1501.05709", "submitter": "Jeremy Kepner", "authors": "Jeremy Kepner, Julian Chaidez, Vijay Gadepally, Hayden Jansen", "title": "Associative Arrays: Unified Mathematics for Spreadsheets, Databases,\n  Matrices, and Graphs", "comments": "4 pages, 6 figures; New England Database Summit 2015", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DB cs.MS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Data processing systems impose multiple views on data as it is processed by\nthe system. These views include spreadsheets, databases, matrices, and graphs.\nThe common theme amongst these views is the need to store and operate on data\nas whole sets instead of as individual data elements. This work describes a\ncommon mathematical representation of these data sets (associative arrays) that\napplies across a wide range of applications and technologies. Associative\narrays unify and simplify these different approaches for representing and\nmanipulating data into common two-dimensional view of data. Specifically,\nassociative arrays (1) reduce the effort required to pass data between steps in\na data processing system, (2) allow steps to be interchanged with full\nconfidence that the results will be unchanged, and (3) make it possible to\nrecognize when steps can be simplified or eliminated. Most database system\nnaturally support associative arrays via their tabular interfaces. The D4M\nimplementation of associative arrays uses this feature to provide a common\ninterface across SQL, NoSQL, and NewSQL databases.\n", "versions": [{"version": "v1", "created": "Fri, 23 Jan 2015 04:16:04 GMT"}], "update_date": "2015-01-26", "authors_parsed": [["Kepner", "Jeremy", ""], ["Chaidez", "Julian", ""], ["Gadepally", "Vijay", ""], ["Jansen", "Hayden", ""]]}, {"id": "1501.06625", "submitter": "Jan Verschelde", "authors": "Jan Verschelde and Xiangcheng Yu", "title": "Accelerating Polynomial Homotopy Continuation on a Graphics Processing\n  Unit with Double Double and Quad Double Arithmetic", "comments": "Accepted for publication in the Proceedings of the 7th International\n  Workshop on Parallel Symbolic Computation (PASCO 2015)", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.MS cs.DC cs.NA math.AG math.NA", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Numerical continuation methods track a solution path defined by a homotopy.\nThe systems we consider are defined by polynomials in several variables with\ncomplex coefficients. For larger dimensions and degrees, the numerical\nconditioning worsens and hardware double precision becomes often insufficient\nto reach the end of the solution path. With double double and quad double\narithmetic, we can solve larger problems that we could not solve with hardware\ndouble arithmetic, but at a higher computational cost. This cost overhead can\nbe compensated by acceleration on a Graphics Processing Unit (GPU). We describe\nour implementation and report on computational results on benchmark polynomial\nsystems.\n", "versions": [{"version": "v1", "created": "Mon, 26 Jan 2015 23:54:20 GMT"}, {"version": "v2", "created": "Thu, 23 Apr 2015 15:55:11 GMT"}, {"version": "v3", "created": "Fri, 12 Jun 2015 15:08:55 GMT"}], "update_date": "2015-06-15", "authors_parsed": [["Verschelde", "Jan", ""], ["Yu", "Xiangcheng", ""]]}, {"id": "1501.07350", "submitter": "Truong Vinh Truong Duy", "authors": "Truong Vinh Truong Duy and Taisuke Ozaki", "title": "Performance Tuning of a Parallel 3-D FFT Package OpenFFT", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.MS cs.DC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The fast Fourier transform (FFT) is a primitive kernel in numerous fields of\nscience and engineering. OpenFFT is an open-source parallel package for 3-D\nFFTs, built on a communication-optimal domain decomposition method for\nachieving minimal volume of communication. In this paper, we analyze and tune\nthe performance of OpenFFT, paying a particular attention to tuning of\ncommunication that dominates the run time of large-scale calculations. We first\nanalyze its performance on different machines for an understanding of the\nbehaviors of the package and machines. Based on the performance analysis, we\ndevelop six communication methods for performing communication with the aim of\ncovering varied calculation scales on a variety of computational platforms.\nOpenFFT is then augmented with an auto-tuning of communication to select the\nbest method in run time depending on their performance. Numerical results\ndemonstrate that the optimized OpenFFT is able to deliver relatively good\nperformance in comparison with other state-of-the-art packages at different\ncomputational scales on a number of parallel machines.\n", "versions": [{"version": "v1", "created": "Thu, 29 Jan 2015 06:12:52 GMT"}, {"version": "v2", "created": "Wed, 26 Aug 2015 06:29:34 GMT"}], "update_date": "2015-08-27", "authors_parsed": [["Duy", "Truong Vinh Truong", ""], ["Ozaki", "Taisuke", ""]]}]