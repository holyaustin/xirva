[{"id": "1212.0520", "submitter": "Wolfgang Mauerer", "authors": "Wolfgang Mauerer, Christopher Portmann and Volkher B. Scholz", "title": "A modular framework for randomness extraction based on Trevisan's\n  construction", "comments": "21 pages, 15 figures. Source code is available under GPLv2+. Comments\n  welcome", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.IT cs.MS math.IT quant-ph", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Informally, an extractor delivers perfect randomness from a source that may\nbe far away from the uniform distribution, yet contains some randomness. This\ntask is a crucial ingredient of any attempt to produce perfectly random\nnumbers---required, for instance, by cryptographic protocols, numerical\nsimulations, or randomised computations. Trevisan's extractor raised\nconsiderable theoretical interest not only because of its data parsimony\ncompared to other constructions, but particularly because it is secure against\nquantum adversaries, making it applicable to quantum key distribution.\n  We discuss a modular, extensible and high-performance implementation of the\nconstruction based on various building blocks that can be flexibly combined to\nsatisfy the requirements of a wide range of scenarios. Besides quantitatively\nanalysing the properties of many combinations in practical settings, we improve\nprevious theoretical proofs, and give explicit results for non-asymptotic\ncases. The self-contained description does not assume familiarity with\nextractors.\n", "versions": [{"version": "v1", "created": "Mon, 3 Dec 2012 20:20:02 GMT"}], "update_date": "2012-12-04", "authors_parsed": [["Mauerer", "Wolfgang", ""], ["Portmann", "Christopher", ""], ["Scholz", "Volkher B.", ""]]}, {"id": "1212.2350", "submitter": "Frederic Blanqui", "authors": "Fr\\'ed\\'eric Blanqui (LIAMA, LCS), Kim Quyen Ly (LIAMA, LCS)", "title": "Automated verification of termination certificates", "comments": null, "journal-ref": "15th National Symposium of Selected ICT Problems (2012)", "doi": null, "report-no": null, "categories": "cs.LO cs.MS cs.SE", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In order to increase user confidence, many automated theorem provers provide\ncertificates that can be independently verified. In this paper, we report on\nour progress in developing a standalone tool for checking the correctness of\ncertificates for the termination of term rewrite systems, and formally proving\nits correctness in the proof assistant Coq. To this end, we use the extraction\nmechanism of Coq and the library on rewriting theory and termination called\nCoLoR.\n", "versions": [{"version": "v1", "created": "Tue, 11 Dec 2012 09:24:46 GMT"}], "update_date": "2012-12-12", "authors_parsed": [["Blanqui", "Fr\u00e9d\u00e9ric", "", "LIAMA, LCS"], ["Ly", "Kim Quyen", "", "LIAMA, LCS"]]}, {"id": "1212.6326", "submitter": "Karsten Ahnert", "authors": "Denis Demidov, Karsten Ahnert, Karl Rupp, Peter Gottschling", "title": "Programming CUDA and OpenCL: A Case Study Using Modern C++ Libraries", "comments": "21 pages, 4 figures, submitted to SIAM Journal of Scientific\n  Computing and accepted", "journal-ref": null, "doi": "10.1137/120903683", "report-no": null, "categories": "cs.MS cs.DC physics.comp-ph", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We present a comparison of several modern C++ libraries providing high-level\ninterfaces for programming multi- and many-core architectures on top of CUDA or\nOpenCL. The comparison focuses on the solution of ordinary differential\nequations and is based on odeint, a framework for the solution of systems of\nordinary differential equations. Odeint is designed in a very flexible way and\nmay be easily adapted for effective use of libraries such as Thrust, MTL4,\nVexCL, or ViennaCL, using CUDA or OpenCL technologies. We found that CUDA and\nOpenCL work equally well for problems of large sizes, while OpenCL has higher\noverhead for smaller problems. Furthermore, we show that modern high-level\nlibraries allow to effectively use the computational resources of many-core\nGPUs or multi-core CPUs without much knowledge of the underlying technologies.\n", "versions": [{"version": "v1", "created": "Thu, 27 Dec 2012 08:56:00 GMT"}, {"version": "v2", "created": "Fri, 26 Apr 2013 07:50:28 GMT"}], "update_date": "2017-10-13", "authors_parsed": [["Demidov", "Denis", ""], ["Ahnert", "Karsten", ""], ["Rupp", "Karl", ""], ["Gottschling", "Peter", ""]]}]