[{"id": "2106.01140", "submitter": "Georgy Meshcheryakov", "authors": "Georgy Meshcheryakov, Anna A. Igolkina, Maria G. Samsonova", "title": "semopy 2: A Structural Equation Modeling Package with Random Effects in\n  Python", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "stat.AP cs.MS", "license": "http://creativecommons.org/licenses/by/4.0/", "abstract": "  Structural Equation Modeling (SEM) is an umbrella term that includes numerous\nmultivariate statistical techniques that are employed throughout a plethora of\nresearch areas, ranging from social to natural sciences. Until recently, SEM\nsoftware was either commercial or restricted to niche languages, and the lack\nof SEM packages compatible with more mainstream programming languages was dire.\nTo combat that, we introduced a Python package semopy 1 that surpassed other\nstate-of-the-art software in terms of performance and estimation accuracy. Yet,\nit was lacking in functionality and its usage was burdened with unnecessary\nboilerplate code. Here, we introduce a complete overhaul of semopy that\nimproves upon the previous results and comes with lots of new capabilities.\nFurthermore, we propose a novel SEM model that combines in itself a notion of\nrandom effects from linear mixed models (LMMs) to model numerous phenomena,\nsuch as spatial data, time series or population stratification in genetics.\n", "versions": [{"version": "v1", "created": "Wed, 2 Jun 2021 13:18:03 GMT"}, {"version": "v2", "created": "Thu, 3 Jun 2021 10:20:12 GMT"}, {"version": "v3", "created": "Wed, 9 Jun 2021 17:35:07 GMT"}], "update_date": "2021-06-10", "authors_parsed": [["Meshcheryakov", "Georgy", ""], ["Igolkina", "Anna A.", ""], ["Samsonova", "Maria G.", ""]]}, {"id": "2106.08775", "submitter": "Cameron Wolfe", "authors": "Junhyung Lyle Kim, Jose Antonio Lara Benitez, Mohammad Taha Toghani,\n  Cameron Wolfe, Zhiwei Zhang, Anastasios Kyrillidis", "title": "Momentum-inspired Low-Rank Coordinate Descent for Diagonally Constrained\n  SDPs", "comments": "10 pages, 8 figures, preprint under review", "journal-ref": null, "doi": null, "report-no": null, "categories": "math.OC cs.IT cs.LG cs.MS math.IT stat.ML", "license": "http://creativecommons.org/licenses/by/4.0/", "abstract": "  We present a novel, practical, and provable approach for solving diagonally\nconstrained semi-definite programming (SDP) problems at scale using accelerated\nnon-convex programming. Our algorithm non-trivially combines acceleration\nmotions from convex optimization with coordinate power iteration and matrix\nfactorization techniques. The algorithm is extremely simple to implement, and\nadds only a single extra hyperparameter -- momentum. We prove that our method\nadmits local linear convergence in the neighborhood of the optimum and always\nconverges to a first-order critical point. Experimentally, we showcase the\nmerits of our method on three major application domains: MaxCut, MaxSAT, and\nMIMO signal detection. In all cases, our methodology provides significant\nspeedups over non-convex and convex SDP solvers -- 5X faster than\nstate-of-the-art non-convex solvers, and 9 to 10^3 X faster than convex SDP\nsolvers -- with comparable or improved solution quality.\n", "versions": [{"version": "v1", "created": "Wed, 16 Jun 2021 13:35:40 GMT"}, {"version": "v2", "created": "Sat, 3 Jul 2021 00:13:34 GMT"}], "update_date": "2021-07-06", "authors_parsed": [["Kim", "Junhyung Lyle", ""], ["Benitez", "Jose Antonio Lara", ""], ["Toghani", "Mohammad Taha", ""], ["Wolfe", "Cameron", ""], ["Zhang", "Zhiwei", ""], ["Kyrillidis", "Anastasios", ""]]}, {"id": "2106.08777", "submitter": "Ronny Bergmann", "authors": "Seth D. Axen and Mateusz Baran and Ronny Bergmann and Krzysztof Rzecki", "title": "Manifolds.jl: An Extensible Julia Framework for Data Analysis on\n  Manifolds", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.MS", "license": "http://creativecommons.org/licenses/by/4.0/", "abstract": "  For data given on a nonlinear space, like angles, symmetric positive\nmatrices, the sphere, or the hyperbolic space, there is often enough structure\nto form a Riemannian manifold. We present the Julia package Manifolds.jl,\nproviding a fast and easy to use library of Riemannian manifolds and Lie\ngroups. We introduce a common interface, available in ManifoldsBase.jl, with\nwhich new manifolds, applications, and algorithms can be implemented. We\ndemonstrate the utility of Manifolds.jl using B\\'ezier splines, an optimization\ntask on manifolds, and a principal component analysis on nonlinear data. In a\nbenchmark, Manifolds.jl outperforms existing packages in Matlab or Python by\nseveral orders of magnitude and is about twice as fast as a comparable package\nimplemented in C++.\n", "versions": [{"version": "v1", "created": "Wed, 16 Jun 2021 13:36:17 GMT"}], "update_date": "2021-06-17", "authors_parsed": [["Axen", "Seth D.", ""], ["Baran", "Mateusz", ""], ["Bergmann", "Ronny", ""], ["Rzecki", "Krzysztof", ""]]}, {"id": "2106.09877", "submitter": "Qiao Chen", "authors": "Qiao Chen, Xiangmin Jiao", "title": "HIFIR: Hybrid Incomplete Factorization with Iterative Refinement for\n  Preconditioning Ill-conditioned and Singular Systems", "comments": "Submitted to ACM Transactions on Mathematical Software (TOMS)", "journal-ref": null, "doi": null, "report-no": null, "categories": "math.NA cs.MS cs.NA", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We introduce a software package called HIFIR for preconditioning sparse,\nunsymmetric, ill-conditioned, and potentially singular systems. HIFIR computes\na hybrid incomplete factorization, which combines multilevel incomplete LU\nfactorization with a truncated, rank-revealing QR factorization on the final\nSchur complement. This novel hybridization is based on the new theory of\napproximate generalized inverse and $\\epsilon$-accuracy. It enables\nnear-optimal preconditioners for consistent systems and enables flexible GMRES\nto solve inconsistent systems when coupled with iterative refinement. In this\npaper, we focus on some practical algorithmic and software issues of HIFIR. In\nparticular, we introduce a new inverse-based rook pivoting into ILU, which\nimproves the robustness and the overall efficiency for some ill-conditioned\nsystems by significantly reducing the size of the final Schur complement for\nsome systems. We also describe the software design of HIFIR in terms of its\nefficient data structures for supporting rook pivoting in a multilevel setting,\nits template-based generic programming interfaces for mixed-precision real and\ncomplex values in C++, and its user-friendly high-level interfaces in MATLAB\nand Python. We demonstrate the effectiveness of HIFIR for ill-conditioned or\nsingular systems arising from several applications, including the Helmholtz\nequation, linear elasticity, stationary incompressible Navier--Stokes\nequations, and time-dependent advection-diffusion equation.\n", "versions": [{"version": "v1", "created": "Fri, 18 Jun 2021 02:30:39 GMT"}], "update_date": "2021-06-21", "authors_parsed": [["Chen", "Qiao", ""], ["Jiao", "Xiangmin", ""]]}, {"id": "2106.11594", "submitter": "Stephan Steinmann", "authors": "Ruben Staub (LC), Stephan N. Steinmann (LC)", "title": "Efficient recursive least squares solver for rank-deficient matrices", "comments": null, "journal-ref": "Applied Mathematics and Computation, Elsevier, 2021, 399,\n  pp.125996", "doi": "10.1016/j.amc.2021.125996", "report-no": null, "categories": "cs.MS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Updating a linear least squares solution can be critical for near real-time\nsignalprocessing applications. The Greville algorithm proposes a simple formula\nfor updating the pseudoinverse of a matrix A $\\in$ R nxm with rank r. In this\npaper, we explicitly derive a similar formula by maintaining a general rank\nfactorization, which we call rank-Greville. Based on this formula, we\nimplemented a recursive least squares algorithm exploiting the rank-deficiency\nof A, achieving the update of the minimum-norm least-squares solution in O(mr)\noperations and, therefore, solving the linear least-squares problem from\nscratch in O(nmr) operations. We empirically confirmed that this algorithm\ndisplays a better asymptotic time complexity than LAPACK solvers for\nrank-deficient matrices. The numerical stability of rank-Greville was found to\nbe comparable to Cholesky-based solvers. Nonetheless, our implementation\nsupports exact numerical representations of rationals, due to its remarkable\nalgebraic simplicity.\n", "versions": [{"version": "v1", "created": "Tue, 22 Jun 2021 07:59:35 GMT"}], "update_date": "2021-06-23", "authors_parsed": [["Staub", "Ruben", "", "LC"], ["Steinmann", "Stephan N.", "", "LC"]]}, {"id": "2106.13402", "submitter": "Chao Chen", "authors": "Nathan Heavner, Chao Chen, Abinand Gopal, Per-Gunnar Martinsson", "title": "Efficient algorithms for computing rank-revealing factorizations on a\n  GPU", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "math.NA cs.MS cs.NA", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Standard rank-revealing factorizations such as the singular value\ndecomposition and column pivoted QR factorization are challenging to implement\nefficiently on a GPU. A major difficulty in this regard is the inability of\nstandard algorithms to cast most operations in terms of the Level-3 BLAS. This\npaper presents two alternative algorithms for computing a rank-revealing\nfactorization of the form $A = U T V^*$, where $U$ and $V$ are orthogonal and\n$T$ is triangular. Both algorithms use randomized projection techniques to cast\nmost of the flops in terms of matrix-matrix multiplication, which is\nexceptionally efficient on the GPU. Numerical experiments illustrate that these\nalgorithms achieve an order of magnitude acceleration over finely tuned GPU\nimplementations of the SVD while providing low-rank approximation errors close\nto that of the SVD.\n", "versions": [{"version": "v1", "created": "Fri, 25 Jun 2021 03:19:58 GMT"}], "update_date": "2021-06-28", "authors_parsed": [["Heavner", "Nathan", ""], ["Chen", "Chao", ""], ["Gopal", "Abinand", ""], ["Martinsson", "Per-Gunnar", ""]]}, {"id": "2106.13879", "submitter": "Hong Zhang", "authors": "Hong Zhang and Emil Constantinescu", "title": "Optimal Checkpointing for Adjoint Multistage Time-Stepping Schemes", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.MS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We consider checkpointing strategies that minimize the number of\nrecomputations needed when performing discrete adjoint computations using\nmultistage time-stepping schemes, which requires computing several substeps\nwithin one complete time step. In this case we propose two algorithms that can\ngenerate optimal checkpointing schedules under weak assumptions. The first is\nan extension of the seminal Revolve algorithm adapted to multistage schemes.\nThe second algorithm, named CAMS, is developed based on dynamic programming,\nand it requires the least number of recomputations when compared with other\nalgorithms. The CAMS algorithm is made publicly available in a library with\nbindings to C and Python. Numerical results illustrate that the proposed\nalgorithms can deliver up to two times the speedup compared with that of\nclassical Revolve. Moreover, we discuss a tailored implementation of an adjoint\ncomputation that is arguably better suited for mature scientific computing\nlibraries by avoiding the central control assumed by the original checkpointing\nstrategy. The proposed algorithms have been adopted by the PETSc TSAdjoint\nlibrary. Their performance has been demonstrated with a large-scale\nPDE-constrained optimization problem on a leadership-class supercomputer.\n", "versions": [{"version": "v1", "created": "Fri, 25 Jun 2021 20:41:50 GMT"}], "update_date": "2021-06-29", "authors_parsed": [["Zhang", "Hong", ""], ["Constantinescu", "Emil", ""]]}, {"id": "2106.13909", "submitter": "Slaven Peles", "authors": "Kasia Swirydowicz, Eric Darve, Wesley Jones, Jonathan Maack, Shaked\n  Regev, Michael A. Saunders, Stephen J. Thomas, Slaven Peles", "title": "Linear solvers for power grid optimization problems: a review of\n  GPU-accelerated linear solvers", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "math.NA cs.MS cs.NA", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The linear equations that arise in interior methods for constrained\noptimization are sparse symmetric indefinite and become extremely\nill-conditioned as the interior method converges. These linear systems present\na challenge for existing solver frameworks based on sparse LU or LDL^T\ndecompositions. We benchmark five well known direct linear solver packages\nusing matrices extracted from power grid optimization problems. The achieved\nsolution accuracy varies greatly among the packages. None of the tested\npackages delivers significant GPU acceleration for our test cases.\n", "versions": [{"version": "v1", "created": "Fri, 25 Jun 2021 23:12:06 GMT"}], "update_date": "2021-06-29", "authors_parsed": [["Swirydowicz", "Kasia", ""], ["Darve", "Eric", ""], ["Jones", "Wesley", ""], ["Maack", "Jonathan", ""], ["Regev", "Shaked", ""], ["Saunders", "Michael A.", ""], ["Thomas", "Stephen J.", ""], ["Peles", "Slaven", ""]]}, {"id": "2106.14045", "submitter": "Ning Ning", "authors": "Ning Ning and Jinwen Qiu", "title": "The mbsts package: Multivariate Bayesian Structural Time Series Models\n  in R", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "stat.ME cs.LG cs.MS stat.AP stat.CO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The multivariate Bayesian structural time series (MBSTS) model\n\\citep{qiu2018multivariate,Jammalamadaka2019Predicting} as a generalized\nversion of many structural time series models, deals with inference and\nprediction for multiple correlated time series, where one also has the choice\nof using a different candidate pool of contemporaneous predictors for each\ntarget series. The MBSTS model has wide applications and is ideal for feature\nselection, time series forecasting, nowcasting, inferring causal impact, and\nothers. This paper demonstrates how to use the R package \\pkg{mbsts} for MBSTS\nmodeling, establishing a bridge between user-friendly and developer-friendly\nfunctions in package and the corresponding methodology. A simulated dataset and\nobject-oriented functions in the \\pkg{mbsts} package are explained in the way\nthat enables users to flexibly add or deduct some components, as well as to\nsimplify or complicate some settings.\n", "versions": [{"version": "v1", "created": "Sat, 26 Jun 2021 15:28:38 GMT"}], "update_date": "2021-06-29", "authors_parsed": [["Ning", "Ning", ""], ["Qiu", "Jinwen", ""]]}, {"id": "2106.14153", "submitter": "Hiromi Ishii", "authors": "Hiromi Ishii", "title": "Automatic Differentiation With Higher Infinitesimals, or Computational\n  Smooth Infinitesimal Analysis in Weil Algebra", "comments": "to appear in Computer Algebra in Scientific Computing 2021", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.SC cs.MS cs.NA math.CT math.DG math.NA", "license": "http://creativecommons.org/licenses/by/4.0/", "abstract": "  We propose an algorithm to compute the $C^\\infty$-ring structure of arbitrary\nWeil algebra. It allows us to do some analysis with higher infinitesimals\nnumerically and symbolically. To that end, we first give a brief description of\nthe (Forward-mode) automatic differentiation (AD) in terms of $C^\\infty$-rings.\nThe notion of a $C^\\infty$-ring was introduced by Lawvere and used as the\nfundamental building block of smooth infinitesimal analysis and synthetic\ndifferential geometry. We argue that interpreting AD in terms of\n$C^\\infty$-rings gives us a unifying theoretical framework and modular ways to\nexpress multivariate partial derivatives. In particular, we can \"package\"\nhigher-order Forward-mode AD as a Weil algebra, and take tensor products to\ncompose them to achieve multivariate higher-order AD. The algorithms in the\npresent paper can also be used for a pedagogical purpose in learning and\nstudying smooth infinitesimal analysis as well.\n", "versions": [{"version": "v1", "created": "Sun, 27 Jun 2021 06:17:26 GMT"}, {"version": "v2", "created": "Mon, 5 Jul 2021 03:22:50 GMT"}], "update_date": "2021-07-06", "authors_parsed": [["Ishii", "Hiromi", ""]]}, {"id": "2106.14995", "submitter": "Youngdae Kim", "authors": "Youngdae Kim and Fran\\c{c}ois Pacaud and Kibaek Kim and Mihai Anitescu", "title": "Leveraging GPU batching for scalable nonlinear programming through\n  massive Lagrangian decomposition", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "math.OC cs.DC cs.MS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We present the implementation of a trust-region Newton algorithm ExaTron for\nbound-constrained nonlinear programming problems, fully running on multiple\nGPUs. Without data transfers between CPU and GPU, our implementation has\nachieved the elimination of a major performance bottleneck under a memory-bound\nsituation, particularly when solving many small problems in batch. We discuss\nthe design principles and implementation details for our kernel function and\ncore operations. Different design choices are justified by numerical\nexperiments. By using the application of distributed control of alternating\ncurrent optimal power flow, where a large problem is decomposed into many\nsmaller nonlinear programs using a Lagrangian approach, we demonstrate\ncomputational performance of ExaTron on the Summit supercomputer at Oak\nRidgeNational Laboratory. Our numerical results show the linear scaling with\nrespect to the batch size and the number of GPUs and more than 35 times speedup\non 6 GPUs than on 40 CPUs available on a single node.\n", "versions": [{"version": "v1", "created": "Mon, 28 Jun 2021 21:39:38 GMT"}], "update_date": "2021-06-30", "authors_parsed": [["Kim", "Youngdae", ""], ["Pacaud", "Fran\u00e7ois", ""], ["Kim", "Kibaek", ""], ["Anitescu", "Mihai", ""]]}, {"id": "2106.15066", "submitter": "Ilia Ilmer", "authors": "Ilia Ilmer and Alexey Ovchinnikov and Gleb Pogudin", "title": "Web-based Structural Identifiability Analyzer", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.MS cs.SC cs.SY eess.SY q-bio.QM", "license": "http://creativecommons.org/licenses/by-sa/4.0/", "abstract": "  Parameter identifiability describes whether, for a given differential model,\none can determine parameter values from model equations. Knowing global or\nlocal identifiability properties allows construction of better practical\nexperiments to identify parameters from experimental data. In this work, we\npresent a web-based software tool that allows to answer specific\nidentifiability queries. Concretely, our toolbox can determine identifiability\nof individual parameters of the model and also provide all functions of\nparameters that are identifiable (also called identifiable combinations) from\nsingle or multiple experiments. The program is freely available at\nhttps://maple.cloud/app/6509768948056064.\n", "versions": [{"version": "v1", "created": "Tue, 29 Jun 2021 02:57:34 GMT"}], "update_date": "2021-07-02", "authors_parsed": [["Ilmer", "Ilia", ""], ["Ovchinnikov", "Alexey", ""], ["Pogudin", "Gleb", ""]]}]