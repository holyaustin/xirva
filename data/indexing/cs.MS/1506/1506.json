[{"id": "1506.01598", "submitter": "Ghislain Fourny", "authors": "Ghislain Fourny", "title": "decimalInfinite: All Decimals In Bits, No Loss, Same Order, Simple", "comments": "Technical report, 9 pages", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.MS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This paper introduces a binary encoding that supports arbitrarily large,\nsmall and precise decimals. It completely preserves information and order. It\ndoes not rely on any arbitrary use-case-based choice of calibration and is\nreadily implementable and usable, as is. Finally, it is also simple to explain\nand understand.\n", "versions": [{"version": "v1", "created": "Thu, 4 Jun 2015 14:09:47 GMT"}, {"version": "v2", "created": "Wed, 17 Jun 2015 12:01:04 GMT"}], "update_date": "2015-06-18", "authors_parsed": [["Fourny", "Ghislain", ""]]}, {"id": "1506.02618", "submitter": "Jan Verschelde", "authors": "Nathan Bliss and Jeff Sommars and Jan Verschelde and Xiangcheng Yu", "title": "Solving Polynomial Systems in the Cloud with Polynomial Homotopy\n  Continuation", "comments": "Accepted for publication in the Proceedings of CASC 2015", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.MS cs.NA cs.SC math.AG math.NA", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Polynomial systems occur in many fields of science and engineering.\nPolynomial homotopy continuation methods apply symbolic-numeric algorithms to\nsolve polynomial systems. We describe the design and implementation of our web\ninterface and reflect on the application of polynomial homotopy continuation\nmethods to solve polynomial systems in the cloud. Via the graph isomorphism\nproblem we organize and classify the polynomial systems we solved. The\nclassification with the canonical form of a graph identifies newly submitted\nsystems with systems that have already been solved.\n", "versions": [{"version": "v1", "created": "Mon, 8 Jun 2015 19:05:49 GMT"}], "update_date": "2015-06-09", "authors_parsed": [["Bliss", "Nathan", ""], ["Sommars", "Jeff", ""], ["Verschelde", "Jan", ""], ["Yu", "Xiangcheng", ""]]}, {"id": "1506.03726", "submitter": "Bruno Grenet", "authors": "Bruno Grenet", "title": "Lacunaryx: Computing bounded-degree factors of lacunary polynomials", "comments": "6 pages", "journal-ref": "ACM Communications in Computer Algebra 49(4), 2015", "doi": "10.1145/2893803.2893807", "report-no": null, "categories": "cs.MS cs.SC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In this paper, we report on an implementation in the free software Mathemagix\nof lacunary factorization algorithms, distributed as a library called\nLacunaryx. These algorithms take as input a polynomial in sparse\nrepresentation, that is as a list of nonzero monomials, and an integer $d$, and\ncompute its irreducible degree-$\\le d$ factors. The complexity of these\nalgorithms is polynomial in the sparse size of the input polynomial and $d$.\n", "versions": [{"version": "v1", "created": "Thu, 11 Jun 2015 16:08:54 GMT"}, {"version": "v2", "created": "Thu, 18 Feb 2016 16:02:44 GMT"}], "update_date": "2016-02-19", "authors_parsed": [["Grenet", "Bruno", ""]]}, {"id": "1506.04462", "submitter": "Ross Adelman", "authors": "Ross Adelman and Nail A. Gumerov and Ramani Duraiswami", "title": "Accurate computation of Galerkin double surface integrals in the 3-D\n  boundary element method", "comments": null, "journal-ref": null, "doi": "10.1109/TAP.2016.2546951", "report-no": null, "categories": "physics.comp-ph cs.MS cs.NA", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Many boundary element integral equation kernels are based on the Green's\nfunctions of the Laplace and Helmholtz equations in three dimensions. These\ninclude, for example, the Laplace, Helmholtz, elasticity, Stokes, and Maxwell's\nequations. Integral equation formulations lead to more compact, but dense\nlinear systems. These dense systems are often solved iteratively via Krylov\nsubspace methods, which may be accelerated via the fast multipole method. There\nare advantages to Galerkin formulations for such integral equations, as they\ntreat problems associated with kernel singularity, and lead to symmetric and\nbetter conditioned matrices. However, the Galerkin method requires each entry\nin the system matrix to be created via the computation of a double surface\nintegral over one or more pairs of triangles. There are a number of\nsemi-analytical methods to treat these integrals, which all have some issues,\nand are discussed in this paper. We present novel methods to compute all the\nintegrals that arise in Galerkin formulations involving kernels based on the\nLaplace and Helmholtz Green's functions to any specified accuracy. Integrals\ninvolving completely geometrically separated triangles are non-singular and are\ncomputed using a technique based on spherical harmonics and multipole\nexpansions and translations, which results in the integration of polynomial\nfunctions over the triangles. Integrals involving cases where the triangles\nhave common vertices, edges, or are coincident are treated via scaling and\nsymmetry arguments, combined with automatic recursive geometric decomposition\nof the integrals. Example results are presented, and the developed software is\navailable as open source.\n", "versions": [{"version": "v1", "created": "Mon, 15 Jun 2015 02:49:10 GMT"}], "update_date": "2016-08-24", "authors_parsed": [["Adelman", "Ross", ""], ["Gumerov", "Nail A.", ""], ["Duraiswami", "Ramani", ""]]}, {"id": "1506.04463", "submitter": "Eric Polizzi", "authors": "James Kestyn, Eric Polizzi, Ping Tak Peter Tang", "title": "FEAST Eigensolver for non-Hermitian Problems", "comments": "22 pages, 8 figures, 4 tables", "journal-ref": null, "doi": null, "report-no": null, "categories": "math.NA cs.MS cs.NA physics.comp-ph", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  A detailed new upgrade of the FEAST eigensolver targeting non-Hermitian\neigenvalue problems is presented and thoroughly discussed. It aims at\nbroadening the class of eigenproblems that can be addressed within the\nframework of the FEAST algorithm. The algorithm is ideally suited for computing\nselected interior eigenvalues and their associated right/left bi-orthogonal\neigenvectors,located within a subset of the complex plane. It combines subspace\niteration with efficient contour integration techniques that approximate the\nleft and right spectral projectors. We discuss the various algorithmic choices\nthat have been made to improve the stability and usability of the new\nnon-Hermitian eigensolver. The latter retains the convergence property and\nmulti-level parallelism of Hermitian FEAST, making it a valuable new software\ntool for the scientific community.\n", "versions": [{"version": "v1", "created": "Mon, 15 Jun 2015 02:55:29 GMT"}], "update_date": "2015-06-16", "authors_parsed": [["Kestyn", "James", ""], ["Polizzi", "Eric", ""], ["Tang", "Ping Tak Peter", ""]]}, {"id": "1506.04496", "submitter": "Tobias Weinzierl", "authors": "Tobias Weinzierl", "title": "The Peano software - parallel, automaton-based, dynamically adaptive\n  grid traversals", "comments": null, "journal-ref": "ACM Transactions on Mathematical Software, 2019", "doi": "10.1145/3319797", "report-no": null, "categories": "cs.MS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We discuss the design decisions, design alternatives and rationale behind the\nthird generation of Peano, a framework for dynamically adaptive Cartesian\nmeshes derived from spacetrees. Peano ties the mesh traversal to the mesh\nstorage and supports only one element-wise traversal order resulting from\nspace-filling curves. The user is not free to choose a traversal order herself.\nThe traversal can exploit regular grid subregions and shared memory as well as\ndistributed memory systems with almost no modifications to a serial application\ncode. We formalize the software design by means of two interacting\nautomata---one automaton for the multiscale grid traversal and one for the\napplication-specific algorithmic steps. This yields a callback-based\nprogramming paradigm. We further sketch the supported application types and the\ntwo data storage schemes realized, before we detail high-performance computing\naspects and lessons learned. Special emphasis is put on observations regarding\nthe used programming idioms and algorithmic concepts. This transforms our\nreport from a \"one way to implement things\" code description into a generic\ndiscussion and summary of some alternatives, rationale and design decisions to\nbe made for any tree-based adaptive mesh refinement software.\n", "versions": [{"version": "v1", "created": "Mon, 15 Jun 2015 07:33:41 GMT"}, {"version": "v2", "created": "Thu, 2 Mar 2017 21:22:35 GMT"}, {"version": "v3", "created": "Fri, 10 Mar 2017 17:24:38 GMT"}, {"version": "v4", "created": "Sat, 12 Aug 2017 14:06:25 GMT"}, {"version": "v5", "created": "Fri, 6 Jul 2018 16:56:22 GMT"}, {"version": "v6", "created": "Sun, 2 Dec 2018 15:58:43 GMT"}], "update_date": "2019-05-31", "authors_parsed": [["Weinzierl", "Tobias", ""]]}, {"id": "1506.04776", "submitter": "Jeff Heaton", "authors": "Jeff Heaton", "title": "Encog: Library of Interchangeable Machine Learning Models for Java and\n  C#", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.MS cs.LG", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This paper introduces the Encog library for Java and C#, a scalable,\nadaptable, multiplatform machine learning framework that was 1st released in\n2008. Encog allows a variety of machine learning models to be applied to\ndatasets using regression, classification, and clustering. Various supported\nmachine learning models can be used interchangeably with minimal recoding.\nEncog uses efficient multithreaded code to reduce training time by exploiting\nmodern multicore processors. The current version of Encog can be downloaded\nfrom http://www.encog.org.\n", "versions": [{"version": "v1", "created": "Mon, 15 Jun 2015 21:20:06 GMT"}], "update_date": "2015-06-17", "authors_parsed": [["Heaton", "Jeff", ""]]}, {"id": "1506.04802", "submitter": "Yao Li", "authors": "Yao Li, Lili Hu", "title": "A fast exact simulation method for a class of Markov jump processes", "comments": "The reviewers' comments are addressed in the new version", "journal-ref": null, "doi": null, "report-no": null, "categories": "math.NA cs.MS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  A new method of the stochastic simulation algorithm (SSA), named the\nHashing-Leaping method (HLM), for exact simulations of a class of Markov jump\nprocesses, is presented in this paper. The HLM has a conditional constant\ncomputational cost per event, which is independent of the number of exponential\nclocks in the Markov process. The main idea of the HLM is to repeatedly\nimplement a hash-table-like bucket sort algorithm for all times of occurrence\ncovered by a time step with length $\\tau$. This paper serves as an introduction\nto this new SSA method. We introduce the method, demonstrate its\nimplementation, analyze its properties, and compare its performance with three\nother commonly used SSA methods in four examples. Our performance tests and CPU\noperation statistics show certain advantage of the HLM for large scale\nproblems.\n", "versions": [{"version": "v1", "created": "Tue, 16 Jun 2015 00:10:16 GMT"}, {"version": "v2", "created": "Thu, 22 Oct 2015 22:09:30 GMT"}], "update_date": "2015-10-26", "authors_parsed": [["Li", "Yao", ""], ["Hu", "Lili", ""]]}, {"id": "1506.05605", "submitter": "Enrico Tassi", "authors": "Bruno Barras, Carst Tankink (SPECFUN), Enrico Tassi (MARELLE)", "title": "Asynchronous processing of Coq documents: from the kernel up to the user\n  interface", "comments": "in Proceedings of ITP, Aug 2015, Nanjing, China", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO cs.MS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The work described in this paper improves the reactivity of the Coq system by\ncompletely redesigning the way it processes a formal document. By subdividing\nsuch work into independent tasks the system can give precedence to the ones of\nimmediate interest for the user and postpones the others. On the user side, a\nmodern interface based on the PIDE middleware aggregates and present in a\nconsistent way the output of the prover. Finally postponed tasks are processed\nexploiting modern, parallel, hardware to offer better scalability.\n", "versions": [{"version": "v1", "created": "Thu, 18 Jun 2015 09:47:41 GMT"}], "update_date": "2015-06-19", "authors_parsed": [["Barras", "Bruno", "", "SPECFUN"], ["Tankink", "Carst", "", "SPECFUN"], ["Tassi", "Enrico", "", "MARELLE"]]}, {"id": "1506.06102", "submitter": "Paul Bauman T.", "authors": "Paul T. Bauman, Roy H. Stogner", "title": "GRINS: A Multiphysics Framework Based on the libMesh Finite Element\n  Library", "comments": "Submitted to SISC CSE Special Issue", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.MS cs.CE", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The progression of scientific computing resources has enabled the numerical\napproximation of mathematical models describing complex physical phenomena. A\nsignificant portion of researcher time is typically dedicated to the\ndevelopment of software to compute the numerical solutions. This work describes\na flexible C++ software framework, built on the libMesh finite element library,\ndesigned to alleviate developer burden and provide easy access to modern\ncomputational algorithms, including quantity-of-interest-driven parallel\nadaptive mesh refinement on unstructured grids and adjoint-based sensitivities.\nOther software environments are highlighted and the current work motivated; in\nparticular, the present work is an attempt to balance software infrastructure\nand user flexibility. The applicable class of problems and design of the\nsoftware components is discussed in detail. Several examples demonstrate the\neffectiveness of the design, including applications that incorporate\nuncertainty. Current and planned developments are discussed.\n", "versions": [{"version": "v1", "created": "Fri, 19 Jun 2015 18:04:01 GMT"}], "update_date": "2015-06-22", "authors_parsed": [["Bauman", "Paul T.", ""], ["Stogner", "Roy H.", ""]]}, {"id": "1506.06185", "submitter": "Huber Markus", "authors": "Markus Huber, Bj\\\"orn Gmeiner, Ulrich R\\\"ude, Barbara Wohlmuth", "title": "Resilience for Multigrid Software at the Extreme Scale", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.MS cs.NA", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Fault tolerant algorithms for the numerical approximation of elliptic partial\ndifferential equations on modern supercomputers play a more and more important\nrole in the future design of exa-scale enabled iterative solvers. Here, we\ncombine domain partitioning with highly scalable geometric multigrid schemes to\nobtain fast and fault-robust solvers in three dimensions. The recovery strategy\nis based on a hierarchical hybrid concept where the values on lower dimensional\nprimitives such as faces are stored redundantly and thus can be recovered\neasily in case of a failure. The lost volume unknowns in the faulty region are\nre-computed approximately with multigrid cycles by solving a local Dirichlet\nproblem on the faulty subdomain. Different strategies are compared and\nevaluated with respect to performance, computational cost, and speed up.\nEspecially effective are strategies in which the local recovery in the faulty\nregion is executed in parallel with global solves and when the local recovery\nis additionally accelerated. This results in an asynchronous multigrid\niteration that can fully compensate faults. Excellent parallel performance on a\ncurrent peta-scale system is demonstrated.\n", "versions": [{"version": "v1", "created": "Sat, 20 Jun 2015 00:03:16 GMT"}], "update_date": "2015-06-23", "authors_parsed": [["Huber", "Markus", ""], ["Gmeiner", "Bj\u00f6rn", ""], ["R\u00fcde", "Ulrich", ""], ["Wohlmuth", "Barbara", ""]]}, {"id": "1506.06194", "submitter": "Matthew Knepley", "authors": "Matthew G. Knepley and Michael Lange and Gerard J. Gorman", "title": "Unstructured Overlapping Mesh Distribution in Parallel", "comments": "14 pages, 6 figures, submitted to TOMS", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.MS cs.DC math.NA", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We present a simple mathematical framework and API for parallel mesh and data\ndistribution, load balancing, and overlap generation. It relies on viewing the\nmesh as a Hasse diagram, abstracting away information such as cell shape,\ndimension, and coordinates. The high level of abstraction makes our interface\nboth concise and powerful, as the same algorithm applies to any representable\nmesh, such as hybrid meshes, meshes embedded in higher dimension, and\noverlapped meshes in parallel. We present evidence, both theoretical and\nexperimental, that the algorithms are scalable and efficient. A working\nimplementation can be found in the latest release of the PETSc libraries.\n", "versions": [{"version": "v1", "created": "Sat, 20 Jun 2015 02:25:14 GMT"}], "update_date": "2015-06-23", "authors_parsed": [["Knepley", "Matthew G.", ""], ["Lange", "Michael", ""], ["Gorman", "Gerard J.", ""]]}, {"id": "1506.06704", "submitter": "Vladimir Bakhrushin", "authors": "Vladimir Bakhrushin", "title": "Software realization of the complex spectra analysis algorithm in R", "comments": null, "journal-ref": "Bakhrushin, V. (2015) \"Software realization of the complex spectra\n  analysis algorithm in R\" [\"Programmnaya realizatsiya algoritma analiza\n  slozhnyih spektrov na yazyike R\"], Sistemni tehnologiyi, No 2 (97), pp. 3 - 7", "doi": null, "report-no": null, "categories": "cs.MS physics.data-an", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Software realization of the complex spectra decomposition on unknown number\nof similarcomponents is proposed.The algorithm is based on non-linear\nminimizing the sum of squared residuals of the spectrum model. For the adequacy\nchecking the complex of criteria is used.It tests the model residuals\ncorrespondence with the normal distribution, equality to zero of their mean\nvalue and autocorrelation. Also the closeness of residuals and experimental\ndata variances is checked.\n", "versions": [{"version": "v1", "created": "Sat, 25 Apr 2015 07:16:35 GMT"}], "update_date": "2015-06-24", "authors_parsed": [["Bakhrushin", "Vladimir", ""]]}, {"id": "1506.06745", "submitter": "Lev Nachmanson", "authors": "Lev Nachmanson, Roman Prutkin, Bongshin Lee, Nathalie Henry Riche,\n  Alexander E. Holroyd, Xiaoji Chen", "title": "GraphMaps: Browsing Large Graphs as Interactive Maps", "comments": "submitted to GD 2015", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.GR cs.DM cs.MS cs.SI", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Algorithms for laying out large graphs have seen significant progress in the\npast decade. However, browsing large graphs remains a challenge. Rendering\nthousands of graphical elements at once often results in a cluttered image, and\nnavigating these elements naively can cause disorientation. To address this\nchallenge we propose a method called GraphMaps, mimicking the browsing\nexperience of online geographic maps.\n  GraphMaps creates a sequence of layers, where each layer refines the previous\none. During graph browsing, GraphMaps chooses the layer corresponding to the\nzoom level, and renders only those entities of the layer that intersect the\ncurrent viewport. The result is that, regardless of the graph size, the number\nof entities rendered at each view does not exceed a predefined threshold, yet\nall graph elements can be explored by the standard zoom and pan operations.\n  GraphMaps preprocesses a graph in such a way that during browsing, the\ngeometry of the entities is stable, and the viewer is responsive. Our case\nstudies indicate that GraphMaps is useful in gaining an overview of a large\ngraph, and also in exploring a graph on a finer level of detail.\n", "versions": [{"version": "v1", "created": "Mon, 22 Jun 2015 17:17:34 GMT"}], "update_date": "2015-06-24", "authors_parsed": [["Nachmanson", "Lev", ""], ["Prutkin", "Roman", ""], ["Lee", "Bongshin", ""], ["Riche", "Nathalie Henry", ""], ["Holroyd", "Alexander E.", ""], ["Chen", "Xiaoji", ""]]}, {"id": "1506.07094", "submitter": "Felix Schindler", "authors": "Ren\\'e Milk and Stephan Rave and Felix Schindler", "title": "pyMOR - Generic Algorithms and Interfaces for Model Order Reduction", "comments": null, "journal-ref": "SIAM J. Sci. Comput., 38 (2016), pp. S194-S216", "doi": "10.1137/15M1026614", "report-no": null, "categories": "cs.MS math.NA", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Reduced basis methods are projection-based model order reduction techniques\nfor reducing the computational complexity of solving parametrized partial\ndifferential equation problems. In this work we discuss the design of pyMOR, a\nfreely available software library of model order reduction algorithms, in\nparticular reduced basis methods, implemented with the Python programming\nlanguage. As its main design feature, all reduction algorithms in pyMOR are\nimplemented generically via operations on well-defined vector array, operator\nand discretization interface classes. This allows for an easy integration with\nexisting open-source high-performance partial differential equation solvers\nwithout adding any model reduction specific code to these solvers. Besides an\nin-depth discussion of pyMOR's design philosophy and architecture, we present\nseveral benchmark results and numerical examples showing the feasibility of our\napproach.\n", "versions": [{"version": "v1", "created": "Tue, 23 Jun 2015 17:08:59 GMT"}, {"version": "v2", "created": "Mon, 7 Mar 2016 20:07:43 GMT"}, {"version": "v3", "created": "Thu, 31 Mar 2016 10:10:11 GMT"}], "update_date": "2019-10-30", "authors_parsed": [["Milk", "Ren\u00e9", ""], ["Rave", "Stephan", ""], ["Schindler", "Felix", ""]]}, {"id": "1506.07749", "submitter": "Michael Lange", "authors": "Michael Lange, Lawrence Mitchell, Matthew G. Knepley, Gerard J. Gorman", "title": "Efficient mesh management in Firedrake using PETSc-DMPlex", "comments": "12 pages, 6 figures, submitted to SISC CSE Special Issue", "journal-ref": "SIAM Journal on Scientific Computing 38(5):S143-S155 (2016)", "doi": "10.1137/15M1026092", "report-no": null, "categories": "cs.MS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The use of composable abstractions allows the application of new and\nestablished algorithms to a wide range of problems while automatically\ninheriting the benefits of well-known performance optimisations. This work\nhighlights the composition of the PETSc DMPlex domain topology abstraction with\nthe Firedrake automated finite element system to create a PDE solving\nenvironment that combines expressiveness, flexibility and high performance. We\ndescribe how Firedrake utilises DMPlex to provide the indirection maps required\nfor finite element assembly, while supporting various mesh input formats and\nruntime domain decomposition. In particular, we describe how DMPlex and its\naccompanying data structures allow the generic creation of user-defined\ndiscretisations, while utilising data layout optimisations that improve cache\ncoherency and ensure overlapped communication during assembly computation.\n", "versions": [{"version": "v1", "created": "Thu, 25 Jun 2015 13:42:29 GMT"}], "update_date": "2016-11-01", "authors_parsed": [["Lange", "Michael", ""], ["Mitchell", "Lawrence", ""], ["Knepley", "Matthew G.", ""], ["Gorman", "Gerard J.", ""]]}, {"id": "1506.07980", "submitter": "Jose Pereira C.", "authors": "Jos\\'e C. Pereira and Fernando G. Lobo", "title": "A Java Implementation of the SGA, UMDA, ECGA, and HBOA", "comments": "6 pages", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.NE cs.MS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The Simple Genetic Algorithm, the Univariate Marginal Distribution Algorithm,\nthe Extended Compact Genetic Algorithm, and the Hierarchical Bayesian\nOptimization Algorithm are all well known Evolutionary Algorithms.\n  In this report we present a Java implementation of these four algorithms with\ndetailed instructions on how to use each of them to solve a given set of\noptimization problems. Additionally, it is explained how to implement and\nintegrate new problems within the provided set. The source and binary files of\nthe Java implementations are available for free download at\nhttps://github.com/JoseCPereira/2015EvolutionaryAlgorithmsJava.\n", "versions": [{"version": "v1", "created": "Fri, 26 Jun 2015 07:44:38 GMT"}], "update_date": "2015-06-29", "authors_parsed": [["Pereira", "Jos\u00e9 C.", ""], ["Lobo", "Fernando G.", ""]]}, {"id": "1506.08258", "submitter": "Ali Pinar", "authors": "Janine C. Bennett, Ankit Bhagatwala, Jacqueline H. Chen, C. Seshadhri,\n  Ali Pinar, Maher Salloum", "title": "Trigger detection for adaptive scientific workflows using percentile\n  sampling", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.CE cs.DC cs.MS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Increasing complexity of scientific simulations and HPC architectures are\ndriving the need for adaptive workflows, where the composition and execution of\ncomputational and data manipulation steps dynamically depend on the\nevolutionary state of the simulation itself. Consider for example, the\nfrequency of data storage. Critical phases of the simulation should be captured\nwith high frequency and with high fidelity for post-analysis, however we cannot\nafford to retain the same frequency for the full simulation due to the high\ncost of data movement. We can instead look for triggers, indicators that the\nsimulation will be entering a critical phase and adapt the workflow\naccordingly.\n  We present a method for detecting triggers and demonstrate its use in direct\nnumerical simulations of turbulent combustion using S3D. We show that chemical\nexplosive mode analysis (CEMA) can be used to devise a noise-tolerant indicator\nfor rapid increase in heat release. However, exhaustive computation of CEMA\nvalues dominates the total simulation, thus is prohibitively expensive. To\novercome this bottleneck, we propose a quantile-sampling approach. Our\nalgorithm comes with provable error/confidence bounds, as a function of the\nnumber of samples. Most importantly, the number of samples is independent of\nthe problem size, thus our proposed algorithm offers perfect scalability. Our\nexperiments on homogeneous charge compression ignition (HCCI) and reactivity\ncontrolled compression ignition (RCCI) simulations show that the proposed\nmethod can detect rapid increases in heat release, and its computational\noverhead is negligible. Our results will be used for dynamic workflow decisions\nabout data storage and mesh resolution in future combustion simulations.\nProposed framework is generalizable and we detail how it could be applied to a\nbroad class of scientific simulation workflows.\n", "versions": [{"version": "v1", "created": "Sat, 27 Jun 2015 04:34:26 GMT"}], "update_date": "2015-06-30", "authors_parsed": [["Bennett", "Janine C.", ""], ["Bhagatwala", "Ankit", ""], ["Chen", "Jacqueline H.", ""], ["Seshadhri", "C.", ""], ["Pinar", "Ali", ""], ["Salloum", "Maher", ""]]}, {"id": "1506.08694", "submitter": "Jose Pereira C.", "authors": "Jos\\'e C. Pereira and Fernando G. Lobo", "title": "A Java Implementation of Parameter-less Evolutionary Algorithms", "comments": "12 pages. arXiv admin note: text overlap with arXiv:1506.07980", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.MS cs.NE", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The Parameter-less Genetic Algorithm was first presented by Harik and Lobo in\n1999 as an alternative to the usual trial-and-error method of finding, for each\ngiven problem, an acceptable set-up of the parameter values of the genetic\nalgorithm. Since then, the same strategy has been successfully applied to\ncreate parameter-less versions of other population-based search algorithms such\nas the Extended Compact Genetic Algorithm and the Hierarchical Bayesian\nOptimization Algorithm. This report describes a Java implementation,\nParameter-less Evolutionary Algorithm (P-EAJava), that integrates several\nparameter-less evolutionary algorithms into a single platform. Along with a\nbrief description of P-EAJava, we also provide detailed instructions on how to\nuse it, how to implement new problems, and how to generate new parameter-less\nversions of evolutionary algorithms.\n  At present time, P-EAJava already includes parameter-less versions of the\nSimple Genetic Algorithm, the Extended Compact Genetic Algorithm, the\nUnivariate Marginal Distribution Algorithm, and the Hierarchical Bayesian\nOptimization Algorithm. The source and binary files of the Java implementation\nof P-EAJava are available for free download at\nhttps://github.com/JoseCPereira/2015ParameterlessEvolutionaryAlgorithmsJava.\n", "versions": [{"version": "v1", "created": "Fri, 26 Jun 2015 07:53:57 GMT"}], "update_date": "2015-06-30", "authors_parsed": [["Pereira", "Jos\u00e9 C.", ""], ["Lobo", "Fernando G.", ""]]}, {"id": "1506.08867", "submitter": "Jose Pereira C.", "authors": "Jos\\'e C. Pereira and Fernando G. Lobo", "title": "Java Implementation of a Parameter-less Evolutionary Portfolio", "comments": "7 pages. arXiv admin note: substantial text overlap with\n  arXiv:1506.08694, arXiv:1506.07980", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.MS cs.NE", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The Java implementation of a portfolio of parameter-less evolutionary\nalgorithms is presented. The Parameter-less Evolutionary Portfolio implements a\nheuristic that performs adaptive selection of parameter-less evolutionary\nalgorithms in accordance with performance criteria that are measured during\nrunning time. At present time, the portfolio includes three parameter-less\nevolutionary algorithms: Parameter-less Univariate Marginal Distribution\nAlgorithm, Parameter-less Extended Compact Genetic Algorithm, and\nParameter-less Hierarchical Bayesian Optimization Algorithm. Initial\nexperiments showed that the parameter-less portfolio can solve various classes\nof problems without the need for any prior parameter setting technique and with\nan increase in computational effort that can be considered acceptable.\n", "versions": [{"version": "v1", "created": "Fri, 26 Jun 2015 07:58:32 GMT"}], "update_date": "2015-07-01", "authors_parsed": [["Pereira", "Jos\u00e9 C.", ""], ["Lobo", "Fernando G.", ""]]}, {"id": "1506.08988", "submitter": "Francisco Igual", "authors": "Sandra Catal\\'an, Francisco D. Igual, Rafael Mayo, Rafael\n  Rodr\\'iguez-S\\'anchez and Enrique S. Quintana-Ort\\'i", "title": "Architecture-Aware Configuration and Scheduling of Matrix Multiplication\n  on Asymmetric Multicore Processors", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.PF cs.DC cs.MS cs.NA", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Asymmetric multicore processors (AMPs) have recently emerged as an appealing\ntechnology for severely energy-constrained environments, especially in mobile\nappliances where heterogeneity in applications is mainstream. In addition,\ngiven the growing interest for low-power high performance computing, this type\nof architectures is also being investigated as a means to improve the\nthroughput-per-Watt of complex scientific applications.\n  In this paper, we design and embed several architecture-aware optimizations\ninto a multi-threaded general matrix multiplication (gemm), a key operation of\nthe BLAS, in order to obtain a high performance implementation for ARM\nbig.LITTLE AMPs. Our solution is based on the reference implementation of gemm\nin the BLIS library, and integrates a cache-aware configuration as well as\nasymmetric--static and dynamic scheduling strategies that carefully tune and\ndistribute the operation's micro-kernels among the big and LITTLE cores of the\ntarget processor. The experimental results on a Samsung Exynos 5422, a\nsystem-on-chip with ARM Cortex-A15 and Cortex-A7 clusters that implements the\nbig.LITTLE model, expose that our cache-aware versions of gemm with asymmetric\nscheduling attain important gains in performance with respect to its\narchitecture-oblivious counterparts while exploiting all the resources of the\nAMP to deliver considerable energy efficiency.\n", "versions": [{"version": "v1", "created": "Tue, 30 Jun 2015 08:35:15 GMT"}], "update_date": "2015-07-01", "authors_parsed": [["Catal\u00e1n", "Sandra", ""], ["Igual", "Francisco D.", ""], ["Mayo", "Rafael", ""], ["Rodr\u00edguez-S\u00e1nchez", "Rafael", ""], ["Quintana-Ort\u00ed", "Enrique S.", ""]]}]