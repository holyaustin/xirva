[{"id": "1210.0530", "submitter": "Greg Wilson", "authors": "Greg Wilson, D. A. Aruliah, C. Titus Brown, Neil P. Chue Hong, Matt\n  Davis, Richard T. Guy, Steven H. D. Haddock, Katy Huff, Ian M. Mitchell, Mark\n  Plumbley, Ben Waugh, Ethan P. White, Paul Wilson", "title": "Best Practices for Scientific Computing", "comments": "18 pages", "journal-ref": "PLOS Biology 12(1): e1001745, Jan 2014", "doi": "10.1371/journal.pbio.1001745", "report-no": null, "categories": "cs.MS cs.SE", "license": "http://creativecommons.org/licenses/by/3.0/", "abstract": "  Scientists spend an increasing amount of time building and using software.\nHowever, most scientists are never taught how to do this efficiently. As a\nresult, many are unaware of tools and practices that would allow them to write\nmore reliable and maintainable code with less effort. We describe a set of best\npractices for scientific software development that have solid foundations in\nresearch and experience, and that improve scientists' productivity and the\nreliability of their software.\n", "versions": [{"version": "v1", "created": "Mon, 1 Oct 2012 01:04:04 GMT"}, {"version": "v2", "created": "Tue, 30 Oct 2012 17:32:13 GMT"}, {"version": "v3", "created": "Thu, 29 Nov 2012 19:28:27 GMT"}, {"version": "v4", "created": "Thu, 26 Sep 2013 12:09:42 GMT"}], "update_date": "2016-08-04", "authors_parsed": [["Wilson", "Greg", ""], ["Aruliah", "D. A.", ""], ["Brown", "C. Titus", ""], ["Hong", "Neil P. Chue", ""], ["Davis", "Matt", ""], ["Guy", "Richard T.", ""], ["Haddock", "Steven H. D.", ""], ["Huff", "Katy", ""], ["Mitchell", "Ian M.", ""], ["Plumbley", "Mark", ""], ["Waugh", "Ben", ""], ["White", "Ethan P.", ""], ["Wilson", "Paul", ""]]}, {"id": "1210.0800", "submitter": "Jan Verschelde", "authors": "Jan Verschelde and Genady Yoffe", "title": "Orthogononalization on a general purpose graphics processing unit with\n  double double and quad double arithmetic", "comments": "replaced with revised version", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.MS cs.DC math.NA", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Our problem is to accurately solve linear systems on a general purpose\ngraphics processing unit with double double and quad double arithmetic. The\nlinear systems originate from the application of Newton's method on polynomial\nsystems. Newton's method is applied as a corrector in a path following method,\nso the linear systems are solved in sequence and not simultaneously. One\nsolution path may require the solution of thousands of linear systems. In\nprevious work we reported good speedups with our implementation to evaluate and\ndifferentiate polynomial systems on the NVIDIA Tesla C2050. Although the cost\nof evaluation and differentiation often dominates the cost of linear system\nsolving in Newton's method, because of the limited bandwidth of the\ncommunication between CPU and GPU, we cannot afford to send the linear system\nto the CPU for solving during path tracking.\n  Because of large degrees, the Jacobian matrix may contain extreme values,\nrequiring extended precision, leading to a significant overhead. This overhead\nof multiprecision arithmetic is our main motivation to develop a massively\nparallel algorithm. To allow overdetermined linear systems we solve linear\nsystems in the least squares sense, computing the QR decomposition of the\nmatrix by the modified Gram-Schmidt algorithm. We describe our implementation\nof the modified Gram-Schmidt orthogonalization method for the NVIDIA Tesla\nC2050, using double double and quad double arithmetic. Our experimental results\nshow that the achieved speedups are sufficiently high to compensate for the\noverhead of one extra level of precision.\n", "versions": [{"version": "v1", "created": "Tue, 2 Oct 2012 15:08:27 GMT"}, {"version": "v2", "created": "Sun, 13 Jan 2013 21:42:07 GMT"}], "update_date": "2013-01-15", "authors_parsed": [["Verschelde", "Jan", ""], ["Yoffe", "Genady", ""]]}, {"id": "1210.2536", "submitter": "Jiajia Li", "authors": "Jiajia Li, Xiuxia Zhang, Guangming Tan, Mingyu Chen", "title": "SMAT: An Input Adaptive Sparse Matrix-Vector Multiplication Auto-Tuner", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.MS cs.DC", "license": "http://creativecommons.org/licenses/by-nc-sa/3.0/", "abstract": "  Sparse matrix vector multiplication (SpMV) is an important kernel in\nscientific and engineering applications. The previous optimizations are sparse\nmatrix format specific and expose the choice of the best format to application\nprogrammers. In this work we develop an auto-tuning framework to bridge gap\nbetween the specific optimized kernels and their general-purpose use. We\npropose an SpMV auto-tuner (SMAT) that provides an unified interface based on\ncompressed sparse row (CSR) to programmers by implicitly choosing the best\nformat and the fastest implementation of any input sparse matrix in runtime.\nSMAT leverage a data mining model, which is formulated based on a set of\nperformance parameters extracted from 2373 matrices in UF sparse matrix\ncollection, to fast search the best combination. The experiments show that SMAT\nachieves the maximum performance of 75 GFLOP/s in single-precision and 33\nGFLOP/s in double-precision on Intel, and 41 GFLOP/s in single-precision and 34\nGFLOP/s in double-precision on AMD. Compared with the sparse functions in MKL\nlibrary, SMAT runs faster by more than 3 times.\n", "versions": [{"version": "v1", "created": "Tue, 9 Oct 2012 09:19:43 GMT"}], "update_date": "2012-10-10", "authors_parsed": [["Li", "Jiajia", ""], ["Zhang", "Xiuxia", ""], ["Tan", "Guangming", ""], ["Chen", "Mingyu", ""]]}, {"id": "1210.2950", "submitter": "Georg Regensburger", "authors": "Markus Rosenkranz, Georg Regensburger, Loredana Tec, Bruno Buchberger", "title": "Symbolic Analysis for Boundary Problems: From Rewriting to Parametrized\n  Gr\\\"obner Bases", "comments": "54 pages", "journal-ref": "Numerical and Symbolic Scientific Computing, Vol. 1, pp. 273-331,\n  2012", "doi": "10.1007/978-3-7091-0794-2_13", "report-no": null, "categories": "cs.SC cs.MS math.CA", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We review our algebraic framework for linear boundary problems (concentrating\non ordinary differential equations). Its starting point is an appropriate\nalgebraization of the domain of functions, which we have named\nintegro-differential algebras. The algebraic treatment of boundary problems\nbrings up two new algebraic structures whose symbolic representation and\ncomputational realization is based on canonical forms in certain commutative\nand noncommutative polynomial domains. The first of these, the ring of\nintegro-differential operators, is used for both stating and solving linear\nboundary problems. The other structure, called integro-differential\npolynomials, is the key tool for describing extensions of integro-differential\nalgebras. We use the canonical simplifier for integro-differential polynomials\nfor generating an automated proof establishing a canonical simplifier for\nintegro-differential operators. Our approach is fully implemented in the\nTheorema system; some code fragments and sample computations are included.\n", "versions": [{"version": "v1", "created": "Wed, 10 Oct 2012 15:11:49 GMT"}], "update_date": "2012-10-11", "authors_parsed": [["Rosenkranz", "Markus", ""], ["Regensburger", "Georg", ""], ["Tec", "Loredana", ""], ["Buchberger", "Bruno", ""]]}, {"id": "1210.2951", "submitter": "Georg Regensburger", "authors": "Anja Korporal, Georg Regensburger, Markus Rosenkranz", "title": "Regular and Singular Boundary Problems in Maple", "comments": "14 pages; Berlin/Heidelberg, Springer", "journal-ref": "Computer Algebra in Scientific Computing (CASC 2011), LNCS 6885,\n  pp. 280-293, 2011", "doi": "10.1007/978-3-642-23568-9_22", "report-no": null, "categories": "cs.SC cs.MS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We describe a new Maple package for treating boundary problems for linear\nordinary differential equations, allowing two-/multipoint as well as Stieltjes\nboundary conditions. For expressing differential operators, boundary\nconditions, and Green's operators, we employ the algebra of\nintegro-differential operators. The operations implemented for regular boundary\nproblems include computing Green's operators as well as composing and factoring\nboundary problems. Our symbolic approach to singular boundary problems is new;\nit provides algorithms for computing compatibility conditions and generalized\nGreen's operators.\n", "versions": [{"version": "v1", "created": "Wed, 10 Oct 2012 15:13:55 GMT"}], "update_date": "2012-10-11", "authors_parsed": [["Korporal", "Anja", ""], ["Regensburger", "Georg", ""], ["Rosenkranz", "Markus", ""]]}, {"id": "1210.4539", "submitter": "Michael Baudin", "authors": "Michael Baudin, Robert L. Smith", "title": "A Robust Complex Division in Scilab", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.MS cs.NA", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The most widely used algorithm for floating point complex division, known as\nSmith's method, may fail more often than expected. This document presents two\nimproved complex division algorithms. We present a proof of the robustness of\nthe first improved algorithm. Numerical simulations show that this algorithm\nperforms well in practice and is significantly more robust than other known\nimplementations. By combining additionnal scaling methods with this first\nalgorithm, we were able to create a second algorithm, which rarely fails.\n", "versions": [{"version": "v1", "created": "Tue, 16 Oct 2012 19:52:16 GMT"}, {"version": "v2", "created": "Wed, 17 Oct 2012 17:23:43 GMT"}], "update_date": "2012-10-18", "authors_parsed": [["Baudin", "Michael", ""], ["Smith", "Robert L.", ""]]}, {"id": "1210.4662", "submitter": "AbdelRahman Karawia Dr.", "authors": "A. A. Karawia", "title": "A New Recursive Algorithm For Inverting A General Comrade Matrix", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.SC cs.MS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In this paper, the author present a reliable symbolic computational algorithm\nfor inverting a general comrade matrix by using parallel computing along with\nrecursion. The computational cost of our algorithm is O(n^2). The algorithm is\nimplementable to the Computer Algebra System (CAS) such as MAPLE, MATLAB and\nMATHEMATICA. Three examples are presented for the sake of illustration.\n", "versions": [{"version": "v1", "created": "Wed, 17 Oct 2012 08:09:08 GMT"}], "update_date": "2012-10-18", "authors_parsed": [["Karawia", "A. A.", ""]]}, {"id": "1210.6293", "submitter": "Ryan Curtin", "authors": "Ryan R. Curtin, James R. Cline, N.P. Slagle, William B. March,\n  Parikshit Ram, Nishant A. Mehta, Alexander G. Gray", "title": "MLPACK: A Scalable C++ Machine Learning Library", "comments": "Submitted to JMLR MLOSS (http://jmlr.csail.mit.edu/mloss/)", "journal-ref": "Journal of Machine Learning Research 14 (2013) 801-805", "doi": null, "report-no": null, "categories": "cs.MS cs.CV cs.LG", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  MLPACK is a state-of-the-art, scalable, multi-platform C++ machine learning\nlibrary released in late 2011 offering both a simple, consistent API accessible\nto novice users and high performance and flexibility to expert users by\nleveraging modern features of C++. MLPACK provides cutting-edge algorithms\nwhose benchmarks exhibit far better performance than other leading machine\nlearning libraries. MLPACK version 1.0.3, licensed under the LGPL, is available\nat http://www.mlpack.org.\n", "versions": [{"version": "v1", "created": "Tue, 23 Oct 2012 17:15:03 GMT"}], "update_date": "2021-06-24", "authors_parsed": [["Curtin", "Ryan R.", ""], ["Cline", "James R.", ""], ["Slagle", "N. P.", ""], ["March", "William B.", ""], ["Ram", "Parikshit", ""], ["Mehta", "Nishant A.", ""], ["Gray", "Alexander G.", ""]]}, {"id": "1210.7292", "submitter": "Matthias Messner", "authors": "Matthias Messner (INRIA Bordeaux - Sud-Ouest), B\\'erenger Bramas\n  (INRIA Bordeaux - Sud-Ouest), Olivier Coulaud (INRIA Bordeaux - Sud-Ouest),\n  Eric Darve", "title": "Optimized M2L Kernels for the Chebyshev Interpolation based Fast\n  Multipole Method", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.NA cs.CE cs.MS math.NA", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  A fast multipole method (FMM) for asymptotically smooth kernel functions\n(1/r, 1/r^4, Gauss and Stokes kernels, radial basis functions, etc.) based on a\nChebyshev interpolation scheme has been introduced in [Fong et al., 2009]. The\nmethod has been extended to oscillatory kernels (e.g., Helmholtz kernel) in\n[Messner et al., 2012]. Beside its generality this FMM turns out to be\nfavorable due to its easy implementation and its high performance based on\nintensive use of highly optimized BLAS libraries. However, one of its\nbottlenecks is the precomputation of the multiple-to-local (M2L) operator, and\nits higher number of floating point operations (flops) compared to other FMM\nformulations. Here, we present several optimizations for that operator, which\nis known to be the costliest FMM operator. The most efficient ones do not only\nreduce the precomputation time by a factor up to 340 but they also speed up the\nmatrix-vector product. We conclude with comparisons and numerical validations\nof all presented optimizations.\n", "versions": [{"version": "v1", "created": "Sat, 27 Oct 2012 05:46:13 GMT"}, {"version": "v2", "created": "Tue, 20 Nov 2012 17:46:07 GMT"}], "update_date": "2012-11-21", "authors_parsed": [["Messner", "Matthias", "", "INRIA Bordeaux - Sud-Ouest"], ["Bramas", "B\u00e9renger", "", "INRIA Bordeaux - Sud-Ouest"], ["Coulaud", "Olivier", "", "INRIA Bordeaux - Sud-Ouest"], ["Darve", "Eric", ""]]}, {"id": "1210.7325", "submitter": "Paolo Bientinesi", "authors": "Diego Fabregat-Traver (1), Yurii Aulchenko (2), Paolo Bientinesi (1),\n  ((1) AICES, RWTH Aachen, (2) Institute of Cytology and Genetics SD RAS)", "title": "Solving Sequences of Generalized Least-Squares Problems on\n  Multi-threaded Architectures", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.MS cs.CE q-bio.GN", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Generalized linear mixed-effects models in the context of genome-wide\nassociation studies (GWAS) represent a formidable computational challenge: the\nsolution of millions of correlated generalized least-squares problems, and the\nprocessing of terabytes of data. We present high performance in-core and\nout-of-core shared-memory algorithms for GWAS: By taking advantage of\ndomain-specific knowledge, exploiting multi-core parallelism, and handling data\nefficiently, our algorithms attain unequalled performance. When compared to\nGenABEL, one of the most widely used libraries for GWAS, on a 12-core processor\nwe obtain 50-fold speedups. As a consequence, our routines enable genome\nstudies of unprecedented size.\n", "versions": [{"version": "v1", "created": "Sat, 27 Oct 2012 14:26:32 GMT"}], "update_date": "2013-05-02", "authors_parsed": [["Fabregat-Traver", "Diego", "", "AICES, RWTH Aachen"], ["Aulchenko", "Yurii", "", "Institute of Cytology and Genetics SD RAS"], ["Bientinesi", "Paolo", "", "AICES, RWTH Aachen"]]}, {"id": "1210.7683", "submitter": "Paolo Bientinesi", "authors": "Diego Fabregat-Traver (1), Paolo Bientinesi (1), ((1) AICES, RWTH\n  Aachen)", "title": "Computing Petaflops over Terabytes of Data: The Case of Genome-Wide\n  Association Studies", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.MS cs.CE cs.PF q-bio.GN q-bio.QM", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In many scientific and engineering applications, one has to solve not one but\na sequence of instances of the same problem. Often times, the problems in the\nsequence are linked in a way that allows intermediate results to be reused. A\ncharacteristic example for this class of applications is given by the\nGenome-Wide Association Studies (GWAS), a widely spread tool in computational\nbiology. GWAS entails the solution of up to trillions ($10^{12}$) of correlated\ngeneralized least-squares problems, posing a daunting challenge: the\nperformance of petaflops ($10^{15}$ floating-point operations) over terabytes\nof data.\n  In this paper, we design an algorithm for performing GWAS on multi-core\narchitectures. This is accomplished in three steps. First, we show how to\nexploit the relation among successive problems, thus reducing the overall\ncomputational complexity. Then, through an analysis of the required data\ntransfers, we identify how to eliminate any overhead due to input/output\noperations. Finally, we study how to decompose computation into tasks to be\ndistributed among the available cores, to attain high performance and\nscalability. With our algorithm, a GWAS that currently requires the use of a\nsupercomputer may now be performed in matter of hours on a single multi-core\nnode.\n  The discussion centers around the methodology to develop the algorithm rather\nthan the specific application. We believe the paper contributes valuable\nguidelines of general applicability for computational scientists on how to\ndevelop and optimize numerical algorithms.\n", "versions": [{"version": "v1", "created": "Mon, 29 Oct 2012 14:58:03 GMT"}], "update_date": "2013-05-01", "authors_parsed": [["Fabregat-Traver", "Diego", ""], ["Bientinesi", "Paolo", ""]]}, {"id": "1210.8418", "submitter": "Kirana Kumara P", "authors": "Kirana Kumara P. (Indian Institute of Science, Bangalore, India)", "title": "Demonstrating the Usefulness of CAELinux for Computer Aided Engineering\n  using an Example of the Three Dimensional Reconstruction of a Pig Liver", "comments": "10 pages, six *.JPG figures, uses html.sty, to be published in\n  International Journal of Advancements in Technology (ISSN : 0976-4860)", "journal-ref": "International Journal of Advancements in Technology Vol. 3 No. 4\n  (December 2012) pp. 301-309", "doi": null, "report-no": null, "categories": "cs.MS physics.bio-ph physics.comp-ph physics.med-ph", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  CAELinux is a Linux distribution which is bundled with free software packages\nrelated to Computer Aided Engineering (CAE). The free software packages include\nsoftware that can build a three dimensional solid model, programs that can mesh\na geometry, software for carrying out Finite Element Analysis (FEA), programs\nthat can carry out image processing etc. Present work has two goals: 1) To give\na brief description of CAELinux 2) To demonstrate that CAELinux could be useful\nfor Computer Aided Engineering, using an example of the three dimensional\nreconstruction of a pig liver from a stack of CT-scan images. One can note that\ninstead of using CAELinux, using commercial software for reconstructing the\nliver would cost a lot of money. One can also note that CAELinux is a free and\nopen source operating system and all software packages that are included in the\noperating system are also free. Hence one can conclude that CAELinux could be a\nvery useful tool in application areas like surgical simulation which require\nthree dimensional reconstructions of biological organs. Also, one can see that\nCAELinux could be a very useful tool for Computer Aided Engineering, in\ngeneral.\n", "versions": [{"version": "v1", "created": "Fri, 26 Oct 2012 03:14:03 GMT"}], "update_date": "2012-12-19", "authors_parsed": [["P.", "Kirana Kumara", "", "Indian Institute of Science, Bangalore, India"]]}]