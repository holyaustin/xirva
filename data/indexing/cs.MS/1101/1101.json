[{"id": "1101.3218", "submitter": "Walid Belkhir", "authors": "Walid Belkhir, Alain Giorgetti and Michel Lenczner", "title": "A Symbolic Transformation Language and its Application to a Multiscale\n  Method", "comments": "36 pages", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.SC cs.MS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The context of this work is the design of a software, called MEMSALab,\ndedicated to the automatic derivation of multiscale models of arrays of micro-\nand nanosystems. In this domain a model is a partial differential equation.\nMultiscale methods approximate it by another partial differential equation\nwhich can be numerically simulated in a reasonable time. The challenge consists\nin taking into account a wide range of geometries combining thin and periodic\nstructures with the possibility of multiple nested scales.\n  In this paper we present a transformation language that will make the\ndevelopment of MEMSALab more feasible. It is proposed as a Maple package for\nrule-based programming, rewriting strategies and their combination with\nstandard Maple code. We illustrate the practical interest of this language by\nusing it to encode two examples of multiscale derivations, namely the two-scale\nlimit of the derivative operator and the two-scale model of the stationary heat\nequation.\n", "versions": [{"version": "v1", "created": "Mon, 17 Jan 2011 14:06:26 GMT"}, {"version": "v2", "created": "Thu, 4 Apr 2013 07:37:29 GMT"}, {"version": "v3", "created": "Tue, 10 Dec 2013 12:58:41 GMT"}], "update_date": "2015-03-17", "authors_parsed": [["Belkhir", "Walid", ""], ["Giorgetti", "Alain", ""], ["Lenczner", "Michel", ""]]}, {"id": "1101.3682", "submitter": "Daniel Roche", "authors": "Mark Giesbrecht and Daniel S. Roche", "title": "Diversification improves interpolation", "comments": "26 pages, pdfLaTeX. Preliminary version to appear at ISSAC 2011", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.SC cs.DS cs.MS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We consider the problem of interpolating an unknown multivariate polynomial\nwith coefficients taken from a finite field or as numerical approximations of\ncomplex numbers. Building on the recent work of Garg and Schost, we improve on\nthe best-known algorithm for interpolation over large finite fields by\npresenting a Las Vegas randomized algorithm that uses fewer black box\nevaluations. Using related techniques, we also address numerical interpolation\nof sparse polynomials with complex coefficients, and provide the first provably\nstable algorithm (in the sense of relative error) for this problem, at the cost\nof modestly more evaluations. A key new technique is a randomization which\nmakes all coefficients of the unknown polynomial distinguishable, producing\nwhat we call a diverse polynomial. Another departure from most previous\napproaches is that our algorithms do not rely on root finding as a subroutine.\nWe show how these improvements affect the practical performance with trial\nimplementations.\n", "versions": [{"version": "v1", "created": "Wed, 19 Jan 2011 13:14:32 GMT"}, {"version": "v2", "created": "Mon, 24 Jan 2011 21:05:01 GMT"}, {"version": "v3", "created": "Sun, 3 Apr 2011 16:25:50 GMT"}], "update_date": "2011-04-05", "authors_parsed": [["Giesbrecht", "Mark", ""], ["Roche", "Daniel S.", ""]]}, {"id": "1101.4369", "submitter": "Elias Tsigaridas", "authors": "Adam Strzebonski and Elias Tsigaridas", "title": "Univariate real root isolation in an extension field", "comments": "16 pages", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.SC cs.MS cs.NA math.AG math.NA", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We present algorithmic, complexity and implementation results for the problem\nof isolating the real roots of a univariate polynomial in $B_{\\alpha} \\in\nL[y]$, where $L=\\QQ(\\alpha)$ is a simple algebraic extension of the rational\nnumbers. We consider two approaches for tackling the problem. In the first\napproach using resultant computations we perform a reduction to a polynomial\nwith integer coefficients. We compute separation bounds for the roots, and\nusing them we deduce that we can isolate the real roots of $B_{\\alpha}$ in\n$\\sOB(N^{10})$, where $N$ is an upper bound on all the quantities (degree and\nbitsize) of the input polynomials. In the second approach we isolate the real\nroots working directly on the polynomial of the input. We compute improved\nseparation bounds for real roots and we prove that they are optimal, under mild\nassumptions. For isolating the roots we consider a modified Sturm's algorithm,\nand a modified version of \\func{descartes}' algorithm introduced by Sagraloff.\nFor the former we prove a complexity bound of $\\sOB(N^8)$ and for the latter a\nbound of $\\sOB(N^{7})$. We implemented the algorithms in \\func{C} as part of\nthe core library of \\mathematica and we illustrate their efficiency over\nvarious data sets. Finally, we present complexity results for the general case\nof the first approach, where the coefficients belong to multiple extensions.\n", "versions": [{"version": "v1", "created": "Sun, 23 Jan 2011 13:38:46 GMT"}, {"version": "v2", "created": "Mon, 9 May 2011 13:27:26 GMT"}], "update_date": "2011-05-10", "authors_parsed": [["Strzebonski", "Adam", ""], ["Tsigaridas", "Elias", ""]]}, {"id": "1101.5151", "submitter": "Matthew Patitz", "authors": "Matthew J. Patitz", "title": "Simulation of Self-Assembly in the Abstract Tile Assembly Model with ISU\n  TAS", "comments": "This paper was in the Proceedings of the 6th Annual Conference of the\n  Foundations of Nanoscience: Self-Assembled Architectures and Devices (2009)", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.MS cs.CE", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Since its introduction by Erik Winfree in 1998, the abstract Tile Assembly\nModel (aTAM) has inspired a wealth of research. As an abstract model for tile\nbased self-assembly, it has proven to be remarkably powerful and expressive in\nterms of the structures which can self-assemble within it. As research has\nprogressed in the aTAM, the self-assembling structures being studied have\nbecome progressively more complex. This increasing complexity, along with a\nneed for standardization of definitions and tools among researchers, motivated\nthe development of the Iowa State University Tile Assembly Simulator (ISU TAS).\nISU TAS is a graphical simulator and tile set editor for designing and building\n2-D and 3-D aTAM tile assembly systems and simulating their self-assembly. This\npaper reviews the features and functionality of ISU TAS and describes how it\ncan be used to further research into the complexities of the aTAM. Software and\nsource code are available at http://www.cs.iastate.edu/~lnsa.\n", "versions": [{"version": "v1", "created": "Thu, 27 Jan 2011 03:16:16 GMT"}], "update_date": "2015-03-18", "authors_parsed": [["Patitz", "Matthew J.", ""]]}]