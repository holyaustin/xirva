[{"id": "1303.0934", "submitter": "Matteo Santoro", "authors": "Andrea Tacchetti, Pavan K Mallapragada, Matteo Santoro, Lorenzo\n  Rosasco", "title": "GURLS: a Least Squares Library for Supervised Learning", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LG cs.AI cs.MS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We present GURLS, a least squares, modular, easy-to-extend software library\nfor efficient supervised learning. GURLS is targeted to machine learning\npractitioners, as well as non-specialists. It offers a number state-of-the-art\ntraining strategies for medium and large-scale learning, and routines for\nefficient model selection. The library is particularly well suited for\nmulti-output problems (multi-category/multi-label). GURLS is currently\navailable in two independent implementations: Matlab and C++. It takes\nadvantage of the favorable properties of regularized least squares algorithm to\nexploit advanced tools in linear algebra. Routines to handle computations with\nvery large matrices by means of memory-mapped storage and distributed task\nexecution are available. The package is distributed under the BSD licence and\nis available for download at https://github.com/CBCL/GURLS.\n", "versions": [{"version": "v1", "created": "Tue, 5 Mar 2013 05:55:59 GMT"}], "update_date": "2013-03-06", "authors_parsed": [["Tacchetti", "Andrea", ""], ["Mallapragada", "Pavan K", ""], ["Santoro", "Matteo", ""], ["Rosasco", "Lorenzo", ""]]}, {"id": "1303.1651", "submitter": "Georg Hager", "authors": "Tobias Scharpff, Klaus Iglberger, Georg Hager, Ulrich Ruede", "title": "Model-guided Performance Analysis of the Sparse Matrix-Matrix\n  Multiplication", "comments": "8 pages, 12 figures. Small corrections w.r.t. previous version", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.PF cs.MS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Achieving high efficiency with numerical kernels for sparse matrices is of\nutmost importance, since they are part of many simulation codes and tend to use\nmost of the available compute time and resources. In addition, especially in\nlarge scale simulation frameworks the readability and ease of use of\nmathematical expressions are essential components for the continuous\nmaintenance, modification, and extension of software. In this context, the\nsparse matrix-matrix multiplication is of special interest. In this paper we\nthoroughly analyze the single-core performance of sparse matrix-matrix\nmultiplication kernels in the Blaze Smart Expression Template (SET) framework.\nWe develop simple models for estimating the achievable maximum performance, and\nuse them to assess the efficiency of our implementations. Additionally, we\ncompare these kernels with several commonly used SET-based C++ libraries,\nwhich, just as Blaze, aim at combining the requirements of high performance\nwith an elegant user interface. For the different sparse matrix structures\nconsidered here, we show that our implementations are competitive or faster\nthan those of the other SET libraries for most problem sizes on a current Intel\nmulticore processor.\n", "versions": [{"version": "v1", "created": "Thu, 7 Mar 2013 11:40:27 GMT"}, {"version": "v2", "created": "Mon, 6 May 2013 07:43:45 GMT"}], "update_date": "2013-05-07", "authors_parsed": [["Scharpff", "Tobias", ""], ["Iglberger", "Klaus", ""], ["Hager", "Georg", ""], ["Ruede", "Ulrich", ""]]}, {"id": "1303.2140", "submitter": "Jeroen Ooms", "authors": "Jeroen Ooms", "title": "Possible Directions for Improving Dependency Versioning in R", "comments": null, "journal-ref": "The R Journal Vol. 5/1, June 2013", "doi": null, "report-no": null, "categories": "cs.SE cs.MS stat.CO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  One of the most powerful features of R is its infrastructure for contributed\ncode. The built-in package manager and complementary repositories provide a\ngreat system for development and exchange of code, and have played an important\nrole in the growth of the platform towards the de-facto standard in statistical\ncomputing that it is today. However, the number of packages on CRAN and other\nrepositories has increased beyond what might have been foreseen, and is\nrevealing some limitations of the current design. One such problem is the\ngeneral lack of dependency versioning in the infrastructure. This paper\nexplores this problem in greater detail, and suggests approaches taken by other\nopen source communities that might work for R as well. Three use cases are\ndefined that exemplify the issue, and illustrate how improving this aspect of\npackage management could increase reliability while supporting further growth\nof the R community.\n", "versions": [{"version": "v1", "created": "Fri, 8 Mar 2013 22:32:22 GMT"}, {"version": "v2", "created": "Fri, 1 Nov 2013 18:47:18 GMT"}], "update_date": "2013-11-04", "authors_parsed": [["Ooms", "Jeroen", ""]]}, {"id": "1303.3182", "submitter": "Henricus Bouwmeester", "authors": "Henricus Bouwmeester", "title": "Tiled Algorithms for Matrix Computations on Multicore Architectures", "comments": "PhD Thesis, 2012 http://math.ucdenver.edu", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.NA cs.MS math.NA", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The current computer architecture has moved towards the multi/many-core\nstructure. However, the algorithms in the current sequential dense numerical\nlinear algebra libraries (e.g. LAPACK) do not parallelize well on\nmulti/many-core architectures. A new family of algorithms, the tile algorithms,\nhas recently been introduced to circumvent this problem. Previous research has\nshown that it is possible to write efficient and scalable tile algorithms for\nperforming a Cholesky factorization, a (pseudo) LU factorization, and a QR\nfactorization. The goal of this thesis is to study tiled algorithms in a\nmulti/many-core setting and to provide new algorithms which exploit the current\narchitecture to improve performance relative to current state-of-the-art\nlibraries while maintaining the stability and robustness of these libraries.\n", "versions": [{"version": "v1", "created": "Wed, 13 Mar 2013 15:04:05 GMT"}], "update_date": "2013-03-14", "authors_parsed": [["Bouwmeester", "Henricus", ""]]}, {"id": "1303.3761", "submitter": "Christoph Benzmueller", "authors": "Christoph Benzm\\\"uller, Nik Sultana", "title": "Update report: LEO-II version 1.5", "comments": "7 pages", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO cs.AI cs.MS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Recent improvements of the LEO-II theorem prover are presented. These\nimprovements include a revised ATP interface, new translations into first-order\nlogic, rule support for the axiom of choice, detection of defined equality, and\nmore flexible strategy scheduling.\n", "versions": [{"version": "v1", "created": "Fri, 15 Mar 2013 13:03:40 GMT"}, {"version": "v2", "created": "Tue, 14 May 2013 07:51:31 GMT"}], "update_date": "2013-05-15", "authors_parsed": [["Benzm\u00fcller", "Christoph", ""], ["Sultana", "Nik", ""]]}, {"id": "1303.4193", "submitter": "Christoph Lange", "authors": "Christoph Lange and Marco B. Caminati and Manfred Kerber and Till\n  Mossakowski and Colin Rowat and Makarius Wenzel and Wolfgang Windsteiger", "title": "A Qualitative Comparison of the Suitability of Four Theorem Provers for\n  Basic Auction Theory", "comments": "Conference on Intelligent Computer Mathematics, 8-12 July, Bath, UK.\n  Published as number 7961 in Lecture Notes in Artificial Intelligence,\n  Springer", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO cs.GT cs.MS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Novel auction schemes are constantly being designed. Their design has\nsignificant consequences for the allocation of goods and the revenues\ngenerated. But how to tell whether a new design has the desired properties,\nsuch as efficiency, i.e. allocating goods to those bidders who value them most?\nWe say: by formal, machine-checked proofs. We investigated the suitability of\nthe Isabelle, Theorema, Mizar, and Hets/CASL/TPTP theorem provers for\nreproducing a key result of auction theory: Vickrey's 1961 theorem on the\nproperties of second-price auctions. Based on our formalisation experience,\ntaking an auction designer's perspective, we give recommendations on what\nsystem to use for formalising auctions, and outline further steps towards a\ncomplete auction theory toolbox.\n", "versions": [{"version": "v1", "created": "Mon, 18 Mar 2013 09:20:41 GMT"}, {"version": "v2", "created": "Sat, 18 May 2013 23:05:32 GMT"}, {"version": "v3", "created": "Thu, 23 May 2013 18:16:52 GMT"}], "update_date": "2013-05-24", "authors_parsed": [["Lange", "Christoph", ""], ["Caminati", "Marco B.", ""], ["Kerber", "Manfred", ""], ["Mossakowski", "Till", ""], ["Rowat", "Colin", ""], ["Wenzel", "Makarius", ""], ["Windsteiger", "Wolfgang", ""]]}, {"id": "1303.4808", "submitter": "Jeroen Ooms", "authors": "Jeroen Ooms", "title": "The RAppArmor Package: Enforcing Security Policies in R Using Dynamic\n  Sandboxing on Linux", "comments": null, "journal-ref": "Journal of Statistical Software, Vol. 55, Issue 7, Nov 2013", "doi": null, "report-no": null, "categories": "cs.CR cs.MS stat.CO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The increasing availability of cloud computing and scientific super computers\nbrings great potential for making R accessible through public or shared\nresources. This allows us to efficiently run code requiring lots of cycles and\nmemory, or embed R functionality into, e.g., systems and web services. However\nsome important security concerns need to be addressed before this can be put in\nproduction. The prime use case in the design of R has always been a single\nstatistician running R on the local machine through the interactive console.\nTherefore the execution environment of R is entirely unrestricted, which could\nresult in malicious behavior or excessive use of hardware resources in a shared\nenvironment. Properly securing an R process turns out to be a complex problem.\nWe describe various approaches and illustrate potential issues using some of\nour personal experiences in hosting public web services. Finally we introduce\nthe RAppArmor package: a Linux based reference implementation for dynamic\nsandboxing in R on the level of the operating system.\n", "versions": [{"version": "v1", "created": "Wed, 20 Mar 2013 01:57:36 GMT"}, {"version": "v2", "created": "Tue, 2 Apr 2013 17:53:41 GMT"}, {"version": "v3", "created": "Fri, 1 Nov 2013 17:53:22 GMT"}], "update_date": "2014-02-05", "authors_parsed": [["Ooms", "Jeroen", ""]]}, {"id": "1303.4928", "submitter": "Thomas Dierkes", "authors": "Thomas Dierkes, Susanna R\\\"oblitz, Moritz Wade, and Peter Deuflhard", "title": "Parameter identification in large kinetic networks with BioPARKIN", "comments": "20 pages, 7 figures, 4 tables; added 1 figure, and revised section 4", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.MS cs.CE q-bio.QM", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Modelling, parameter identification, and simulation play an important role in\nsystems biology. Usually, the goal is to determine parameter values that\nminimise the difference between experimental measurement values and model\npredictions in a least-squares sense. Large-scale biological networks, however,\noften suffer from missing data for parameter identification. Thus, the\nleast-squares problems are rank-deficient and solutions are not unique. Many\ncommon optimisation methods ignore this detail because they do not take into\naccount the structure of the underlying inverse problem. These algorithms\nsimply return a \"solution\" without additional information on identifiability or\nuniqueness. This can yield misleading results, especially if parameters are\nco-regulated and data are noisy.\n", "versions": [{"version": "v1", "created": "Wed, 20 Mar 2013 13:05:33 GMT"}, {"version": "v2", "created": "Tue, 9 Apr 2013 08:08:31 GMT"}], "update_date": "2013-04-10", "authors_parsed": [["Dierkes", "Thomas", ""], ["R\u00f6blitz", "Susanna", ""], ["Wade", "Moritz", ""], ["Deuflhard", "Peter", ""]]}, {"id": "1303.6034", "submitter": "Akira SaiToh", "authors": "Akira SaiToh", "title": "ZKCM: a C++ library for multiprecision matrix computation with\n  applications in quantum information", "comments": "19 pages, 5 figures, to appear in Comput. Phys. Comm.; this is an\n  extended version of arXiv:1111.3124, v2: typographical corrections only", "journal-ref": "Comput. Phys. Comm. 184, 2005-2020 (2013)", "doi": "10.1016/j.cpc.2013.03.022", "report-no": null, "categories": "cs.MS physics.comp-ph quant-ph", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  ZKCM is a C++ library developed for the purpose of multiprecision matrix\ncomputation, on the basis of the GNU MP and MPFR libraries. It provides an\neasy-to-use syntax and convenient functions for matrix manipulations including\nthose often used in numerical simulations in quantum physics. Its extension\nlibrary, ZKCM_QC, is developed for simulating quantum computing using the\ntime-dependent matrix-product-state simulation method. This paper gives an\nintroduction about the libraries with practical sample programs.\n", "versions": [{"version": "v1", "created": "Mon, 25 Mar 2013 06:18:35 GMT"}, {"version": "v2", "created": "Mon, 15 Apr 2013 10:46:46 GMT"}], "update_date": "2013-05-14", "authors_parsed": [["SaiToh", "Akira", ""]]}, {"id": "1303.6257", "submitter": "Charles Karney", "authors": "Charles F. F. Karney", "title": "Sampling exactly from the normal distribution", "comments": "LaTeX, 8 pages, 1 figure. Revision includes algorithm for sampling\n  discrete normal distribution. An implementation of the algorithms is\n  available at http://exrandom.sf.net", "journal-ref": "ACM Trans. Mathematical Software 42(1), 3:1-14 (Jan. 2016)", "doi": "10.1145/2710016", "report-no": null, "categories": "physics.comp-ph cs.MS math.PR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  An algorithm for sampling exactly from the normal distribution is given. The\nalgorithm reads some number of uniformly distributed random digits in a given\nbase and generates an initial portion of the representation of a normal deviate\nin the same base. Thereafter, uniform random digits are copied directly into\nthe representation of the normal deviate. Thus, in contrast to existing\nmethods, it is possible to generate normal deviates exactly rounded to any\nprecision with a mean cost that scales linearly in the precision. The method\nperforms no extended precision arithmetic, calls no transcendental functions,\nand, indeed, uses no floating point arithmetic whatsoever; it uses only simple\ninteger operations. It can easily be adapted to sample exactly from the\ndiscrete normal distribution whose parameters are rational numbers.\n", "versions": [{"version": "v1", "created": "Mon, 25 Mar 2013 19:19:47 GMT"}, {"version": "v2", "created": "Tue, 10 Jun 2014 09:46:45 GMT"}], "update_date": "2016-02-01", "authors_parsed": [["Karney", "Charles F. F.", ""]]}, {"id": "1303.7425", "submitter": "Jacques Laskar", "authors": "Micka\u007fel Gastineau and Jacques Laskar", "title": "Highly Scalable Multiplication for Distributed Sparse Multivariate\n  Polynomials on Many-core Systems", "comments": "15 pages, 5 figures", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.SC astro-ph.IM cs.DC cs.MS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We present a highly scalable algorithm for multiplying sparse multivariate\npolynomials represented in a distributed format. This algo- rithm targets not\nonly the shared memory multicore computers, but also computers clusters or\nspecialized hardware attached to a host computer, such as graphics processing\nunits or many-core coprocessors. The scal- ability on the large number of cores\nis ensured by the lacks of synchro- nizations, locks and false-sharing during\nthe main parallel step.\n", "versions": [{"version": "v1", "created": "Fri, 29 Mar 2013 15:47:45 GMT"}], "update_date": "2013-04-01", "authors_parsed": [["Gastineau", "Micka\u007fel", ""], ["Laskar", "Jacques", ""]]}]