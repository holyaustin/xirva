[{"id": "0904.0166", "submitter": "Alejandro Lorca", "authors": "Alejandro Lorca, Jose Luis Vazquez-Poletti, Eduardo Huedo, Ignacio M.\n  Llorente", "title": "Grid porting of Bhabha scattering code through a master-worker scheme", "comments": "12 pages, 9 figures (8 in color). To appear in proceedings of\n  IBERGRID 2009 - 3rd Iberian Grid Infrastructure Conference", "journal-ref": null, "doi": null, "report-no": null, "categories": "hep-ph cs.DC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  A program calculating Bhabha scattering at high energy colliders is\nconsidered for porting to the EGEE Grid infrastructure. The program code, which\nis a result of the aITALC project, is ported by using a master-worker operating\nscheme. The job submission, execution and monitoring are implemented using the\nGridWay metascheduler. The unattended execution of jobs turned out to be\ncomplete and rather efficient, even when pre-knowledge of the grid is absent.\nWhile the batch of jobs remains organized at the user's side, the actual\ncomputation was carried out within the phenogrid virtual organization. The\nscientific results support the use of the small angle Bhabha scattering for the\nluminosity measurements of the International Linear Collider project.\n", "versions": [{"version": "v1", "created": "Wed, 1 Apr 2009 14:22:54 GMT"}], "update_date": "2009-04-14", "authors_parsed": [["Lorca", "Alejandro", ""], ["Vazquez-Poletti", "Jose Luis", ""], ["Huedo", "Eduardo", ""], ["Llorente", "Ignacio M.", ""]]}, {"id": "0904.1242", "submitter": "Kang Ning", "authors": "Kang Ning and Hon Wai Leong", "title": "The Distribution and Deposition Algorithm for Multiple Sequences Sets", "comments": "15 pages, 7 figures, extended version of conference paper presented\n  on GIW 2006, revised version accepted by Journal of Combinatorial\n  Optimization.", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DS cs.DC cs.DM", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Sequences set is a mathematical model used in many applications. As the\nnumber of the sequences becomes larger, single sequence set model is not\nappropriate for the rapidly increasing problem sizes. For example, more and\nmore text processing applications separate a single big text file into multiple\nfiles before processing. For these applications, the underline mathematical\nmodel is multiple sequences sets (MSS). Though there is increasing use of MSS,\nthere is little research on how to process MSS efficiently. To process multiple\nsequences sets, sequences are first distributed to different sets, and then\nsequences for each set are processed. Deriving effective algorithm for MSS\nprocessing is both interesting and challenging. In this paper, we have defined\nthe cost functions and performance ratio for analysis of the quality of\nsynthesis sequences. Based on these, the problem of Process of Multiple\nSequences Sets (PMSS) is formulated. We have first proposed two greedy\nalgorithms for the PMSS problem, which are based on generalization of\nalgorithms for single sequences set. Then based on the analysis of the\ncharacteristics of multiple sequences sets, we have proposed the Distribution\nand Deposition (DDA) algorithm and DDA* algorithm for PMSS problem. In DDA\nalgorithm, the sequences are first distributed to multiple sets according to\ntheir alphabet contents; then sequences in each set are deposited by the\ndeposition algorithm. The DDA* algorithm differs from the DDA algorithm in that\nthe DDA* algorithm distributes sequences by clustering based on sequence\nprofiles. Experiments show that DDA and DDA* always output results with smaller\ncosts than other algorithms, and DDA* outperforms DDA in most instances. The\nDDA and DDA* algorithms are also efficient both in time and space.\n", "versions": [{"version": "v1", "created": "Tue, 7 Apr 2009 23:14:06 GMT"}, {"version": "v2", "created": "Thu, 16 Apr 2009 03:28:21 GMT"}, {"version": "v3", "created": "Wed, 28 Apr 2010 23:02:08 GMT"}, {"version": "v4", "created": "Fri, 30 Apr 2010 02:29:55 GMT"}], "update_date": "2010-05-03", "authors_parsed": [["Ning", "Kang", ""], ["Leong", "Hon Wai", ""]]}, {"id": "0904.1840", "submitter": "Soummya Kar", "authors": "Usman A. Khan, Soummya Kar, and Jose M. F. Moura", "title": "Higher Dimensional Consensus: Learning in Large-Scale Networks", "comments": "30 pages, 4 figures Submitted for journal publication", "journal-ref": "U. A. Khan, S. Kar, and J. M. F. Moura, \"Higher dimensional\n  consensus: Learning in large-scale networks,\" IEEE Transactions on Signal\n  Processing, vol. 58, no. 5, pp. 2836-2849, May 2010", "doi": "10.1109/TSP.2010.2042482", "report-no": null, "categories": "cs.IT cs.DC math.IT math.OC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The paper presents higher dimension consensus (HDC) for large-scale networks.\nHDC generalizes the well-known average-consensus algorithm. It divides the\nnodes of the large-scale network into anchors and sensors. Anchors are nodes\nwhose states are fixed over the HDC iterations, whereas sensors are nodes that\nupdate their states as a linear combination of the neighboring states. Under\nappropriate conditions, we show that the sensor states converge to a linear\ncombination of the anchor states. Through the concept of anchors, HDC captures\nin a unified framework several interesting network tasks, including distributed\nsensor localization, leader-follower, distributed Jacobi to solve linear\nsystems of algebraic equations, and, of course, average-consensus. In many\nnetwork applications, it is of interest to learn the weights of the distributed\nlinear algorithm so that the sensors converge to a desired state. We term this\ninverse problem the HDC learning problem. We pose learning in HDC as a\nconstrained non-convex optimization problem, which we cast in the framework of\nmulti-objective optimization (MOP) and to which we apply Pareto optimality. We\nprove analytically relevant properties of the MOP solutions and of the Pareto\nfront from which we derive the solution to learning in HDC. Finally, the paper\nshows how the MOP approach resolves interesting tradeoffs (speed of convergence\nversus quality of the final state) arising in learning in HDC in resource\nconstrained networks.\n", "versions": [{"version": "v1", "created": "Sun, 12 Apr 2009 06:08:39 GMT"}], "update_date": "2013-12-19", "authors_parsed": [["Khan", "Usman A.", ""], ["Kar", "Soummya", ""], ["Moura", "Jose M. F.", ""]]}, {"id": "0904.1902", "submitter": "Zhilin Wu", "authors": "Stephane Grumbach (INRIA Liama), Zhilin Wu (CASIA Liama)", "title": "On Distributed Model Checking of MSO on Graphs", "comments": "30 pages, 4 figures, llncs.cls,llncsdoc.sty", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO cs.DC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We consider distributed model-checking of Monadic Second-Order logic (MSO) on\ngraphs which constitute the topology of communication networks. The graph is\nthus both the structure being checked and the system on which the distributed\ncomputation is performed. We prove that MSO can be distributively model-checked\nwith only a constant number of messages sent over each link for planar networks\nwith bounded diameter, as well as for networks with bounded degree and bounded\ntree-length. The distributed algorithms rely on nontrivial transformations of\nlinear time sequential algorithms for tree decompositions of bounded tree-width\ngraphs.\n", "versions": [{"version": "v1", "created": "Mon, 13 Apr 2009 04:33:15 GMT"}], "update_date": "2009-04-14", "authors_parsed": [["Grumbach", "Stephane", "", "INRIA Liama"], ["Wu", "Zhilin", "", "CASIA Liama"]]}, {"id": "0904.1915", "submitter": "Zhilin Wu", "authors": "Stephane Grumbach (INRIA Liama), Zhilin Wu (CASIA Liama)", "title": "Logical locality entails frugal distributed computation over graphs", "comments": "31 pages, 0 figures", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO cs.DC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  First-order logic is known to have limited expressive power over finite\nstructures. It enjoys in particular the locality property, which states that\nfirst-order formulae cannot have a global view of a structure. This limitation\nensures on their low sequential computational complexity. We show that the\nlocality impacts as well on their distributed computational complexity. We use\nfirst-order formulae to describe the properties of finite connected graphs,\nwhich are the topology of communication networks, on which the first-order\nformulae are also evaluated. We show that over bounded degree networks and\nplanar networks, first-order properties can be frugally evaluated, that is,\nwith only a bounded number of messages, of size logarithmic in the number of\nnodes, sent over each link. Moreover, we show that the result carries over for\nthe extension of first-order logic with unary counting.\n", "versions": [{"version": "v1", "created": "Mon, 13 Apr 2009 06:16:39 GMT"}], "update_date": "2009-04-14", "authors_parsed": [["Grumbach", "Stephane", "", "INRIA Liama"], ["Wu", "Zhilin", "", "CASIA Liama"]]}, {"id": "0904.2203", "submitter": "Imran Pirwani", "authors": "Imran A. Pirwani (1), Mohammad R. Salavatipour (1) ((1) Department of\n  Computing Science, University of Alberta, Edmonton, Canada)", "title": "A Weakly-Robust PTAS for Minimum Clique Partition in Unit Disk Graphs", "comments": "21 pages, 9 figures", "journal-ref": null, "doi": "10.1007/978-3-642-13731-0_19", "report-no": null, "categories": "cs.CG cs.DC cs.DM cs.DS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We consider the problem of partitioning the set of vertices of a given unit\ndisk graph (UDG) into a minimum number of cliques. The problem is NP-hard and\nvarious constant factor approximations are known, with the current best ratio\nof 3. Our main result is a {\\em weakly robust} polynomial time approximation\nscheme (PTAS) for UDGs expressed with edge-lengths, it either (i) computes a\nclique partition or (ii) gives a certificate that the graph is not a UDG; for\nthe case (i) that it computes a clique partition, we show that it is guaranteed\nto be within $(1+\\eps)$ ratio of the optimum if the input is UDG; however if\nthe input is not a UDG it either computes a clique partition as in case (i)\nwith no guarantee on the quality of the clique partition or detects that it is\nnot a UDG. Noting that recognition of UDG's is NP-hard even if we are given\nedge lengths, our PTAS is a weakly-robust algorithm. Our algorithm can be\ntransformed into an $O(\\frac{\\log^* n}{\\eps^{O(1)}})$ time distributed PTAS.\n  We consider a weighted version of the clique partition problem on vertex\nweighted UDGs that generalizes the problem. We note some key distinctions with\nthe unweighted version, where ideas useful in obtaining a PTAS breakdown. Yet,\nsurprisingly, it admits a $(2+\\eps)$-approximation algorithm for the weighted\ncase where the graph is expressed, say, as an adjacency matrix. This improves\non the best known 8-approximation for the {\\em unweighted} case for UDGs\nexpressed in standard form.\n", "versions": [{"version": "v1", "created": "Tue, 14 Apr 2009 20:44:57 GMT"}, {"version": "v2", "created": "Thu, 3 Dec 2009 22:50:13 GMT"}], "update_date": "2015-05-13", "authors_parsed": [["Pirwani", "Imran A.", ""], ["Salavatipour", "Mohammad R.", ""]]}, {"id": "0904.2306", "submitter": "Ching-Lueh Chang", "authors": "Ching-Lueh Chang and Yuh-Dauh Lyuu", "title": "On irreversible dynamic monopolies in general graphs", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DM cs.DC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Consider the following coloring process in a simple directed graph $G(V,E)$\nwith positive indegrees. Initially, a set $S$ of vertices are white, whereas\nall the others are black. Thereafter, a black vertex is colored white whenever\nmore than half of its in-neighbors are white. The coloring process ends when no\nadditional vertices can be colored white. If all vertices end up white, we call\n$S$ an irreversible dynamic monopoly (or dynamo for short) under the\nstrict-majority scenario. An irreversible dynamo under the simple-majority\nscenario is defined similarly except that a black vertex is colored white when\nat least half of its in-neighbors are white. We derive upper bounds of\n$(2/3)\\,|\\,V\\,|$ and $|\\,V\\,|/2$ on the minimum sizes of irreversible dynamos\nunder the strict and the simple-majority scenarios, respectively. For the\nspecial case when $G$ is an undirected connected graph, we prove the existence\nof an irreversible dynamo with size at most $\\lceil |\\,V\\,|/2 \\rceil$ under the\nstrict-majority scenario. Let $\\epsilon>0$ be any constant. We also show that,\nunless $\\text{NP}\\subseteq \\text{TIME}(n^{O(\\ln \\ln n)}),$ no polynomial-time,\n$((1/2-\\epsilon)\\ln |\\,V\\,|)$-approximation algorithms exist for finding the\nminimum irreversible dynamo under either the strict or the simple-majority\nscenario. The inapproximability results hold even for bipartite graphs with\ndiameter at most 8.\n", "versions": [{"version": "v1", "created": "Wed, 15 Apr 2009 12:56:19 GMT"}, {"version": "v2", "created": "Mon, 26 Oct 2009 15:43:01 GMT"}, {"version": "v3", "created": "Tue, 9 Mar 2010 16:55:18 GMT"}], "update_date": "2010-03-10", "authors_parsed": [["Chang", "Ching-Lueh", ""], ["Lyuu", "Yuh-Dauh", ""]]}, {"id": "0904.3087", "submitter": "Arnaud Casteigts", "authors": "Arnaud Casteigts (LaBRI), Serge Chaumette (LaBRI), Fr\\'ed\\'eric\n  Guinand (LITIS), Yoann Pign\\'e (LITIS)", "title": "Distributed Maintenance of Anytime Available Spanning Trees in Dynamic\n  Networks", "comments": "Distributed Maintenance of Anytime Available Spanning Trees in\n  Dynamic Networks, Poland (2013)", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DC cs.NI", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We address the problem of building and maintaining distributed spanning trees\nin highly dynamic networks, in which topological events can occur at any time\nand any rate, and no stable periods can be assumed. In these harsh\nenvironments, we strive to preserve some properties such as cycle-freeness or\nthe existence of a root in each tree, in order to make it possible to keep\nusing the trees uninterruptedly (to a possible extent). Our algorithm operates\nat a coarse-grain level, using atomic pairwise interactions in a way akin to\nrecent population protocol models. The algorithm relies on a perpetual\nalternation of \\emph{topology-induced splittings} and \\emph{computation-induced\nmergings} of a forest of spanning trees. Each tree in the forest hosts exactly\none token (also called root) that performs a random walk {\\em inside} the tree,\nswitching parent-child relationships as it crosses edges. When two tokens are\nlocated on both sides of a same edge, their trees are merged upon this edge and\none token disappears. Whenever an edge that belongs to a tree disappears, its\nchild endpoint regenerates a new token instantly. The main features of this\napproach is that both \\emph{merging} and \\emph{splitting} are purely localized\nphenomenons. In this paper, we present and motivate the algorithm, and we prove\nits correctness in arbitrary dynamic networks. Then we discuss several\nimplementation choices around this general principle. Preliminary results\nregarding its analysis are also discussed, in particular an analytical\nexpression of the expected merging time for two given trees in a static\ncontext.\n", "versions": [{"version": "v1", "created": "Mon, 20 Apr 2009 18:50:09 GMT"}, {"version": "v2", "created": "Mon, 25 Mar 2013 09:32:17 GMT"}, {"version": "v3", "created": "Mon, 29 Apr 2013 09:25:52 GMT"}, {"version": "v4", "created": "Mon, 22 Jul 2013 19:31:36 GMT"}], "update_date": "2013-07-23", "authors_parsed": [["Casteigts", "Arnaud", "", "LaBRI"], ["Chaumette", "Serge", "", "LaBRI"], ["Guinand", "Fr\u00e9d\u00e9ric", "", "LITIS"], ["Pign\u00e9", "Yoann", "", "LITIS"]]}, {"id": "0904.3157", "submitter": "Zhilin Wu", "authors": "Stephane Grumbach (INRIA Liama), Fang Wang (ISCAS Sklcs) and Zhilin Wu\n  (CASIA Liama)", "title": "On the distributed evaluation of recursive queries over graphs", "comments": "28 pages, 0 figures, NOTERE 2009", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO cs.DC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Logical formalisms such as first-order logic (FO) and fixpoint logic (FP) are\nwell suited to express in a declarative manner fundamental graph\nfunctionalities required in distributed systems. We show that these logics\nconstitute good abstractions for programming distributed systems as a whole,\nsince they can be evaluated in a fully distributed manner with reasonable\ncomplexity upper-bounds. We first prove that FO and FP can be evaluated with a\npolynomial number of messages of logarithmic size. We then show that the\n(global) logical formulas can be translated into rule programs describing the\nlocal behavior of the nodes of the distributed system, which compute equivalent\nresults. Finally, we introduce local fragments of these logics, which preserve\nas much as possible the locality of their distributed computation, while\noffering a rich expressive power for networking functionalities. We prove that\nthey admit tighter upper-bounds with bounded number of messages of bounded\nsize. Finally, we show that the semantics and the complexity of the local\nfragments are preserved over locally consistent networks as well as anonymous\nnetworks, thus showing the robustness of the proposed local logical formalisms.\n", "versions": [{"version": "v1", "created": "Tue, 21 Apr 2009 02:24:13 GMT"}], "update_date": "2009-04-22", "authors_parsed": [["Grumbach", "Stephane", "", "INRIA Liama"], ["Wang", "Fang", "", "ISCAS Sklcs"], ["Wu", "Zhilin", "", "CASIA Liama"]]}, {"id": "0904.4181", "submitter": "Husam Alustwani Mr", "authors": "Husam Alustwani, Jacques M. Bahi, Ahmed Mostefaoui, Michel Salomon", "title": "Java Technology : a Strategic Solution for Interactive Distributed\n  Applications", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In a world demanding the best performance from financial investments,\ndistributed applications occupy the first place among the proposed solutions.\nThis particularity is due to their distributed architecture which is able to\nacheives high performance. Currently, many research works aim to develop tools\nthat facilitate the implementation of such applications. The urgent need for\nsuch applications in all areas pushes researchers to accelerate this process.\nHowever, the lack of standardization results in the absence of strategic\ndecisions taken by computer science community. In this article, we argue that\nJava technology represents an elegant compromise ahead of the list of the\ncurrently available solutions. In fact, by promoting the independence of\nhardware and software, Java technology makes it possible to overcome pitfalls\nthat are inherent to the creation of distributed applications.\n", "versions": [{"version": "v1", "created": "Mon, 27 Apr 2009 15:16:32 GMT"}], "update_date": "2009-04-28", "authors_parsed": [["Alustwani", "Husam", ""], ["Bahi", "Jacques M.", ""], ["Mostefaoui", "Ahmed", ""], ["Salomon", "Michel", ""]]}, {"id": "0904.4512", "submitter": "Andr\\'as Salamon", "authors": "Andr\\'as Z. Salamon and Vashti Galpin", "title": "Bounds on series-parallel slowdown", "comments": "12 pages, 4 figures", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DC cs.CC cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We use activity networks (task graphs) to model parallel programs and\nconsider series-parallel extensions of these networks. Our motivation is\ntwo-fold: the benefits of series-parallel activity networks and the modelling\nof programming constructs, such as those imposed by current parallel computing\nenvironments. Series-parallelisation adds precedence constraints to an activity\nnetwork, usually increasing its makespan (execution time). The slowdown ratio\ndescribes how additional constraints affect the makespan. We disprove an\nexisting conjecture positing a bound of two on the slowdown when workload is\nnot considered. Where workload is known, we conjecture that 4/3 slowdown is\nalways achievable, and prove our conjecture for small networks using max-plus\nalgebra. We analyse a polynomial-time algorithm showing that achieving 4/3\nslowdown is in exp-APX. Finally, we discuss the implications of our results.\n", "versions": [{"version": "v1", "created": "Wed, 29 Apr 2009 01:39:57 GMT"}], "update_date": "2009-04-30", "authors_parsed": [["Salamon", "Andr\u00e1s Z.", ""], ["Galpin", "Vashti", ""]]}]