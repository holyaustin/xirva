[{"id": "0811.0582", "submitter": "Jean Francois Nezan", "authors": "Maxime Pelcat (IETR), Slaheddine Aridhi, Jean Fran\\c{c}ois Nezan\n  (IETR)", "title": "Optimization of automatically generated multi-core code for the LTE\n  RACH-PD algorithm", "comments": null, "journal-ref": "DASIP 2008, Bruxelles : Belgique (2008)", "doi": null, "report-no": null, "categories": "cs.MM cs.DC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Embedded real-time applications in communication systems require high\nprocessing power. Manual scheduling devel-oped for single-processor\napplications is not suited to multi-core architectures. The Algorithm\nArchitecture Matching (AAM) methodology optimizes static application\nimplementation on multi-core architectures. The Random Access Channel Preamble\nDetection (RACH-PD) is an algorithm for non-synchronized access of Long Term\nEvolu-tion (LTE) wireless networks. LTE aims to improve the spectral efficiency\nof the next generation cellular system. This paper de-scribes a complete\nmethodology for implementing the RACH-PD. AAM prototyping is applied to the\nRACH-PD which is modelled as a Synchronous DataFlow graph (SDF). An efficient\nimplemen-tation of the algorithm onto a multi-core DSP, the TI C6487, is then\nexplained. Benchmarks for the solution are given.\n", "versions": [{"version": "v1", "created": "Tue, 4 Nov 2008 19:36:16 GMT"}], "update_date": "2008-11-05", "authors_parsed": [["Pelcat", "Maxime", "", "IETR"], ["Aridhi", "Slaheddine", "", "IETR"], ["Nezan", "Jean Fran\u00e7ois", "", "IETR"]]}, {"id": "0811.1301", "submitter": "Amit Bhosle", "authors": "Amit M. Bhosle and Teofilo F. Gonzalez", "title": "Distributed Algorithms for Computing Alternate Paths Avoiding Failed\n  Nodes and Links", "comments": "8 pages, 2 columns, 1 figure", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DC cs.DS cs.NI", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  A recent study characterizing failures in computer networks shows that\ntransient single element (node/link) failures are the dominant failures in\nlarge communication networks like the Internet. Thus, having the routing paths\nglobally recomputed on a failure does not pay off since the failed element\nrecovers fairly quickly, and the recomputed routing paths need to be discarded.\nIn this paper, we present the first distributed algorithm that computes the\nalternate paths required by some \"proactive recovery schemes\" for handling\ntransient failures. Our algorithm computes paths that avoid a failed node, and\nprovides an alternate path to a particular destination from an upstream\nneighbor of the failed node. With minor modifications, we can have the\nalgorithm compute alternate paths that avoid a failed link as well. To the best\nof our knowledge all previous algorithms proposed for computing alternate paths\nare centralized, and need complete information of the network graph as input to\nthe algorithm.\n", "versions": [{"version": "v1", "created": "Sun, 9 Nov 2008 03:34:39 GMT"}], "update_date": "2008-11-11", "authors_parsed": [["Bhosle", "Amit M.", ""], ["Gonzalez", "Teofilo F.", ""]]}, {"id": "0811.1304", "submitter": "Phuong Ha", "authors": "Phuong Hoai Ha, Philippas Tsigas and Otto J. Anshus", "title": "NB-FEB: An Easy-to-Use and Scalable Universal Synchronization Primitive\n  for Parallel Programming", "comments": null, "journal-ref": null, "doi": null, "report-no": "CS:2008-69", "categories": "cs.DC cs.AR cs.DS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This paper addresses the problem of universal synchronization primitives that\ncan support scalable thread synchronization for large-scale many-core\narchitectures. The universal synchronization primitives that have been deployed\nwidely in conventional architectures like CAS and LL/SC are expected to reach\ntheir scalability limits in the evolution to many-core architectures with\nthousands of cores. We introduce a non-blocking full/empty bit primitive, or\nNB-FEB for short, as a promising synchronization primitive for parallel\nprogramming on may-core architectures. We show that the NB-FEB primitive is\nuniversal, scalable, feasible and convenient to use. NB-FEB, together with\nregisters, can solve the consensus problem for an arbitrary number of processes\n(universality). NB-FEB is combinable, namely its memory requests to the same\nmemory location can be combined into only one memory request, which\nconsequently mitigates performance degradation due to synchronization \"hot\nspots\" (scalability). Since NB-FEB is a variant of the original full/empty bit\nthat always returns a value instead of waiting for a conditional flag, it is as\nfeasible as the original full/empty bit, which has been implemented in many\ncomputer systems (feasibility). The original full/empty bit is well-known as a\nspecial-purpose primitive for fast producer-consumer synchronization and has\nbeen used extensively in the specific domain of applications. In this paper, we\nshow that NB-FEB can be deployed easily as a general-purpose primitive. Using\nNB-FEB, we construct a non-blocking software transactional memory system called\nNBFEB-STM, which can be used to handle concurrent threads conveniently.\nNBFEB-STM is space efficient: the space complexity of each object updated by\n$N$ concurrent threads/transactions is $\\Theta(N)$, the optimal.\n", "versions": [{"version": "v1", "created": "Sun, 9 Nov 2008 00:41:07 GMT"}], "update_date": "2008-11-11", "authors_parsed": [["Ha", "Phuong Hoai", ""], ["Tsigas", "Philippas", ""], ["Anshus", "Otto J.", ""]]}, {"id": "0811.1504", "submitter": "Renat Nuriyev", "authors": "R. Nuriyev", "title": "Parallel execution of portfolio optimization", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Analysis of asset liability management (ALM) strategies especially for long\nterm horizon is a crucial issue for banks, funds and insurance companies.\n  Modern economic models, investment strategies and optimization criteria make\nALM studies computationally very intensive task. It attracts attention to\nmultiprocessor system and especially to the cheapest one: multi core PCs and PC\nclusters.\n  In this article we are analyzing problem of parallel organization of\nportfolio optimization, results of using clusters for optimization and the most\nefficient cluster architecture for these kinds of tasks.\n", "versions": [{"version": "v1", "created": "Mon, 10 Nov 2008 15:52:25 GMT"}], "update_date": "2008-11-11", "authors_parsed": [["Nuriyev", "R.", ""]]}, {"id": "0811.2563", "submitter": "Rajiv Ranjan Mr.", "authors": "Rajiv Ranjan and Rajkumar Buyya", "title": "Decentralized Overlay for Federation of Enterprise Clouds", "comments": "This article appears in Handbook of Research on Scalable Computing\n  Technologies, Kuan-Ching Li, Ching-Hsien Hsu, Laurence Tianruo Yang, Jack\n  Dongarra, and Hans Zima, IGI Global, 2009", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DC cs.NI", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This chapter describes Aneka-Federation, a decentralized and distributed\nsystem that combines enterprise Clouds, overlay networking, and structured\npeer-to-peer techniques to create scalable wide-area networking of compute\nnodes for high-throughput computing. The Aneka-Federation integrates numerous\nsmall scale Aneka Enterprise Cloud services and nodes that are distributed over\nmultiple control and enterprise domains as parts of a single coordinated\nresource leasing abstraction. The system is designed with the aim of making\ndistributed enterprise Cloud resource integration and application programming\nflexible, efficient, and scalable. The system is engineered such that it:\nenables seamless integration of existing Aneka Enterprise Clouds as part of\nsingle wide-area resource leasing federation; self-organizes the system\ncomponents based on a structured peer-to-peer routing methodology; and presents\nend-users with a distributed application composition environment that can\nsupport variety of programming and execution models. This chapter describes the\ndesign and implementation of a novel, extensible and decentralized peer-to-peer\ntechnique that helps to discover, connect and provision the services of Aneka\nEnterprise Clouds among the users who can use different programming models to\ncompose their applications. Evaluations of the system with applications that\nare programmed using the Task and Thread execution models on top of an overlay\nof Aneka Enterprise Clouds have been described here.\n", "versions": [{"version": "v1", "created": "Sun, 16 Nov 2008 10:58:25 GMT"}], "update_date": "2008-11-18", "authors_parsed": [["Ranjan", "Rajiv", ""], ["Buyya", "Rajkumar", ""]]}, {"id": "0811.3176", "submitter": "Danny Bickson", "authors": "Ezra N. Hoch, Danny Bickson and Danny Dolev", "title": "Self-stabilizing Numerical Iterative Computation", "comments": null, "journal-ref": "In the 10th International Symposium on Stabilization, Safety, and\n  Security of Distributed Systems (SSS '08), Detriot, Nov. 2008", "doi": "10.1007/978-3-540-89335-6_9", "report-no": null, "categories": "cs.DC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Many challenging tasks in sensor networks, including sensor calibration,\nranking of nodes, monitoring, event region detection, collaborative filtering,\ncollaborative signal processing, {\\em etc.}, can be formulated as a problem of\nsolving a linear system of equations. Several recent works propose different\ndistributed algorithms for solving these problems, usually by using linear\niterative numerical methods.\n  In this work, we extend the settings of the above approaches, by adding\nanother dimension to the problem. Specifically, we are interested in {\\em\nself-stabilizing} algorithms, that continuously run and converge to a solution\nfrom any initial state. This aspect of the problem is highly important due to\nthe dynamic nature of the network and the frequent changes in the measured\nenvironment.\n  In this paper, we link together algorithms from two different domains. On the\none hand, we use the rich linear algebra literature of linear iterative methods\nfor solving systems of linear equations, which are naturally distributed with\nrapid convergence properties. On the other hand, we are interested in\nself-stabilizing algorithms, where the input to the computation is constantly\nchanging, and we would like the algorithms to converge from any initial state.\nWe propose a simple novel method called \\syncAlg as a self-stabilizing variant\nof the linear iterative methods. We prove that under mild conditions the\nself-stabilizing algorithm converges to a desired result. We further extend\nthese results to handle the asynchronous case.\n  As a case study, we discuss the sensor calibration problem and provide\nsimulation results to support the applicability of our approach.\n", "versions": [{"version": "v1", "created": "Wed, 19 Nov 2008 19:11:46 GMT"}], "update_date": "2008-11-21", "authors_parsed": [["Hoch", "Ezra N.", ""], ["Bickson", "Danny", ""], ["Dolev", "Danny", ""]]}, {"id": "0811.3284", "submitter": "Chen Avin", "authors": "Chen Avin (1), Yuval Emek (2), Erez Kantor (2), Zvi Lotker (1), David\n  Peleg (2) and Liam Roditty (3) ((1) Department of Communication Systems\n  Engineering, Ben Gurion University, Israel (2) Department of Computer Science\n  and Applied Mathematics, Weizmann Institute of Science, Israel, (3)\n  Department of Computer Science, Bar Ilan University, Israel)", "title": "SINR Diagrams: Towards Algorithmically Usable SINR Models of Wireless\n  Networks", "comments": "34 pages, 17 Figures", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.NI cs.DC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The rules governing the availability and quality of connections in a wireless\nnetwork are described by physical models such as the signal-to-interference &\nnoise ratio (SINR) model. For a collection of simultaneously transmitting\nstations in the plane, it is possible to identify a reception zone for each\nstation, consisting of the points where its transmission is received correctly.\nThe resulting SINR diagram partitions the plane into a reception zone per\nstation and the remaining plane where no station can be heard.\n  SINR diagrams appear to be fundamental to understanding the behavior of\nwireless networks, and may play a key role in the development of suitable\nalgorithms for such networks, analogous perhaps to the role played by Voronoi\ndiagrams in the study of proximity queries and related issues in computational\ngeometry. So far, however, the properties of SINR diagrams have not been\nstudied systematically, and most algorithmic studies in wireless networking\nrely on simplified graph-based models such as the unit disk graph (UDG) model,\nwhich conveniently abstract away interference-related complications, and make\nit easier to handle algorithmic issues, but consequently fail to capture\naccurately some important aspects of wireless networks.\n  The current paper focuses on obtaining some basic understanding of SINR\ndiagrams, their properties and their usability in algorithmic applications.\nSpecifically, based on some algebraic properties of the polynomials defining\nthe reception zones we show that assuming uniform power transmissions, the\nreception zones are convex and relatively well-rounded. These results are then\nused to develop an efficient approximation algorithm for a fundamental point\nlocation problem in wireless networks.\n", "versions": [{"version": "v1", "created": "Thu, 20 Nov 2008 08:49:48 GMT"}, {"version": "v2", "created": "Wed, 10 Dec 2008 13:39:32 GMT"}], "update_date": "2008-12-10", "authors_parsed": [["Avin", "Chen", ""], ["Emek", "Yuval", ""], ["Kantor", "Erez", ""], ["Lotker", "Zvi", ""], ["Peleg", "David", ""], ["Roditty", "Liam", ""]]}, {"id": "0811.3760", "submitter": "Sebastien Tixeuil", "authors": "St\\'ephane Devismes, Toshimitsu Masuzawa, S\\'ebastien Tixeuil (LIP6)", "title": "Communication Efficiency in Self-stabilizing Silent Protocols", "comments": null, "journal-ref": null, "doi": null, "report-no": "RR-6731", "categories": "cs.DS cs.CC cs.DC cs.NI", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Self-stabilization is a general paradigm to provide forward recovery\ncapabilities to distributed systems and networks. Intuitively, a protocol is\nself-stabilizing if it is able to recover without external intervention from\nany catastrophic transient failure. In this paper, our focus is to lower the\ncommunication complexity of self-stabilizing protocols \\emph{below} the need of\nchecking every neighbor forever. In more details, the contribution of the paper\nis threefold: (i) We provide new complexity measures for communication\nefficiency of self-stabilizing protocols, especially in the stabilized phase or\nwhen there are no faults, (ii) On the negative side, we show that for\nnon-trivial problems such as coloring, maximal matching, and maximal\nindependent set, it is impossible to get (deterministic or probabilistic)\nself-stabilizing solutions where every participant communicates with less than\nevery neighbor in the stabilized phase, and (iii) On the positive side, we\npresent protocols for coloring, maximal matching, and maximal independent set\nsuch that a fraction of the participants communicates with exactly one neighbor\nin the stabilized phase.\n", "versions": [{"version": "v1", "created": "Sun, 23 Nov 2008 17:29:25 GMT"}], "update_date": "2008-11-25", "authors_parsed": [["Devismes", "St\u00e9phane", "", "LIP6"], ["Masuzawa", "Toshimitsu", "", "LIP6"], ["Tixeuil", "S\u00e9bastien", "", "LIP6"]]}]