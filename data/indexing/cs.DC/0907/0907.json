[{"id": "0907.0929", "submitter": "Marc Shapiro", "authors": "Mihai Letia (LIP), Nuno Pregui\\c{c}a (CITI/Sep. Inform\\'atica, FCT),\n  Marc Shapiro (LIP6, Inria Rocquencourt)", "title": "CRDTs: Consistency without concurrency control", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  A CRDT is a data type whose operations commute when they are concurrent.\nReplicas of a CRDT eventually converge without any complex concurrency control.\nAs an existence proof, we exhibit a non-trivial CRDT: a shared edit buffer\ncalled Treedoc. We outline the design, implementation and performance of\nTreedoc. We discuss how the CRDT concept can be generalised, and its\nlimitations.\n", "versions": [{"version": "v1", "created": "Mon, 6 Jul 2009 08:01:05 GMT"}], "update_date": "2009-07-07", "authors_parsed": [["Letia", "Mihai", "", "LIP"], ["Pregui\u00e7a", "Nuno", "", "CITI/Sep. Inform\u00e1tica, FCT"], ["Shapiro", "Marc", "", "LIP6, Inria Rocquencourt"]]}, {"id": "0907.1005", "submitter": "Julien Cohen", "authors": "Julien Cohen (LINA)", "title": "A class of structured P2P systems supporting browsing", "comments": "14 pages", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.IR cs.DC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Browsing is a way of finding documents in a large amount of data which is\ncomplementary to querying and which is particularly suitable for multimedia\ndocuments. Locating particular documents in a very large collection of\nmultimedia documents such as the ones available in peer to peer networks is a\ndifficult task. However, current peer to peer systems do not allow to do this\nby browsing. In this report, we show how one can build a peer to peer system\nsupporting a kind of browsing. In our proposal, one must extend an existing\ndistributed hash table system with a few features : handling partial hash-keys\nand providing appropriate routing mechanisms for these hash-keys. We give such\nan algorithm for the particular case of the Tapestry distributed hash table.\nThis is a work in progress as no proper validation has been done yet.\n", "versions": [{"version": "v1", "created": "Mon, 6 Jul 2009 14:24:27 GMT"}], "update_date": "2009-07-07", "authors_parsed": [["Cohen", "Julien", "", "LINA"]]}, {"id": "0907.1065", "submitter": "Ramasuri Narayanam", "authors": "Ramasuri Narayanam, and Y. Narahari", "title": "Design of an Optimal Bayesian Incentive Compatible Broadcast Protocol\n  for Ad hoc Networks with Rational Nodes", "comments": "This version of the manuscript is published in IEEE Journal on\n  Selected Areas in Communications (IEEE JSAC), VOL. 26, NO. 7, September 2008", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.GT cs.AI cs.DC cs.NI", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Nodes in an ad hoc wireless network incur certain costs for forwarding\npackets since packet forwarding consumes the resources of the nodes. If the\nnodes are rational, free packet forwarding by the nodes cannot be taken for\ngranted and incentive based protocols are required to stimulate cooperation\namong the nodes. Existing incentive based approaches are based on the VCG\n(Vickrey-Clarke-Groves) mechanism which leads to high levels of incentive\nbudgets and restricted applicability to only certain topologies of networks.\nMoreover, the existing approaches have only focused on unicast and multicast.\nMotivated by this, we propose an incentive based broadcast protocol that\nsatisfies Bayesian incentive compatibility and minimizes the incentive budgets\nrequired by the individual nodes. The proposed protocol, which we call {\\em\nBIC-B} (Bayesian incentive compatible broadcast) protocol, also satisfies\nbudget balance. We also derive a necessary and sufficient condition for the\nex-post individual rationality of the BIC-B protocol. The {\\em BIC-B} protocol\nexhibits superior performance in comparison to a dominant strategy incentive\ncompatible broadcast protocol.\n", "versions": [{"version": "v1", "created": "Mon, 6 Jul 2009 18:25:11 GMT"}], "update_date": "2009-07-07", "authors_parsed": [["Narayanam", "Ramasuri", ""], ["Narahari", "Y.", ""]]}, {"id": "0907.1072", "submitter": "Aaron Sterling", "authors": "Aaron Sterling", "title": "Self-Assembling Systems are Distributed Systems", "comments": "Withdrawing because I would like to polish this before submitting it\n  publicly again", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.FL cs.DC cs.RO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In 2004, Klavins et al. introduced the use of graph grammars to describe --\nand to program -- systems of self-assembly. We show that these graph grammars\ncan be embedded in a graph rewriting characterization of distributed systems\nthat was proposed by Degano and Montanari over twenty years ago. We apply this\nembedding to generalize Soloveichik and Winfree's local determinism criterion\n(for achieving a unique terminal assembly), from assembly systems of 4-sided\ntiles that embed in the plane, to arbitrary graph assembly systems. We present\na partial converse of the embedding result, by providing sufficient conditions\nunder which systems of distributed processors can be simulated by graph\nassembly systems topologically, in the plane, and in 3-space. We conclude by\ndefining a new complexity measure: \"surface cost\" (essentially the convex hull\nof the space inhabited by agents at the conclusion of a self-assembled\ncomputation). We show that, for growth-bounded graphs, executing a subroutine\nto find a Maximum Independent Set only increases the surface cost of a\nself-assembling computation by a constant factor. We obtain this complexity\nbound by using the simulation results to import the distributed computing\nnotions of \"local synchronizer\" and \"deterministic coin flipping\" into\nself-assembly.\n", "versions": [{"version": "v1", "created": "Mon, 6 Jul 2009 19:04:52 GMT"}, {"version": "v2", "created": "Wed, 20 Jul 2011 14:01:27 GMT"}], "update_date": "2011-07-21", "authors_parsed": [["Sterling", "Aaron", ""]]}, {"id": "0907.1375", "submitter": "Francois Pellegrini", "authors": "C\\'edric Chevalier (LaBRI, INRIA Bordeaux - Sud-Ouest), Fran\\c{c}ois\n  Pellegrini (LaBRI, INRIA Bordeaux - Sud-Ouest)", "title": "PT-Scotch: A tool for efficient parallel graph ordering", "comments": null, "journal-ref": "Parallel Computing 34, 6-8 (2008) 318-331", "doi": "10.1016/j.parco.2007.12.001", "report-no": null, "categories": "cs.DC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The parallel ordering of large graphs is a difficult problem, because on the\none hand minimum degree algorithms do not parallelize well, and on the other\nhand the obtainment of high quality orderings with the nested dissection\nalgorithm requires efficient graph bipartitioning heuristics, the best\nsequential implementations of which are also hard to parallelize. This paper\npresents a set of algorithms, implemented in the PT-Scotch software package,\nwhich allows one to order large graphs in parallel, yielding orderings the\nquality of which is only slightly worse than the one of state-of-the-art\nsequential algorithms. Our implementation uses the classical nested dissection\napproach but relies on several novel features to solve the parallel graph\nbipartitioning problem. Thanks to these improvements, PT-Scotch produces\nconsistently better orderings than ParMeTiS on large numbers of processors.\n", "versions": [{"version": "v1", "created": "Wed, 8 Jul 2009 15:11:00 GMT"}], "update_date": "2009-07-10", "authors_parsed": [["Chevalier", "C\u00e9dric", "", "LaBRI, INRIA Bordeaux - Sud-Ouest"], ["Pellegrini", "Fran\u00e7ois", "", "LaBRI, INRIA Bordeaux - Sud-Ouest"]]}, {"id": "0907.1587", "submitter": "Thomas Fischbacher", "authors": "Thomas Fischbacher and Hans Fangohr", "title": "Continuum multi-physics modeling with scripting languages: the Nsim\n  simulation compiler prototype for classical field theory", "comments": "50 pages, 5 figures", "journal-ref": null, "doi": null, "report-no": null, "categories": "physics.comp-ph cond-mat.mes-hall cs.DC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We demonstrate that for a broad class of physical systems that can be\ndescribed using classical field theory, automated runtime translation of the\nphysical equations to parallelized finite-element numerical simulation code is\nfeasible. This allows the implementation of multiphysics extension modules to\npopular scripting languages (such as Python) that handle the complete\nspecification of the physical system at script level. We discuss two example\napplications that utilize this framework: the micromagnetic simulation package\n\"Nmag\" as well as a short Python script to study morphogenesis in a\nreaction-diffusion model.\n", "versions": [{"version": "v1", "created": "Thu, 9 Jul 2009 15:32:47 GMT"}], "update_date": "2009-07-12", "authors_parsed": [["Fischbacher", "Thomas", ""], ["Fangohr", "Hans", ""]]}, {"id": "0907.1722", "submitter": "Dai Tri Man Le", "authors": "Ryszard Janicki, Dai Tri Man Le", "title": "Modelling Concurrency with Comtraces and Generalized Comtraces", "comments": "49 pages", "journal-ref": null, "doi": "10.1016/j.ic.2011.08.001", "report-no": null, "categories": "cs.LO cs.DC cs.FL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Comtraces (combined traces) are extensions of Mazurkiewicz traces that can\nmodel the \"not later than\" relationship. In this paper, we first introduce the\nnovel notion of generalized comtraces, extensions of comtraces that can\nadditionally model the \"non-simultaneously\" relationship. Then we study some\nbasic algebraic properties and canonical reprentations of comtraces and\ngeneralized comtraces. Finally we analyze the relationship between generalized\ncomtraces and generalized stratified order structures. The major technical\ncontribution of this paper is a proof showing that generalized comtraces can be\nrepresented by generalized stratified order structures.\n", "versions": [{"version": "v1", "created": "Fri, 10 Jul 2009 04:36:37 GMT"}, {"version": "v2", "created": "Thu, 16 Jul 2009 06:13:21 GMT"}, {"version": "v3", "created": "Wed, 9 Sep 2009 15:16:01 GMT"}, {"version": "v4", "created": "Mon, 18 Jul 2011 17:55:40 GMT"}, {"version": "v5", "created": "Wed, 31 Aug 2011 16:00:34 GMT"}], "update_date": "2011-09-01", "authors_parsed": [["Janicki", "Ryszard", ""], ["Le", "Dai Tri Man", ""]]}, {"id": "0907.2485", "submitter": "Gerard Briscoe Mr", "authors": "Alexandros Marinos and Gerard Briscoe", "title": "Community Cloud Computing", "comments": "11 Pages, 5 figures", "journal-ref": null, "doi": "10.1007/978-3-642-10665-1_43", "report-no": null, "categories": "cs.NI cs.DC cs.SE", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Cloud Computing is rising fast, with its data centres growing at an\nunprecedented rate. However, this has come with concerns over privacy,\nefficiency at the expense of resilience, and environmental sustainability,\nbecause of the dependence on Cloud vendors such as Google, Amazon and\nMicrosoft. Our response is an alternative model for the Cloud\nconceptualisation, providing a paradigm for Clouds in the community, utilising\nnetworked personal computers for liberation from the centralised vendor model.\nCommunity Cloud Computing (C3) offers an alternative architecture, created by\ncombing the Cloud with paradigms from Grid Computing, principles from Digital\nEcosystems, and sustainability from Green Computing, while remaining true to\nthe original vision of the Internet. It is more technically challenging than\nCloud Computing, having to deal with distributed computing issues, including\nheterogeneous nodes, varying quality of service, and additional security\nconstraints. However, these are not insurmountable challenges, and with the\nneed to retain control over our digital lives and the potential environmental\nconsequences, it is a challenge we must pursue.\n", "versions": [{"version": "v1", "created": "Wed, 15 Jul 2009 04:26:32 GMT"}, {"version": "v2", "created": "Mon, 5 Oct 2009 02:33:59 GMT"}, {"version": "v3", "created": "Mon, 12 Oct 2009 07:15:07 GMT"}], "update_date": "2015-05-13", "authors_parsed": [["Marinos", "Alexandros", ""], ["Briscoe", "Gerard", ""]]}, {"id": "0907.2949", "submitter": "Alexander Olshevsky", "authors": "Julien M. Hendrickx, Alex Olshevsky, John N. Tsitsiklis", "title": "Distributed anonymous function computation in information fusion and\n  multiagent systems", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We propose a model for deterministic distributed function computation by a\nnetwork of identical and anonymous nodes, with bounded computation and storage\ncapabilities that do not scale with the network size. Our goal is to\ncharacterize the class of functions that can be computed within this model. In\nour main result, we exhibit a class of non-computable functions, and prove that\nevery function outside this class can at least be approximated. The problem of\ncomputing averages in a distributed manner plays a central role in our\ndevelopment.\n", "versions": [{"version": "v1", "created": "Thu, 16 Jul 2009 22:42:40 GMT"}, {"version": "v2", "created": "Tue, 28 Jul 2009 04:07:34 GMT"}], "update_date": "2009-07-28", "authors_parsed": [["Hendrickx", "Julien M.", ""], ["Olshevsky", "Alex", ""], ["Tsitsiklis", "John N.", ""]]}, {"id": "0907.2974", "submitter": "Serguei Mokhov", "authors": "Serguei A. Mokhov, Shahriar Rostami, Hammad Ali, Min Chen and Yuhong\n  Yan", "title": "Service-Oriented Architectures and Web Services: Course Tutorial and Lab\n  Notes", "comments": "v19 (Winter 2015): 55 pages; TOC; index; course lab/tutorial notes\n  (SOEN487); NOTE: a source of these notes is also maintained on SourceForge", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DC cs.SE", "license": "http://creativecommons.org/licenses/by/4.0/", "abstract": "  This document presents a number of quick-step instructions to get started on\nwriting mini-service-oriented web services-based applications using OpenESB\n2.31, Tomcat 6, GlassFish 2.x/3.0.1 with BPEL support, and Java 1.6+ primarily\nin Scientific Linux 6.6 with user quota restrictions. While the tutorial notes\nare oriented towards the students taking the SOEN487 on service-oriented\narchitectures (SOA) at Computer Science and Software Engineering (CSE)\nDepartment, Faculty of Engineering and Computer Science (ENCS), other may find\nsome of it useful as well outside of CSE or Concordia. The notes are compiled\nmostly based on the students' needs and feedback.\n", "versions": [{"version": "v1", "created": "Fri, 17 Jul 2009 03:36:56 GMT"}, {"version": "v10", "created": "Wed, 2 Feb 2011 20:53:30 GMT"}, {"version": "v11", "created": "Tue, 8 Feb 2011 20:58:18 GMT"}, {"version": "v12", "created": "Wed, 9 Feb 2011 05:43:52 GMT"}, {"version": "v13", "created": "Thu, 10 Feb 2011 20:02:04 GMT"}, {"version": "v14", "created": "Wed, 9 Mar 2011 20:17:58 GMT"}, {"version": "v15", "created": "Wed, 30 Mar 2011 19:59:10 GMT"}, {"version": "v16", "created": "Mon, 26 Sep 2011 20:00:05 GMT"}, {"version": "v17", "created": "Wed, 19 Oct 2011 19:57:13 GMT"}, {"version": "v18", "created": "Mon, 24 Oct 2011 22:32:28 GMT"}, {"version": "v19", "created": "Tue, 29 Dec 2015 01:38:57 GMT"}, {"version": "v2", "created": "Mon, 20 Jul 2009 19:59:35 GMT"}, {"version": "v3", "created": "Tue, 21 Jul 2009 08:30:01 GMT"}, {"version": "v4", "created": "Tue, 21 Jul 2009 22:06:01 GMT"}, {"version": "v5", "created": "Sat, 25 Jul 2009 03:05:36 GMT"}, {"version": "v6", "created": "Tue, 28 Jul 2009 22:32:54 GMT"}, {"version": "v7", "created": "Thu, 13 Jan 2011 19:40:58 GMT"}, {"version": "v8", "created": "Mon, 17 Jan 2011 21:00:00 GMT"}, {"version": "v9", "created": "Wed, 26 Jan 2011 20:34:21 GMT"}], "update_date": "2015-12-31", "authors_parsed": [["Mokhov", "Serguei A.", ""], ["Rostami", "Shahriar", ""], ["Ali", "Hammad", ""], ["Chen", "Min", ""], ["Yan", "Yuhong", ""]]}, {"id": "0907.3118", "submitter": "Olivier Bournez", "authors": "Olivier Bournez, Philippe Chassaing, Johanne Cohen, Lucas Gerin and\n  Xavier Koegler", "title": "On the Convergence of Population Protocols When Population Goes to\n  Infinity", "comments": "Submitted to Applied Mathematics and Computation. 2009", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Population protocols have been introduced as a model of sensor networks\nconsisting of very limited mobile agents with no control over their own\nmovement. A population protocol corresponds to a collection of anonymous\nagents, modeled by finite automata, that interact with one another to carry out\ncomputations, by updating their states, using some rules. Their computational\npower has been investigated under several hypotheses but always when restricted\nto finite size populations. In particular, predicates stably computable in the\noriginal model have been characterized as those definable in Presburger\narithmetic. We study mathematically the convergence of population protocols\nwhen the size of the population goes to infinity. We do so by giving general\nresults, that we illustrate through the example of a particular population\nprotocol for which we even obtain an asymptotic development. This example shows\nin particular that these protocols seem to have a rather different\ncomputational power when a huge population hypothesis is considered.\n", "versions": [{"version": "v1", "created": "Fri, 17 Jul 2009 17:22:12 GMT"}], "update_date": "2009-07-20", "authors_parsed": [["Bournez", "Olivier", ""], ["Chassaing", "Philippe", ""], ["Cohen", "Johanne", ""], ["Gerin", "Lucas", ""], ["Koegler", "Xavier", ""]]}, {"id": "0907.3126", "submitter": "Olivier Bournez", "authors": "Olivier Bournez, Jeremie Chalopin, Johanne Cohen, Xavier Koegler", "title": "Population Protocols that Correspond to Symmetric Games", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.GT cs.DC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Population protocols have been introduced by Angluin et {al.} as a model of\nnetworks consisting of very limited mobile agents that interact in pairs but\nwith no control over their own movement. A collection of anonymous agents,\nmodeled by finite automata, interact pairwise according to some rules that\nupdate their states. The model has been considered as a computational model in\nseveral papers. Input values are initially distributed among the agents, and\nthe agents must eventually converge to the the correct output. Predicates on\nthe initial configurations that can be computed by such protocols have been\ncharacterized under various hypotheses. In an orthogonal way, several\ndistributed systems have been termed in literature as being realizations of\ngames in the sense of game theory. In this paper, we investigate under which\nconditions population protocols, or more generally pairwise interaction rules,\ncan be considered as the result of a symmetric game. We prove that not all\nrules can be considered as symmetric games.% We prove that some basic protocols\ncan be realized using symmetric games. As a side effect of our study, we also\nprove that any population protocol can be simulated by a symmetric one (but not\nnecessarily a game).\n", "versions": [{"version": "v1", "created": "Fri, 17 Jul 2009 18:06:13 GMT"}], "update_date": "2009-07-20", "authors_parsed": [["Bournez", "Olivier", ""], ["Chalopin", "Jeremie", ""], ["Cohen", "Johanne", ""], ["Koegler", "Xavier", ""]]}, {"id": "0907.3330", "submitter": "Carl Hewitt", "authors": "Carl Hewitt", "title": "Inconsistency Robustness in Foundations: Mathematics self proves its own\n  Consistency and Other Matters", "comments": "Notation was made consistent with other articles. arXiv admin note:\n  substantial text overlap with arXiv:0812.4852", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.PL cs.DC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Inconsistency Robustness is performance of information systems with\npervasively inconsistent information. Inconsistency Robustness of the community\nof professional mathematicians is their performance repeatedly repairing\ncontradictions over the centuries. In the Inconsistency Robustness paradigm,\nderiving contradictions have been a progressive development and not \"game\nstoppers.\" Contradictions can be helpful instead of being something to be\n\"swept under the rug\" by denying their existence, which has been repeatedly\nattempted by Establishment Philosophers (beginning with some Pythagoreans).\nSuch denial has delayed mathematical development. This article reports how\nconsiderations of Inconsistency Robustness have recently influenced the\nfoundations of mathematics for Computer Science continuing a tradition\ndeveloping the sociological basis for foundations.\n  The current common understanding is that G\\\"odel proved \"Mathematics cannot\nprove its own consistency, if it is consistent.\" However, the consistency of\nmathematics is proved by a simple argument in this article. Consequently, the\ncurrent common understanding that G\\\"odel proved \"Mathematics cannot prove its\nown consistency, if it is consistent\" is inaccurate.\n  Wittgenstein long ago showed that contradiction in mathematics results from\nthe kind of \"self-referential\" sentence that G\\\"odel used in his argument that\nmathematics cannot prove its own consistency. However, using a typed grammar\nfor mathematical sentences, it can be proved that the kind \"self-referential\"\nsentence that G\\\"odel used in his argument cannot be constructed because\nrequired the fixed point that G\\\"odel used to the construct the\n\"self-referential\" sentence does not exist. In this way, consistency of\nmathematics is preserved without giving up power.\n", "versions": [{"version": "v1", "created": "Mon, 20 Jul 2009 01:44:33 GMT"}, {"version": "v10", "created": "Fri, 20 Nov 2009 21:32:18 GMT"}, {"version": "v11", "created": "Mon, 14 Dec 2009 20:41:52 GMT"}, {"version": "v12", "created": "Tue, 15 Dec 2009 06:42:36 GMT"}, {"version": "v13", "created": "Tue, 29 Dec 2009 22:47:55 GMT"}, {"version": "v14", "created": "Thu, 31 Dec 2009 18:11:14 GMT"}, {"version": "v15", "created": "Tue, 12 Jan 2010 13:35:17 GMT"}, {"version": "v16", "created": "Mon, 8 Mar 2010 15:43:27 GMT"}, {"version": "v17", "created": "Thu, 11 Mar 2010 18:45:30 GMT"}, {"version": "v18", "created": "Mon, 22 Mar 2010 15:06:23 GMT"}, {"version": "v19", "created": "Tue, 23 Mar 2010 06:44:32 GMT"}, {"version": "v2", "created": "Wed, 29 Jul 2009 14:30:08 GMT"}, {"version": "v20", "created": "Wed, 24 Mar 2010 15:33:13 GMT"}, {"version": "v21", "created": "Thu, 8 Apr 2010 10:27:18 GMT"}, {"version": "v22", "created": "Wed, 21 Apr 2010 17:38:39 GMT"}, {"version": "v23", "created": "Thu, 22 Apr 2010 11:40:50 GMT"}, {"version": "v24", "created": "Tue, 27 Apr 2010 02:15:43 GMT"}, {"version": "v25", "created": "Tue, 4 May 2010 16:34:52 GMT"}, {"version": "v26", "created": "Thu, 6 May 2010 20:46:16 GMT"}, {"version": "v27", "created": "Wed, 12 May 2010 16:20:38 GMT"}, {"version": "v28", "created": "Wed, 19 May 2010 18:15:24 GMT"}, {"version": "v29", "created": "Sat, 22 May 2010 14:41:14 GMT"}, {"version": "v3", "created": "Mon, 17 Aug 2009 14:29:50 GMT"}, {"version": "v30", "created": "Mon, 7 Jun 2010 23:11:19 GMT"}, {"version": "v31", "created": "Mon, 21 Jun 2010 16:43:08 GMT"}, {"version": "v32", "created": "Wed, 30 Jun 2010 06:16:43 GMT"}, {"version": "v33", "created": "Mon, 12 Jul 2010 15:51:20 GMT"}, {"version": "v34", "created": "Thu, 15 Jul 2010 17:36:15 GMT"}, {"version": "v35", "created": "Mon, 19 Jul 2010 07:48:43 GMT"}, {"version": "v36", "created": "Mon, 26 Jul 2010 16:48:39 GMT"}, {"version": "v37", "created": "Mon, 9 Aug 2010 08:44:32 GMT"}, {"version": "v38", "created": "Wed, 18 Aug 2010 17:28:42 GMT"}, {"version": "v39", "created": "Mon, 23 Aug 2010 14:48:39 GMT"}, {"version": "v4", "created": "Mon, 24 Aug 2009 14:30:19 GMT"}, {"version": "v40", "created": "Mon, 6 Sep 2010 13:37:37 GMT"}, {"version": "v41", "created": "Fri, 5 Nov 2010 19:37:11 GMT"}, {"version": "v42", "created": "Sat, 8 Jan 2011 03:38:48 GMT"}, {"version": "v43", "created": "Thu, 11 Oct 2012 16:31:11 GMT"}, {"version": "v44", "created": "Mon, 29 Dec 2014 19:46:13 GMT"}, {"version": "v45", "created": "Mon, 9 Feb 2015 05:18:48 GMT"}, {"version": "v46", "created": "Tue, 17 Feb 2015 18:32:13 GMT"}, {"version": "v5", "created": "Sun, 6 Sep 2009 00:43:37 GMT"}, {"version": "v6", "created": "Sun, 4 Oct 2009 16:59:37 GMT"}, {"version": "v7", "created": "Sun, 11 Oct 2009 16:52:58 GMT"}, {"version": "v8", "created": "Tue, 20 Oct 2009 17:59:23 GMT"}, {"version": "v9", "created": "Wed, 4 Nov 2009 16:44:00 GMT"}], "update_date": "2015-02-18", "authors_parsed": [["Hewitt", "Carl", ""]]}, {"id": "0907.4036", "submitter": "Derek Groen", "authors": "D. Groen, S. Harfst, S. Portegies Zwart", "title": "The Living Application: a Self-Organising System for Complex Grid Tasks", "comments": "26 pages, 3 figures, accepted by IJHPCA", "journal-ref": "International Journal of High Performance Computing Applications\n  May 2010 vol. 24 no. 2 185-193", "doi": "10.1177/1094342009347891", "report-no": null, "categories": "cs.DC astro-ph.GA cs.NI", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We present the living application, a method to autonomously manage\napplications on the grid. During its execution on the grid, the living\napplication makes choices on the resources to use in order to complete its\ntasks. These choices can be based on the internal state, or on autonomously\nacquired knowledge from external sensors. By giving limited user capabilities\nto a living application, the living application is able to port itself from one\nresource topology to another. The application performs these actions at\nrun-time without depending on users or external workflow tools. We demonstrate\nthis new concept in a special case of a living application: the living\nsimulation. Today, many simulations require a wide range of numerical solvers\nand run most efficiently if specialized nodes are matched to the solvers. The\nidea of the living simulation is that it decides itself which grid machines to\nuse based on the numerical solver currently in use. In this paper we apply the\nliving simulation to modelling the collision between two galaxies in a test\nsetup with two specialized computers. This simulation switces at run-time\nbetween a GPU-enabled computer in the Netherlands and a GRAPE-enabled machine\nthat resides in the United States, using an oct-tree N-body code whenever it\nruns in the Netherlands and a direct N-body solver in the United States.\n", "versions": [{"version": "v1", "created": "Thu, 23 Jul 2009 12:00:21 GMT"}], "update_date": "2011-09-27", "authors_parsed": [["Groen", "D.", ""], ["Harfst", "S.", ""], ["Zwart", "S. Portegies", ""]]}, {"id": "0907.4622", "submitter": "Rajkumar Buyya", "authors": "Christian Vecchiola, Xingchen Chu, and Rajkumar Buyya", "title": "Aneka: A Software Platform for .NET-based Cloud Computing", "comments": "30 pages, 10 figures", "journal-ref": null, "doi": null, "report-no": "GRIDS-TR-2009-4, Grid Computing and Distributed Systems Laboratory,\n  The University of Melbourne, Australia, May 25, 2009", "categories": "cs.DC cs.CE cs.NI cs.OS cs.PL cs.SE", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Aneka is a platform for deploying Clouds developing applications on top of\nit. It provides a runtime environment and a set of APIs that allow developers\nto build .NET applications that leverage their computation on either public or\nprivate clouds. One of the key features of Aneka is the ability of supporting\nmultiple programming models that are ways of expressing the execution logic of\napplications by using specific abstractions. This is accomplished by creating a\ncustomizable and extensible service oriented runtime environment represented by\na collection of software containers connected together. By leveraging on these\narchitecture advanced services including resource reservation, persistence,\nstorage management, security, and performance monitoring have been implemented.\nOn top of this infrastructure different programming models can be plugged to\nprovide support for different scenarios as demonstrated by the engineering,\nlife science, and industry applications.\n", "versions": [{"version": "v1", "created": "Sun, 26 Jul 2009 02:19:42 GMT"}], "update_date": "2009-07-28", "authors_parsed": [["Vecchiola", "Christian", ""], ["Chu", "Xingchen", ""], ["Buyya", "Rajkumar", ""]]}, {"id": "0907.4810", "submitter": "Robert Grossman", "authors": "Robert Grossman, Yunhong Gu, Michal Sabala, Collin Bennet, Jonathan\n  Seidman and Joe Mambratti", "title": "The Open Cloud Testbed: A Wide Area Testbed for Cloud Computing\n  Utilizing High Performance Network Services", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Recently, a number of cloud platforms and services have been developed for\ndata intensive computing, including Hadoop, Sector, CloudStore (formerly KFS),\nHBase, and Thrift. In order to benchmark the performance of these systems, to\ninvestigate their interoperability, and to experiment with new services based\non flexible compute node and network provisioning capabilities, we have\ndesigned and implemented a large scale testbed called the Open Cloud Testbed\n(OCT). Currently the OCT has 120 nodes in four data centers: Baltimore, Chicago\n(two locations), and San Diego. In contrast to other cloud testbeds, which are\nin small geographic areas and which are based on commodity Internet services,\nthe OCT is a wide area testbed and the four data centers are connected with a\nhigh performance 10Gb/s network, based on a foundation of dedicated lightpaths.\nThis testbed can address the requirements of extremely large data streams that\nchallenge other types of distributed infrastructure. We have also developed\nseveral utilities to support the development of cloud computing systems and\nservices, including novel node and network provisioning services, a monitoring\nsystem, and a RPC system. In this paper, we describe the OCT architecture and\nmonitoring system. We also describe some benchmarks that we developed and some\ninteroperability studies we performed using these benchmarks.\n", "versions": [{"version": "v1", "created": "Tue, 28 Jul 2009 00:54:23 GMT"}], "update_date": "2009-07-29", "authors_parsed": [["Grossman", "Robert", ""], ["Gu", "Yunhong", ""], ["Sabala", "Michal", ""], ["Bennet", "Collin", ""], ["Seidman", "Jonathan", ""], ["Mambratti", "Joe", ""]]}, {"id": "0907.4876", "submitter": "Rajkumar Buyya", "authors": "Mukaddim Pathan and Rajkumar Buyya", "title": "Architecture and Performance Models for QoS-Driven Effective Peering of\n  Content Delivery Networks", "comments": "31 pages, 19 figures", "journal-ref": "Multiagent and Grid Systems, Volume 5, Number 2, Pages: 165-195,\n  ISSN: 1574-1702, IOS Press, Amsterdam, The Netherlands, July 2009", "doi": null, "report-no": null, "categories": "cs.DC cs.NI", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The proprietary nature of existing Content Delivery Networks (CDNs) means\nthey are closed and do not naturally cooperate. A CDN is expected to provide\nhigh performance Internet content delivery through global coverage, which might\nbe an obstacle for new CDN providers, as well as affecting commercial viability\nof existing ones. Finding ways for distinct CDNs to coordinate and cooperate\nwith other CDNs is necessary to achieve better overall service, as perceived by\nend-users, at lower cost. In this paper, we present an architecture to support\npeering arrangements between CDNs, based on a Virtual Organization (VO) model.\nOur approach promotes peering among providers, while upholding user perceived\nperformance. This is achieved through proper policy management of negotiated\nService Level Agreements (SLAs) between peers. We also present a Quality of\nService (QoS)-driven performance modeling approach for peering CDNs in order to\npredict the user perceived performance. We show that peering between CDNs\nupholds user perceived performance by satisfying the target QoS. The\nmethodology presented in this paper provides CDNs a way to dynamically\ndistribute user requests to other peers according to different\nrequest-redirection policies. The model-based approach helps an overloaded CDN\nto return to a normal state by offloading excess requests to the peers. It also\nassists in making concrete QoS guarantee for a CDN provider. Our approach\nendeavors to achieve scalability and resource sharing among CDNs through\neffective peering in a user transparent manner, thus evolving past the current\nlandscape where non-cooperative and distinct CDNs exist.\n", "versions": [{"version": "v1", "created": "Tue, 28 Jul 2009 10:02:15 GMT"}], "update_date": "2009-07-29", "authors_parsed": [["Pathan", "Mukaddim", ""], ["Buyya", "Rajkumar", ""]]}, {"id": "0907.4878", "submitter": "Rajkumar Buyya", "authors": "Rajkumar Buyya, Rajiv Ranjan and Rodrigo N. Calheiros", "title": "Modeling and Simulation of Scalable Cloud Computing Environments and the\n  CloudSim Toolkit: Challenges and Opportunities", "comments": "11 pages, 11 figures", "journal-ref": "Proceedings of the 7th High Performance Computing and Simulation\n  (HPCS 2009) Conference, Leipzig, Germany, June 21 - 24, 2009", "doi": null, "report-no": null, "categories": "cs.DC cs.NI", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Cloud computing aims to power the next generation data centers and enables\napplication service providers to lease data center capabilities for deploying\napplications depending on user QoS (Quality of Service) requirements. Cloud\napplications have different composition, configuration, and deployment\nrequirements. Quantifying the performance of resource allocation policies and\napplication scheduling algorithms at finer details in Cloud computing\nenvironments for different application and service models under varying load,\nenergy performance (power consumption, heat dissipation), and system size is a\nchallenging problem to tackle. To simplify this process, in this paper we\npropose CloudSim: an extensible simulation toolkit that enables modelling and\nsimulation of Cloud computing environments. The CloudSim toolkit supports\nmodelling and creation of one or more virtual machines (VMs) on a simulated\nnode of a Data Center, jobs, and their mapping to suitable VMs. It also allows\nsimulation of multiple Data Centers to enable a study on federation and\nassociated policies for migration of VMs for reliability and automatic scaling\nof applications.\n", "versions": [{"version": "v1", "created": "Tue, 28 Jul 2009 10:11:58 GMT"}], "update_date": "2009-07-29", "authors_parsed": [["Buyya", "Rajkumar", ""], ["Ranjan", "Rajiv", ""], ["Calheiros", "Rodrigo N.", ""]]}, {"id": "0907.5083", "submitter": "EPTCS", "authors": "M. Sakthi Balan (Infosys)", "title": "Serializing the Parallelism in Parallel Communicating Pushdown Automata\n  Systems", "comments": null, "journal-ref": "EPTCS 3, 2009, pp. 59-68", "doi": "10.4204/EPTCS.3.5", "report-no": null, "categories": "cs.FL cs.CL cs.DC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We consider parallel communicating pushdown automata systems (PCPA) and\ndefine a property called known communication for it. We use this property to\nprove that the power of a variant of PCPA, called returning centralized\nparallel communicating pushdown automata (RCPCPA), is equivalent to that of\nmulti-head pushdown automata. The above result presents a new sub-class of\nreturning parallel communicating pushdown automata systems (RPCPA) called\nsimple-RPCPA and we show that it can be written as a finite intersection of\nmulti-head pushdown automata systems.\n", "versions": [{"version": "v1", "created": "Wed, 29 Jul 2009 09:45:32 GMT"}], "update_date": "2009-07-30", "authors_parsed": [["Balan", "M. Sakthi", "", "Infosys"]]}, {"id": "0907.5119", "submitter": "EPTCS", "authors": "Erzs\\'ebet Csuhaj-Varj\\'u, Gy\\\"orgy Vaszil", "title": "On the Size Complexity of Non-Returning Context-Free PC Grammar Systems", "comments": null, "journal-ref": "EPTCS 3, 2009, pp. 91-100", "doi": "10.4204/EPTCS.3.8", "report-no": null, "categories": "cs.FL cs.DC cs.MA", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Improving the previously known best bound, we show that any recursively\nenumerable language can be generated with a non-returning parallel\ncommunicating (PC) grammar system having six context-free components. We also\npresent a non-returning universal PC grammar system generating unary languages,\nthat is, a system where not only the number of components, but also the number\nof productions and the number of nonterminals are limited by certain constants,\nand these size parameters do not depend on the generated language.\n", "versions": [{"version": "v1", "created": "Wed, 29 Jul 2009 13:20:17 GMT"}], "update_date": "2009-07-30", "authors_parsed": [["Csuhaj-Varj\u00fa", "Erzs\u00e9bet", ""], ["Vaszil", "Gy\u00f6rgy", ""]]}, {"id": "0907.5128", "submitter": "EPTCS", "authors": "Martin Kutrib, Andreas Malcher", "title": "Bounded Languages Meet Cellular Automata with Sparse Communication", "comments": null, "journal-ref": "EPTCS 3, 2009, pp. 163-172", "doi": "10.4204/EPTCS.3.15", "report-no": null, "categories": "cs.FL cs.DC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Cellular automata are one-dimensional arrays of interconnected interacting\nfinite automata. We investigate one of the weakest classes, the real-time\none-way cellular automata, and impose an additional restriction on their\ninter-cell communication by bounding the number of allowed uses of the links\nbetween cells. Moreover, we consider the devices as acceptors for bounded\nlanguages in order to explore the borderline at which non-trivial decidability\nproblems of cellular automata classes become decidable. It is shown that even\ndevices with drastically reduced communication, that is, each two neighboring\ncells may communicate only constantly often, accept bounded languages that are\nnot semilinear. If the number of communications is at least logarithmic in the\nlength of the input, several problems are undecidable. The same result is\nobtained for classes where the total number of communications during a\ncomputation is linearly bounded.\n", "versions": [{"version": "v1", "created": "Wed, 29 Jul 2009 13:52:28 GMT"}], "update_date": "2009-07-30", "authors_parsed": [["Kutrib", "Martin", ""], ["Malcher", "Andreas", ""]]}, {"id": "0907.5141", "submitter": "Haipeng Zheng", "authors": "Haipeng Zheng, Sanjeev R. Kulkarni, H. Vincent Poor", "title": "Cooperative Training for Attribute-Distributed Data: Trade-off Between\n  Data Transmission and Performance", "comments": null, "journal-ref": "Proceedings of IEEE Fusion 2009", "doi": null, "report-no": null, "categories": "cs.DC cs.MA", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This paper introduces a modeling framework for distributed regression with\nagents/experts observing attribute-distributed data (heterogeneous data). Under\nthis model, a new algorithm, the iterative covariance optimization algorithm\n(ICOA), is designed to reshape the covariance matrix of the training residuals\nof individual agents so that the linear combination of the individual\nestimators minimizes the ensemble training error. Moreover, a scheme (Minimax\nProtection) is designed to provide a trade-off between the number of data\ninstances transmitted among the agents and the performance of the ensemble\nestimator without undermining the convergence of the algorithm. This scheme\nalso provides an upper bound (with high probability) on the test error of the\nensemble estimator. The efficacy of ICOA combined with Minimax Protection and\nthe comparison between the upper bound and actual performance are both\ndemonstrated by simulations.\n", "versions": [{"version": "v1", "created": "Wed, 29 Jul 2009 14:20:08 GMT"}], "update_date": "2009-07-30", "authors_parsed": [["Zheng", "Haipeng", ""], ["Kulkarni", "Sanjeev R.", ""], ["Poor", "H. Vincent", ""]]}, {"id": "0907.5168", "submitter": "Haipeng Zheng", "authors": "Haipeng Zheng, Sanjeev R. Kulkarni and H. Vincent Poor", "title": "Collaborative Training in Sensor Networks: A graphical model approach", "comments": null, "journal-ref": "Proceedings of IEEE International Workshop on Machine Learning for\n  Signal Processing, 2009", "doi": "10.1109/MLSP.2009.5306188", "report-no": null, "categories": "cs.DC cs.MA", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Graphical models have been widely applied in solving distributed inference\nproblems in sensor networks. In this paper, the problem of coordinating a\nnetwork of sensors to train a unique ensemble estimator under communication\nconstraints is discussed. The information structure of graphical models with\nspecific potential functions is employed, and this thus converts the\ncollaborative training task into a problem of local training plus global\ninference. Two important classes of algorithms of graphical model inference,\nmessage-passing algorithm and sampling algorithm, are employed to tackle\nlow-dimensional, parametrized and high-dimensional, non-parametrized problems\nrespectively. The efficacy of this approach is demonstrated by concrete\nexamples.\n", "versions": [{"version": "v1", "created": "Wed, 29 Jul 2009 15:59:16 GMT"}], "update_date": "2016-11-17", "authors_parsed": [["Zheng", "Haipeng", ""], ["Kulkarni", "Sanjeev R.", ""], ["Poor", "H. Vincent", ""]]}]