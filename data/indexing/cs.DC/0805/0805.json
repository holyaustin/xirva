[{"id": "0805.0087", "submitter": "Sebastien Tixeuil", "authors": "Adnan Vora, Mikhail Nesterenko, S\\'ebastien Tixeuil (LIP6), Sylvie\n  Dela\\\"et (LRI)", "title": "Universe Detectors for Sybil Defense in Ad Hoc Wireless Networks", "comments": null, "journal-ref": null, "doi": null, "report-no": "RR-6529", "categories": "cs.DC cs.CR cs.NI", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The Sybil attack in unknown port networks such as wireless is not considered\ntractable. A wireless node is not capable of independently differentiating the\nuniverse of real nodes from the universe of arbitrary non-existent fictitious\nnodes created by the attacker. Similar to failure detectors, we propose to use\nuniverse detectors to help nodes determine which universe is real. In this\npaper, we (i) define several variants of the neighborhood discovery problem\nunder Sybil attack (ii) propose a set of matching universe detectors (iii)\ndemonstrate the necessity of additional topological constraints for the\nproblems to be solvable: node density and communication range; (iv) present\nSAND -- an algorithm that solves these problems with the help of appropriate\nuniverse detectors, this solution demonstrates that the proposed universe\ndetectors are the weakest detectors possible for each problem.\n", "versions": [{"version": "v1", "created": "Thu, 1 May 2008 11:45:54 GMT"}, {"version": "v2", "created": "Tue, 13 May 2008 08:34:03 GMT"}], "update_date": "2009-04-20", "authors_parsed": [["Vora", "Adnan", "", "LIP6"], ["Nesterenko", "Mikhail", "", "LIP6"], ["Tixeuil", "S\u00e9bastien", "", "LIP6"], ["Dela\u00ebt", "Sylvie", "", "LRI"]]}, {"id": "0805.0444", "submitter": "David Eisenstat", "authors": "David Eisenstat", "title": "Two-enqueuer queue in Common2", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The question of whether all shared objects with consensus number 2 belong to\nCommon2, the set of objects that can be implemented in a wait-free manner by\nany type of consensus number 2, was first posed by Herlihy. In the absence of\ngeneral results, several researchers have obtained implementations for\nrestricted-concurrency versions of FIFO queues. We present the first Common2\nalgorithm for a queue with two enqueuers and any number of dequeuers.\n", "versions": [{"version": "v1", "created": "Sun, 4 May 2008 21:08:50 GMT"}, {"version": "v2", "created": "Tue, 7 Apr 2009 16:54:19 GMT"}], "update_date": "2009-04-07", "authors_parsed": [["Eisenstat", "David", ""]]}, {"id": "0805.0850", "submitter": "Michael Hilker", "authors": "Michael Hilker and Christoph Schommer", "title": "Service Oriented Architecture in Network Security - a novel Organisation\n  in Security Systems", "comments": "4 pages", "journal-ref": "Proceedings of the 3rd International Workshop on Theory of\n  Computer Viruses (TCV 2008), May 2008, Nancy, France", "doi": null, "report-no": null, "categories": "cs.CR cs.DC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Current network security systems are a collection of various security\ncomponents, which are directly installed in the operating system. These check\nthe whole node for suspicious behaviour. Armouring intrusions e.g. have the\nability to hide themselves from being checked. We present in this paper an\nalternative organisation of security systems. The node is completely\nvirtualized with current virtualization systems so that the operating system\nwith applications and the security system is distinguished. The security system\nthen checks the node from outside and the right security components are\nprovided through a service oriented architecture. Due to the running in a\nvirtual machine, the infected nodes can be halted, duplicated, and moved to\nother nodes for further analysis and legal aspects. This organisation is in\nthis article analysed and a preliminary implementation showing promising\nresults are discussed.\n", "versions": [{"version": "v1", "created": "Wed, 7 May 2008 14:13:32 GMT"}], "update_date": "2008-05-08", "authors_parsed": [["Hilker", "Michael", ""], ["Schommer", "Christoph", ""]]}, {"id": "0805.0851", "submitter": "Sebastien Tixeuil", "authors": "Samuel Bernard (LIP6), St\\'ephane Devismes (LRI), Maria Gradinariu\n  Potop-Butucaru (LIP6, INRIA Rocquencourt), S\\'ebastien Tixeuil (LIP6)", "title": "Bounds for self-stabilization in unidirectional networks", "comments": null, "journal-ref": null, "doi": null, "report-no": "RR-6524", "categories": "cs.DS cs.CC cs.DC cs.NI", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  A distributed algorithm is self-stabilizing if after faults and attacks hit\nthe system and place it in some arbitrary global state, the systems recovers\nfrom this catastrophic situation without external intervention in finite time.\nUnidirectional networks preclude many common techniques in self-stabilization\nfrom being used, such as preserving local predicates. In this paper, we\ninvestigate the intrinsic complexity of achieving self-stabilization in\nunidirectional networks, and focus on the classical vertex coloring problem.\nWhen deterministic solutions are considered, we prove a lower bound of $n$\nstates per process (where $n$ is the network size) and a recovery time of at\nleast $n(n-1)/2$ actions in total. We present a deterministic algorithm with\nmatching upper bounds that performs in arbitrary graphs. When probabilistic\nsolutions are considered, we observe that at least $\\Delta + 1$ states per\nprocess and a recovery time of $\\Omega(n)$ actions in total are required (where\n$\\Delta$ denotes the maximal degree of the underlying simple undirected graph).\nWe present a probabilistically self-stabilizing algorithm that uses\n$\\mathtt{k}$ states per process, where $\\mathtt{k}$ is a parameter of the\nalgorithm. When $\\mathtt{k}=\\Delta+1$, the algorithm recovers in expected\n$O(\\Delta n)$ actions. When $\\mathtt{k}$ may grow arbitrarily, the algorithm\nrecovers in expected O(n) actions in total. Thus, our algorithm can be made\noptimal with respect to space or time complexity.\n", "versions": [{"version": "v1", "created": "Wed, 7 May 2008 07:39:14 GMT"}, {"version": "v2", "created": "Tue, 13 May 2008 08:06:10 GMT"}], "update_date": "2009-09-29", "authors_parsed": [["Bernard", "Samuel", "", "LIP6"], ["Devismes", "St\u00e9phane", "", "LRI"], ["Potop-Butucaru", "Maria Gradinariu", "", "LIP6, INRIA Rocquencourt"], ["Tixeuil", "S\u00e9bastien", "", "LIP6"]]}, {"id": "0805.1257", "submitter": "Chadi Kari", "authors": "Chadi Kari, Alexander Russell and Narasimha Shashidhar", "title": "Randomized Work-Competitive Scheduling for Cooperative Computing on\n  $k$-partite Task Graphs", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DC cs.DS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  A fundamental problem in distributed computing is the task of cooperatively\nexecuting a given set of $t$ tasks by $p$ processors where the communication\nmedium is dynamic and subject to failures. The dynamics of the communication\nmedium lead to groups of processors being disconnected and possibly reconnected\nduring the entire course of the computation furthermore tasks can have\ndependencies among them. In this paper, we present a randomized algorithm whose\ncompetitive ratio is dependent on the dynamics of the communication medium and\nalso on the nature of the dependencies among the tasks.\n", "versions": [{"version": "v1", "created": "Fri, 9 May 2008 00:27:28 GMT"}, {"version": "v2", "created": "Sat, 24 Mar 2012 23:52:01 GMT"}], "update_date": "2012-03-27", "authors_parsed": [["Kari", "Chadi", ""], ["Russell", "Alexander", ""], ["Shashidhar", "Narasimha", ""]]}, {"id": "0805.1827", "submitter": "Mireille Bossy", "authors": "Mireille Bossy (INRIA Sophia Antipolis / INRIA Lorraine / IECN),\n  Fran\\c{c}oise Baude (INRIA Sophia Antipolis), Viet Dung Doan (INRIA Sophia\n  Antipolis), Abhijeet Gaikwad (INRIA Sophia Antipolis), Ian Stokes-Rees (INRIA\n  Sophia Antipolis)", "title": "Parallel Pricing Algorithms for Multi--Dimensional Bermudan/American\n  Options using Monte Carlo methods", "comments": null, "journal-ref": "N&deg; RR-6530 (2008)", "doi": "10.1016/j.matcom.2010.08.005", "report-no": "RR-6530", "categories": "cs.DC cs.CE", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In this paper we present two parallel Monte Carlo based algorithms for\npricing multi--dimensional Bermudan/American options. First approach relies on\ncomputation of the optimal exercise boundary while the second relies on\nclassification of continuation and exercise values. We also evaluate the\nperformance of both the algorithms in a desktop grid environment. We show the\neffectiveness of the proposed approaches in a heterogeneous computing\nenvironment, and identify scalability constraints due to the algorithmic\nstructure.\n", "versions": [{"version": "v1", "created": "Tue, 13 May 2008 12:34:04 GMT"}], "update_date": "2014-02-18", "authors_parsed": [["Bossy", "Mireille", "", "INRIA Sophia Antipolis / INRIA Lorraine / IECN"], ["Baude", "Fran\u00e7oise", "", "INRIA Sophia Antipolis"], ["Doan", "Viet Dung", "", "INRIA Sophia\n  Antipolis"], ["Gaikwad", "Abhijeet", "", "INRIA Sophia Antipolis"], ["Stokes-Rees", "Ian", "", "INRIA\n  Sophia Antipolis"]]}, {"id": "0805.1981", "submitter": "Novella Bartolini", "authors": "N. Bartolini, A. Massini, S. Silvestri", "title": "P&P protocol: local coordination of mobile sensors for self-deployment", "comments": "Technical report", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.NI cs.DC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The use of mobile sensors is of great relevance for a number of strategic\napplications devoted to monitoring critical areas where sensors can not be\ndeployed manually. In these networks, each sensor adapts its position on the\nbasis of a local evaluation of the coverage efficiency, thus permitting an\nautonomous deployment.\n  Several algorithms have been proposed to deploy mobile sensors over the area\nof interest. The applicability of these approaches largely depends on a proper\nformalization of rigorous rules to coordinate sensor movements, solve local\nconflicts and manage possible failures of communications and devices.\n  In this paper we introduce P&P, a communication protocol that permits a\ncorrect and efficient coordination of sensor movements in agreement with the\nPUSH&PULL algorithm. We deeply investigate and solve the problems that may\noccur when coordinating asynchronous local decisions in the presence of an\nunreliable transmission medium and possibly faulty devices such as in the\ntypical working scenario of mobile sensor networks.\n  Simulation results show the performance of our protocol under a range of\noperative settings, including conflict situations, irregularly shaped target\nareas, and node failures.\n", "versions": [{"version": "v1", "created": "Wed, 14 May 2008 06:50:58 GMT"}, {"version": "v2", "created": "Wed, 3 Jun 2009 18:40:32 GMT"}], "update_date": "2009-06-03", "authors_parsed": [["Bartolini", "N.", ""], ["Massini", "A.", ""], ["Silvestri", "S.", ""]]}, {"id": "0805.2068", "submitter": "Alexander Shraer", "authors": "Christian Cachin, Idit Keidar, Alexander Shraer", "title": "Fork Sequential Consistency is Blocking", "comments": "7 pages, 3 figures", "journal-ref": null, "doi": null, "report-no": "CCIT 697", "categories": "cs.DC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We consider an untrusted server storing shared data on behalf of clients. We\nshow that no storage access protocol can on the one hand preserve sequential\nconsistency and wait-freedom when the server is correct, and on the other hand\nalways preserve fork sequential consistency.\n", "versions": [{"version": "v1", "created": "Wed, 14 May 2008 14:23:53 GMT"}], "update_date": "2008-12-18", "authors_parsed": [["Cachin", "Christian", ""], ["Keidar", "Idit", ""], ["Shraer", "Alexander", ""]]}, {"id": "0805.2749", "submitter": "Victor Yodaiken", "authors": "Victor Yodaiken", "title": "State and history in operating systems", "comments": "A method based on sequence dependent functions is used to specify and\n  understand the operation of process switch in UNIX like systems", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.SE cs.DC", "license": "http://creativecommons.org/licenses/by/3.0/", "abstract": "  A method of using recursive functions to describe state change is applied to\nprocess switching in UNIX-like operating systems.\n", "versions": [{"version": "v1", "created": "Sun, 18 May 2008 19:44:21 GMT"}], "update_date": "2008-05-20", "authors_parsed": [["Yodaiken", "Victor", ""]]}, {"id": "0805.2854", "submitter": "Feng Xia", "authors": "Feng Xia, Longhua Ma, Jinxiang Dong and Youxian Sun", "title": "Network QoS Management in Cyber-Physical Systems", "comments": "To appear in The 2008 Int.Conf. on Embedded Software and Systems\n  (ICESS), Chengdu, China, July 2008", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.NI cs.DC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Technical advances in ubiquitous sensing, embedded computing, and wireless\ncommunication are leading to a new generation of engineered systems called\ncyber-physical systems (CPS). CPS promises to transform the way we interact\nwith the physical world just as the Internet transformed how we interact with\none another. Before this vision becomes a reality, however, a large number of\nchallenges have to be addressed. Network quality of service (QoS) management in\nthis new realm is among those issues that deserve extensive research efforts.\nIt is envisioned that wireless sensor/actuator networks (WSANs) will play an\nessential role in CPS. This paper examines the main characteristics of WSANs\nand the requirements of QoS provisioning in the context of cyber-physical\ncomputing. Several research topics and challenges are identified. As a sample\nsolution, a feedback scheduling framework is proposed to tackle some of the\nidentified challenges. A simple example is also presented that illustrates the\neffectiveness of the proposed solution.\n", "versions": [{"version": "v1", "created": "Mon, 19 May 2008 12:49:11 GMT"}], "update_date": "2008-12-18", "authors_parsed": [["Xia", "Feng", ""], ["Ma", "Longhua", ""], ["Dong", "Jinxiang", ""], ["Sun", "Youxian", ""]]}, {"id": "0805.2949", "submitter": "Fotis Georgatos Drs", "authors": "Fotis Georgatos, John Kouvakis, John Kouretis", "title": "Performability Aspects of the Atlas Vo; Using Lmbench Suite", "comments": "14 pages, 7 figures; Particular attention should be given to graph\n  int64mul; A related presentation on the subject matter is available by the\n  authors upon request", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.PF cs.CE cs.DC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The ATLAS Virtual Organization is grid's largest Virtual Organization which\nis currently in full production stage. Hereby a case is being made that a user\nworking within that VO is going to face a wide spectrum of different systems,\nwhose heterogeneity is enough to count as \"orders of magnitude\" according to a\nnumber of metrics; including integer/float operations, memory throughput\n(STREAM) and communication latencies. Furthermore, the spread of performance\ndoes not appear to follow any known distribution pattern, which is demonstrated\nin graphs produced during May 2007 measurements. It is implied that the current\npractice where either \"all-WNs-are-equal\" or, the alternative of SPEC-based\nrating used by LCG/EGEE is an oversimplification which is inappropriate and\nexpensive from an operational point of view, therefore new techniques are\nneeded for optimal grid resources allocation.\n", "versions": [{"version": "v1", "created": "Mon, 19 May 2008 19:45:31 GMT"}], "update_date": "2008-12-18", "authors_parsed": [["Georgatos", "Fotis", ""], ["Kouvakis", "John", ""], ["Kouretis", "John", ""]]}, {"id": "0805.3196", "submitter": "Jean-Philippe Auzelle", "authors": "Fr\\'ed\\'eric Autran (CRAN), Jean-Philippe Auzelle (CRAN), Denise\n  Cattan (CRAN), Jean-Luc Garnier (CRAN), Dominique Luzeaux (DGA/CTA/DT/GIP),\n  Fr\\'ed\\'erique Mayer (ERPI), Marc Peyrichon (CRAN), Jean-Ren\\'e Ruault\n  (DGA/CTA/DT/GIP)", "title": "Coupling Component Systems towards Systems of Systems", "comments": null, "journal-ref": "Dans CD ROM - 18th Annual International Symposium of INCOSE, 6th\n  Biennal European System Engineering Conference, INCOSE 2008, Utrecht :\n  Pays-Bas (2008)", "doi": null, "report-no": null, "categories": "cs.DC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Systems of systems (SoS) are a hot topic in our \"fully connected global\nworld\". Our aim is not to provide another definition of what SoS are, but\nrather to focus on the adequacy of reusing standard system architecting\ntechniques within this approach in order to improve performance, fault\ndetection and safety issues in large-scale coupled systems that definitely\nqualify as SoS, whatever the definition is. A key issue will be to secure the\navailability of the services provided by the SoS despite the evolution of the\nvarious systems composing the SoS. We will also tackle contracting issues and\nresponsibility transfers, as they should be addressed to ensure the expected\nbehavior of the SoS whilst the various independently contracted systems evolve\nasynchronously.\n", "versions": [{"version": "v1", "created": "Wed, 21 May 2008 05:02:22 GMT"}], "update_date": "2008-12-18", "authors_parsed": [["Autran", "Fr\u00e9d\u00e9ric", "", "CRAN"], ["Auzelle", "Jean-Philippe", "", "CRAN"], ["Cattan", "Denise", "", "CRAN"], ["Garnier", "Jean-Luc", "", "CRAN"], ["Luzeaux", "Dominique", "", "DGA/CTA/DT/GIP"], ["Mayer", "Fr\u00e9d\u00e9rique", "", "ERPI"], ["Peyrichon", "Marc", "", "CRAN"], ["Ruault", "Jean-Ren\u00e9", "", "DGA/CTA/DT/GIP"]]}, {"id": "0805.3267", "submitter": "Peter Tiedemann", "authors": "Esben Rune Hansen, S. Srinivasa Rao, Peter Tiedemann", "title": "Compressing Binary Decision Diagrams", "comments": "Full (tech-report) version of ECAI 2008 short paper", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.AI cs.DC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The paper introduces a new technique for compressing Binary Decision Diagrams\nin those cases where random access is not required. Using this technique,\ncompression and decompression can be done in linear time in the size of the BDD\nand compression will in many cases reduce the size of the BDD to 1-2 bits per\nnode. Empirical results for our compression technique are presented, including\ncomparisons with previously introduced techniques, showing that the new\ntechnique dominate on all tested instances.\n", "versions": [{"version": "v1", "created": "Wed, 21 May 2008 12:44:23 GMT"}], "update_date": "2008-12-18", "authors_parsed": [["Hansen", "Esben Rune", ""], ["Rao", "S. Srinivasa", ""], ["Tiedemann", "Peter", ""]]}, {"id": "0805.4029", "submitter": "Avik Chaudhuri", "authors": "Avik Chaudhuri", "title": "Event Synchronization by Lightweight Message Passing", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.PL cs.DC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Concurrent ML's events and event combinators facilitate modular concurrent\nprogramming with first-class synchronization abstractions. A standard\nimplementation of these abstractions relies on fairly complex manipulations of\nfirst-class continuations in the underlying language. In this paper, we present\na lightweight implementation of these abstractions in Concurrent Haskell, a\nlanguage that already provides first-order message passing. At the heart of our\nimplementation is a new distributed synchronization protocol. In contrast with\nseveral previous translations of event abstractions in concurrent languages, we\nremain faithful to the standard semantics for events and event combinators; for\nexample, we retain the symmetry of $\\mathtt{choose}$ for expressing selective\ncommunication.\n", "versions": [{"version": "v1", "created": "Tue, 27 May 2008 01:31:05 GMT"}], "update_date": "2008-05-28", "authors_parsed": [["Chaudhuri", "Avik", ""]]}, {"id": "0805.4134", "submitter": "Spyros Sioutas SS", "authors": "V.Chrissikopoulos, G.Papaloukopoulos, E.Sakkopoulos, S. Sioutas", "title": "Design and Implementation Aspects of a novel Java P2P Simulator with GUI", "comments": "8 Pages, 7 figures, This article was accepted for presentation in the\n  IEEE Panhellenic Conference in Informatics (PCI 2008),\n  http://www.aegean.gr/PCI2008", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.NI cs.DB cs.DC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Peer-to-peer networks consist of thousands or millions of nodes that might\njoin and leave arbitrarily. The evaluation of new protocols in real\nenvironments is many times practically impossible, especially at design and\ntesting stages. The purpose of this paper is to describe the implementation\naspects of a new Java based P2P simulator that has been developed to support\nscalability in the evaluation of such P2P dynamic environments. Evolving the\nfunctionality presented by previous solutions, we provide a friendly graphical\nuser interface through which the high-level theoretic researcher/designer of a\nP2P system can easily construct an overlay with the desirable number of nodes\nand evaluate its operations using a number of key distributions. Furthermore,\nthe simulator has built-in ability to produce statistics about the distributed\nstructure. Emphasis was given to the parametrical configuration of the\nsimulator. As a result the developed tool can be utilized in the simulation and\nevaluation procedures of a variety of different protocols, with only few\nchanges in the Java code.\n", "versions": [{"version": "v1", "created": "Tue, 27 May 2008 14:36:20 GMT"}], "update_date": "2008-12-18", "authors_parsed": [["Chrissikopoulos", "V.", ""], ["Papaloukopoulos", "G.", ""], ["Sakkopoulos", "E.", ""], ["Sioutas", "S.", ""]]}, {"id": "0805.4665", "submitter": "Avik Chaudhuri", "authors": "Avik Chaudhuri", "title": "On Secure Distributed Implementations of Dynamic Access Control", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.CR cs.DC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Distributed implementations of access control abound in distributed storage\nprotocols. While such implementations are often accompanied by informal\njustifications of their correctness, our formal analysis reveals that their\ncorrectness can be tricky. In particular, we discover several subtleties in a\nstandard protocol based on capabilities, that can break security under a simple\nspecification of access control. At the same time, we show a sensible\nrefinement of the specification for which a secure implementation of access\ncontrol is possible. Our models and proofs are formalized in the applied pi\ncalculus, following some new techniques that may be of independent interest.\nFinally, we indicate how our principles can be applied to securely distribute\nother state machines.\n", "versions": [{"version": "v1", "created": "Fri, 30 May 2008 03:50:12 GMT"}], "update_date": "2008-06-02", "authors_parsed": [["Chaudhuri", "Avik", ""]]}, {"id": "0805.4680", "submitter": "Marc Shapiro", "authors": "Lamia Benmouffok (INRIA Rocquencourt, LIP6), Jean-Michel Busca (INRIA\n  Rocquencourt, LIP6), Joan Manuel Marqu\\`es (LIP6, UOC), Marc Shapiro (INRIA\n  Rocquencourt, LIP6), Pierre Sutra (INRIA Rocquencourt, LIP6), Georgios\n  Tsoukalas (NTUA)", "title": "Telex: Principled System Support for Write-Sharing in Collaborative\n  Applications", "comments": null, "journal-ref": null, "doi": null, "report-no": "RR-6546", "categories": "cs.OS cs.DC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The Telex system is designed for sharing mutable data in a distributed\nenvironment, particularly for collaborative applications. Users operate on\ntheir local, persistent replica of shared documents; they can work disconnected\nand suffer no network latency. The Telex approach to detect and correct\nconflicts is application independent, based on an action-constraint graph (ACG)\nthat summarises the concurrency semantics of applications. The ACG is stored\nefficiently in a multilog structure that eliminates contention and is optimised\nfor locality. Telex supports multiple applications and multi-document updates.\nThe Telex system clearly separates system logic (which includes replication,\nviews, undo, security, consistency, conflicts, and commitment) from application\nlogic. An example application is a shared calendar for managing multi-user\nmeetings; the system detects meeting conflicts and resolves them consistently.\n", "versions": [{"version": "v1", "created": "Fri, 30 May 2008 07:01:51 GMT"}, {"version": "v2", "created": "Mon, 2 Jun 2008 08:40:53 GMT"}, {"version": "v3", "created": "Tue, 10 Jun 2008 07:13:01 GMT"}], "update_date": "2008-12-18", "authors_parsed": [["Benmouffok", "Lamia", "", "INRIA Rocquencourt, LIP6"], ["Busca", "Jean-Michel", "", "INRIA\n  Rocquencourt, LIP6"], ["Marqu\u00e8s", "Joan Manuel", "", "LIP6, UOC"], ["Shapiro", "Marc", "", "INRIA\n  Rocquencourt, LIP6"], ["Sutra", "Pierre", "", "INRIA Rocquencourt, LIP6"], ["Tsoukalas", "Georgios", "", "NTUA"]]}]