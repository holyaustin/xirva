[{"id": "1110.0334", "submitter": "Sebastien Tixeuil", "authors": "Swan Dubois (LIP6, INRIA Rocquencourt), S\\'ebastien Tixeuil (LIP6,\n  IUF)", "title": "A Taxonomy of Daemons in Self-stabilization", "comments": "26 pages", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DC cs.DM", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We survey existing scheduling hypotheses made in the literature in\nself-stabilization, commonly referred to under the notion of daemon. We show\nthat four main characteristics (distribution, fairness, boundedness, and\nenabledness) are enough to encapsulate the various differences presented in\nexisting work. Our naming scheme makes it easy to compare daemons of particular\nclasses, and to extend existing possibility or impossibility results to new\ndaemons. We further examine existing daemon transformer schemes and provide the\nexact transformed characteristics of those transformers in our taxonomy.\n", "versions": [{"version": "v1", "created": "Mon, 3 Oct 2011 12:09:05 GMT"}], "update_date": "2011-10-04", "authors_parsed": [["Dubois", "Swan", "", "LIP6, INRIA Rocquencourt"], ["Tixeuil", "S\u00e9bastien", "", "LIP6,\n  IUF"]]}, {"id": "1110.0367", "submitter": "Jukka Suomela", "authors": "Juho Hirvonen and Jukka Suomela", "title": "Distributed Maximal Matching: Greedy is Optimal", "comments": "1+15 pages", "journal-ref": null, "doi": "10.1145/2332432.2332464", "report-no": null, "categories": "cs.DC cs.CC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We study distributed algorithms that find a maximal matching in an anonymous,\nedge-coloured graph. If the edges are properly coloured with $k$ colours, there\nis a trivial greedy algorithm that finds a maximal matching in $k-1$\nsynchronous communication rounds. The present work shows that the greedy\nalgorithm is optimal in the general case: any algorithm that finds a maximal\nmatching in anonymous, $k$-edge-coloured graphs requires $k-1$ rounds.\n  If we focus on graphs of maximum degree $\\Delta$, it is known that a maximal\nmatching can be found in $O(\\Delta + \\log^* k)$ rounds, and prior work implies\na lower bound of $\\Omega(\\polylog(\\Delta) + \\log^* k)$ rounds. Our work closes\nthe gap between upper and lower bounds: the complexity is $\\Theta(\\Delta +\n\\log^* k)$ rounds. To our knowledge, this is the first linear-in-$\\Delta$ lower\nbound for the distributed complexity of a classical graph problem.\n", "versions": [{"version": "v1", "created": "Mon, 3 Oct 2011 14:28:26 GMT"}], "update_date": "2013-12-24", "authors_parsed": [["Hirvonen", "Juho", ""], ["Suomela", "Jukka", ""]]}, {"id": "1110.0404", "submitter": "Daniel S. Katz", "authors": "Daniel S. Katz and Matei Ripeanu and Michael Wilde", "title": "Many-Task Computing Tools for Multiscale Modeling", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DC cs.PL", "license": "http://creativecommons.org/licenses/by-nc-sa/3.0/", "abstract": "  This paper discusses the use of many-task computing tools for multiscale\nmodeling. It defines multiscale modeling and places different examples of it on\na coupling spectrum, discusses the Swift parallel scripting language, describes\nthree multiscale modeling applications that could use Swift, and then talks\nabout how the Swift model is being extended to cover more of the multiscale\nmodeling coupling spectrum.\n", "versions": [{"version": "v1", "created": "Mon, 3 Oct 2011 16:26:50 GMT"}], "update_date": "2011-10-04", "authors_parsed": [["Katz", "Daniel S.", ""], ["Ripeanu", "Matei", ""], ["Wilde", "Michael", ""]]}, {"id": "1110.0477", "submitter": "Christian Schulz", "authors": "Peter Sanders and Christian Schulz", "title": "Distributed Evolutionary Graph Partitioning", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.NE cs.DC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We present a novel distributed evolutionary algorithm, KaFFPaE, to solve the\nGraph Partitioning Problem, which makes use of KaFFPa (Karlsruhe Fast Flow\nPartitioner). The use of our multilevel graph partitioner KaFFPa provides new\neffective crossover and mutation operators. By combining these with a scalable\ncommunication protocol we obtain a system that is able to improve the best\nknown partitioning results for many inputs in a very short amount of time. For\nexample, in Walshaw's well known benchmark tables we are able to improve or\nrecompute 76% of entries for the tables with 1%, 3% and 5% imbalance.\n", "versions": [{"version": "v1", "created": "Mon, 3 Oct 2011 20:03:46 GMT"}], "update_date": "2011-10-05", "authors_parsed": [["Sanders", "Peter", ""], ["Schulz", "Christian", ""]]}, {"id": "1110.0510", "submitter": "Sarah Emery Bunn", "authors": "Paul Harrison, Guy Rixon", "title": "IVOA Recommendation: Universal Worker Service Pattern Version 1.0", "comments": null, "journal-ref": null, "doi": "10.5479/ADS/bib/2010ivoa.spec.1010H", "report-no": "REC-UWS-1.0-20101010", "categories": "astro-ph.IM cs.DC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The Universal Worker Service (UWS) pattern defines how to manage asynchronous\nexecution of jobs on a service. Any application of the pattern defines a family\nof related services with a common service contract. Possible uses of the\npattern are also described.\n", "versions": [{"version": "v1", "created": "Mon, 3 Oct 2011 21:17:03 GMT"}], "update_date": "2019-05-22", "authors_parsed": [["Harrison", "Paul", ""], ["Rixon", "Guy", ""]]}, {"id": "1110.0725", "submitter": "Paulo Jesus", "authors": "Paulo Jesus, Carlos Baquero, Paulo S\\'ergio Almeida", "title": "A Survey of Distributed Data Aggregation Algorithms", "comments": "45 pages, Technical Report", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DC cs.DS cs.IR cs.NI", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Distributed data aggregation is an important task, allowing the decentralized\ndetermination of meaningful global properties, that can then be used to direct\nthe execution of other applications. The resulting values result from the\ndistributed computation of functions like COUNT, SUM and AVERAGE. Some\napplication examples can found to determine the network size, total storage\ncapacity, average load, majorities and many others.\n  In the last decade, many different approaches have been proposed, with\ndifferent trade-offs in terms of accuracy, reliability, message and time\ncomplexity. Due to the considerable amount and variety of aggregation\nalgorithms, it can be difficult and time consuming to determine which\ntechniques will be more appropriate to use in specific settings, justifying the\nexistence of a survey to aid in this task.\n  This work reviews the state of the art on distributed data aggregation\nalgorithms, providing three main contributions. First, it formally defines the\nconcept of aggregation, characterizing the different types of aggregation\nfunctions. Second, it succinctly describes the main aggregation techniques,\norganizing them in a taxonomy. Finally, it provides some guidelines toward the\nselection and use of the most relevant techniques, summarizing their principal\ncharacteristics.\n", "versions": [{"version": "v1", "created": "Tue, 4 Oct 2011 15:24:25 GMT"}], "update_date": "2011-10-05", "authors_parsed": [["Jesus", "Paulo", ""], ["Baquero", "Carlos", ""], ["Almeida", "Paulo S\u00e9rgio", ""]]}, {"id": "1110.0732", "submitter": "Iaakov Exman", "authors": "Iaakov Exman and Radel Ben-Av", "title": "Z-States Algebra for a Tunable Multi-Party Entanglement-Distillation\n  Protocol", "comments": "10 pages, 2 figures", "journal-ref": null, "doi": null, "report-no": null, "categories": "quant-ph cs.DC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  W-States have achieved the status of the standard fully symmetric entangled\nstates, for many entanglement application purposes. Z-States are a\ngeneralization of W-States that display an elegant algebra, enabling short\npaths to desired results. This paper describes Z-States algebra starting from\nneat definitions and laying down explicitly some fundamental theorems on\ncomposition and distillation, needed for applications. These theorems are\nsynthesized into a generic tunable Entanglement-Distillation Protocol.\nApplications are readily developed based upon the tunable protocol. A few\nexamples are provided to illustrate the approach generality. A concomitant\ngraphical representation allows fast comprehension of the protocol inputs,\noperations and outcomes.\n", "versions": [{"version": "v1", "created": "Tue, 4 Oct 2011 15:56:41 GMT"}], "update_date": "2011-10-05", "authors_parsed": [["Exman", "Iaakov", ""], ["Ben-Av", "Radel", ""]]}, {"id": "1110.0937", "submitter": "Fokke Dijkstra", "authors": "A.N. Belikov, F. Dijkstra, J.A. Gankema, J.B.A.N. van Hoof, R. Koopman", "title": "Information Systems Playground - The Target Infrastructure, Scaling\n  Astro-WISE into the Petabyte range", "comments": "Accepted for publication in topical issue of Experimental Astronomy\n  on Astro-WISE information system", "journal-ref": null, "doi": null, "report-no": null, "categories": "astro-ph.IM cs.DC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The Target infrastructure has been specially built as a storage and compute\ninfrastructure for the information systems derived from Astro-WISE. This\ninfrastructure will be used by several applications that collaborate in the\narea of information systems within the Target project. It currently consists of\n10 PB of storage and thousands of computational cores. The infrastructure has\nbeen constructed based on the requirements of the applications. The storage is\ncontrolled by the Global Parallel File System of IBM. This file system takes\ncare of the required flexibility by combining storage hardware with different\ncharacteristics into a single file system. It is also very scalable, which\nallows the system to be extended into the future, while replacing old hardware\nwith new technology.\n", "versions": [{"version": "v1", "created": "Wed, 5 Oct 2011 10:11:07 GMT"}], "update_date": "2011-10-06", "authors_parsed": [["Belikov", "A. N.", ""], ["Dijkstra", "F.", ""], ["Gankema", "J. A.", ""], ["van Hoof", "J. B. A. N.", ""], ["Koopman", "R.", ""]]}, {"id": "1110.1015", "submitter": "Marco Sirianni Dr.", "authors": "Simona Perri, Francesco Ricca, Marco Sirianni", "title": "Parallel Instantiation of ASP Programs: Techniques and Experiments", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.PL cs.DC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Answer Set Programming (ASP) is a powerful logic-based programming language,\nwhich is enjoying increasing interest within the scientific community and (very\nrecently) in industry. The evaluation of ASP programs is traditionally carried\nout in two steps. At the first step an input program P undergoes the so-called\ninstantiation (or grounding) process, which produces a program P' semantically\nequivalent to P, but not containing any variable; in turn, P' is evaluated by\nusing a backtracking search algorithm in the second step. It is well-known that\ninstantiation is important for the efficiency of the whole evaluation, might\nbecome a bottleneck in common situations, is crucial in several realworld\napplications, and is particularly relevant when huge input data has to be dealt\nwith. At the time of this writing, the available instantiator modules are not\nable to exploit satisfactorily the latest hardware, featuring\nmulti-core/multi-processor SMP (Symmetric MultiProcessing) technologies. This\npaper presents some parallel instantiation techniques, including load-balancing\nand granularity control heuristics, which allow for the effective exploitation\nof the processing power offered by modern SMP machines. This is confirmed by an\nextensive experimental analysis herein reported.\n  To appear in Theory and Practice of Logic Programming (TPLP).\n  KEYWORDS: Answer Set Programming, Instantiation, Parallelism, Heuristics\n", "versions": [{"version": "v1", "created": "Wed, 5 Oct 2011 15:06:42 GMT"}, {"version": "v2", "created": "Thu, 13 Oct 2011 09:51:24 GMT"}], "update_date": "2011-10-14", "authors_parsed": [["Perri", "Simona", ""], ["Ricca", "Francesco", ""], ["Sirianni", "Marco", ""]]}, {"id": "1110.1046", "submitter": "Reza Sabbaghi", "authors": "Hamid Javashi and Reza Sabbaghi-Nadooshan", "title": "A Novel Elliptic curve cryptography Processor using NoC design", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.CR cs.DC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In this paper, we propose an elliptic curve key generation processor over\nGF(2m) and GF(P) with Network-on-Chip (NoC) design scheme based on binary\nscalar multiplication algorithm. Over the Two last decades, Elliptic Curve\nCryptography (ECC) has gained increasing acceptance in the industry and the\nacademic community. This interest is mainly caused by the same level of\nsecurity with relatively small keys provided by ECC comparing to large key size\nin Rivest Shamir Adleman (RSA). Parallelism can be utilized in different\nhierarchy levels as shown in many publications. By using NoC, a new method with\nthe reduced latency of point multiplication (with parallel field arithmetic) is\nintroduced in this paper.\n", "versions": [{"version": "v1", "created": "Wed, 5 Oct 2011 17:04:04 GMT"}], "update_date": "2011-10-06", "authors_parsed": [["Javashi", "Hamid", ""], ["Sabbaghi-Nadooshan", "Reza", ""]]}, {"id": "1110.1131", "submitter": "Bryce Lelbach", "authors": "Matthew Anderson, Maciej Brodowicz, Hartmut Kaiser, Bryce\n  Adelstein-Lelbach, Thomas Sterling", "title": "Adaptive Mesh Refinement for Astrophysics Applications with ParalleX", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Several applications in astrophysics require adequately resolving many\nphysical and temporal scales which vary over several orders of magnitude.\nAdaptive mesh refinement techniques address this problem effectively but often\nresult in constrained strong scaling performance. The ParalleX execution model\nis an experimental execution model that aims to expose new forms of program\nparallelism and eliminate any global barriers present in a scaling-impaired\napplication such as adaptive mesh refinement. We present two astrophysics\napplications using the ParalleX execution model: a tabulated equation of state\ncomponent for neutron star evolutions and a cosmology model evolution.\nPerformance and strong scaling results from both simulations are presented. The\ntabulated equation of state data are distributed with transparent access over\nthe nodes of the cluster. This allows seamless overlapping of computation with\nthe latencies introduced by the remote access to the table. Because of the\nexpected size increases to the equation of state table, this type of table\npartitioning for neutron star simulations is essential while the implementation\nis greatly simplified by ParalleX semantics.\n", "versions": [{"version": "v1", "created": "Thu, 6 Oct 2011 01:27:28 GMT"}], "update_date": "2011-10-07", "authors_parsed": [["Anderson", "Matthew", ""], ["Brodowicz", "Maciej", ""], ["Kaiser", "Hartmut", ""], ["Adelstein-Lelbach", "Bryce", ""], ["Sterling", "Thomas", ""]]}, {"id": "1110.1553", "submitter": "Julien Langou", "authors": "Jack Dongarra, Mathieu Faverge, Thomas Herault, Julien Langou and and\n  Yves Robert", "title": "Hierarchical QR factorization algorithms for multi-core cluster systems", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This paper describes a new QR factorization algorithm which is especially\ndesigned for massively parallel platforms combining parallel distributed\nmulti-core nodes. These platforms make the present and the foreseeable future\nof high-performance computing. Our new QR factorization algorithm falls in the\ncategory of the tile algorithms which naturally enables good data locality for\nthe sequential kernels executed by the cores (high sequential performance), low\nnumber of messages in a parallel distributed setting (small latency term), and\nfine granularity (high parallelism).\n", "versions": [{"version": "v1", "created": "Fri, 7 Oct 2011 14:51:08 GMT"}], "update_date": "2012-08-27", "authors_parsed": [["Dongarra", "Jack", ""], ["Faverge", "Mathieu", ""], ["Herault", "Thomas", ""], ["Langou", "Julien", ""], ["Robert", "and Yves", ""]]}, {"id": "1110.1579", "submitter": "Mohammed Erritali", "authors": "Mohammed Erritali and Oussama Mohamed Reda and Bouabid El Ouahidi", "title": "A Contribution to Secure the Routing Protocol \"Greedy Perimeter\n  Stateless Routing\" Using a Symmetric Signature-Based AES and MD5 Hash", "comments": null, "journal-ref": "International Journal of Distributed and Parallel Systems (IJDPS)\n  Vol.2, No.5, September 2011 p95-103, ISSN: 0976 - 9757 [Online]; 2229 - 3957\n  [Print]", "doi": "10.5121/ijdps.2011.2509", "report-no": null, "categories": "cs.NI cs.DC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This work presents a contribution to secure the routing protocol GPSR (Greedy\nPerimeter Stateless Routing) for vehicular ad hoc networks, we examine the\npossible attacks against GPSR and security solutions proposed by different\nresearch teams working on ad hoc network security. Then, we propose a solution\nto secure GPSR packet by adding a digital signature based on symmetric\ncryptography generated using the AES algorithm and the MD5 hash function more\nsuited to a mobile environment.\n", "versions": [{"version": "v1", "created": "Fri, 7 Oct 2011 16:27:25 GMT"}], "update_date": "2011-10-10", "authors_parsed": [["Erritali", "Mohammed", ""], ["Reda", "Oussama Mohamed", ""], ["Ouahidi", "Bouabid El", ""]]}, {"id": "1110.1616", "submitter": "Jonathan Carroll", "authors": "Jonathan Carroll-Nellenback, Brandon Shroyer, Adam Frank, and Chen\n  Ding", "title": "Efficient Parallelization for AMR MHD Multiphysics Calculations;\n  Implementation in AstroBEAR", "comments": "Proceedings From 6th Annual International Conference on Numerical\n  Modeling of Space Plasma Flows", "journal-ref": null, "doi": null, "report-no": null, "categories": "astro-ph.IM astro-ph.SR cs.DC physics.comp-ph", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Current AMR simulations require algorithms that are highly parallelized and\nmanage memory efficiently. As compute engines grow larger, AMR simulations will\nrequire algorithms that achieve new levels of efficient parallelization and\nmemory management. We have attempted to employ new techniques to achieve both\nof these goals. Patch or grid based AMR often employs ghost cells to decouple\nthe hyperbolic advances of each grid on a given refinement level. This\ndecoupling allows each grid to be advanced independently. In AstroBEAR we\nutilize this independence by threading the grid advances on each level with\npreference going to the finer level grids. This allows for global load\nbalancing instead of level by level load balancing and allows for greater\nparallelization across both physical space and AMR level. Threading of level\nadvances can also improve performance by interleaving communication with\ncomputation, especially in deep simulations with many levels of refinement. To\nimprove memory management we have employed a distributed tree algorithm that\nrequires processors to only store and communicate local sections of the AMR\ntree structure with neighboring processors.\n", "versions": [{"version": "v1", "created": "Fri, 7 Oct 2011 19:35:15 GMT"}], "update_date": "2011-10-10", "authors_parsed": [["Carroll-Nellenback", "Jonathan", ""], ["Shroyer", "Brandon", ""], ["Frank", "Adam", ""], ["Ding", "Chen", ""]]}, {"id": "1110.1685", "submitter": "Fouad Butt", "authors": "Fouad Butt, Syed Saadat Bokhari, Abdolreza Abhari, Alexander Ferworn", "title": "Scalable Grid Resource Discovery through Distributed Search", "comments": null, "journal-ref": "F. Butt, S. S. Bokhari, A. Abhari, and A. Ferworn. \"Scalable\n  Resource Discovery through Distributed Search.\" International Journal of\n  Distributed and Parallel Systems (IJDPS) 2.5 (2011): 1-19", "doi": "10.5121/ijdps.2011.2501", "report-no": null, "categories": "cs.DC cs.NI", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This paper proposes a simple and scalable web-based model for grid resource\ndiscovery for the Internet. The resource discovery model contains the metadata\nand resource finder web services. The information of resource finder web\nservices is kept in the repositories that are distributed in the application\nlayer of Internet. The resource finder web services will be discovered by\nsending queries to the repositories in a similar way as the DNS protocol. The\nunderlying technology for implementation of the two architectures of this model\nis introduced. These architectures are: Direct and Centralized Web-Based Grid\nResource Discovery. The resource discovery time is computed after simulating\neach of these models in GridSim. By performing scalability tests, we found that\nwhen increasing the load on the grid with more users and resources, the cost of\nour model in comparison to the grid resource discovery time is marginal.\n", "versions": [{"version": "v1", "created": "Sat, 8 Oct 2011 01:15:11 GMT"}], "update_date": "2011-10-11", "authors_parsed": [["Butt", "Fouad", ""], ["Bokhari", "Syed Saadat", ""], ["Abhari", "Abdolreza", ""], ["Ferworn", "Alexander", ""]]}, {"id": "1110.1730", "submitter": "Shinichi Kuribayashi", "authors": "Shin-ichi Kuribayashi", "title": "Optimal Joint Multiple Resource Allocation Method for Cloud Computing\n  Environments", "comments": null, "journal-ref": "International Journal of Research and Reviews in Computer Science\n  (IJRRCS), Vol.2, No.1, March 2011", "doi": null, "report-no": null, "categories": "cs.DC cs.NI", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Cloud computing is a model for enabling convenient, on-demand network access\nto a shared pool of configurable computing resources. To provide cloud\ncomputing services economically, it is important to optimize resource\nallocation under the assumption that the required resource can be taken from a\nshared resource pool. In addition, to be able to provide processing ability and\nstorage capacity, it is necessary to allocate bandwidth to access them at the\nsame time.\n  This paper proposes an optimal resource allocation method for cloud computing\nenvironments. First, this paper develops a resource allocation model of cloud\ncomputing environments, assuming both processing ability and bandwidth are\nallocated simultaneously to each service request and rented out on an hourly\nbasis. The allocated resources are dedicated to each service request. Next,\nthis paper proposes an optimal joint multiple resource allocation method, based\non the above resource allocation model. It is demonstrated by simulation\nevaluation that the proposed method can reduce the request loss probability and\nas a result, reduce the total resource required, compared with the conventional\nallocation method. Then, this paper defines basic principles and a measure for\nachieving fair resource allocation among multiple users in a cloud computing\nenvironment, and proposes a fair joint multiple resource allocation method. It\nis demonstrated by simulation evaluations that the proposed method enables the\nfair resource allocation among multiple users without a large decline in\nresource efficiency. Keywords: Cloud computing, joint multiple resource\nallocation, fairness\n", "versions": [{"version": "v1", "created": "Sat, 8 Oct 2011 12:21:47 GMT"}], "update_date": "2011-10-11", "authors_parsed": [["Kuribayashi", "Shin-ichi", ""]]}, {"id": "1110.1842", "submitter": "Antonio Fern\\'andez Anta", "authors": "Sergio Ar\\'evalo and Antonio Fern\\'andez Anta and Damien Imbs and\n  Ernesto Jim\\'enez and Michel Raynal", "title": "Failure Detectors in Homonymous Distributed Systems (with an Application\n  to Consensus)", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DC cs.DS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This paper addresses the consensus problem in homonymous distributed systems\nwhere processes are prone to crash failures and have no initial knowledge of\nthe system membership (\"homonymous\" means that several processes may have the\nsame identifier). New classes of failure detectors suited to these systems are\nfirst defined. Among them, the classes H\\Omega\\ and H\\Sigma\\ are introduced\nthat are the homonymous counterparts of the classes \\Omega\\ and \\Sigma,\nrespectively. (Recall that the pair <\\Omega,\\Sigma> defines the weakest failure\ndetector to solve consensus.) Then, the paper shows how H\\Omega\\ and H\\Sigma\\\ncan be implemented in homonymous systems without membership knowledge (under\ndifferent synchrony requirements). Finally, two algorithms are presented that\nuse these failure detectors to solve consensus in homonymous asynchronous\nsystems where there is no initial knowledge of the membership. One algorithm\nsolves consensus with <H\\Omega,H\\Sigma>, while the other uses only H\\Omega, but\nneeds a majority of correct processes.\n  Observe that the systems with unique identifiers and anonymous systems are\nextreme cases of homonymous systems from which follows that all these results\nalso apply to these systems. Interestingly, the new failure detector class\nH\\Omega\\ can be implemented with partial synchrony, while the analogous class\nA\\Omega\\ defined for anonymous systems can not be implemented (even in\nsynchronous systems). Hence, the paper provides us with the first proof showing\nthat consensus can be solved in anonymous systems with only partial synchrony\n(and a majority of correct processes).\n", "versions": [{"version": "v1", "created": "Sun, 9 Oct 2011 14:09:44 GMT"}, {"version": "v2", "created": "Tue, 1 Nov 2011 10:45:07 GMT"}, {"version": "v3", "created": "Sun, 27 Nov 2011 13:32:28 GMT"}], "update_date": "2011-11-29", "authors_parsed": [["Ar\u00e9valo", "Sergio", ""], ["Anta", "Antonio Fern\u00e1ndez", ""], ["Imbs", "Damien", ""], ["Jim\u00e9nez", "Ernesto", ""], ["Raynal", "Michel", ""]]}, {"id": "1110.1991", "submitter": "Orhan Dagdeviren", "authors": "Resat Umit Payli, Kayhan Erciyes, Orhan Dagdeviren", "title": "Cluster-Based Load Balancing Algorithms for Grids", "comments": "17 pages, 11 figures; International Journal of Computer Networks,\n  volume3, number 5, 2011", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  E-science applications may require huge amounts of data and high processing\npower where grid infrastructures are very suitable for meeting these\nrequirements. The load distribution in a grid may vary leading to the\nbottlenecks and overloaded sites. We describe a hierarchical dynamic load\nbalancing protocol for Grids. The Grid consists of clusters and each cluster is\nrepresented by a coordinator. Each coordinator first attempts to balance the\nload in its cluster and if this fails, communicates with the other coordinators\nto perform transfer or reception of load. This process is repeated\nperiodically. We analyze the correctness, performance and scalability of the\nproposed protocol and show from the simulation results that our algorithm\nbalances the load by decreasing the number of high loaded nodes in a grid\nenvironment.\n", "versions": [{"version": "v1", "created": "Mon, 10 Oct 2011 10:32:29 GMT"}], "update_date": "2011-10-11", "authors_parsed": [["Payli", "Resat Umit", ""], ["Erciyes", "Kayhan", ""], ["Dagdeviren", "Orhan", ""]]}, {"id": "1110.2435", "submitter": "Tuhin Sahai", "authors": "Amit Surana, Tuhin Sahai and Andrzej Banaszuk", "title": "Iterative Methods for Scalable Uncertainty Quantification in Complex\n  Networks", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "stat.CO cs.DC stat.AP", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In this paper we address the problem of uncertainty management for robust\ndesign, and verification of large dynamic networks whose performance is\naffected by an equally large number of uncertain parameters. Many such networks\n(e.g. power, thermal and communication networks) are often composed of weakly\ninteracting subnetworks. We propose intrusive and non-intrusive iterative\nschemes that exploit such weak interconnections to overcome dimensionality\ncurse associated with traditional uncertainty quantification methods (e.g.\ngeneralized Polynomial Chaos, Probabilistic Collocation) and accelerate\nuncertainty propagation in systems with large number of uncertain parameters.\nThis approach relies on integrating graph theoretic methods and waveform\nrelaxation with generalized Polynomial Chaos, and Probabilistic Collocation,\nrendering these techniques scalable. We analyze convergence properties of this\nscheme and illustrate it on several examples.\n", "versions": [{"version": "v1", "created": "Tue, 11 Oct 2011 17:05:00 GMT"}], "update_date": "2011-10-12", "authors_parsed": [["Surana", "Amit", ""], ["Sahai", "Tuhin", ""], ["Banaszuk", "Andrzej", ""]]}, {"id": "1110.2477", "submitter": "Alet Roux", "authors": "Nan Zhang and Alet Roux and Tomasz Zastawniak", "title": "Parallel Binomial American Option Pricing with (and without) Transaction\n  Costs", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DC q-fin.CP", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We present a parallel algorithm that computes the ask and bid prices of an\nAmerican option when proportional transaction costs apply to the trading of the\nunderlying asset. The algorithm computes the prices on recombining binomial\ntrees, and is designed for modern multi-core processors. Although parallel\noption pricing has been well studied, none of the existing approaches takes\ntransaction costs into consideration. The algorithm that we propose partitions\na binomial tree into blocks. In any round of computation a block is further\npartitioned into regions which are assigned to distinct processors. To minimise\nload imbalance the assignment of nodes to processors is dynamically adjusted\nbefore each new round starts. Synchronisation is required both within a round\nand between two successive rounds. The parallel speedup of the algorithm is\nproportional to the number of processors used. The parallel algorithm was\nimplemented in C/C++ via POSIX Threads, and was tested on a machine with 8\nprocessors. In the pricing of an American put option, the parallel speedup\nagainst an efficient sequential implementation was 5.26 using 8 processors and\n1500 time steps, achieving a parallel efficiency of 65.75%.\n", "versions": [{"version": "v1", "created": "Tue, 11 Oct 2011 19:43:40 GMT"}], "update_date": "2011-10-12", "authors_parsed": [["Zhang", "Nan", ""], ["Roux", "Alet", ""], ["Zastawniak", "Tomasz", ""]]}, {"id": "1110.2561", "submitter": "Vitaliy Kapitan Mr.", "authors": "Alexey A. Peretyatko, Ivan A. Bogatyrev, Vitaliy Yu. Kapitan, Yury V.\n  Kirienko, Konstantin V. Nefedev, Valery I. Belokon", "title": "Rigorous Calculation of the Partition Function for the Finite Number of\n  Ising Spins", "comments": "4 pages 3 figures", "journal-ref": "Materials of the 4th International Multi-Conference on Engineering\n  and Technological Innovation: IMETI 2011 July 19th - July 22nd, 2011 -\n  Orlando, FL, USA", "doi": null, "report-no": null, "categories": "cs.DC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The high-performance scalable parallel algorithm for rigorous calculation of\npartition function of lattice systems with finite number Ising spins was\ndeveloped. The parallel calculations run by C++ code with using of Message\nPassing Interface and massive parallel instructions. The algorithm can be used\nfor the research of the interacting spin systems in the Ising models of 2D and\n3D. The processing power and scalability is analyzed for different parallel and\ndistributed systems. Different methods of the speed up measuring allow obtain\nthe super-linear speeding up for the small number of processes. Program code\ncould be useful also for research by exact method of different Ising spin\nsystems, e.g. system with competition interactions.\n", "versions": [{"version": "v1", "created": "Wed, 12 Oct 2011 03:34:51 GMT"}], "update_date": "2012-02-21", "authors_parsed": [["Peretyatko", "Alexey A.", ""], ["Bogatyrev", "Ivan A.", ""], ["Kapitan", "Vitaliy Yu.", ""], ["Kirienko", "Yury V.", ""], ["Nefedev", "Konstantin V.", ""], ["Belokon", "Valery I.", ""]]}, {"id": "1110.2677", "submitter": "Simplice Donfack", "authors": "Simplice Donfack, Laura Grigori, William D. Gropp, Vivek Kale", "title": "Hybrid static/dynamic scheduling for already optimized dense matrix\n  factorization", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We present the use of a hybrid static/dynamic scheduling strategy of the task\ndependency graph for direct methods used in dense numerical linear algebra.\nThis strategy provides a balance of data locality, load balance, and low\ndequeue overhead. We show that the usage of this scheduling in communication\navoiding dense factorization leads to significant performance gains. On a 48\ncore AMD Opteron NUMA machine, our experiments show that we can achieve up to\n64% improvement over a version of CALU that uses fully dynamic scheduling, and\nup to 30% improvement over the version of CALU that uses fully static\nscheduling. On a 16-core Intel Xeon machine, our hybrid static/dynamic\nscheduling approach is up to 8% faster than the version of CALU that uses a\nfully static scheduling or fully dynamic scheduling. Our algorithm leads to\nspeedups over the corresponding routines for computing LU factorization in well\nknown libraries. On the 48 core AMD NUMA machine, our best implementation is up\nto 110% faster than MKL, while on the 16 core Intel Xeon machine, it is up to\n82% faster than MKL. Our approach also shows significant speedups compared with\nPLASMA on both of these systems.\n", "versions": [{"version": "v1", "created": "Wed, 12 Oct 2011 15:09:45 GMT"}], "update_date": "2011-10-13", "authors_parsed": [["Donfack", "Simplice", ""], ["Grigori", "Laura", ""], ["Gropp", "William D.", ""], ["Kale", "Vivek", ""]]}, {"id": "1110.3843", "submitter": "Shreyas Sundaram", "authors": "Haotian Zhang and Shreyas Sundaram", "title": "Robustness of Information Diffusion Algorithms to Locally Bounded\n  Adversaries", "comments": "Preprint of results to appear at 2012 American Control Conference", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.SI cs.DC cs.MA cs.SY math.OC physics.soc-ph", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We consider the problem of diffusing information in networks that contain\nmalicious nodes. We assume that each normal node in the network has no\nknowledge of the network topology other than an upper bound on the number of\nmalicious nodes in its neighborhood. We introduce a topological property known\nas r-robustness of a graph, and show that this property provides improved\nbounds on tolerating malicious behavior, in comparison to traditional concepts\nsuch as connectivity and minimum degree. We use this topological property to\nanalyze the canonical problems of distributed consensus and broadcasting, and\nprovide sufficient conditions for these operations to succeed. Finally, we\nprovide a construction for r-robust graphs and show that the common\npreferential-attachment model for scale-free networks produces a robust graph.\n", "versions": [{"version": "v1", "created": "Mon, 17 Oct 2011 22:51:50 GMT"}, {"version": "v2", "created": "Wed, 28 Mar 2012 00:25:46 GMT"}], "update_date": "2012-03-29", "authors_parsed": [["Zhang", "Haotian", ""], ["Sundaram", "Shreyas", ""]]}, {"id": "1110.3853", "submitter": "EPTCS", "authors": "Kohei Honda, Alan Mycroft", "title": "Proceedings Third Workshop on Programming Language Approaches to\n  Concurrency and communication-cEntric Software", "comments": "EPTCS 69, 2011", "journal-ref": null, "doi": "10.4204/EPTCS.69", "report-no": null, "categories": "cs.PL cs.DC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This is the proceedings of PLACES'10, the 3rd Workshop on Programming\nLanguage Approaches to Concurrency and Communication-cEntric Software, held in\nPathos, Cyprus, on 21st Mach, 2010, co-located with the ETAPS federated\nconferences. PLACES aims to offer a forum where researchers from different\nfields exchange new ideas on one of the central challenges in programming in\nnear future, the development of programming methodologies and infrastructures\nwhere concurrency and distribution are a norm rather than a marginal concern.\nThe Program Committee, after a careful and thorough reviewing process, selected\nfor presentation in the programme 10 papers out of 14 submissions. Each\nsubmission was evaluated by at least two referees, and the accepted papers were\nselected during two weeks' electronic discussions. This post-proceedings\ncontain the papers which are based on these submissions, incorporating the\nresult of these and further reviews, resulting in strengthened technical\nresults and presentations.\n", "versions": [{"version": "v1", "created": "Tue, 18 Oct 2011 00:04:09 GMT"}], "update_date": "2011-10-19", "authors_parsed": [["Honda", "Kohei", ""], ["Mycroft", "Alan", ""]]}, {"id": "1110.4156", "submitter": "EPTCS", "authors": "Nuno Alves, Raymond Hu (Imperial College London), Nobuko Yoshida\n  (Imperial College London), Pierre-Malo Deni\\'elou (Imperial College London)", "title": "Secure Execution of Distributed Session Programs", "comments": "In Proceedings PLACES 2010, arXiv:1110.3853", "journal-ref": "EPTCS 69, 2011, pp. 1-11", "doi": "10.4204/EPTCS.69.1", "report-no": null, "categories": "cs.DC cs.CR cs.NI cs.PL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The development of the SJ Framework for session-based distributed programming\nis part of recent and ongoing research into integrating session types and\npractical, real-world programming languages. SJ programs featuring session\ntypes (protocols) are statically checked by the SJ compiler to verify the key\nproperty of communication safety, meaning that parties engaged in a session\nonly communicate messages, including higher-order communications via session\ndelegation, that are compatible with the message types expected by the\nrecipient.\n  This paper presents current work on security aspects of the SJ Framework.\nFirstly, we discuss our implementation experience from improving the SJ Runtime\nplatform with security measures to protect and augment communication safety at\nruntime. We implement a transport component for secure session execution that\nuses a modified TLS connection with authentication based on the Secure Remote\nPassword (SRP) protocol. The key technical point is the delicate treatment of\nsecure session delegation to counter a previous vulnerability. We find that the\nmodular design of the SJ Runtime, based on the notion of an Abstract Transport\nfor session communication, supports rapid extension to utilise additional\ntransports whilst separating this concern from the application-level session\nprogramming task. In the second part of this abstract, we formally prove the\ntarget security properties by modelling the extended SJ delegation protocols in\nthe pi-calculus.\n", "versions": [{"version": "v1", "created": "Wed, 19 Oct 2011 02:11:41 GMT"}], "update_date": "2011-10-20", "authors_parsed": [["Alves", "Nuno", "", "Imperial College London"], ["Hu", "Raymond", "", "Imperial College London"], ["Yoshida", "Nobuko", "", "Imperial College London"], ["Deni\u00e9lou", "Pierre-Malo", "", "Imperial College London"]]}, {"id": "1110.4159", "submitter": "EPTCS", "authors": "Marco Carbone (IT University of Copenhagen), Davide Grohmann (IT\n  University of Copenhagen), Thomas T. Hildebrandt (IT University of\n  Copenhagen), Hugo A. L\\'opez (IT University of Copenhagen)", "title": "A Logic for Choreographies", "comments": "In Proceedings PLACES 2010, arXiv:1110.3853", "journal-ref": "EPTCS 69, 2011, pp. 29-43", "doi": "10.4204/EPTCS.69.3", "report-no": null, "categories": "cs.PL cs.DC cs.LO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We explore logical reasoning for the global calculus, a coordination model\nbased on the notion of choreography, with the aim to provide a methodology for\nspecification and verification of structured communications. Starting with an\nextension of Hennessy-Milner logic, we present the global logic (GL), a modal\nlogic describing possible interactions among participants in a choreography. We\nillustrate its use by giving examples of properties on service specifications.\nFinally, we show that, despite GL is undecidable, there is a significant\ndecidable fragment which we provide with a sound and complete proof system for\nchecking validity of formulae.\n", "versions": [{"version": "v1", "created": "Wed, 19 Oct 2011 02:25:48 GMT"}], "update_date": "2011-10-20", "authors_parsed": [["Carbone", "Marco", "", "IT University of Copenhagen"], ["Grohmann", "Davide", "", "IT\n  University of Copenhagen"], ["Hildebrandt", "Thomas T.", "", "IT University of\n  Copenhagen"], ["L\u00f3pez", "Hugo A.", "", "IT University of Copenhagen"]]}, {"id": "1110.4160", "submitter": "EPTCS", "authors": "Prodromos Gerakios (National Technical University of Athens), Nikolaos\n  Papaspyrou (National Technical University of Athens), Konstantinos Sagonas\n  (National Technical University of Athens)", "title": "A Type System for Unstructured Locking that Guarantees Deadlock Freedom\n  without Imposing a Lock Ordering", "comments": "In Proceedings PLACES 2010, arXiv:1110.3853", "journal-ref": "EPTCS 69, 2011, pp. 44-58", "doi": "10.4204/EPTCS.69.4", "report-no": null, "categories": "cs.PL cs.DC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Deadlocks occur in concurrent programs as a consequence of cyclic resource\nacquisition between threads. In this paper we present a novel type system that\nguarantees deadlock freedom for a language with references, unstructured\nlocking primitives, and locks which are implicitly associated with references.\nThe proposed type system does not impose a strict lock acquisition order and\nthus increases programming language expressiveness.\n", "versions": [{"version": "v1", "created": "Wed, 19 Oct 2011 02:29:14 GMT"}], "update_date": "2011-10-20", "authors_parsed": [["Gerakios", "Prodromos", "", "National Technical University of Athens"], ["Papaspyrou", "Nikolaos", "", "National Technical University of Athens"], ["Sagonas", "Konstantinos", "", "National Technical University of Athens"]]}, {"id": "1110.4164", "submitter": "EPTCS", "authors": "Julien Lange (Department of Computer Science, University of\n  Leicester), Emilio Tuosto (Department of Computer Science, University of\n  Leicester)", "title": "A Modular Toolkit for Distributed Interactions", "comments": "In Proceedings PLACES 2010, arXiv:1110.3853", "journal-ref": "EPTCS 69, 2011, pp. 92-110", "doi": "10.4204/EPTCS.69.7", "report-no": null, "categories": "cs.DC cs.PL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We discuss the design, architecture, and implementation of a toolkit which\nsupports some theories for distributed interactions. The main design principles\nof our architecture are flexibility and modularity. Our main goal is to provide\nan easily extensible workbench to encompass current algorithms and incorporate\nfuture developments of the theories. With the help of some examples, we\nillustrate the main features of our toolkit.\n", "versions": [{"version": "v1", "created": "Wed, 19 Oct 2011 02:38:29 GMT"}], "update_date": "2011-10-20", "authors_parsed": [["Lange", "Julien", "", "Department of Computer Science, University of\n  Leicester"], ["Tuosto", "Emilio", "", "Department of Computer Science, University of\n  Leicester"]]}, {"id": "1110.4623", "submitter": "Jeff A Stuart", "authors": "Jeff A. Stuart and John D. Owens", "title": "Efficient Synchronization Primitives for GPUs", "comments": "13 pages with appendix, several figures, plans to submit to CompSci\n  conference in early 2012", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.OS cs.DC cs.DS cs.GR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In this paper, we revisit the design of synchronization\nprimitives---specifically barriers, mutexes, and semaphores---and how they\napply to the GPU. Previous implementations are insufficient due to the\ndiscrepancies in hardware and programming model of the GPU and CPU. We create\nnew implementations in CUDA and analyze the performance of spinning on the GPU,\nas well as a method of sleeping on the GPU, by running a set of memory-system\nbenchmarks on two of the most common GPUs in use, the Tesla- and Fermi-class\nGPUs from NVIDIA. From our results we define higher-level principles that are\nvalid for generic many-core processors, the most important of which is to limit\nthe number of atomic accesses required for a synchronization operation because\natomic accesses are slower than regular memory accesses. We use the results of\nthe benchmarks to critique existing synchronization algorithms and guide our\nnew implementations, and then define an abstraction of GPUs to classify any GPU\nbased on the behavior of the memory system. We use this abstraction to create\nsuitable implementations of the primitives specifically targeting the GPU, and\nanalyze the performance of these algorithms on Tesla and Fermi. We then predict\nperformance on future GPUs based on characteristics of the abstraction. We also\nexamine the roles of spin waiting and sleep waiting in each primitive and how\ntheir performance varies based on the machine abstraction, then give a set of\nguidelines for when each strategy is useful based on the characteristics of the\nGPU and expected contention.\n", "versions": [{"version": "v1", "created": "Thu, 20 Oct 2011 19:43:58 GMT"}], "update_date": "2011-10-21", "authors_parsed": [["Stuart", "Jeff A.", ""], ["Owens", "John D.", ""]]}, {"id": "1110.4854", "submitter": "Nikos Chondros", "authors": "Nikos Chondros, Konstantinos Kokordelis, Mema Roussopoulos", "title": "On the Practicality of `Practical' Byzantine Fault Tolerance", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Byzantine Fault Tolerant (BFT) systems are considered by the systems research\ncommunity to be state of the art with regards to providing reliability in\ndistributed systems. BFT systems provide safety and liveness guarantees with\nreasonable assumptions, amongst a set of nodes where at most f nodes display\narbitrarily incorrect behaviors, known as Byzantine faults. Despite this, BFT\nsystems are still rarely used in practice. In this paper we describe our\nexperience, from an application developer's perspective, trying to leverage the\npublicly available and highly-tuned PBFT middleware (by Castro and Liskov), to\nprovide provable reliability guarantees for an electronic voting application\nwith high security and robustness needs. We describe several obstacles we\nencountered and drawbacks we identified in the PBFT approach. These include\nsome that we tackled, such as lack of support for dynamic client management and\nleaving state management completely up to the application. Others still\nremaining include the lack of robust handling of non-determinism, lack of\nsupport for web-based applications, lack of support for stronger cryptographic\nprimitives, and others. We find that, while many of the obstacles could be\novercome with a revised BFT middleware implementation that is tuned\nspecifically for the needs of the particular application, they require\nsignificant engineering effort and time and their performance implications for\nthe end-application are unclear. An application developer is thus unlikely to\nbe willing to invest the time and effort to do so to leverage the BFT approach.\nWe conclude that the research community needs to focus on the usability of BFT\nalgorithms for real world applications, from the end-developer perspective, in\naddition to continuing to improve the BFT middleware performance, robustness\nand deployment layouts.\n", "versions": [{"version": "v1", "created": "Fri, 21 Oct 2011 18:02:22 GMT"}], "update_date": "2011-10-24", "authors_parsed": [["Chondros", "Nikos", ""], ["Kokordelis", "Konstantinos", ""], ["Roussopoulos", "Mema", ""]]}, {"id": "1110.5371", "submitter": "Alireza Mahdian", "authors": "Alireza Mahdian, John Black, Richard Han and Shivakant Mishra", "title": "MyZone: A Next-Generation Online Social Network", "comments": null, "journal-ref": null, "doi": null, "report-no": "CU-CS-1089-11", "categories": "cs.SI cs.CR cs.DC cs.NI physics.soc-ph", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This technical report considers the design of a social network that would\naddress the shortcomings of the current ones, and identifies user privacy,\nsecurity, and service availability as strong motivations that push the\narchitecture of the proposed design to be distributed. We describe our design\nin detail and identify the property of resiliency as a key objective for the\noverall design philosophy.\n  We define the system goals, threat model, and trust model as part of the\nsystem model, and discuss the challenges in adapting such distributed\nframeworks to become highly available and highly resilient in potentially\nhostile environments. We propose a distributed solution to address these\nchallenges based on a trust-based friendship model for replicating user\nprofiles and disseminating messages, and examine how this approach builds upon\nprior work in distributed Peer-to-Peer (P2P) networks.\n", "versions": [{"version": "v1", "created": "Mon, 24 Oct 2011 22:47:27 GMT"}], "update_date": "2011-10-27", "authors_parsed": [["Mahdian", "Alireza", ""], ["Black", "John", ""], ["Han", "Richard", ""], ["Mishra", "Shivakant", ""]]}, {"id": "1110.5969", "submitter": "William Voorsluys", "authors": "William Voorsluys and Rajkumar Buyya", "title": "Reliable Provisioning of Spot Instances for Compute-intensive\n  Applications", "comments": "8 pages, 4 figures", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Cloud computing providers are now offering their unused resources for leasing\nin the spot market, which has been considered the first step towards a\nfull-fledged market economy for computational resources. Spot instances are\nvirtual machines (VMs) available at lower prices than their standard on-demand\ncounterparts. These VMs will run for as long as the current price is lower than\nthe maximum bid price users are willing to pay per hour. Spot instances have\nbeen increasingly used for executing compute-intensive applications. In spite\nof an apparent economical advantage, due to an intermittent nature of biddable\nresources, application execution times may be prolonged or they may not finish\nat all. This paper proposes a resource allocation strategy that addresses the\nproblem of running compute-intensive jobs on a pool of intermittent virtual\nmachines, while also aiming to run applications in a fast and economical way.\nTo mitigate potential unavailability periods, a multifaceted fault-aware\nresource provisioning policy is proposed. Our solution employs price and\nruntime estimation mechanisms, as well as three fault tolerance techniques,\nnamely checkpointing, task duplication and migration. We evaluate our\nstrategies using trace-driven simulations, which take as input real price\nvariation traces, as well as an application trace from the Parallel Workload\nArchive. Our results demonstrate the effectiveness of executing applications on\nspot instances, respecting QoS constraints, despite occasional failures.\n", "versions": [{"version": "v1", "created": "Thu, 27 Oct 2011 03:12:07 GMT"}], "update_date": "2011-10-28", "authors_parsed": [["Voorsluys", "William", ""], ["Buyya", "Rajkumar", ""]]}, {"id": "1110.5972", "submitter": "William Voorsluys", "authors": "William Voorsluys and Saurabh Kumar Garg and Rajkumar Buyya", "title": "Provisioning Spot Market Cloud Resources to Create Cost-effective\n  Virtual Clusters", "comments": "14 pages, 4 figures, 11th International Conference on Algorithms and\n  Architectures for Parallel Processing (ICA3PP-11); Lecture Notes in Computer\n  Science, Vol. 7016, 2011", "journal-ref": null, "doi": "10.1007/978-3-642-24650-0_34", "report-no": null, "categories": "cs.DC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Infrastructure-as-a-Service providers are offering their unused resources in\nthe form of variable-priced virtual machines (VMs), known as \"spot instances\",\nat prices significantly lower than their standard fixed-priced resources. To\nlease spot instances, users specify a maximum price they are willing to pay per\nhour and VMs will run only when the current price is lower than the user's bid.\nThis paper proposes a resource allocation policy that addresses the problem of\nrunning deadline-constrained compute-intensive jobs on a pool of composed\nsolely of spot instances, while exploiting variations in price and performance\nto run applications in a fast and economical way. Our policy relies on job\nruntime estimations to decide what are the best types of VMs to run each job\nand when jobs should run. Several estimation methods are evaluated and\ncompared, using trace-based simulations, which take real price variation traces\nobtained from Amazon Web Services as input, as well as an application trace\nfrom the Parallel Workload Archive. Results demonstrate the effectiveness of\nrunning computational jobs on spot instances, at a fraction (up to 60% lower)\nof the price that would normally cost on fixed priced resources.\n", "versions": [{"version": "v1", "created": "Thu, 27 Oct 2011 03:22:25 GMT"}], "update_date": "2011-11-03", "authors_parsed": [["Voorsluys", "William", ""], ["Garg", "Saurabh Kumar", ""], ["Buyya", "Rajkumar", ""]]}, {"id": "1110.6231", "submitter": "Agnieszka Lupinska", "authors": "Agnieszka {\\L}upi\\'nska", "title": "Parallel implematation of flow and matching algorithms", "comments": "MSc thesis, promoter: dr Maciej \\'Slusarek", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In our work we present two parallel algorithms and their lock-free\nimplementations using a popular GPU environment Nvidia CUDA. The first\nalgorithm is the push-relabel method for the flow problem in grid graphs. The\nsecond is the cost scaling algorithm for the assignment problem in complete\nbipartite graphs.\n", "versions": [{"version": "v1", "created": "Fri, 28 Oct 2011 01:44:45 GMT"}], "update_date": "2011-10-31", "authors_parsed": [["\u0141upi\u0144ska", "Agnieszka", ""]]}, {"id": "1110.6288", "submitter": "Lars Kotthoff", "authors": "Ian P. Gent and Lars Kotthoff", "title": "Reliability of Computational Experiments on Virtualised Hardware", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We present preliminary results of an investigation into the suitability of\nvirtualised hardware -- in particular clouds -- for running computational\nexperiments. Our main concern was that the reported CPU time would not be\nreliable and reproducible. The results demonstrate that while this is true in\ncases where many virtual machines are running on the same physical hardware,\nthere is no inherent variation introduced by using virtualised hardware\ncompared to non-virtualised hardware.\n", "versions": [{"version": "v1", "created": "Fri, 28 Oct 2011 10:21:23 GMT"}], "update_date": "2011-10-31", "authors_parsed": [["Gent", "Ian P.", ""], ["Kotthoff", "Lars", ""]]}, {"id": "1110.6745", "submitter": "Geza Odor", "authors": "Jeffrey Kelling and G\\'eza \\'Odor", "title": "Extremely large scale simulation of a Kardar-Parisi-Zhang model using\n  graphics cards", "comments": "7 pages, 8 figures, slightly modified, accepted version for PRE", "journal-ref": "Phys. Rev. E 84, 061150 (2011)", "doi": "10.1103/PhysRevE.84.061150", "report-no": null, "categories": "cond-mat.stat-mech cond-mat.mtrl-sci cs.DC nlin.CG physics.comp-ph", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The octahedron model introduced recently has been implemented onto graphics\ncards, which permits extremely large scale simulations via binary lattice gases\nand bit coded algorithms. We confirm scaling behaviour belonging to the 2d\nKardar-Parisi-Zhang universality class and find a surface growth exponent:\nbeta=0.2415(15) on 2^17 x 2^17 systems, ruling out beta=1/4 suggested by field\ntheory. The maximum speed-up with respect to a single CPU is 240. The steady\nstate has been analysed by finite size scaling and a growth exponent\nalpha=0.393(4) is found. Correction to scaling exponents are computed and the\npower-spectrum density of the steady state is determined. We calculate the\nuniversal scaling functions, cumulants and show that the limit distribution can\nbe obtained by the sizes considered. We provide numerical fitting for the small\nand large tail behaviour of the steady state scaling function of the interface\nwidth.\n", "versions": [{"version": "v1", "created": "Mon, 31 Oct 2011 10:57:41 GMT"}, {"version": "v2", "created": "Wed, 14 Dec 2011 14:19:45 GMT"}, {"version": "v3", "created": "Thu, 5 Jan 2012 10:51:02 GMT"}], "update_date": "2015-03-19", "authors_parsed": [["Kelling", "Jeffrey", ""], ["\u00d3dor", "G\u00e9za", ""]]}]