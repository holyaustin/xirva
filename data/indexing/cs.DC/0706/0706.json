[{"id": "0706.1063", "submitter": "Matthias Brust R.", "authors": "Matthias R. Brust, Steffen Rothkugel", "title": "Small Worlds: Strong Clustering in Wireless Networks", "comments": "To appear in: 1st International Workshop on Localized Algorithms and\n  Protocols for Wireless Sensor Networks (LOCALGOS 2007), 2007, IEEE Compuster\n  Society Press", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.NI cs.DC cs.DS", "license": null, "abstract": "  Small-worlds represent efficient communication networks that obey two\ndistinguishing characteristics: a high clustering coefficient together with a\nsmall characteristic path length. This paper focuses on an interesting paradox,\nthat removing links in a network can increase the overall clustering\ncoefficient. Reckful Roaming, as introduced in this paper, is a 2-localized\nalgorithm that takes advantage of this paradox in order to selectively remove\nsuperfluous links, this way optimizing the clustering coefficient while still\nretaining a sufficiently small characteristic path length.\n", "versions": [{"version": "v1", "created": "Thu, 7 Jun 2007 19:42:51 GMT"}, {"version": "v2", "created": "Mon, 11 Jun 2007 05:36:04 GMT"}], "update_date": "2007-06-11", "authors_parsed": [["Brust", "Matthias R.", ""], ["Rothkugel", "Steffen", ""]]}, {"id": "0706.1080", "submitter": "Matthias Brust R.", "authors": "Matthias R. Brust, Adrian Andronache, Steffen Rothkugel", "title": "WACA: A Hierarchical Weighted Clustering Algorithm optimized for Mobile\n  Hybrid Networks", "comments": "The Third International Conference on Wireless and Mobile\n  Communications 2007", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DC cs.NI", "license": null, "abstract": "  Clustering techniques create hierarchal network structures, called clusters,\non an otherwise flat network. In a dynamic environment-in terms of node\nmobility as well as in terms of steadily changing device parameters-the\nclusterhead election process has to be re-invoked according to a suitable\nupdate policy. Cluster re-organization causes additional message exchanges and\ncomputational complexity and it execution has to be optimized. Our\ninvestigations focus on the problem of minimizing clusterhead re-elections by\nconsidering stability criteria. These criteria are based on topological\ncharacteristics as well as on device parameters. This paper presents a weighted\nclustering algorithm optimized to avoid needless clusterhead re-elections for\nstable clusters in mobile ad-hoc networks. The proposed localized algorithm\ndeals with mobility, but does not require geographical, speed or distances\ninformation.\n", "versions": [{"version": "v1", "created": "Thu, 7 Jun 2007 20:47:19 GMT"}], "update_date": "2007-06-11", "authors_parsed": [["Brust", "Matthias R.", ""], ["Andronache", "Adrian", ""], ["Rothkugel", "Steffen", ""]]}, {"id": "0706.1142", "submitter": "Matthias Brust R.", "authors": "Matthias R. Brust, Steffen Rothkugel", "title": "Localized Support for Injection Point Election in Hybrid Networks", "comments": "The Sixth International Conference on Networking (ICN 2007)", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DC cs.NI", "license": null, "abstract": "  Ad-hoc networks, a promising trend in wireless technology, fail to work\nproperly in a global setting. In most cases, self-organization and cost-free\nlocal communication cannot compensate the need for being connected, gathering\nurgent information just-in-time. Equipping mobile devices additionally with GSM\nor UMTS adapters in order to communicate with arbitrary remote devices or even\na fixed network infrastructure provides an opportunity. Devices that operate as\nintermediate nodes between the ad-hoc network and a reliable backbone network\nare potential injection points. They allow disseminating received information\nwithin the local neighborhood. The effectiveness of different devices to serve\nas injection point differs substantially. For practical reasons the\ndetermination of injection points should be done locally, within the ad-hoc\nnetwork partitions. We analyze different localized algorithms using at most\n2-hop neighboring information. Results show that devices selected this way\nspread information more efficiently through the ad-hoc network. Our results can\nalso be applied in order to support the election process for clusterheads in\nthe field of clustering mechanisms.\n", "versions": [{"version": "v1", "created": "Fri, 8 Jun 2007 09:36:41 GMT"}], "update_date": "2007-06-12", "authors_parsed": [["Brust", "Matthias R.", ""], ["Rothkugel", "Steffen", ""]]}, {"id": "0706.1151", "submitter": "Matthias Brust R.", "authors": "Matthias R. Brust, Steffen Rothkugel", "title": "A taxonomic Approach to Topology Control in Ad-hoc and Wireless Networks", "comments": "The Sixth International Conference on Networking, ICN 2007", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.NI cs.DC", "license": null, "abstract": "  Topology Control (TC) aims at tuning the topology of highly dynamic networks\nto provide better control over network resources and to increase the efficiency\nof communication. Recently, many TC protocols have been proposed. The protocols\nare designed for preserving connectivity, minimizing energy consumption,\nmaximizing the overall network coverage or network capacity. Each TC protocol\nmakes different assumptions about the network topology, environment detection\nresources, and control capacities. This circumstance makes it extremely\ndifficult to comprehend the role and purpose of each protocol. To tackle this\nsituation, a taxonomy for TC protocols is presented throughout this paper.\nAdditionally, some TC protocols are classified based upon this taxonomy.\n", "versions": [{"version": "v1", "created": "Fri, 8 Jun 2007 10:20:29 GMT"}], "update_date": "2007-06-11", "authors_parsed": [["Brust", "Matthias R.", ""], ["Rothkugel", "Steffen", ""]]}, {"id": "0706.1614", "submitter": "Corinne Touati", "authors": "Arnaud Legrand (INRIA Rh\\^one-Alpes / Id-Imag, Lig), Corinne Touati\n  (INRIA Rh\\^one-Alpes / Id-Imag, Lig)", "title": "Non-Cooperative Scheduling of Multiple Bag-of-Task Applications", "comments": null, "journal-ref": "Dans INFOCOM (2007)", "doi": null, "report-no": null, "categories": "cs.DC cs.GT", "license": null, "abstract": "  Multiple applications that execute concurrently on heterogeneous platforms\ncompete for CPU and network resources. In this paper we analyze the behavior of\n$K$ non-cooperative schedulers using the optimal strategy that maximize their\nefficiency while fairness is ensured at a system level ignoring applications\ncharacteristics. We limit our study to simple single-level master-worker\nplatforms and to the case where each scheduler is in charge of a single\napplication consisting of a large number of independent tasks. The tasks of a\ngiven application all have the same computation and communication requirements,\nbut these requirements can vary from one application to another. In this\ncontext, we assume that each scheduler aims at maximizing its throughput. We\ngive closed-form formula of the equilibrium reached by such a system and study\nits performance. We characterize the situations where this Nash equilibrium is\noptimal (in the Pareto sense) and show that even though no catastrophic\nsituation (Braess-like paradox) can occur, such an equilibrium can be\narbitrarily bad for any classical performance measure.\n", "versions": [{"version": "v1", "created": "Tue, 12 Jun 2007 06:39:33 GMT"}], "update_date": "2007-06-13", "authors_parsed": [["Legrand", "Arnaud", "", "INRIA Rh\u00f4ne-Alpes / Id-Imag, Lig"], ["Touati", "Corinne", "", "INRIA Rh\u00f4ne-Alpes / Id-Imag, Lig"]]}, {"id": "0706.2069", "submitter": "Samuel Thibault", "authors": "Samuel Thibault (INRIA Futurs), Raymond Namyst (INRIA Futurs),\n  Pierre-Andr\\'e Wacrenier (INRIA Futurs)", "title": "Building Portable Thread Schedulers for Hierarchical Multiprocessors:\n  the BubbleSched Framework", "comments": null, "journal-ref": "Dans EuroPar (2007)", "doi": null, "report-no": null, "categories": "cs.DC", "license": null, "abstract": "  Exploiting full computational power of current more and more hierarchical\nmultiprocessor machines requires a very careful distribution of threads and\ndata among the underlying non-uniform architecture. Unfortunately, most\noperating systems only provide a poor scheduling API that does not allow\napplications to transmit valuable scheduling hints to the system. In a previous\npaper, we showed that using a bubble-based thread scheduler can significantly\nimprove applications' performance in a portable way. However, since\nmultithreaded applications have various scheduling requirements, there is no\nuniversal scheduler that could meet all these needs. In this paper, we present\na framework that allows scheduling experts to implement and experiment with\ncustomized thread schedulers. It provides a powerful API for dynamically\ndistributing bubbles among the machine in a high-level, portable, and efficient\nway. Several examples show how experts can then develop, debug and tune their\nown portable bubble schedulers.\n", "versions": [{"version": "v1", "created": "Thu, 14 Jun 2007 09:35:30 GMT"}], "update_date": "2007-06-15", "authors_parsed": [["Thibault", "Samuel", "", "INRIA Futurs"], ["Namyst", "Raymond", "", "INRIA Futurs"], ["Wacrenier", "Pierre-Andr\u00e9", "", "INRIA Futurs"]]}, {"id": "0706.2146", "submitter": "Rajesh Sudarsan", "authors": "Rajesh Sudarsan and Calvin J. Ribbens", "title": "Efficient Multidimensional Data Redistribution for Resizable Parallel\n  Computations", "comments": "18 pages, 12 figures, 2 tables. A shorter version of this paper is\n  available in the proceedings of the The Fifth International Symposium on\n  Parallel and Distributed Processing and Applications (ISPA07)", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DC", "license": null, "abstract": "  Traditional parallel schedulers running on cluster supercomputers support\nonly static scheduling, where the number of processors allocated to an\napplication remains fixed throughout the execution of the job. This results in\nunder-utilization of idle system resources thereby decreasing overall system\nthroughput. In our research, we have developed a prototype framework called\nReSHAPE, which supports dynamic resizing of parallel MPI applications executing\non distributed memory platforms. The resizing library in ReSHAPE includes\nsupport for releasing and acquiring processors and efficiently redistributing\napplication state to a new set of processors. In this paper, we derive an\nalgorithm for redistributing two-dimensional block-cyclic arrays from $P$ to\n$Q$ processors, organized as 2-D processor grids. The algorithm ensures a\ncontention-free communication schedule for data redistribution if $P_r \\leq\nQ_r$ and $P_c \\leq Q_c$. In other cases, the algorithm implements circular row\nand column shifts on the communication schedule to minimize node contention.\n", "versions": [{"version": "v1", "created": "Thu, 14 Jun 2007 15:54:10 GMT"}], "update_date": "2007-06-15", "authors_parsed": [["Sudarsan", "Rajesh", ""], ["Ribbens", "Calvin J.", ""]]}, {"id": "0706.2155", "submitter": "Greg Sepesi", "authors": "Greg Sepesi", "title": "Dualheap Selection Algorithm: Efficient, Inherently Parallel and\n  Somewhat Mysterious", "comments": "5 pages, 6 figures", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DS cs.CC cs.DC", "license": null, "abstract": "  An inherently parallel algorithm is proposed that efficiently performs\nselection: finding the K-th largest member of a set of N members. Selection is\na common component of many more complex algorithms and therefore is a widely\nstudied problem.\n  Not much is new in the proposed dualheap selection algorithm: the heap data\nstructure is from J.W.J.Williams, the bottom-up heap construction is from R.W.\nFloyd, and the concept of a two heap data structure is from J.W.J. Williams and\nD.E. Knuth. The algorithm's novelty is limited to a few relatively minor\nimplementation twists: 1) the two heaps are oriented with their roots at the\npartition values rather than at the minimum and maximum values, 2)the coding of\none of the heaps (the heap of smaller values) employs negative indexing, and 3)\nthe exchange phase of the algorithm is similar to a bottom-up heap\nconstruction, but navigates the heap with a post-order tree traversal.\n  When run on a single processor, the dualheap selection algorithm's\nperformance is competitive with quickselect with median estimation, a common\nvariant of C.A.R. Hoare's quicksort algorithm. When run on parallel processors,\nthe dualheap selection algorithm is superior due to its subtasks that are\neasily partitioned and innately balanced.\n", "versions": [{"version": "v1", "created": "Thu, 14 Jun 2007 16:11:24 GMT"}], "update_date": "2007-06-15", "authors_parsed": [["Sepesi", "Greg", ""]]}, {"id": "0706.2893", "submitter": "Greg Sepesi", "authors": "Greg Sepesi", "title": "Dualheap Sort Algorithm: An Inherently Parallel Generalization of\n  Heapsort", "comments": "4 pages, 4 figures", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DS cs.CC cs.DC", "license": null, "abstract": "  A generalization of the heapsort algorithm is proposed. At the expense of\nabout 50% more comparison and move operations for typical cases, the dualheap\nsort algorithm offers several advantages over heapsort: improved cache\nperformance, better performance if the input happens to be already sorted, and\neasier parallel implementations.\n", "versions": [{"version": "v1", "created": "Wed, 20 Jun 2007 14:42:45 GMT"}], "update_date": "2007-06-21", "authors_parsed": [["Sepesi", "Greg", ""]]}, {"id": "0706.3008", "submitter": "Areski Flissi", "authors": "Areski Flissi (LIFL), Philippe Merle (INRIA Futurs)", "title": "A Generic Deployment Framework for Grid Computing and Distributed\n  Applications", "comments": "The original publication is available at http://www.springerlink.com", "journal-ref": "OTM 2006, LNCS 4276 (2006) 1402-1411", "doi": "10.1007/11914952_26", "report-no": null, "categories": "cs.DC", "license": null, "abstract": "  Deployment of distributed applications on large systems, and especially on\ngrid infrastructures, becomes a more and more complex task. Grid users spend a\nlot of time to prepare, install and configure middleware and application\nbinaries on nodes, and eventually start their applications. The problem is that\nthe deployment process is composed of many heterogeneous tasks that have to be\norchestrated in a specific correct order. As a consequence, the automatization\nof the deployment process is currently very difficult to reach. To address this\nproblem, we propose in this paper a generic deployment framework allowing to\nautomatize the execution of heterogeneous tasks composing the whole deployment\nprocess. Our approach is based on a reification as software components of all\nrequired deployment mechanisms or existing tools. Grid users only have to\ndescribe the configuration to deploy in a simple natural language instead of\nprogramming or scripting how the deployment process is executed. As a toy\nexample, this framework is used to deploy CORBA component-based applications\nand OpenCCM middleware on one thousand nodes of the French Grid5000\ninfrastructure.\n", "versions": [{"version": "v1", "created": "Wed, 20 Jun 2007 15:17:47 GMT"}], "update_date": "2007-06-21", "authors_parsed": [["Flissi", "Areski", "", "LIFL"], ["Merle", "Philippe", "", "INRIA Futurs"]]}, {"id": "0706.3060", "submitter": "Eric Darve", "authors": "Erich Elsen, V. Vishal, Mike Houston, Vijay Pande, Pat Hanrahan, Eric\n  Darve", "title": "N-Body Simulations on GPUs", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.CE cs.DC", "license": null, "abstract": "  Commercial graphics processors (GPUs) have high compute capacity at very low\ncost, which makes them attractive for general purpose scientific computing. In\nthis paper we show how graphics processors can be used for N-body simulations\nto obtain improvements in performance over current generation CPUs. We have\ndeveloped a highly optimized algorithm for performing the O(N^2) force\ncalculations that constitute the major part of stellar and molecular dynamics\nsimulations. In some of the calculations, we achieve sustained performance of\nnearly 100 GFlops on an ATI X1900XTX. The performance on GPUs is comparable to\nspecialized processors such as GRAPE-6A and MDGRAPE-3, but at a fraction of the\ncost. Furthermore, the wide availability of GPUs has significant implications\nfor cluster computing and distributed computing efforts like Folding@Home.\n", "versions": [{"version": "v1", "created": "Wed, 20 Jun 2007 21:02:14 GMT"}], "update_date": "2007-06-22", "authors_parsed": [["Elsen", "Erich", ""], ["Vishal", "V.", ""], ["Houston", "Mike", ""], ["Pande", "Vijay", ""], ["Hanrahan", "Pat", ""], ["Darve", "Eric", ""]]}, {"id": "0706.3350", "submitter": "Veronika Rehn-Sonigo", "authors": "Veronika Rehn-Sonigo (INRIA Rh\\^one-Alpes, LIP)", "title": "Optimal Replica Placement in Tree Networks with QoS and Bandwidth\n  Constraints and the Closest Allocation Policy", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DC", "license": null, "abstract": "  This paper deals with the replica placement problem on fully homogeneous tree\nnetworks known as the Replica Placement optimization problem. The client\nrequests are known beforehand, while the number and location of the servers are\nto be determined. We investigate the latter problem using the Closest access\npolicy when adding QoS and bandwidth constraints. We propose an optimal\nalgorithm in two passes using dynamic programming.\n", "versions": [{"version": "v1", "created": "Fri, 22 Jun 2007 15:01:35 GMT"}, {"version": "v2", "created": "Wed, 27 Jun 2007 14:06:26 GMT"}, {"version": "v3", "created": "Thu, 28 Jun 2007 15:24:39 GMT"}], "update_date": "2007-06-28", "authors_parsed": [["Rehn-Sonigo", "Veronika", "", "INRIA Rh\u00f4ne-Alpes, LIP"]]}, {"id": "0706.3546", "submitter": "Samer Al Kiswany", "authors": "Samer Al Kiswany, Matei Ripeanu, Sudharshan S. Vazhkudai, Abdullah\n  Gharaibeh", "title": "stdchk: A Checkpoint Storage System for Desktop Grid Computing", "comments": "13 pages, 8 figures", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DC", "license": null, "abstract": "  Checkpointing is an indispensable technique to provide fault tolerance for\nlong-running high-throughput applications like those running on desktop grids.\nThis paper argues that a dedicated checkpoint storage system, optimized to\noperate in these environments, can offer multiple benefits: reduce the load on\na traditional file system, offer high-performance through specialization, and,\nfinally, optimize data management by taking into account checkpoint application\nsemantics. Such a storage system can present a unifying abstraction to\ncheckpoint operations, while hiding the fact that there are no dedicated\nresources to store the checkpoint data. We prototype stdchk, a checkpoint\nstorage system that uses scavenged disk space from participating desktops to\nbuild a low-cost storage system, offering a traditional file system interface\nfor easy integration with applications. This paper presents the stdchk\narchitecture, key performance optimizations, support for incremental\ncheckpointing, and increased data availability. Our evaluation confirms that\nthe stdchk approach is viable in a desktop grid setting and offers a low cost\nstorage system with desirable performance characteristics: high write\nthroughput and reduced storage space and network effort to save checkpoint\nimages.\n", "versions": [{"version": "v1", "created": "Mon, 25 Jun 2007 01:24:46 GMT"}, {"version": "v2", "created": "Fri, 23 Nov 2007 20:51:06 GMT"}], "update_date": "2011-11-10", "authors_parsed": [["Kiswany", "Samer Al", ""], ["Ripeanu", "Matei", ""], ["Vazhkudai", "Sudharshan S.", ""], ["Gharaibeh", "Abdullah", ""]]}, {"id": "0706.4009", "submitter": "Veronika Rehn-Sonigo", "authors": "Anne Benoit (INRIA Rh\\^one-Alpes, LIP), Veronika Rehn-Sonigo (INRIA\n  Rh\\^one-Alpes, LIP), Yves Robert (INRIA Rh\\^one-Alpes, LIP)", "title": "Multi-criteria scheduling of pipeline workflows", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DC", "license": null, "abstract": "  Mapping workflow applications onto parallel platforms is a challenging\nproblem, even for simple application patterns such as pipeline graphs. Several\nantagonist criteria should be optimized, such as throughput and latency (or a\ncombination). In this paper, we study the complexity of the bi-criteria mapping\nproblem for pipeline graphs on communication homogeneous platforms. In\nparticular, we assess the complexity of the well-known chains-to-chains problem\nfor different-speed processors, which turns out to be NP-hard. We provide\nseveral efficient polynomial bi-criteria heuristics, and their relative\nperformance is evaluated through extensive simulations.\n", "versions": [{"version": "v1", "created": "Wed, 27 Jun 2007 13:43:16 GMT"}, {"version": "v2", "created": "Thu, 28 Jun 2007 15:20:26 GMT"}], "update_date": "2007-06-28", "authors_parsed": [["Benoit", "Anne", "", "INRIA Rh\u00f4ne-Alpes, LIP"], ["Rehn-Sonigo", "Veronika", "", "INRIA\n  Rh\u00f4ne-Alpes, LIP"], ["Robert", "Yves", "", "INRIA Rh\u00f4ne-Alpes, LIP"]]}, {"id": "0706.4015", "submitter": "Franck Petit", "authors": "Christian Boulinier (LaRIA), Franck Petit (LaRIA)", "title": "Self-Stabilizing Wavelets and r-Hops Coordination", "comments": null, "journal-ref": "Rapport Interne (01/04/2007)", "doi": null, "report-no": null, "categories": "cs.DC", "license": null, "abstract": "  We introduce a simple tool called the wavelet (or, r-wavelet) scheme.\nWavelets deals with coordination among processes which are at most r hops away\nof each other. We present a selfstabilizing solution for this scheme. Our\nsolution requires no underlying structure and works in arbritrary anonymous\nnetworks, i.e., no process identifier is required. Moreover, our solution works\nunder any (even unfair) daemon. Next, we use the wavelet scheme to design\nself-stabilizing layer clocks. We show that they provide an efficient device in\nthe design of local coordination problems at distance r, i.e., r-barrier\nsynchronization and r-local resource allocation (LRA) such as r-local mutual\nexclusion (LME), r-group mutual exclusion (GME), and r-Reader/Writers. Some\nsolutions to the r-LRA problem (e.g., r-LME) also provide transformers to\ntransform algorithms written assuming any r-central daemon into algorithms\nworking with any distributed daemon.\n", "versions": [{"version": "v1", "created": "Wed, 27 Jun 2007 12:53:06 GMT"}], "update_date": "2007-06-28", "authors_parsed": [["Boulinier", "Christian", "", "LaRIA"], ["Petit", "Franck", "", "LaRIA"]]}, {"id": "0706.4038", "submitter": "Frederic Vivien", "authors": "Matthieu Gallet (LIP, INRIA Rh\\^one-Alpes), Yves Robert (LIP, INRIA\n  Rh\\^one-Alpes), Fr\\'ed\\'eric Vivien (LIP, INRIA Rh\\^one-Alpes)", "title": "Scheduling multiple divisible loads on a linear processor network", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DC", "license": null, "abstract": "  Min, Veeravalli, and Barlas have recently proposed strategies to minimize the\noverall execution time of one or several divisible loads on a heterogeneous\nlinear network, using one or more installments. We show on a very simple\nexample that their approach does not always produce a solution and that, when\nit does, the solution is often suboptimal. We also show how to find an optimal\nschedule for any instance, once the number of installments per load is given.\nThen, we formally state that any optimal schedule has an infinite number of\ninstallments under a linear cost model as the one assumed in the original\npapers. Therefore, such a cost model cannot be used to design practical\nmulti-installment strategies. Finally, through extensive simulations we\nconfirmed that the best solution is always produced by the linear programming\napproach, while solutions of the original papers can be far away from the\noptimal.\n", "versions": [{"version": "v1", "created": "Wed, 27 Jun 2007 14:43:13 GMT"}, {"version": "v2", "created": "Thu, 28 Jun 2007 15:02:05 GMT"}], "update_date": "2007-06-28", "authors_parsed": [["Gallet", "Matthieu", "", "LIP, INRIA Rh\u00f4ne-Alpes"], ["Robert", "Yves", "", "LIP, INRIA\n  Rh\u00f4ne-Alpes"], ["Vivien", "Fr\u00e9d\u00e9ric", "", "LIP, INRIA Rh\u00f4ne-Alpes"]]}, {"id": "0706.4048", "submitter": "Michael Noble S.", "authors": "Michael S. Noble", "title": "Getting More From Your Multicore: Exploiting OpenMP From An Open Source\n  Numerical Scripting Language", "comments": "15 pages, 16 figures; working paper, in preparation", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DC astro-ph", "license": null, "abstract": "  We introduce SLIRP, a module generator for the S-Lang numerical scripting\nlanguage, with a focus on its vectorization capabilities. We demonstrate how\nboth SLIRP and S-Lang were easily adapted to exploit the inherent parallelism\nof high-level mathematical languages with OpenMP, allowing general users to\nemploy tightly-coupled multiprocessors in scriptable research calculations\nwhile requiring no special knowledge of parallel programming. Motivated by\nexamples in the ISIS astrophysical modeling & analysis tool, performance\nfigures are presented for several machine and compiler configurations,\ndemonstrating beneficial speedups for real-world operations.\n", "versions": [{"version": "v1", "created": "Wed, 27 Jun 2007 15:21:28 GMT"}], "update_date": "2007-06-28", "authors_parsed": [["Noble", "Michael S.", ""]]}, {"id": "0706.4298", "submitter": "Christian Boulinier", "authors": "Christian Boulinier (LaRIA)", "title": "Unison as a Self-Stabilizing Wave Stream Algorithm in Asynchronous\n  Anonymous Networks", "comments": null, "journal-ref": "Rapport de recherche. (28/06/2007)", "doi": null, "report-no": null, "categories": "cs.DC", "license": null, "abstract": "  How to pass from local to global scales in anonymous networks? How to\norganize a selfstabilizing propagation of information with feedback. From the\nAngluin impossibility results, we cannot elect a leader in a general anonymous\nnetwork. Thus, it is impossible to build a rooted spanning tree. Many problems\ncan only be solved by probabilistic methods. In this paper we show how to use\nUnison to design a self-stabilizing barrier synchronization in an anonymous\nnetwork. We show that the commuication structure of this barrier\nsynchronization designs a self-stabilizing wave-stream, or pipelining wave, in\nanonymous networks. We introduce two variants of Wave: the strong waves and the\nwavelets. A strong wave can be used to solve the idempotent r-operator\nparametrized computation problem. A wavelet deals with k-distance computation.\nWe show how to use Unison to design a self-stabilizing wave stream, a\nself-stabilizing strong wave stream and a self-stabilizing wavelet stream.\n", "versions": [{"version": "v1", "created": "Thu, 28 Jun 2007 18:51:36 GMT"}], "update_date": "2007-06-29", "authors_parsed": [["Boulinier", "Christian", "", "LaRIA"]]}]