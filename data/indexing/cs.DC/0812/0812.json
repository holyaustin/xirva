[{"id": "0812.0736", "submitter": "Alain Bui", "authors": "Alain Bui, Olivier Flauzac, Cyril Rabat", "title": "Fully distributed and fault tolerant task management based on diffusions", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The task management is a critical component for the computational grids. The\naim is to assign tasks on nodes according to a global scheduling policy and a\nview of local resources of nodes. A peer-to-peer approach for the task\nmanagement involves a better scalability for the grid and a higher fault\ntolerance. But some mechanisms have to be proposed to avoid the computation of\nreplicated tasks that can reduce the efficiency and increase the load of nodes.\nIn the same way, these mechanisms have to limit the number of exchanged\nmessages to avoid the overload of the network.\n  In a previous paper, we have proposed two methods for the task management\ncalled active and passive. These methods are based on a random walk: they are\nfully distributed and fault tolerant. Each node owns a local tasks states set\nupdated thanks to a random walk and each node is in charge of the local\nassignment. Here, we propose three methods to improve the efficiency of the\nactive method. These new methods are based on a circulating word. The nodes\nlocal tasks states sets are updated thanks to periodical diffusions along trees\nbuilt from the circulating word. Particularly, we show that these methods\nincrease the efficiency of the active method: they produce less replicated\ntasks. These three methods are also fully distributed and fault tolerant. On\nthe other way, the circulating word can be exploited for other applications\nlike the resources management or the nodes synchronization.\n", "versions": [{"version": "v1", "created": "Wed, 3 Dec 2008 14:58:19 GMT"}], "update_date": "2008-12-04", "authors_parsed": [["Bui", "Alain", ""], ["Flauzac", "Olivier", ""], ["Rabat", "Cyril", ""]]}, {"id": "0812.1379", "submitter": "Leonid Barenboim", "authors": "Leonid Barenboim and Michael Elkin", "title": "Distributed (Delta + 1)-coloring in linear (in Delta) time", "comments": "12 pages, 2 figures. Contents added: pages 11-12", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DC cs.NI", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The distributed (Delta + 1)-coloring problem is one of most fundamental and\nwell-studied problems of Distributed Algorithms. Starting with the work of Cole\nand Vishkin in 86, there was a long line of gradually improving algorithms\npublished. The current state-of-the-art running time is O(Delta log Delta +\nlog^* n), due to Kuhn and Wattenhofer, PODC'06. Linial (FOCS'87) has proved a\nlower bound of 1/2 \\log^* n for the problem, and Szegedy and Vishwanathan\n(STOC'93) provided a heuristic argument that shows that algorithms from a wide\nfamily of locally iterative algorithms are unlikely to achieve running time\nsmaller than \\Theta(Delta log Delta).\n  We present a deterministic (Delta + 1)-coloring distributed algorithm with\nrunning time O(Delta) + 1/2 log^* n. We also present a tradeoff between the\nrunning time and the number of colors, and devise an O(Delta * t)-coloring\nalgorithm with running time O(Delta / t + \\log^* n), for any parameter t, 1 < t\n< Delta^{1-epsilon}, for an arbitrarily small constant epsilon, 0 < epsilon <\n1.\n  On the way to this result we study a generalization of the notion of graph\ncoloring, which is called defective coloring. In an m-defective p-coloring the\nvertices are colored with p colors so that each vertex has up to m neighbors\nwith the same color. We show that an m-defective p-coloring with reasonably\nsmall m and p can be computed very efficiently. We also develop a technique to\nemploy multiple defect colorings of various subgraphs of the original graph G\nfor computing a (Delta+1)-coloring of G. We believe that these techniques are\nof independent interest.\n", "versions": [{"version": "v1", "created": "Sun, 7 Dec 2008 20:44:28 GMT"}, {"version": "v2", "created": "Fri, 26 Dec 2008 10:45:09 GMT"}], "update_date": "2008-12-26", "authors_parsed": [["Barenboim", "Leonid", ""], ["Elkin", "Michael", ""]]}, {"id": "0812.1633", "submitter": "Giovanni Bussi", "authors": "Giovanni Bussi", "title": "A simple asynchronous replica-exchange implementation", "comments": "Preprint of Proceeding for CSFI 2008", "journal-ref": "G. Bussi, Nuovo Cimento Soc. Ital. Fis., C 32, 61 (2009)", "doi": "10.1393/ncc/i2009-10369-8", "report-no": null, "categories": "physics.comp-ph cs.DC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We discuss the possibility of implementing asynchronous replica-exchange (or\nparallel tempering) molecular dynamics. In our scheme, the exchange attempts\nare driven by asynchronous messages sent by one of the computing nodes, so that\ndifferent replicas are allowed to perform a different number of time-steps\nbetween subsequent attempts. The implementation is simple and based on the\nmessage-passing interface (MPI). We illustrate the advantages of our scheme\nwith respect to the standard synchronous algorithm and we benchmark it for a\nmodel Lennard-Jones liquid on an IBM-LS21 blade center cluster.\n", "versions": [{"version": "v1", "created": "Tue, 9 Dec 2008 18:39:58 GMT"}], "update_date": "2009-11-23", "authors_parsed": [["Bussi", "Giovanni", ""]]}, {"id": "0812.2164", "submitter": "Florin Pop Mr.", "authors": "Florin Pop", "title": "Optimization of Decentralized Scheduling for Physic Applications in Grid\n  Environments", "comments": null, "journal-ref": "D. Iordache, P. Sterian (eds.), Proceedings of the 4th edition of\n  the Colloquium Mathematics in Engineering and Numerical Physics, pp. 150-153,\n  October 6-8, Ed. Printech, 2007, ISBN: 978-973-718-761-1", "doi": null, "report-no": null, "categories": "cs.DC physics.comp-ph", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This paper presents a scheduling framework that is configured for, and used\nin physic systems. Our work addresses the problem of scheduling various\ncomputationally intensive and data intensive applications that are required for\nextracting information from satellite images. The proposed solution allows\nmapping of image processing applications onto available resources. The\nscheduling is done at the level of groups of concurrent applications. It\ndemonstrates a very good behavior for scheduling and executing groups of\napplications, while also achieving a near-optimal utilization of the resources.\n", "versions": [{"version": "v1", "created": "Thu, 11 Dec 2008 14:52:35 GMT"}], "update_date": "2008-12-12", "authors_parsed": [["Pop", "Florin", ""]]}, {"id": "0812.3648", "submitter": "Mehdi Bahrami", "authors": "Mehdi Bahrami", "title": "A New Method for Knowledge Representation in Expert System's (XMLKR)", "comments": "IEEE Procceding 2008", "journal-ref": "Emerging Trends in Engineering and Technology, 2008. ICETET '08.\n  First International Conference, IEEE", "doi": "10.1109/ICETET.2008.194", "report-no": null, "categories": "cs.DC cs.AI", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Knowledge representation it is an essential section of a Expert Systems,\nBecause in this section we have a framework to establish an expert system then\nwe can modeling and use by this to design an expert system. Many method it is\nexist for knowledge representation but each method have problems, in this paper\nwe introduce a new method of object oriented by XML language as XMLKR to\nknowledge representation, and we want to discuss advantage and disadvantage of\nthis method.\n", "versions": [{"version": "v1", "created": "Thu, 18 Dec 2008 20:39:48 GMT"}], "update_date": "2016-11-17", "authors_parsed": [["Bahrami", "Mehdi", ""]]}, {"id": "0812.4893", "submitter": "Jukka Suomela", "authors": "Patrik Flor\\'een, Petteri Kaski, Valentin Polishchuk, Jukka Suomela", "title": "Almost stable matchings in constant time", "comments": "20 pages", "journal-ref": "Algorithmica 58 (2010) 102-118", "doi": "10.1007/s00453-009-9353-9", "report-no": null, "categories": "cs.DS cs.DC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We show that the ratio of matched individuals to blocking pairs grows\nlinearly with the number of propose--accept rounds executed by the\nGale--Shapley algorithm for the stable marriage problem. Consequently, the\nparticipants can arrive at an almost stable matching even without full\ninformation about the problem instance; for each participant, knowing only its\nlocal neighbourhood is enough. In distributed-systems parlance, this means that\nif each person has only a constant number of acceptable partners, an almost\nstable matching emerges after a constant number of synchronous communication\nrounds. This holds even if ties are present in the preference lists.\n  We apply our results to give a distributed $(2+\\epsilon)$-approximation\nalgorithm for maximum-weight matching in bicoloured graphs and a centralised\nrandomised constant-time approximation scheme for estimating the size of a\nstable matching.\n", "versions": [{"version": "v1", "created": "Mon, 29 Dec 2008 11:04:46 GMT"}], "update_date": "2012-05-15", "authors_parsed": [["Flor\u00e9en", "Patrik", ""], ["Kaski", "Petteri", ""], ["Polishchuk", "Valentin", ""], ["Suomela", "Jukka", ""]]}]