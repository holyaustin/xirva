[{"id": "0802.0550", "submitter": "Vincent Gramoli", "authors": "Erwan Le Merrer (IRISA, FT R&D), Vincent Gramoli (IRISA), Anne-Marie\n  Kermarrec (IRISA), Aline Viana (IRISA), Marin Bertier (IRISA)", "title": "Energy Aware Self-Organizing Density Management in Wireless Sensor\n  Networks", "comments": null, "journal-ref": "Dans International Workshop on Decentralized Resource Sharing in\n  Mobile Computing and Networking (2006) 23--29", "doi": null, "report-no": null, "categories": "cs.DC", "license": null, "abstract": "  Energy consumption is the most important factor that determines sensor node\nlifetime. The optimization of wireless sensor network lifetime targets not only\nthe reduction of energy consumption of a single sensor node but also the\nextension of the entire network lifetime. We propose a simple and adaptive\nenergy-conserving topology management scheme, called SAND (Self-Organizing\nActive Node Density). SAND is fully decentralized and relies on a distributed\nprobing approach and on the redundancy resolution of sensors for energy\noptimizations, while preserving the data forwarding and sensing capabilities of\nthe network. We present the SAND's algorithm, its analysis of convergence, and\nsimulation results. Simulation results show that, though slightly increasing\npath lengths from sensor to sink nodes, the proposed scheme improves\nsignificantly the network lifetime for different neighborhood densities\ndegrees, while preserving both sensing and routing fidelity.\n", "versions": [{"version": "v1", "created": "Tue, 5 Feb 2008 07:03:28 GMT"}], "update_date": "2008-02-06", "authors_parsed": [["Merrer", "Erwan Le", "", "IRISA, FT R&D"], ["Gramoli", "Vincent", "", "IRISA"], ["Kermarrec", "Anne-Marie", "", "IRISA"], ["Viana", "Aline", "", "IRISA"], ["Bertier", "Marin", "", "IRISA"]]}, {"id": "0802.0552", "submitter": "Vincent Gramoli", "authors": "Vincent Gramoli (INRIA Futurs), Michel Raynal (IRISA)", "title": "Timed Quorum System for Large-Scale and Dynamic Environments", "comments": null, "journal-ref": "Dans 11th International Conference On Principles Of Distributed\n  Systems 4878 (2007) 429--442", "doi": null, "report-no": null, "categories": "cs.DC cs.NI", "license": null, "abstract": "  This paper presents Timed Quorum System (TQS), a new quorum system especially\nsuited for large-scale and dynamic systems. TQS requires that two quorums\nintersect with high probability if they are used in the same small period of\ntime. It proposed an algorithm that implements TQS and that verifies\nprobabilistic atomicity: a consistency criterion that requires each operation\nto respect atomicity with high probability. This TQS implementation has quorum\nof size O(\\sqrt{nD}) and expected access time of O(log \\sqrt{nD}) message\ndelays, where n measures the size of the system and D is a required parameter\nto handle dynamism.\n", "versions": [{"version": "v1", "created": "Tue, 5 Feb 2008 07:09:08 GMT"}], "update_date": "2008-02-06", "authors_parsed": [["Gramoli", "Vincent", "", "INRIA Futurs"], ["Raynal", "Michel", "", "IRISA"]]}, {"id": "0802.1123", "submitter": "Sebastien Tixeuil", "authors": "Sylvie Dela\\\"et (LRI), St\\'ephane Devismes (LRI), Mikhail Nesterenko,\n  S\\'ebastien Tixeuil (INRIA Futurs, LIP6)", "title": "Snap-Stabilization in Message-Passing Systems", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DC cs.NI cs.PF", "license": null, "abstract": "  In this paper, we tackle the open problem of snap-stabilization in\nmessage-passing systems. Snap-stabilization is a nice approach to design\nprotocols that withstand transient faults. Compared to the well-known\nself-stabilizing approach, snap-stabilization guarantees that the effect of\nfaults is contained immediately after faults cease to occur. Our contribution\nis twofold: we show that (1) snap-stabilization is impossible for a wide class\nof problems if we consider networks with finite yet unbounded channel capacity;\n(2) snap-stabilization becomes possible in the same setting if we assume\nbounded-capacity channels. We propose three snap-stabilizing protocols working\nin fully-connected networks. Our work opens exciting new research perspectives,\nas it enables the snap-stabilizing paradigm to be implemented in actual\nnetworks.\n", "versions": [{"version": "v1", "created": "Fri, 8 Feb 2008 10:51:24 GMT"}, {"version": "v2", "created": "Mon, 11 Feb 2008 08:57:19 GMT"}], "update_date": "2009-09-29", "authors_parsed": [["Dela\u00ebt", "Sylvie", "", "LRI"], ["Devismes", "St\u00e9phane", "", "LRI"], ["Nesterenko", "Mikhail", "", "INRIA Futurs, LIP6"], ["Tixeuil", "S\u00e9bastien", "", "INRIA Futurs, LIP6"]]}, {"id": "0802.1389", "submitter": "Svante Janson", "authors": "Svante Janson, Christian Lavault, Guy Louchard", "title": "Convergence of some leader election algorithms", "comments": "27 pages, 13 figures, 5 tables", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DC math.PR", "license": null, "abstract": "  We start with a set of n players. With some probability P(n,k), we kill n-k\nplayers; the other ones stay alive, and we repeat with them. What is the\ndistribution of the number X_n of phases (or rounds) before getting only one\nplayer? We present a probabilistic analysis of this algorithm under some\nconditions on the probability distributions P(n,k), including stochastic\nmonotonicity and the assumption that roughly a fixed proportion alpha of the\nplayers survive in each round.\n  We prove a kind of convergence in distribution for X_n-log_a n, where the\nbasis a=1/alpha; as in many other similar problems there are oscillations and\nno true limit distribution, but suitable subsequences converge, and there is an\nabsolutely continuous random variable Z such that the distribution of X_n can\nbe approximated by Z+log_a n rounded to the nearest larger integer.\n  Applications of the general result include the leader election algorithm\nwhere players are eliminated by independent coin tosses and a variation of the\nleader election algorithm proposed by W.R. Franklin. We study the latter\nalgorithm further, including numerical results.\n", "versions": [{"version": "v1", "created": "Mon, 11 Feb 2008 11:01:11 GMT"}], "update_date": "2008-02-12", "authors_parsed": [["Janson", "Svante", ""], ["Lavault", "Christian", ""], ["Louchard", "Guy", ""]]}, {"id": "0802.2418", "submitter": "Jacob Scott", "authors": "Christopher Crutchfield, Zoran Dzunic, Jeremy T. Fineman, David R.\n  Karger, and Jacob Scott", "title": "Improved Approximations for Multiprocessor Scheduling Under Uncertainty", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DC cs.DS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This paper presents improved approximation algorithms for the problem of\nmultiprocessor scheduling under uncertainty, or SUU, in which the execution of\neach job may fail probabilistically. This problem is motivated by the\nincreasing use of distributed computing to handle large, computationally\nintensive tasks. In the SUU problem we are given n unit-length jobs and m\nmachines, a directed acyclic graph G of precedence constraints among jobs, and\nunrelated failure probabilities q_{ij} for each job j when executed on machine\ni for a single timestep. Our goal is to find a schedule that minimizes the\nexpected makespan, which is the expected time at which all jobs complete.\n  Lin and Rajaraman gave the first approximations for this NP-hard problem for\nthe special cases of independent jobs, precedence constraints forming disjoint\nchains, and precedence constraints forming trees. In this paper, we present\nasymptotically better approximation algorithms. In particular, we give an\nO(loglog min(m,n))-approximation for independent jobs (improving on the\npreviously best O(log n)-approximation). We also give an O(log(n+m) loglog\nmin(m,n))-approximation algorithm for precedence constraints that form disjoint\nchains (improving on the previously best\nO(log(n)log(m)log(n+m)/loglog(n+m))-approximation by a (log n/loglog n)^2\nfactor when n = poly(m). Our algorithm for precedence constraints forming\nchains can also be used as a component for precedence constraints forming\ntrees, yielding a similar improvement over the previously best algorithms for\ntrees.\n", "versions": [{"version": "v1", "created": "Mon, 18 Feb 2008 20:57:17 GMT"}, {"version": "v2", "created": "Tue, 19 Feb 2008 02:58:36 GMT"}], "update_date": "2008-02-19", "authors_parsed": [["Crutchfield", "Christopher", ""], ["Dzunic", "Zoran", ""], ["Fineman", "Jeremy T.", ""], ["Karger", "David R.", ""], ["Scott", "Jacob", ""]]}, {"id": "0802.3267", "submitter": "Amitabh Trehan", "authors": "Tom Hayes and Navin Rustagi and Jared Saia and Amitabh Trehan", "title": "The Forgiving Tree: A Self-Healing Distributed Data Structure", "comments": "Submitted to Principles of Distributed Computing (PODC) 2008", "journal-ref": "PODC '08: Proceedings of the twenty-seventh ACM symposium on\n  Principles of distributed computing. 2008, pages 203--212", "doi": null, "report-no": null, "categories": "cs.DC cs.NI", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We consider the problem of self-healing in peer-to-peer networks that are\nunder repeated attack by an omniscient adversary. We assume that the following\nprocess continues for up to n rounds where n is the total number of nodes\ninitially in the network: the adversary deletes an arbitrary node from the\nnetwork, then the network responds by quickly adding a small number of new\nedges.\n  We present a distributed data structure that ensures two key properties.\nFirst, the diameter of the network is never more than $O(\\log \\Delta)$ times\nits original diameter, where $\\Delta$ is the maximum degree of the network\ninitially. We note that for many peer-to-peer systems, $\\Delta$ is\npolylogarithmic, so the diameter increase would be a O(log log n)\nmultiplicative factor. Second, the degree of any node never increases by more\nthan 3 over its original degree. Our data structure is fully distributed, has\nO(1) latency per round and requires each node to send and receive O(1) messages\nper round. The data structure requires an initial setup phase that has latency\nequal to the diameter of the original network, and requires, with high\nprobability, each node v to send O(log n) messages along every edge incident to\nv. Our approach is orthogonal and complementary to traditional topology-based\napproaches to defending against attack.\n", "versions": [{"version": "v1", "created": "Fri, 22 Feb 2008 08:22:33 GMT"}], "update_date": "2009-02-15", "authors_parsed": [["Hayes", "Tom", ""], ["Rustagi", "Navin", ""], ["Saia", "Jared", ""], ["Trehan", "Amitabh", ""]]}, {"id": "0802.3355", "submitter": "Francisco R Villatoro", "authors": "Francisco R. Villatoro, Antonio J. Nebro, and Jose E. Fern\\'andez", "title": "PVM-Distributed Implementation of the Radiance Code", "comments": "11 pages", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DC cs.GR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The Parallel Virtual Machine (PVM) tool has been used for a distributed\nimplementation of Greg Ward's Radiance code. In order to generate exactly the\nsame primary rays with both the sequential and the parallel codes, the quincunx\nsampling technique used in Radiance for the reduction of the number of primary\nrays by interpolation, must be left untouched in the parallel implementation.\nThe octree of local ambient values used in Radiance for the indirect\nillumination has been shared among all the processors. Both static and dynamic\nimage partitioning techniques which replicate the octree of the complete scene\nin all the processors and have load-balancing, have been developed for one\nframe rendering. Speedups larger than 7.5 have been achieved in a network of 8\nworkstations. For animation sequences, a new dynamic partitioning distribution\ntechnique with superlinear speedups has also been developed.\n", "versions": [{"version": "v1", "created": "Fri, 22 Feb 2008 17:32:17 GMT"}], "update_date": "2008-02-25", "authors_parsed": [["Villatoro", "Francisco R.", ""], ["Nebro", "Antonio J.", ""], ["Fern\u00e1ndez", "Jose E.", ""]]}, {"id": "0802.4018", "submitter": "Luc Maranget", "authors": "Qin Ma and Luc Maranget", "title": "Algebraic Pattern Matching in Join Calculus", "comments": null, "journal-ref": "Logical Methods in Computer Science, Volume 4, Issue 1 (March 21,\n  2008) lmcs:770", "doi": "10.2168/LMCS-4(1:7)2008", "report-no": null, "categories": "cs.PL cs.DC", "license": null, "abstract": "  We propose an extension of the join calculus with pattern matching on\nalgebraic data types. Our initial motivation is twofold: to provide an\nintuitive semantics of the interaction between concurrency and pattern\nmatching; to define a practical compilation scheme from extended join\ndefinitions into ordinary ones plus ML pattern matching. To assess the\ncorrectness of our compilation scheme, we develop a theory of the applied join\ncalculus, a calculus with value passing and value matching. We implement this\ncalculus as an extension of the current JoCaml system.\n", "versions": [{"version": "v1", "created": "Wed, 27 Feb 2008 13:21:51 GMT"}, {"version": "v2", "created": "Fri, 21 Mar 2008 11:22:39 GMT"}], "update_date": "2015-07-01", "authors_parsed": [["Ma", "Qin", ""], ["Maranget", "Luc", ""]]}, {"id": "0802.4101", "submitter": "Rahul Jain", "authors": "Rahul Jain and Shengyu Zhang", "title": "New bounds on classical and quantum one-way communication complexity", "comments": "ver 1, 19 pages", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.IT cs.DC math.IT", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In this paper we provide new bounds on classical and quantum distributional\ncommunication complexity in the two-party, one-way model of communication. In\nthe classical model, our bound extends the well known upper bound of Kremer,\nNisan and Ron to include non-product distributions. We show that for a boolean\nfunction f:X x Y -> {0,1} and a non-product distribution mu on X x Y and\nepsilon in (0,1/2) constant: D_{epsilon}^{1, mu}(f)= O((I(X:Y)+1) vc(f)), where\nD_{epsilon}^{1, mu}(f) represents the one-way distributional communication\ncomplexity of f with error at most epsilon under mu; vc(f) represents the\nVapnik-Chervonenkis dimension of f and I(X:Y) represents the mutual\ninformation, under mu, between the random inputs of the two parties. For a\nnon-boolean function f:X x Y ->[k], we show a similar upper bound on\nD_{epsilon}^{1, mu}(f) in terms of k, I(X:Y) and the pseudo-dimension of f' =\nf/k. In the quantum one-way model we provide a lower bound on the\ndistributional communication complexity, under product distributions, of a\nfunction f, in terms the well studied complexity measure of f referred to as\nthe rectangle bound or the corruption bound of f . We show for a non-boolean\ntotal function f : X x Y -> Z and a product distribution mu on XxY,\nQ_{epsilon^3/8}^{1, mu}(f) = Omega(rec_ epsilon^{1, mu}(f)), where\nQ_{epsilon^3/8}^{1, mu}(f) represents the quantum one-way distributional\ncommunication complexity of f with error at most epsilon^3/8 under mu and rec_\nepsilon^{1, mu}(f) represents the one-way rectangle bound of f with error at\nmost epsilon under mu . Similarly for a non-boolean partial function f:XxY -> Z\nU {*} and a product distribution mu on X x Y, we show, Q_{epsilon^6/(2 x\n15^4)}^{1, mu}(f) = Omega(rec_ epsilon^{1, mu}(f)).\n", "versions": [{"version": "v1", "created": "Wed, 27 Feb 2008 22:28:52 GMT"}], "update_date": "2008-02-29", "authors_parsed": [["Jain", "Rahul", ""], ["Zhang", "Shengyu", ""]]}]