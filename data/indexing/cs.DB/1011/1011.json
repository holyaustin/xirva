[{"id": "1011.0328", "submitter": "Soumadip  Ghosh", "authors": "Soumadip Ghosh, Sushanta Biswas, Debasree Sarkar, Partha Pratim Sarkar", "title": "Mining Frequent Itemsets Using Genetic Algorithm", "comments": null, "journal-ref": "International Journal of Artificial Intelligence & Applications\n  (IJAIA), Vol.1, No.4, October 2010", "doi": "10.5121/ijaia.2010.1411", "report-no": null, "categories": "cs.DB", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In general frequent itemsets are generated from large data sets by applying\nassociation rule mining algorithms like Apriori, Partition, Pincer-Search,\nIncremental, Border algorithm etc., which take too much computer time to\ncompute all the frequent itemsets. By using Genetic Algorithm (GA) we can\nimprove the scenario. The major advantage of using GA in the discovery of\nfrequent itemsets is that they perform global search and its time complexity is\nless compared to other algorithms as the genetic algorithm is based on the\ngreedy approach. The main aim of this paper is to find all the frequent\nitemsets from given data sets using genetic algorithm.\n", "versions": [{"version": "v1", "created": "Mon, 1 Nov 2010 14:14:10 GMT"}], "update_date": "2010-11-02", "authors_parsed": [["Ghosh", "Soumadip", ""], ["Biswas", "Sushanta", ""], ["Sarkar", "Debasree", ""], ["Sarkar", "Partha Pratim", ""]]}, {"id": "1011.2511", "submitter": "Graham Cormode", "authors": "Graham Cormode", "title": "Individual Privacy vs Population Privacy: Learning to Attack\n  Anonymization", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DB", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Over the last decade there have been great strides made in developing\ntechniques to compute functions privately. In particular, Differential Privacy\ngives strong promises about conclusions that can be drawn about an individual.\nIn contrast, various syntactic methods for providing privacy (criteria such as\nkanonymity and l-diversity) have been criticized for still allowing private\ninformation of an individual to be inferred. In this report, we consider the\nability of an attacker to use data meeting privacy definitions to build an\naccurate classifier. We demonstrate that even under Differential Privacy, such\nclassifiers can be used to accurately infer \"private\" attributes in realistic\ndata. We compare this to similar approaches for inferencebased attacks on other\nforms of anonymized data. We place these attacks on the same scale, and observe\nthat the accuracy of inference of private attributes for Differentially Private\ndata and l-diverse data can be quite similar.\n", "versions": [{"version": "v1", "created": "Wed, 10 Nov 2010 21:39:24 GMT"}], "update_date": "2015-03-17", "authors_parsed": [["Cormode", "Graham", ""]]}, {"id": "1011.2807", "submitter": "Jijie Wang", "authors": "Jijie Wang, Lei Lin, Ting Huang, Jingjing Wang and Zengyou He", "title": "Efficient K-Nearest Neighbor Join Algorithms for High Dimensional Sparse\n  Data", "comments": "12 pages, This paper has been submitted to PAKDD2011", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DB cs.DS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The K-Nearest Neighbor (KNN) join is an expensive but important operation in\nmany data mining algorithms. Several recent applications need to perform KNN\njoin for high dimensional sparse data. Unfortunately, all existing KNN join\nalgorithms are designed for low dimensional data. To fulfill this void, we\ninvestigate the KNN join problem for high dimensional sparse data.\n  In this paper, we propose three KNN join algorithms: a brute force (BF)\nalgorithm, an inverted index-based(IIB) algorithm and an improved inverted\nindex-based(IIIB) algorithm. Extensive experiments on both synthetic and\nreal-world datasets were conducted to demonstrate the effectiveness of our\nalgorithms for high dimensional sparse data.\n", "versions": [{"version": "v1", "created": "Fri, 12 Nov 2010 01:35:39 GMT"}], "update_date": "2010-11-15", "authors_parsed": [["Wang", "Jijie", ""], ["Lin", "Lei", ""], ["Huang", "Ting", ""], ["Wang", "Jingjing", ""], ["He", "Zengyou", ""]]}, {"id": "1011.5105", "submitter": "Andrzej Szalas", "authors": "Jan Maluszynski and Andrzej Szalas", "title": "Logical Foundations and Complexity of 4QL, a Query Language with\n  Unrestricted Negation", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.LO cs.DB", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The paper discusses properties of a DATALOG$^{\\neg\\neg}$-like query language\n4QL, originally outlined in [MS10]. Negated literals in heads of rules\nnaturally lead to inconsistencies. On the other hand, rules do not have to\nattach meaning to some literals. Therefore 4QL is founded on a four-valued\nsemantics, employing the logic introduced in [MSV08, VMS09] with truth values:\n'true', 'false', 'inconsistent' and 'unknown'. 4QL allows one to use rules with\nnegation in heads and bodies of rules, it is based on a simple and intuitive\nsemantics and provides uniform tools for \"lightweight\" versions of known forms\nof nonmonotonic reasoning. In addition, 4QL is tractable as regards its data\ncomplexity and captures PTIME queries. Even if DATALOG$^{\\neg\\neg}$ is known as\na concept for the last 30 years, to our best knowledge no existing approach\nenjoys these properties.\n  In the current paper we: - investigate properties of well-supported models of\n4QL - prove the correctness of the algorithm for computing well-supported\nmodels - show that 4QL has PTIME data complexity and captures PTIME.\n", "versions": [{"version": "v1", "created": "Tue, 23 Nov 2010 14:18:36 GMT"}, {"version": "v2", "created": "Fri, 18 Mar 2011 13:48:39 GMT"}], "update_date": "2015-03-17", "authors_parsed": [["Maluszynski", "Jan", ""], ["Szalas", "Andrzej", ""]]}]