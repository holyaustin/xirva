[{"id": "1601.01348", "submitter": "Akshay Kumar", "authors": "Akshay Kumar, Ahmed Abdelhadi, Charles Clancy", "title": "An Online Delay Efficient Packet Scheduler for M2M Traffic in Industrial\n  Automation", "comments": "6 pages, 7 figures, Accepted for publication in IEEE Systems\n  Conference 2016", "journal-ref": null, "doi": "10.1109/SYSCON.2016.7490665", "report-no": null, "categories": "cs.NI cs.IT cs.PF math.IT", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Some Machine-to-Machine (M2M) communication links particularly those in a\nindustrial automation plant have stringent latency requirements. In this paper,\nwe study the delay-performance for the M2M uplink from the sensors to a\nProgrammable Logic Controller (PLC) in a industrial automation scenario. The\nuplink traffic can be broadly classified as either Periodic Update (PU) and\nEvent Driven (ED). The PU arrivals from different sensors are periodic,\nsynchronized by the PLC and need to be processed by a prespecified firm latency\ndeadline. On the other hand, the ED arrivals are random, have low-arrival rate,\nbut may need to be processed quickly depending upon the criticality of the\napplication. To accommodate these contrasting Quality-of-Service (QoS)\nrequirements, we model the utility of PU and ED packets using step function and\nsigmoidal functions of latency respectively. Our goal is to maximize the\noverall system utility while being proportionally fair to both PU and ED data.\nTo this end, we propose a novel online QoS-aware packet scheduler that gives\npriority to ED data as long as that results the latency deadline is met for PU\ndata. However as the size of networks increases, we drop the PU packets that\nfail to meet latency deadline which reduces congestion and improves overall\nsystem utility. Using extensive simulations, we compare the performance of our\nscheme with various scheduling policies such as First-Come-First-Serve (FCFS),\nEarliest-Due-Date (EDD) and (preemptive) priority. We show that our scheme\noutperforms the existing schemes for various simulation scenarios.\n", "versions": [{"version": "v1", "created": "Wed, 6 Jan 2016 22:51:05 GMT"}], "update_date": "2016-11-15", "authors_parsed": [["Kumar", "Akshay", ""], ["Abdelhadi", "Ahmed", ""], ["Clancy", "Charles", ""]]}, {"id": "1601.03201", "submitter": "Attila Csoma", "authors": "D\\'avid Szab\\'o, Attila Csoma, P\\'eter Megyesi, Andr\\'as Guly\\'as,\n  Frank H. P. Fitzek", "title": "Network Coding as a Service", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.NI cs.IT cs.PF math.IT", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Network Coding (NC) shows great potential in various communication scenarios\nthrough changing the packet forwarding principles of current networks. It can\nimprove not only throughput, latency, reliability and security but also\nalleviates the need of coordination in many cases. However, it is still\ncontroversial due to widespread misunderstandings on how to exploit the\nadvantages of it. The aim of the paper is to facilitate the usage of NC by\n$(i)$ explaining how it can improve the performance of the network (regardless\nthe existence of any butterfly in the network), $(ii)$ showing how Software\nDefined Networking (SDN) can resolve the crucial problems of deployment and\norchestration of NC elements, and $(iii)$ providing a prototype architecture\nwith measurement results on the performance of our network coding capable\nsoftware router implementation compared by fountain codes.\n", "versions": [{"version": "v1", "created": "Wed, 13 Jan 2016 11:05:49 GMT"}], "update_date": "2016-01-14", "authors_parsed": [["Szab\u00f3", "D\u00e1vid", ""], ["Csoma", "Attila", ""], ["Megyesi", "P\u00e9ter", ""], ["Guly\u00e1s", "Andr\u00e1s", ""], ["Fitzek", "Frank H. P.", ""]]}, {"id": "1601.04749", "submitter": "Jalal Khamse-Ashari", "authors": "Jalal Khamse-Ashari, Ioannis Lambadaris, Yiqiang Zhao", "title": "Constrained Multi-user Multi-server Max-Min Fair Queuing", "comments": "16 pages, 15 figures", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.NI cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In this paper, a multi-user multi-server queuing system is studied in which\neach user is constrained to get service from a subset of servers. In the\nstudied system, rate allocation in the sense of max-min fairness results in\nmulti-level fair rates. To achieve such fair rates, we propose $CM^4FQ$\nalgorithm. In this algorithm users are chosen for service on a packet by packet\nbasis. The priority of each user $i$ to be chosen at time $t$ is determined\nbased on a parameter known as service tag (representing the amount of work\ncounted for user $i$ till time $t$). Hence, a free server will choose to serve\nan eligible user with the minimum service tag. Based on such simple selection\ncriterion, $CM^4FQ$ aims at guaranteed fair throughput for each demanding user\nwithout explicit knowledge of each server service rate. We argue that $CM^4FQ$\ncan be applied in a variety of practical queuing systems specially in mobile\ncloud computing architecture.\n", "versions": [{"version": "v1", "created": "Mon, 18 Jan 2016 22:55:41 GMT"}], "update_date": "2016-01-20", "authors_parsed": [["Khamse-Ashari", "Jalal", ""], ["Lambadaris", "Ioannis", ""], ["Zhao", "Yiqiang", ""]]}, {"id": "1601.05098", "submitter": "Michele Polese", "authors": "Michele Polese, Marco Centenaro, Andrea Zanella, Michele Zorzi", "title": "M2M Massive Access in LTE: RACH Performance Evaluation in a Smart City\n  Scenario", "comments": "in 2016 IEEE International Conference on Communications (ICC), Kuala\n  Lumpur, Malaysia, 2016, pp. 1-6", "journal-ref": null, "doi": "10.1109/ICC.2016.7511430", "report-no": null, "categories": "cs.NI cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Several studies assert that the random access procedure of the Long Term\nEvolution (LTE) cellular standard may not be effective whenever a massive\nnumber of simultaneous connection attempts are performed by terminals, as may\nhappen in a typical Internet of Things or Smart City scenario. Nevertheless,\nsimulation studies in real deployment scenarios are missing because many\nsystem-level simulators do not implement the LTE random access procedure in\ndetail. In this paper, we propose a patch for the LTE module of ns-3, one of\nthe most prominent open-source network simulators, to improve the accuracy of\nthe routine that simulates the LTE Random Access Channel (RACH). The patched\nversion of the random access procedure is compared with the default one and the\nissues arising from massive simultaneous access from mobile terminals in LTE\nare assessed via a simulation campaign.\n", "versions": [{"version": "v1", "created": "Tue, 19 Jan 2016 21:02:02 GMT"}, {"version": "v2", "created": "Wed, 3 Feb 2016 08:09:27 GMT"}, {"version": "v3", "created": "Wed, 20 Jul 2016 07:00:01 GMT"}, {"version": "v4", "created": "Wed, 5 Oct 2016 07:15:08 GMT"}], "update_date": "2018-09-07", "authors_parsed": [["Polese", "Michele", ""], ["Centenaro", "Marco", ""], ["Zanella", "Andrea", ""], ["Zorzi", "Michele", ""]]}, {"id": "1601.05313", "submitter": "Rafael Rodriguez-Sanchez", "authors": "Rafael Rodr\\'iguez-S\\'anchez and Enrique S. Quintana-Ort\\'i", "title": "Architecture-Aware Optimization of an HEVC decoder on Asymmetric\n  Multicore Processors", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DC cs.MM cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Low-power asymmetric multicore processors (AMPs) attract considerable\nattention due to their appealing performance-power ratio for energy-constrained\nenvironments. However, these processors pose a significant programming\nchallenge due to the integration of cores with different performance\ncapabilities, asking for an asymmetry-aware scheduling solution that carefully\ndistributes the workload.\n  The recent HEVC standard, which offers several high-level parallelization\nstrategies, is an important application that can benefit from an implementation\ntailored for the low-power AMPs present in many current mobile or hand-held\ndevices. In this scenario, we present an architecture-aware implementation of\nan HEVC decoder that embeds a criticality-aware scheduling strategy tuned for a\nSamsung Exynos 5422 system-on-chip furnished with an ARM big.LITTLE AMP. The\nperformance and energy efficiency of our solution is further enhanced by\nexploiting the NEON vector engine available in the ARM big.LITTLE architecture.\nExperimental results expose a 1080p real-time HEVC decoding at 24 frames/sec,\nand a reduction of energy consumption over 20%.\n", "versions": [{"version": "v1", "created": "Wed, 20 Jan 2016 15:55:29 GMT"}], "update_date": "2016-01-21", "authors_parsed": [["Rodr\u00edguez-S\u00e1nchez", "Rafael", ""], ["Quintana-Ort\u00ed", "Enrique S.", ""]]}, {"id": "1601.07815", "submitter": "Leonid Yavits PhD", "authors": "L. Yavits, A. Morad, R. Ginosar, U. Weiser", "title": "Convex Optimization of Real Time SoC", "comments": "6 pages, 3 figures", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DC cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Convex optimization methods are employed to optimize a real-time (RT)\nsystem-on-chip (SoC) under a variety of physical resource-driven constraints,\ndemonstrated on an industry MPEG2 encoder SoC. The power optimization is\ncompared to conventional performance-optimization framework, showing a factor\nof two and a half saving in power. Convex optimization is shown to be very\nefficient in a high-level early stage design exploration, guiding computer\narchitects as to the choice of area, voltage, and frequency of the individual\ncomponents of the Chip Multiprocessor (CMP).\n", "versions": [{"version": "v1", "created": "Thu, 28 Jan 2016 16:19:39 GMT"}, {"version": "v2", "created": "Fri, 19 May 2017 13:40:53 GMT"}], "update_date": "2017-05-22", "authors_parsed": [["Yavits", "L.", ""], ["Morad", "A.", ""], ["Ginosar", "R.", ""], ["Weiser", "U.", ""]]}]