[{"id": "1001.1718", "submitter": "Samantha Jenkins", "authors": "Chang Xu (1), Steven R. Kirk (2) and Samantha Jenkins (2) ((1)\n  Department of Information Engineering, Zhejiang Business Technology\n  Institute, Ningbo, China (2) Department of Computer Science and Informatics,\n  University West, Trollhattan, Sweden)", "title": "Tiling for Performance Tuning on Different Models of GPUs", "comments": "Accepted to ISISE2009 (Second International Symposium on Information\n  Science and Engineering, 26 - 28,Dec. 2009, Shanghai, China)", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DC cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The strategy of using CUDA-compatible GPUs as a parallel computation solution\nto improve the performance of programs has been more and more widely approved\nduring the last two years since the CUDA platform was released. Its benefit\nextends from the graphic domain to many other computationally intensive\ndomains. Tiling, as the most general and important technique, is widely used\nfor optimization in CUDA programs. New models of GPUs with better compute\ncapabilities have, however, been released, new versions of CUDA SDKs were also\nreleased. These updated compute capabilities must to be considered when\noptimizing using the tiling technique. In this paper, we implement image\ninterpolation algorithms as a test case to discuss how different tiling\nstrategies affect the program's performance. We especially focus on how the\ndifferent models of GPUs affect the tiling's effectiveness by executing the\nsame program on two different models of GPUs equipped testing platforms. The\nresults demonstrate that an optimized tiling strategy on one GPU model is not\nalways a good solution when execute on other GPU models, especially when some\nexternal conditions were changed.\n", "versions": [{"version": "v1", "created": "Mon, 11 Jan 2010 17:52:13 GMT"}], "update_date": "2010-01-12", "authors_parsed": [["Xu", "Chang", ""], ["Kirk", "Steven R.", ""], ["Jenkins", "Samantha", ""]]}, {"id": "1001.1860", "submitter": "Volker Weinberg", "authors": "Volker Weinberg, Matthias Brehm, Iris Christadler", "title": "OMI4papps: Optimisation, Modelling and Implementation for Highly\n  Parallel Applications", "comments": "12 pages, 8 figures, talk given at the HLRB, KONWIHR and\n  Linux-Cluster Review and Results Workshop, Garching b. Muenchen, Germany, 8-9\n  Dec 2009", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This article reports on first results of the KONWIHR-II project OMI4papps at\nthe Leibniz Supercomputing Centre (LRZ). The first part describes Apex-MAP, a\ntunable synthetic benchmark designed to simulate the performance of typical\nscientific applications. Apex-MAP mimics common memory access patterns and\ndifferent computational intensity of scientific codes. An approach for\nmodelling LRZ's application mix is given whichh makes use of performance\ncounter measurements of real applications running on \"HLRB II\", an SGI Altix\nsystem based on 9728 Intel Montecito dual-cores.\n  The second part will show how the Apex-MAP benchmark could be used to\nsimulate the performance of two mathematical kernels frequently used in\nscientific applications: a dense matrix-matrix multiplication and a sparse\nmatrix-vector multiplication. The performance of both kernels has been\nintensively studied on x86 cores and hardware accelerators. We will compare the\npredicted performance with measured data to validate our Apex-MAP approach.\n", "versions": [{"version": "v1", "created": "Tue, 12 Jan 2010 12:08:53 GMT"}, {"version": "v2", "created": "Mon, 1 Feb 2010 13:37:17 GMT"}], "update_date": "2010-02-01", "authors_parsed": [["Weinberg", "Volker", ""], ["Brehm", "Matthias", ""], ["Christadler", "Iris", ""]]}, {"id": "1001.1902", "submitter": "Volker Weinberg", "authors": "Iris Christadler and Volker Weinberg", "title": "RapidMind: Portability across Architectures and its Limitations", "comments": "12 pages, 6 figures", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.PF cs.PL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Recently, hybrid architectures using accelerators like GPGPUs or the Cell\nprocessor have gained much interest in the HPC community. The RapidMind\nMulti-Core Development Platform is a programming environment that allows\ngenerating code which is able to seamlessly run on hardware accelerators like\nGPUs or the Cell processor and multicore CPUs both from AMD and Intel. This\npaper describes the ports of three mathematical kernels to RapidMind which are\nchosen as synthetic benchmarks and representatives of scientific codes.\nPerformance of these kernels has been measured on various RapidMind backends\n(cuda, cell and x86) and compared to other hardware-specific implementations\n(using CUDA, Cell SDK and Intel MKL). The results give an insight in the degree\nof portability of RapidMind code and code performance across different\narchitectures.\n", "versions": [{"version": "v1", "created": "Tue, 12 Jan 2010 18:11:23 GMT"}, {"version": "v2", "created": "Fri, 19 Feb 2010 16:55:00 GMT"}], "update_date": "2010-02-19", "authors_parsed": [["Christadler", "Iris", ""], ["Weinberg", "Volker", ""]]}, {"id": "1001.2262", "submitter": "Rdv Ijcsis", "authors": "A. Z. Jooya, M. Analoui", "title": "Classifying Application Phases in Asymmetric Chip Multiprocessors", "comments": "6 pages IEEE format, International Journal of Computer Science and\n  Information Security, IJCSIS December 2009, ISSN 1947 5500,\n  http://sites.google.com/site/ijcsis/", "journal-ref": "International Journal of Computer Science and Information\n  Security, IJCSIS, Vol. 6, No. 3, pp. 165-170, December 2009, USA", "doi": null, "report-no": "Volume 6, No. 3, ISSN 1947 5500", "categories": "cs.DC cs.AR cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In present study, in order to improve the performance and reduce the amount\nof power which is dissipated in heterogeneous multicore processors, the ability\nof detecting the program execution phases is investigated. The programs\nexecution intervals have been classified in different phases based on their\nthroughput and the utilization of the cores. The results of implementing the\nphase detection technique are investigated on a single core processor and also\non a multicore processor. To minimize the profiling overhead, an algorithm for\nthe dynamic adjustment of the profiling intervals is presented. It is based on\nthe behavior of the program and reduces the profiling overhead more than three\nfold. The results are obtained from executing multiprocessor benchmarks on a\ngiven processor. In order to show the program phases clearly, throughput and\nutilization of execution intervals are presented on a scatter plot. The results\nare presented for both fixed and variable intervals.\n", "versions": [{"version": "v1", "created": "Wed, 13 Jan 2010 18:47:44 GMT"}], "update_date": "2010-01-14", "authors_parsed": [["Jooya", "A. Z.", ""], ["Analoui", "M.", ""]]}, {"id": "1001.2604", "submitter": "Kui Wu", "authors": "Kui Wu, Yuming Jiang, Jie Li", "title": "On the Model Transform in Stochastic Network Calculus", "comments": null, "journal-ref": null, "doi": null, "report-no": "CS. Dept Research Report, University of Victoria, DCS-332-IR", "categories": "cs.PF cs.NI", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Stochastic network calculus requires special care in the search of proper\nstochastic traffic arrival models and stochastic service models. Tradeoff must\nbe considered between the feasibility for the analysis of performance bounds,\nthe usefulness of performance bounds, and the ease of their numerical\ncalculation. In theory, transform between different traffic arrival models and\ntransform between different service models are possible. Nevertheless, the\nimpact of the model transform on performance bounds has not been thoroughly\ninvestigated. This paper is to investigate the effect of the model transform\nand to provide practical guidance in the model selection in stochastic network\ncalculus.\n", "versions": [{"version": "v1", "created": "Fri, 15 Jan 2010 03:12:55 GMT"}], "update_date": "2010-01-18", "authors_parsed": [["Wu", "Kui", ""], ["Jiang", "Yuming", ""], ["Li", "Jie", ""]]}, {"id": "1001.2931", "submitter": "Roman Talyansky", "authors": "Roman Talyansky, Bernd Scheuermann, Bjorn Kolbeck and Jan Stender", "title": "Towards Transactional Load over XtreemFS", "comments": "The paper is withdrawn by the author due to affiliation incorrectness", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DC cs.PF", "license": "http://creativecommons.org/licenses/by-nc-sa/3.0/", "abstract": "  We propose using trace-based assessment of the performance of distributed\nfile systems (DFS) under transactional IO load. The assessment includes\nsimulations and experiments using the IO traces. Our experiments suggest that\nDFS, and specifically XtreemFS have a good potential to support transactional\nIO load in distributed environments: they demonstrate good performance, high\navailability and scalability, while at the same time opening the way to TCO\nreduction.\n", "versions": [{"version": "v1", "created": "Sun, 17 Jan 2010 22:14:42 GMT"}, {"version": "v2", "created": "Sun, 21 Mar 2010 11:54:32 GMT"}, {"version": "v3", "created": "Thu, 25 Nov 2010 17:35:23 GMT"}], "update_date": "2010-11-29", "authors_parsed": [["Talyansky", "Roman", ""], ["Scheuermann", "Bernd", ""], ["Kolbeck", "Bjorn", ""], ["Stender", "Jan", ""]]}, {"id": "1001.3355", "submitter": "Charles Sutton", "authors": "Charles Sutton, Michael I. Jordan", "title": "Bayesian inference for queueing networks and modeling of internet\n  services", "comments": "Published in at http://dx.doi.org/10.1214/10-AOAS392 the Annals of\n  Applied Statistics (http://www.imstat.org/aoas/) by the Institute of\n  Mathematical Statistics (http://www.imstat.org)", "journal-ref": "Annals of Applied Statistics 2011, Vol. 5, No. 1, 254-282", "doi": "10.1214/10-AOAS392", "report-no": "IMS-AOAS-AOAS392", "categories": "stat.ML cs.NI cs.PF stat.AP stat.CO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Modern Internet services, such as those at Google, Yahoo!, and Amazon, handle\nbillions of requests per day on clusters of thousands of computers. Because\nthese services operate under strict performance requirements, a statistical\nunderstanding of their performance is of great practical interest. Such\nservices are modeled by networks of queues, where each queue models one of the\ncomputers in the system. A key challenge is that the data are incomplete,\nbecause recording detailed information about every request to a heavily used\nsystem can require unacceptable overhead. In this paper we develop a Bayesian\nperspective on queueing models in which the arrival and departure times that\nare not observed are treated as latent variables. Underlying this viewpoint is\nthe observation that a queueing model defines a deterministic transformation\nbetween the data and a set of independent variables called the service times.\nWith this viewpoint in hand, we sample from the posterior distribution over\nmissing data and model parameters using Markov chain Monte Carlo. We evaluate\nour framework on data from a benchmark Web application. We also present a\nsimple technique for selection among nested queueing models. We are unaware of\nany previous work that considers inference in networks of queues in the\npresence of missing data.\n", "versions": [{"version": "v1", "created": "Tue, 19 Jan 2010 16:27:13 GMT"}, {"version": "v2", "created": "Wed, 4 Aug 2010 15:34:17 GMT"}, {"version": "v3", "created": "Fri, 15 Apr 2011 06:03:52 GMT"}], "update_date": "2011-04-18", "authors_parsed": [["Sutton", "Charles", ""], ["Jordan", "Michael I.", ""]]}, {"id": "1001.3756", "submitter": "T.R. Gopalakrishnan Nair", "authors": "A. Christy Persya, T.R.Gopalakrishnan Nair", "title": "Fault Tolerant Real Time Systems", "comments": "4 pages, 4 figures", "journal-ref": "International Conference on Next Generation Software Application,\n  pp 177-180, 2008", "doi": null, "report-no": null, "categories": "cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Real time systems are systems in which there is a commitment for timely\nresponse by the computer to external stimuli. Real time applications have to\nfunction correctly even in presence of faults. Fault tolerance can be achieved\nby either hardware or software or time redundancy. Safety-critical applications\nhave strict time and cost constraints, which means that not only faults have to\nbe tolerated but also the constraints should be satisfied. Deadline scheduling\nmeans that the taskwith the earliest required response time is processed. The\nmost common scheduling algorithms are :Rate Monotonic(RM) and Earliest deadline\nfirst(EDF).This paper deals with the interaction between the fault tolerant\nstrategy and the EDF real time scheduling strategy.\n", "versions": [{"version": "v1", "created": "Thu, 21 Jan 2010 10:18:43 GMT"}], "update_date": "2016-09-08", "authors_parsed": [["Persya", "A. Christy", ""], ["Nair", "T. R. Gopalakrishnan", ""]]}, {"id": "1001.4108", "submitter": "Justin Smith", "authors": "Ben Lund, Justin W Smith", "title": "A Multi-Stage CUDA Kernel for Floyd-Warshall", "comments": "9 pages, 7 figures, 1 table", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DC cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We present a new implementation of the Floyd-Warshall All-Pairs Shortest\nPaths algorithm on CUDA. Our algorithm runs approximately 5 times faster than\nthe previously best reported algorithm. In order to achieve this speedup, we\napplied a new technique to reduce usage of on-chip shared memory and allow the\nCUDA scheduler to more effectively hide instruction latency.\n", "versions": [{"version": "v1", "created": "Sat, 23 Jan 2010 00:22:33 GMT"}, {"version": "v2", "created": "Thu, 25 Feb 2010 02:01:14 GMT"}], "update_date": "2010-02-25", "authors_parsed": [["Lund", "Ben", ""], ["Smith", "Justin W", ""]]}]