[{"id": "1401.1294", "submitter": "Hossein Shokri Ghadikolaei", "authors": "Hossein Shokri-Ghadikolaei and Carlo Fischione", "title": "Analysis and Optimization of Random Sensing Order in Cognitive Radio\n  Networks", "comments": "16 pages, 12 figures, 7 tables, accepted in Journal of Selected Areas\n  in Communications (J-SAC) CR series and will be published in Apr'15", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.IT cs.PF math.IT math.PR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Developing an efficient spectrum access policy enables cognitive radios to\ndramatically increase spectrum utilization while ensuring predetermined quality\nof service levels for primary users. In this paper, modeling, performance\nanalysis, and optimization of a distributed secondary network with random\nsensing order policy are studied. Specifically, the secondary users create a\nrandom order of available channels upon primary users return, and then find\noptimal transmission and handoff opportunities in a distributed manner. By a\nMarkov chain analysis, the average throughputs of the secondary users and\naverage interference level among the secondary and primary users are\ninvestigated. A maximization of the secondary network performance in terms of\nthe throughput while keeping under control the average interference is\nproposed. It is shown that despite of traditional view, non-zero false alarm in\nthe channel sensing can increase channel utilization, especially in a dense\nsecondary network where the contention is too high. Then, two simple and\npractical adaptive algorithms are established to optimize the network. The\nsecond algorithm follows the variations of the wireless channels in\nnon-stationary conditions and outperforms even static brute force optimization,\nwhile demanding few computations. The convergence of the distributed algorithms\nare theoretically investigated based on the analytical performance indicators\nestablished by the Markov chain analysis. Finally, numerical results validate\nthe analytical derivations and demonstrate the efficiency of the proposed\nschemes. It is concluded that fully distributed sensing order algorithms can\nlead to substantial performance improvements in cognitive radio networks\nwithout the need of centralized management or message passing among the users.\n", "versions": [{"version": "v1", "created": "Tue, 7 Jan 2014 07:32:51 GMT"}, {"version": "v2", "created": "Sun, 18 May 2014 21:28:10 GMT"}, {"version": "v3", "created": "Wed, 3 Sep 2014 07:08:27 GMT"}], "update_date": "2014-09-04", "authors_parsed": [["Shokri-Ghadikolaei", "Hossein", ""], ["Fischione", "Carlo", ""]]}, {"id": "1401.1513", "submitter": "Karim Seddik", "authors": "Karim G. Seddik", "title": "On the Stability of Random Multiple Access with Feedback Exploitation\n  and Queue Priority", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.IT cs.NI cs.PF math.IT", "license": "http://creativecommons.org/licenses/by/3.0/", "abstract": "  In this paper, we study the stability of two interacting queues under random\nmultiple access in which the queues leverage the feedback information. We\nderive the stability region under random multiple access where one of the two\nqueues exploits the feedback information and backs off under negative\nacknowledgement (NACK) and the other, higher priority, queue will access the\nchannel with probability one. We characterize the stability region of this\nfeedback-based random access protocol and prove that this derived stability\nregion encloses the stability region of the conventional random access (RA)\nscheme that does not exploit the feedback information.\n", "versions": [{"version": "v1", "created": "Mon, 6 Jan 2014 20:11:21 GMT"}], "update_date": "2014-01-09", "authors_parsed": [["Seddik", "Karim G.", ""]]}, {"id": "1401.3041", "submitter": "Maxime Chevalier-Boisvert", "authors": "Maxime Chevalier-Boisvert, Marc Feeley", "title": "Removing Dynamic Type Tests with Context-Driven Basic Block Versioning", "comments": "22 pages, 10 figures", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.PL cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Dynamic typing is an important feature of dynamic programming languages.\nPrimitive operators such as those for performing arithmetic and comparisons\ntypically operate on a wide variety of in put value types, and as such, must\ninternally implement some form of dynamic type dispatch and type checking.\nRemoving such type tests is important for an efficient implementation.\n  In this paper, we examine the effectiveness of a novel approach to reducing\nthe number of dynamically executed type tests called context-driven basic block\nversioning. This simple technique clones and specializes basic blocks in such a\nway as to allow the compiler to accumulate type information while machine code\nis generated, without a separate type analysis pass. The accumulated\ninformation allows the removal of some redundant type tests, particularly in\nperformance-critical paths.\n  We have implemented intraprocedural context-driven basic block versioning in\na JavaScript JIT compiler. For comparison, we have also implemented a classical\nflow-based type analysis operating on the same concrete types. Our results show\nthat basic block versioning performs better on most benchmarks and removes a\nlarge fraction of type tests at the expense of a moderate code size increase.\nWe believe that this technique offers a good tradeoff between implementation\ncomplexity and performance, and is suitable for integration in production JIT\ncompilers.\n", "versions": [{"version": "v1", "created": "Tue, 14 Jan 2014 00:25:38 GMT"}], "update_date": "2014-01-15", "authors_parsed": [["Chevalier-Boisvert", "Maxime", ""], ["Feeley", "Marc", ""]]}, {"id": "1401.3541", "submitter": "Habib Sidi b.a.", "authors": "Habib B.A. Sidi, Zwi Altman and Abdoulaye Tall", "title": "Self-Optimizing Mechanisms for EMF Reduction in Heterogeneous Networks", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.NI cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This paper focuses on the exposure to Radio Frequency (RF) Electromagnetic\nFields (EMF) and on optimization methods to reduce it. Within the FP7 LEXNET\nproject, an Exposure Index (EI) has been defined that aggregates the essential\ncomponents that impact exposure to EMF. The EI includes, among other, downlink\n(DL) exposure induced by the base stations (BSs) and access points, the uplink\n(UL) exposure induced by the devices in communication, and the corresponding\nexposure time. Motivated by the EI definition, this paper develops stochastic\napproximation based self-optimizing algorithm that dynamically adapts the\nnetwork to reduce the EI in a heterogeneous network with macro- and small\ncells. It is argued that the increase of the small cells' coverage can, to a\ncertain extent, reduce the EI, but above a certain limit, will deteriorate DL\nQoS. A load balancing algorithm is formulated that adapts the small cell'\ncoverage based on UL loads and a DL QoS indicator. The proof of convergence of\nthe algorithm is provided and its performance in terms of EI reduction is\nillustrated through extensive numerical simulations.\n", "versions": [{"version": "v1", "created": "Wed, 15 Jan 2014 10:57:42 GMT"}], "update_date": "2014-01-16", "authors_parsed": [["Sidi", "Habib B. A.", ""], ["Altman", "Zwi", ""], ["Tall", "Abdoulaye", ""]]}, {"id": "1401.3615", "submitter": "Johannes Hofmann", "authors": "Johannes Hofmann, Jan Treibig, Georg Hager, Gerhard Wellein", "title": "Performance Engineering for a Medical Imaging Application on the Intel\n  Xeon Phi Accelerator", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DC cs.CV cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We examine the Xeon Phi, which is based on Intel's Many Integrated Cores\narchitecture, for its suitability to run the FDK algorithm--the most commonly\nused algorithm to perform the 3D image reconstruction in cone-beam computed\ntomography. We study the challenges of efficiently parallelizing the\napplication and means to enable sensible data sharing between threads despite\nthe lack of a shared last level cache. Apart from parallelization, SIMD\nvectorization is critical for good performance on the Xeon Phi; we perform\nvarious micro-benchmarks to investigate the platform's new set of vector\ninstructions and put a special emphasis on the newly introduced vector gather\ncapability. We refine a previous performance model for the application and\nadapt it for the Xeon Phi to validate the performance of our optimized\nhand-written assembly implementation, as well as the performance of several\ndifferent auto-vectorization approaches.\n", "versions": [{"version": "v1", "created": "Tue, 17 Dec 2013 14:46:19 GMT"}], "update_date": "2014-01-16", "authors_parsed": [["Hofmann", "Johannes", ""], ["Treibig", "Jan", ""], ["Hager", "Georg", ""], ["Wellein", "Gerhard", ""]]}, {"id": "1401.3824", "submitter": "Xiaohan Wei", "authors": "Xiaohan Wei, Michael J. Neely", "title": "Power Aware Wireless File Downloading: A Constrained Restless Bandit\n  Approach", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This paper treats power-aware throughput maximization in a multi-user file\ndownloading system. Each user can receive a new file only after its previous\nfile is finished. The file state processes for each user act as coupled Markov\nchains that form a generalized restless bandit system. First, an optimal\nalgorithm is derived for the case of one user. The algorithm maximizes\nthroughput subject to an average power constraint. Next, the one-user algorithm\nis extended to a low complexity heuristic for the multi-user problem. The\nheuristic uses a simple online index policy and its effectiveness is shown via\nsimulation. For simple 3-user cases where the optimal solution can be computed\noffline, the heuristic is shown to be near-optimal for a wide range of\nparameters.\n", "versions": [{"version": "v1", "created": "Thu, 16 Jan 2014 04:18:47 GMT"}], "update_date": "2014-01-17", "authors_parsed": [["Wei", "Xiaohan", ""], ["Neely", "Michael J.", ""]]}, {"id": "1401.4691", "submitter": "Ronald Hochreiter", "authors": "Stefan Hochrainer and Ronald Hochreiter and Georg Pflug", "title": "An algorithm for calculating steady state probabilities of $M|E_r|c|K$\n  queueing systems", "comments": null, "journal-ref": "Central European Journal of Operations Research 13(1): 1-13. 2005", "doi": null, "report-no": null, "categories": "cs.SY cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This paper presents a method for calculating steady state probabilities of\n$M|E_r|c|K$ queueing systems. The infinitesimal generator matrix is used to\ndefine all possible states in the system and their transition probabilities.\nWhile this matrix can be written down immediately for many other $M|PH|c|K$\nqueueing systems with phase-type service times (e.g. Coxian, Hypoexponential,\n\\ldots), it requires a more careful analysis for systems with Erlangian service\ntimes. The constructed matrix may then be used to calculate steady state\nprobabilities using an iterative algorithm. The resulting steady state\nprobabilities can be used to calculate various performance measures, e.g. the\naverage queue length. Additionally, computational issues of the implementation\nare discussed and an example from the field of telecommunication call-center\nqueue length will be outlined to substantiate the applicability of these\nefforts. In the appendix, tables of the average queueing length given a\nspecific number of service channels, traffic density, and system size are\npresented.\n", "versions": [{"version": "v1", "created": "Sun, 19 Jan 2014 16:25:38 GMT"}], "update_date": "2014-01-21", "authors_parsed": [["Hochrainer", "Stefan", ""], ["Hochreiter", "Ronald", ""], ["Pflug", "Georg", ""]]}, {"id": "1401.4950", "submitter": "Matthias Petschow", "authors": "Matthias Petschow (1), ((1) AICES, RWTH Aachen)", "title": "MRRR-based Eigensolvers for Multi-core Processors and Supercomputers", "comments": "PhD thesis", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.MS cs.NA cs.PF math.NA", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The real symmetric tridiagonal eigenproblem is of outstanding importance in\nnumerical computations; it arises frequently as part of eigensolvers for\nstandard and generalized dense Hermitian eigenproblems that are based on a\nreduction to tridiagonal form. For its solution, the algorithm of Multiple\nRelatively Robust Representations (MRRR or MR3 in short) - introduced in the\nlate 1990s - is among the fastest methods. To compute k eigenpairs of a real\nn-by-n tridiagonal T, MRRR only requires O(kn) arithmetic operations; in\ncontrast, all the other practical methods require O(k^2 n) or O(n^3) operations\nin the worst case. This thesis centers around the performance and accuracy of\nMRRR.\n", "versions": [{"version": "v1", "created": "Mon, 20 Jan 2014 15:52:03 GMT"}], "update_date": "2014-01-21", "authors_parsed": [["Petschow", "Matthias", "", "AICES, RWTH Aachen"]]}, {"id": "1401.6020", "submitter": "Ghassem Tofighi", "authors": "Ghassem Tofighi, Kaamran Raahemifar, Anastasios N. Venetsanopoulos", "title": "A Brief Review on Models for Performance Evaluation in DSS Architecture", "comments": "Find it online here: http://www.jscse.com/papers/?vol=3&no=3&n=68", "journal-ref": null, "doi": "10.7321/jscse.v3.n3.68", "report-no": null, "categories": "cs.PF cs.SE", "license": "http://creativecommons.org/licenses/by/3.0/", "abstract": "  Distributed Software Systems are used these days by many people in the real\ntime operations and modern enterprise applications. One of the most important\nand essential attributes of measurements for the quality of service of\ndistributed software is performance. Performance models can be employed at\nearly stages of the software development cycle to characterize the quantitative\nbehavior of software systems. In this research, performance models based on\nfuzzy logic approach, queuing network approach and Petri net approach have been\nreviewed briefly. One of the most common ways in performance analysis of\ndistributed software systems is translating the UML diagrams to mathematical\nmodeling languages for the description of distributed systems such as queuing\nnetworks or Petri nets. In this paper, some of these approaches are reviewed\nbriefly. Attributes which are used for performance modeling in the literature\nare mostly machine based. On the other hand, end users and client parameters\nfor performance evaluation are not covered extensively. In this way, future\nresearch could be based on developing hybrid models to capture user decision\nvariables which make system performance evaluation more user driven.\n", "versions": [{"version": "v1", "created": "Thu, 23 Jan 2014 15:51:32 GMT"}], "update_date": "2014-01-25", "authors_parsed": [["Tofighi", "Ghassem", ""], ["Raahemifar", "Kaamran", ""], ["Venetsanopoulos", "Anastasios N.", ""]]}, {"id": "1401.6100", "submitter": "K. Eric Harper", "authors": "K. Eric Harper and Thijmen de Gooijer", "title": "Performance Impact of Lock-Free Algorithms on Multicore Communication\n  APIs", "comments": "17 pages, 8 figures, 36 references, Embedded World Conference 2013", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DC cs.OS cs.PF cs.SE", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Data race conditions in multi-tasking software applications are prevented by\nserializing access to shared memory resources, ensuring data consistency and\ndeterministic behavior. Traditionally tasks acquire and release locks to\nsynchronize operations on shared memory. Unfortunately, lock management can add\nsignificant processing overhead especially for multicore deployments where\ntasks on different cores convoy in queues waiting to acquire a lock.\nImplementing more than one lock introduces the risk of deadlock and using\nspinlocks constrains which cores a task can run on. The better alternative is\nto eliminate locks and validate that real-time properties are met, which is not\ndirectly considered in many embedded applications. Removing the locks is\nnon-trivial and packaging lock-free algorithms for developers reduces the\npossibility of concurrency defects. This paper details how a multicore\ncommunication API implementation is enhanced to support lock-free messaging and\nthe impact this has on data exchange latency between tasks. Throughput and\nlatency are compared on Windows and Linux between lock-based and lock-free\nimplementations for data exchange of messages, packets, and scalars. A model of\nthe lock-free exchange predicts performance at the system architecture level\nand provides a stop criterion for the refactoring. The results show that\nmigration from single to multicore hardware architectures degrades lock-based\nperformance, and increases lock-free performance.\n", "versions": [{"version": "v1", "created": "Thu, 9 Jan 2014 00:04:41 GMT"}], "update_date": "2014-01-24", "authors_parsed": [["Harper", "K. Eric", ""], ["de Gooijer", "Thijmen", ""]]}, {"id": "1401.6399", "submitter": "Daniel Lemire", "authors": "Daniel Lemire, Leonid Boytsov, Nathan Kurz", "title": "SIMD Compression and the Intersection of Sorted Integers", "comments": null, "journal-ref": "Software: Practice and Experience Volume 46, Issue 6, pages\n  723-749, June 2016", "doi": "10.1002/spe.2326", "report-no": null, "categories": "cs.IR cs.DB cs.PF", "license": "http://creativecommons.org/licenses/by/4.0/", "abstract": "  Sorted lists of integers are commonly used in inverted indexes and database\nsystems. They are often compressed in memory. We can use the SIMD instructions\navailable in common processors to boost the speed of integer compression\nschemes. Our S4-BP128-D4 scheme uses as little as 0.7 CPU cycles per decoded\ninteger while still providing state-of-the-art compression.\n  However, if the subsequent processing of the integers is slow, the effort\nspent on optimizing decoding speed can be wasted. To show that it does not have\nto be so, we (1) vectorize and optimize the intersection of posting lists; (2)\nintroduce the SIMD Galloping algorithm. We exploit the fact that one SIMD\ninstruction can compare 4 pairs of integers at once.\n  We experiment with two TREC text collections, GOV2 and ClueWeb09 (Category\nB), using logs from the TREC million-query track. We show that using only the\nSIMD instructions ubiquitous in all modern CPUs, our techniques for conjunctive\nqueries can double the speed of a state-of-the-art approach.\n", "versions": [{"version": "v1", "created": "Fri, 24 Jan 2014 16:53:37 GMT"}, {"version": "v10", "created": "Fri, 6 Mar 2015 19:50:27 GMT"}, {"version": "v11", "created": "Thu, 12 Mar 2015 01:32:13 GMT"}, {"version": "v12", "created": "Thu, 7 May 2015 00:52:07 GMT"}, {"version": "v13", "created": "Mon, 20 Apr 2020 19:42:24 GMT"}, {"version": "v2", "created": "Mon, 27 Jan 2014 16:37:12 GMT"}, {"version": "v3", "created": "Tue, 4 Feb 2014 01:02:27 GMT"}, {"version": "v4", "created": "Thu, 27 Feb 2014 23:38:50 GMT"}, {"version": "v5", "created": "Mon, 28 Apr 2014 19:15:10 GMT"}, {"version": "v6", "created": "Thu, 15 May 2014 14:57:33 GMT"}, {"version": "v7", "created": "Thu, 17 Jul 2014 19:42:12 GMT"}, {"version": "v8", "created": "Wed, 23 Jul 2014 19:16:39 GMT"}, {"version": "v9", "created": "Wed, 24 Dec 2014 20:30:29 GMT"}], "update_date": "2020-04-22", "authors_parsed": [["Lemire", "Daniel", ""], ["Boytsov", "Leonid", ""], ["Kurz", "Nathan", ""]]}, {"id": "1401.6628", "submitter": "Yuqing Zhu", "authors": "Yuqing Zhu, Jianfeng Zhan, Chuliang Weng, Raghunath Nambiar, Jinchao\n  Zhang, Xingzhen Chen, and Lei Wang", "title": "BigOP: Generating Comprehensive Big Data Workloads as a Benchmarking\n  Framework", "comments": "10 pages, 3 figures", "journal-ref": "Database Systems for Advanced Applications: 19th International\n  Conference, DASFAA 2014, Bali, Indonesia, April 21-24, 2014", "doi": null, "report-no": null, "categories": "cs.DC cs.DB cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Big Data is considered proprietary asset of companies, organizations, and\neven nations. Turning big data into real treasure requires the support of big\ndata systems. A variety of commercial and open source products have been\nunleashed for big data storage and processing. While big data users are facing\nthe choice of which system best suits their needs, big data system developers\nare facing the question of how to evaluate their systems with regard to general\nbig data processing needs. System benchmarking is the classic way of meeting\nthe above demands. However, existent big data benchmarks either fail to\nrepresent the variety of big data processing requirements, or target only one\nspecific platform, e.g. Hadoop.\n  In this paper, with our industrial partners, we present BigOP, an end-to-end\nsystem benchmarking framework, featuring the abstraction of representative\nOperation sets, workload Patterns, and prescribed tests. BigOP is part of an\nopen-source big data benchmarking project, BigDataBench. BigOP's abstraction\nmodel not only guides the development of BigDataBench, but also enables\nautomatic generation of tests with comprehensive workloads.\n  We illustrate the feasibility of BigOP by implementing an automatic test\ngeneration tool and benchmarking against three widely used big data processing\nsystems, i.e. Hadoop, Spark and MySQL Cluster. Three tests targeting three\ndifferent application scenarios are prescribed. The tests involve relational\ndata, text data and graph data, as well as all operations and workload\npatterns. We report results following test specifications.\n", "versions": [{"version": "v1", "created": "Sun, 26 Jan 2014 08:41:50 GMT"}, {"version": "v2", "created": "Wed, 27 Dec 2017 03:56:44 GMT"}], "update_date": "2017-12-29", "authors_parsed": [["Zhu", "Yuqing", ""], ["Zhan", "Jianfeng", ""], ["Weng", "Chuliang", ""], ["Nambiar", "Raghunath", ""], ["Zhang", "Jinchao", ""], ["Chen", "Xingzhen", ""], ["Wang", "Lei", ""]]}, {"id": "1401.7494", "submitter": "Johannes Hofmann", "authors": "Johannes Hofmann, Jan Treibig, Georg Hager, Gerhard Wellein", "title": "Comparing the Performance of Different x86 SIMD Instruction Sets for a\n  Medical Imaging Application on Modern Multi- and Manycore Chips", "comments": "arXiv admin note: text overlap with arXiv:1401.3615", "journal-ref": null, "doi": "10.1145/2568058.2568068", "report-no": null, "categories": "cs.DC cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Single Instruction, Multiple Data (SIMD) vectorization is a major driver of\nperformance in current architectures, and is mandatory for achieving good\nperformance with codes that are limited by instruction throughput. We\ninvestigate the efficiency of different SIMD-vectorized implementations of the\nRabbitCT benchmark. RabbitCT performs 3D image reconstruction by back\nprojection, a vital operation in computed tomography applications. The\nunderlying algorithm is a challenge for vectorization because it consists,\napart from a streaming part, also of a bilinear interpolation requiring\nscattered access to image data. We analyze the performance of SSE (128 bit),\nAVX (256 bit), AVX2 (256 bit), and IMCI (512 bit) implementations on recent\nIntel x86 systems. A special emphasis is put on the vector gather\nimplementation on Intel Haswell and Knights Corner microarchitectures. Finally\nwe discuss why GPU implementations perform much better for this specific\nalgorithm.\n", "versions": [{"version": "v1", "created": "Wed, 29 Jan 2014 12:41:44 GMT"}], "update_date": "2014-01-30", "authors_parsed": [["Hofmann", "Johannes", ""], ["Treibig", "Jan", ""], ["Hager", "Georg", ""], ["Wellein", "Gerhard", ""]]}, {"id": "1401.7528", "submitter": "Reza Farrahi Moghaddam", "authors": "Reza Farrahi Moghaddam, Vahid Asghari, Fereydoun Farrahi Moghaddam,\n  Yves Lemieux, Mohamed Cheriet", "title": "A Monte-Carlo Approach to Lifespan Failure Performance Analysis of the\n  Network Fabric in Modular Data Centers", "comments": "29 Pages, 14 figures", "journal-ref": null, "doi": "10.1016/j.jnca.2017.03.015", "report-no": null, "categories": "cs.PF cs.DC cs.NI", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Data centers have been evolved from a passive element of compute\ninfrastructure to become an active, core part of any ICT solution. In\nparticular, modular data centers (MDCs), which are a promising design approach\nto improve resiliency of data centers, can play a key role in deploying ICT\ninfrastructure in remote and inhospitable environments in order to take\nadvantage of low temperatures and hydro- and wind-electric capabilities. This\nis because of capability of the modular data centers to survive even in lack of\ncontinuous on-site maintenance and support. The most critical part of a data\ncenter is its network fabric that could impede the whole system even if all\nother components are fully functional, assuming that other analyses has been\nalready performed to ensure the reliability of the underlying infrastructure\nand support systems. In this work, a complete failure analysis of modular data\ncenters using failure models of various components including servers, switches,\nand links is performed using a proposed Monte-Carlo approach. The proposed\nMonte-Carlo approach, which is based on the concept of snapshots, allows us to\neffectively calculate the performance of a design along its lifespan even up to\nthe terminal stages. To show the capabilities of the proposed approach, various\nnetwork topologies, such as FatTree, BCube, MDCube, and their modifications are\nconsidered. The performance and also the lifespan of each topology design in\npresence of failures of their components are studied against the topology\nparameters.\n", "versions": [{"version": "v1", "created": "Wed, 29 Jan 2014 15:02:16 GMT"}, {"version": "v2", "created": "Wed, 12 Mar 2014 03:33:12 GMT"}, {"version": "v3", "created": "Wed, 22 Mar 2017 16:23:49 GMT"}], "update_date": "2017-03-23", "authors_parsed": [["Moghaddam", "Reza Farrahi", ""], ["Asghari", "Vahid", ""], ["Moghaddam", "Fereydoun Farrahi", ""], ["Lemieux", "Yves", ""], ["Cheriet", "Mohamed", ""]]}]