[{"id": "1109.0931", "submitter": "Md. Monzur Morshed", "authors": "Md. Monzur Morshed, Meftah Ur Rahman, Md. Rafiqul Islam", "title": "An Empirical Study on variants of TCP over AODV routing protocol in\n  MANET", "comments": "(6 pages, 9 figures, 3 tables) This is a joint research collaboration\n  of AIUB & TigerHATS Research Team. http://www.aiub.edu,\n  http://www.tigerhats.org", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.NI cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The cardinal concept of TCP development was to carry data within the network\nwhere network congestion plays a vital role to cause packet loss. On the other\nhand, there are several other reasons to lose packets in Mobile Ad Hoc Networks\ndue to fading, interfaces, multi-path routing, malicious node, and black hole.\nAlong with throughput, fairness of TCP protocols is important to establish a\ngood communication. In this paper, an empirical study has been done by\nsimulation and analysis of TCP variations under AODV routing protocol. In our\nsimulation, we studied multiple variations of TCP, such as Reno, New-Reno,\nVegas, and Tahoe. The simulation work has been done in NS2 environment. Based\non the analysis simulation result of we carried out our observations with\nrespect to the behavior of AODV routing protocol for different TCP packets\nunder several QoS metrics such as drop, throughput, delay, and jitter.\n", "versions": [{"version": "v1", "created": "Mon, 5 Sep 2011 15:17:12 GMT"}, {"version": "v2", "created": "Thu, 29 Sep 2011 14:56:17 GMT"}], "update_date": "2011-09-30", "authors_parsed": [["Morshed", "Md. Monzur", ""], ["Rahman", "Meftah Ur", ""], ["Islam", "Md. Rafiqul", ""]]}, {"id": "1109.1421", "submitter": "Paul Bone", "authors": "Paul Bone and Zoltan Somogyi", "title": "Profiling parallel Mercury programs with ThreadScope", "comments": "21st Workshop on Logic-based methods in Programming Environments.\n  Lexington, Kentucky, July 2011", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.PL cs.DC cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The behavior of parallel programs is even harder to understand than the\nbehavior of sequential programs. Parallel programs may suffer from any of the\nperformance problems affecting sequential programs, as well as from several\nproblems unique to parallel systems. Many of these problems are quite hard (or\neven practically impossible) to diagnose without help from specialized tools.\nWe present a proposal for a tool for profiling the parallel execution of\nMercury programs, a proposal whose implementation we have already started. This\ntool is an adaptation and extension of the ThreadScope profiler that was first\nbuilt to help programmers visualize the execution of parallel Haskell programs.\n", "versions": [{"version": "v1", "created": "Wed, 7 Sep 2011 11:20:46 GMT"}], "update_date": "2011-09-08", "authors_parsed": [["Bone", "Paul", ""], ["Somogyi", "Zoltan", ""]]}, {"id": "1109.3739", "submitter": "Aydin Buluc", "authors": "Aydin Buluc and John Gilbert", "title": "Parallel Sparse Matrix-Matrix Multiplication and Indexing:\n  Implementation and Experiments", "comments": null, "journal-ref": "SIAM J. Sci. Comput., 34(4), 170 - 191, 2012", "doi": "10.1137/110848244", "report-no": null, "categories": "cs.DC cs.MS cs.NA cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Generalized sparse matrix-matrix multiplication (or SpGEMM) is a key\nprimitive for many high performance graph algorithms as well as for some linear\nsolvers, such as algebraic multigrid. Here we show that SpGEMM also yields\nefficient algorithms for general sparse-matrix indexing in distributed memory,\nprovided that the underlying SpGEMM implementation is sufficiently flexible and\nscalable. We demonstrate that our parallel SpGEMM methods, which use\ntwo-dimensional block data distributions with serial hypersparse kernels, are\nindeed highly flexible, scalable, and memory-efficient in the general case.\nThis algorithm is the first to yield increasing speedup on an unbounded number\nof processors; our experiments show scaling up to thousands of processors in a\nvariety of test scenarios.\n", "versions": [{"version": "v1", "created": "Fri, 16 Sep 2011 23:25:28 GMT"}, {"version": "v2", "created": "Thu, 26 Apr 2012 20:41:41 GMT"}], "update_date": "2015-03-19", "authors_parsed": [["Buluc", "Aydin", ""], ["Gilbert", "John", ""]]}, {"id": "1109.4974", "submitter": "William Voorsluys", "authors": "William Voorsluys, James Broberg, Srikumar Venugopal, Rajkumar Buyya", "title": "Cost of Virtual Machine Live Migration in Clouds: A Performance\n  Evaluation", "comments": "CloudCom 2009", "journal-ref": null, "doi": "10.1007/978-3-642-10665-1_23", "report-no": null, "categories": "cs.DC cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Virtualization has become commonplace in modern data centers, often referred\nas \"computing clouds\". The capability of virtual machine live migration brings\nbenefits such as improved performance, manageability and fault tolerance, while\nallowing workload movement with a short service downtime. However, service\nlevels of applications are likely to be negatively affected during a live\nmigration. For this reason, a better understanding of its effects on system\nperformance is desirable. In this paper, we evaluate the effects of live\nmigration of virtual machines on the performance of applications running inside\nXen VMs. Results show that, in most cases, migration overhead is acceptable but\ncannot be disregarded, especially in systems where availability and\nresponsiveness are governed by strict Service Level Agreements. Despite that,\nthere is a high potential for live migration applicability in data centers\nserving modernInternet applications. Our results are based on a workload\ncovering the domain of multi-tier Web 2.0 applications.\n", "versions": [{"version": "v1", "created": "Thu, 22 Sep 2011 23:52:18 GMT"}, {"version": "v2", "created": "Fri, 9 Dec 2011 08:07:58 GMT"}], "update_date": "2011-12-12", "authors_parsed": [["Voorsluys", "William", ""], ["Broberg", "James", ""], ["Venugopal", "Srikumar", ""], ["Buyya", "Rajkumar", ""]]}, {"id": "1109.5679", "submitter": "Anis Ismail", "authors": "Anis Ismail, Mohamed Quafafou, Nicolas Durand, Gilles Nachouki and\n  Mohammad Hajjar", "title": "Queries mining for efficient routing in P2P communities", "comments": "20 pages, 9 figures. arXiv admin note: substantial text overlap with\n  arXiv:1108.1378", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.PF cs.NI", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Peer-to-peer (P2P) computing is currently attracting enormous attention. In\nP2P systems a very large number of autonomous computing nodes (the peers) pool\ntogether their resources and rely on each other for data and services.\nPeer-to-peer (P2P) Data-sharing systems now generate a significant portion of\nInternet traffic. Examples include P2P systems for network storage, web\ncaching, searching and indexing of relevant documents and distributed\nnetwork-threat analysis. Requirements for widely distributed information\nsystems supporting virtual organizations have given rise to a new category of\nP2P systems called schema-based. In such systems each peer exposes its own\nschema and the main objective is the efficient search across the P2P network by\nprocessing each incoming query without overly consuming bandwidth. The\nusability of these systems depends on effective techniques to find and retrieve\ndata; however, efficient and effective routing of content-based queries is a\nchallenging problem in P2P networks. This work was attended as an attempt to\nmotivate the use of mining algorithms and hypergraphs context to develop two\ndifferent methods that improve significantly the efficiency of P2P\ncommunications. The proposed query routing methods direct the query to a set of\nrelevant peers in such way as to avoid network traffic and bandwidth\nconsumption. We compare the performance of the two proposed methods with the\nbaseline one and our experimental results prove that our proposed methods\ngenerate impressive levels of performance and scalability.\n", "versions": [{"version": "v1", "created": "Mon, 26 Sep 2011 19:27:21 GMT"}], "update_date": "2011-10-04", "authors_parsed": [["Ismail", "Anis", ""], ["Quafafou", "Mohamed", ""], ["Durand", "Nicolas", ""], ["Nachouki", "Gilles", ""], ["Hajjar", "Mohammad", ""]]}, {"id": "1109.6502", "submitter": "Md. Monzur Morshed", "authors": "Md. Monzur Morshed, Meftah Ur Rahman, Md. Rafiqul Islam", "title": "An Empirical Study of UDP (CBR) Packet Performance over AODV Single &\n  Multi-Channel Parallel Transmission in MANET", "comments": "(5 pages, 11 figures, 5 tables) This is a joint research\n  collaboration of AIUB & TigerHATS Research Team. http://www.aiub.edu,\n  http://www.tigerhats.org", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.NI cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Mobile Ad-hoc Network is a temporary network which is the cooperative\nengagement of a collection of standalone mobile nodes that are not connected to\nany external network. It is a decentralized network where mobile nodes can be\neasily deployed in almost any environment without sophisticated infrastructure\nsupport. An empirical study has been done for AODV routing protocol under\nsingle channel and multi channel environment using the tool NS2. To compare the\nperformance of AODV in the two environments, the simulation results have been\nanalyzed by graphical manner and trace file based on QoS metrics such as\nthroughput, packet drop, delay and jitter. The simulation result analysis\nverifies the AODV routing protocol performances for single channel and multi\nchannel. After the analysis of the simulation scenario we suggest that use of\nParallel MAC (P-MAC) may enhance the performance for multi channel.\n", "versions": [{"version": "v1", "created": "Thu, 29 Sep 2011 12:15:23 GMT"}], "update_date": "2011-09-30", "authors_parsed": [["Morshed", "Md. Monzur", ""], ["Rahman", "Meftah Ur", ""], ["Islam", "Md. Rafiqul", ""]]}]