[{"id": "1208.0505", "submitter": "Esa Hyyti\\\"a", "authors": "Esa Hyyti\\\"a and J\\\"org Ott", "title": "Criticality of Large Delay Tolerant Networks via Directed Continuum\n  Percolation in Space-Time", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.PF cs.NI", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We study delay tolerant networking (DTN) and in particular, its capacity to\nstore, carry and forward messages so that the messages eventually reach their\nfinal destinations. We approach this broad question in the framework of\npercolation theory. To this end, we assume an elementary mobility model, where\nnodes arrive to an infinite plane according to a Poisson point process, move a\ncertain distance L, and then depart. In this setting, we characterize the mean\ndensity of nodes required to support DTN style networking. In particular, under\nthe given assumptions, we show that DTN is feasible when the mean node degree\nis greater than 4 e(g), where parameter g=L/d is the ratio of the distance L to\nthe transmission range d, and e(g) is the critical reduced number density of\ntilted cylinders in a directed continuum percolation model. By means of Monte\nCarlo simulations, we give numerical values for e(g). The asymptotic behavior\nof e(g) when g tends to infinity is also derived from a fluid flow analysis.\n", "versions": [{"version": "v1", "created": "Thu, 2 Aug 2012 14:38:24 GMT"}], "update_date": "2012-08-03", "authors_parsed": [["Hyyti\u00e4", "Esa", ""], ["Ott", "J\u00f6rg", ""]]}, {"id": "1208.0525", "submitter": "Shang Shang", "authors": "Shang Shang, Paul W. Cuff, Sanjeev R. Kulkarni, Pan Hui", "title": "An Upper Bound on the Convergence Time for Distributed Binary Consensus", "comments": "15th International Conference on Information Fusion, July 2012, 7\n  pages", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.PF", "license": "http://creativecommons.org/licenses/by-nc-sa/3.0/", "abstract": "  The problem addressed in this paper is the analysis of a distributed\nconsensus algorithm for arbitrary networks, proposed by B\\'en\\'ezit et al.. In\nthe initial setting, each node in the network has one of two possible states\n(\"yes\" or \"no\"). Nodes can update their states by communicating with their\nneighbors via a 2-bit message in an asynchronous clock setting. Eventually, all\nnodes reach consensus on the majority states. We use the theory of electric\nnetworks, random walks, and couplings of Markov chains to derive an O(N4 logN)\nupper bound for the expected convergence time on an arbitrary graph of size N.\n", "versions": [{"version": "v1", "created": "Thu, 2 Aug 2012 16:00:45 GMT"}, {"version": "v2", "created": "Fri, 17 May 2013 21:42:57 GMT"}], "update_date": "2013-05-21", "authors_parsed": [["Shang", "Shang", ""], ["Cuff", "Paul W.", ""], ["Kulkarni", "Sanjeev R.", ""], ["Hui", "Pan", ""]]}, {"id": "1208.0788", "submitter": "Shang Shang", "authors": "Shang Shang and Paul W. Cuff and Pan Hui and Sanjeev R. Kulkarni", "title": "An Upper Bound on the Convergence Time for Quantized Consensus", "comments": "submitted to IEEE Transactions on Automatic Control, 23 pages", "journal-ref": null, "doi": null, "report-no": null, "categories": "stat.AP cs.DC cs.PF math.OC", "license": "http://creativecommons.org/licenses/by-nc-sa/3.0/", "abstract": "  We analyze a class of distributed quantized consen- sus algorithms for\narbitrary networks. In the initial setting, each node in the network has an\ninteger value. Nodes exchange their current estimate of the mean value in the\nnetwork, and then update their estimation by communicating with their neighbors\nin a limited capacity channel in an asynchronous clock setting. Eventually, all\nnodes reach consensus with quantized precision. We start the analysis with a\nspecial case of a distributed binary voting algorithm, then proceed to the\nexpected convergence time for the general quantized consensus algorithm\nproposed by Kashyap et al. We use the theory of electric networks, random\nwalks, and couplings of Markov chains to derive an O(N^3log N) upper bound for\nthe expected convergence time on an arbitrary graph of size N, improving on the\nstate of art bound of O(N^4logN) for binary consensus and O(N^5) for quantized\nconsensus algorithms. Our result is not dependent on graph topology.\nSimulations on special graphs such as star networks, line graphs, lollipop\ngraphs, and Erd\\\"os-R\\'enyi random graphs are performed to validate the\nanalysis. This work has applications to load balancing, coordination of\nautonomous agents, estimation and detection, decision-making networks,\npeer-to-peer systems, etc.\n", "versions": [{"version": "v1", "created": "Fri, 3 Aug 2012 16:16:13 GMT"}, {"version": "v2", "created": "Fri, 17 May 2013 21:49:10 GMT"}], "update_date": "2013-05-21", "authors_parsed": [["Shang", "Shang", ""], ["Cuff", "Paul W.", ""], ["Hui", "Pan", ""], ["Kulkarni", "Sanjeev R.", ""]]}, {"id": "1208.2543", "submitter": "Dennis Luxen", "authors": "Dennis Luxen and Dennis Schieferdecker", "title": "Doing More for Less -- Cache-Aware Parallel Contraction Hierarchies\n  Preprocessing", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DS cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Contraction Hierarchies is a successful speedup-technique to Dijkstra's\nseminal shortest path algorithm that has a convenient trade-off between\npreprocessing and query times. We investigate a shared-memory parallel\nimplementation that uses $O(n+m)$ space for storing the graph and O(1) space\nfor each core during preprocessing. The presented data structures and\nalgorithms consequently exploits cache locality and thus exhibit competitive\npreprocessing times. The presented implementation is especially suitable for\npreprocessing graphs of planet-wide scale in practice. Also, our experiments\nshow that optimal data structures in the PRAM model can be beaten in practice\nby exploiting memory cache hierarchies.\n", "versions": [{"version": "v1", "created": "Mon, 13 Aug 2012 10:48:39 GMT"}], "update_date": "2012-08-14", "authors_parsed": [["Luxen", "Dennis", ""], ["Schieferdecker", "Dennis", ""]]}, {"id": "1208.2908", "submitter": "Georg Hager", "authors": "Georg Hager, Jan Treibig, Johannes Habich and Gerhard Wellein", "title": "Exploring performance and power properties of modern multicore chips via\n  simple machine models", "comments": "23 pages, 10 figures. Typos corrected, DOI added", "journal-ref": null, "doi": "10.1002/cpe.3180", "report-no": null, "categories": "cs.PF cs.DC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Modern multicore chips show complex behavior with respect to performance and\npower. Starting with the Intel Sandy Bridge processor, it has become possible\nto directly measure the power dissipation of a CPU chip and correlate this data\nwith the performance properties of the running code. Going beyond a simple\nbottleneck analysis, we employ the recently published Execution-Cache-Memory\n(ECM) model to describe the single- and multi-core performance of streaming\nkernels. The model refines the well-known roofline model, since it can predict\nthe scaling and the saturation behavior of bandwidth-limited loop kernels on a\nmulticore chip. The saturation point is especially relevant for considerations\nof energy consumption. From power dissipation measurements of benchmark\nprograms with vastly different requirements to the hardware, we derive a\nsimple, phenomenological power model for the Sandy Bridge processor. Together\nwith the ECM model, we are able to explain many peculiarities in the\nperformance and power behavior of multicore processors, and derive guidelines\nfor energy-efficient execution of parallel programs. Finally, we show that the\nECM and power models can be successfully used to describe the scaling and power\nbehavior of a lattice-Boltzmann flow solver code.\n", "versions": [{"version": "v1", "created": "Tue, 14 Aug 2012 15:51:43 GMT"}, {"version": "v2", "created": "Thu, 16 Aug 2012 19:12:39 GMT"}, {"version": "v3", "created": "Tue, 10 Sep 2013 10:17:43 GMT"}, {"version": "v4", "created": "Wed, 19 Mar 2014 13:55:47 GMT"}], "update_date": "2014-03-20", "authors_parsed": [["Hager", "Georg", ""], ["Treibig", "Jan", ""], ["Habich", "Johannes", ""], ["Wellein", "Gerhard", ""]]}, {"id": "1208.3943", "submitter": "Jay Gholap B.Tech.(Computer Engineering)", "authors": "Jay Gholap", "title": "Performance Tuning Of J48 Algorithm For Prediction Of Soil Fertility", "comments": "5 Pages", "journal-ref": "Published in Asian Journal of Computer Science and Information\n  Technology,Vol 2,No. 8 (2012)", "doi": null, "report-no": null, "categories": "cs.LG cs.DB cs.PF stat.ML", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Data mining involves the systematic analysis of large data sets, and data\nmining in agricultural soil datasets is exciting and modern research area. The\nproductive capacity of a soil depends on soil fertility. Achieving and\nmaintaining appropriate levels of soil fertility, is of utmost importance if\nagricultural land is to remain capable of nourishing crop production. In this\nresearch, Steps for building a predictive model of soil fertility have been\nexplained.\n  This paper aims at predicting soil fertility class using decision tree\nalgorithms in data mining . Further, it focuses on performance tuning of J48\ndecision tree algorithm with the help of meta-techniques such as attribute\nselection and boosting.\n", "versions": [{"version": "v1", "created": "Mon, 20 Aug 2012 08:48:40 GMT"}], "update_date": "2012-08-21", "authors_parsed": [["Gholap", "Jay", ""]]}, {"id": "1208.6391", "submitter": "Jalil Boukhobza", "authors": "Pierre Olivier (Lab-STICC), Jalil Boukhobza (Lab-STICC), Eric Senn\n  (Lab-STICC)", "title": "On Benchmarking Embedded Linux Flash File Systems", "comments": "Embed With Linux, Lorient : France (2012)", "journal-ref": "ACM SIGBED Review 9(2) 43-47 9, 2 (2012) 43-47", "doi": null, "report-no": null, "categories": "cs.OS cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Due to its attractive characteristics in terms of performance, weight and\npower consumption, NAND flash memory became the main non volatile memory (NVM)\nin embedded systems. Those NVMs also present some specific\ncharacteristics/constraints: good but asymmetric I/O performance, limited\nlifetime, write/erase granularity asymmetry, etc. Those peculiarities are\neither managed in hardware for flash disks (SSDs, SD cards, USB sticks, etc.)\nor in software for raw embedded flash chips. When managed in software, flash\nalgorithms and structures are implemented in a specific flash file system\n(FFS). In this paper, we present a performance study of the most widely used\nFFSs in embedded Linux: JFFS2, UBIFS,and YAFFS. We show some very particular\nbehaviors and large performance disparities for tested FFS operations such as\nmounting, copying, and searching file trees, compression, etc.\n", "versions": [{"version": "v1", "created": "Fri, 31 Aug 2012 06:32:38 GMT"}], "update_date": "2013-12-17", "authors_parsed": [["Olivier", "Pierre", "", "Lab-STICC"], ["Boukhobza", "Jalil", "", "Lab-STICC"], ["Senn", "Eric", "", "Lab-STICC"]]}, {"id": "1208.6428", "submitter": "Jalil Boukhobza", "authors": "Pierre Olivier (Lab-STICC), Jalil Boukhobza (Lab-STICC)", "title": "A Hardware Time Manager Implementation for the Xenomai Real-Time Kernel\n  of Embedded Linux", "comments": "Embed With Linux (EWiLi) workshop, Lorient : France (2012)", "journal-ref": "ACM SIGBED Review 9(2) 38-42 9, 2 (2012) 38-42", "doi": null, "report-no": null, "categories": "cs.OS cs.AR cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Nowadays, the use of embedded operating systems in different embedded\nprojects is subject to a tremendous growth. Embedded Linux is becoming one of\nthose most popular EOSs due to its modularity, efficiency, reliability, and\ncost. One way to make it hard real-time is to include a real-time kernel like\nXenomai. One of the key characteristics of a Real-Time Operating System (RTOS)\nis its ability to meet execution time deadlines deterministically. So, the more\nprecise and flexible the time management can be, the better it can handle\nefficiently the determinism for different embedded applications. RTOS time\nprecision is characterized by a specific periodic interrupt service controlled\nby a software time manager. The smaller the period of the interrupt, the better\nthe precision of the RTOS, the more it overloads the CPU, and though reduces\nthe overall efficiency of the RTOS. In this paper, we propose to drastically\nreduce these overheads by migrating the time management service of Xenomai into\na configurable hardware component to relieve the CPU. The hardware component is\nimplemented in a Field Programmable Gate Array coupled to the CPU. This work\nwas achieved in a Master degree project where students could apprehend many\nfields of embedded systems: RTOS programming, hardware design, performance\nevaluation, etc.\n", "versions": [{"version": "v1", "created": "Fri, 31 Aug 2012 09:04:05 GMT"}], "update_date": "2013-12-17", "authors_parsed": [["Olivier", "Pierre", "", "Lab-STICC"], ["Boukhobza", "Jalil", "", "Lab-STICC"]]}]