[{"id": "1205.1098", "submitter": "Jeremy Siek", "authors": "Geoffrey Belter, Elizabeth Jessup, Thomas Nelson, Boyana Norris,\n  Jeremy G. Siek", "title": "Reliable Generation of High-Performance Matrix Algebra", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.MS cs.PF cs.PL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Scientific programmers often turn to vendor-tuned Basic Linear Algebra\nSubprograms (BLAS) to obtain portable high performance. However, many numerical\nalgorithms require several BLAS calls in sequence, and those successive calls\nresult in suboptimal performance. The entire sequence needs to be optimized in\nconcert. Instead of vendor-tuned BLAS, a programmer could start with source\ncode in Fortran or C (e.g., based on the Netlib BLAS) and use a\nstate-of-the-art optimizing compiler. However, our experiments show that\noptimizing compilers often attain only one-quarter the performance of\nhand-optimized code. In this paper we present a domain-specific compiler for\nmatrix algebra, the Build to Order BLAS (BTO), that reliably achieves high\nperformance using a scalable search algorithm for choosing the best combination\nof loop fusion, array contraction, and multithreading for data parallelism. The\nBTO compiler generates code that is between 16% slower and 39% faster than\nhand-optimized code.\n", "versions": [{"version": "v1", "created": "Sat, 5 May 2012 04:30:14 GMT"}], "update_date": "2012-05-09", "authors_parsed": [["Belter", "Geoffrey", ""], ["Jessup", "Elizabeth", ""], ["Nelson", "Thomas", ""], ["Norris", "Boyana", ""], ["Siek", "Jeremy G.", ""]]}, {"id": "1205.1622", "submitter": "Sinung Suakanto Mr", "authors": "Sinung Suakanto, Suhono H Supangkat, Suhardi, Roberd Saragih", "title": "Performance Measurement of Cloud Computing Services", "comments": "It was published at International Journal on Cloud Computing:\n  Services and Architecture (IJCCSA), April 2012, Volume 2, Number 2\n  http://airccse.org/journal/ijccsa/current2012.html\n  http://airccse.org/journal/ijccsa/papers/2212ijccsa02.pdf", "journal-ref": "http://airccse.org/journal/ijccsa/current2012.html\n  http://airccse.org/journal/ijccsa/papers/2212ijccsa02.pdf", "doi": null, "report-no": null, "categories": "cs.NI cs.DC cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Cloud computing today has now been growing as new technologies and new\nbusiness models. In distributed technology perspective, cloud computing most\nlike client-server services like web-based or web-service but it used virtual\nresources to execute. Currently, cloud computing relies on the use of an\nelastic virtual machine and the use of network for data exchange. We conduct an\nexperimental setup to measure the quality of service received by cloud\ncomputing customers. Experimental setup done by creating a HTTP service that\nruns in the cloud computing infrastructure. We interest to know about the\nimpact of increasing the number of users on the average quality received by\nusers. The qualities received by user measured within two parameters consist of\naverage response times and the number of requests time out. Experimental\nresults of this study show that increasing the number of users has increased\nthe average response time. Similarly, the number of request time out increasing\nwith increasing number of users. It means that the qualities of service\nreceived by user are decreasing also. We found that the impact of the number of\nusers on the quality of service is no longer in linear trend. The results of\nthis study can be used as a reference model for the network operator in\nperforming services in which a certain number of users in order to obtain\noptimal quality services.\n", "versions": [{"version": "v1", "created": "Tue, 8 May 2012 08:05:34 GMT"}], "update_date": "2012-05-09", "authors_parsed": [["Suakanto", "Sinung", ""], ["Supangkat", "Suhono H", ""], ["Suhardi", "", ""], ["Saragih", "Roberd", ""]]}, {"id": "1205.2005", "submitter": "Mich\\`ele Weiland", "authors": "Michele Weiland, Lawrence Mitchell, Gerard Gorman, Stephan Kramer,\n  Mark Parsons and James Southern", "title": "Mixed-mode implementation of PETSc for scalable linear algebra on\n  multi-core processors", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DC cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  With multi-core processors a ubiquitous building block of modern\nsupercomputers, it is now past time to enable applications to embrace these\ndevelopments in processor design. To achieve exascale performance, applications\nwill need ways of exploiting the new levels of parallelism that are exposed in\nmodern high-performance computers. A typical approach to this is to use\nshared-memory programming techniques to best exploit multi-core nodes along\nwith inter-node message passing. In this paper, we describe the addition of\nOpenMP threaded functionality to the PETSc library. We highlight some issues\nthat hinder good performance of threaded applications on modern processors and\ndescribe how to negate them. The OpenMP branch of PETSc was benchmarked using\nmatrices extracted from Fluidity, a CFD application code, which uses the\nlibrary as its linear solver engine. The overall performance of the mixed-mode\nimplementation is shown to be superior to that of the pure-MPI version.\n", "versions": [{"version": "v1", "created": "Wed, 9 May 2012 14:54:55 GMT"}, {"version": "v2", "created": "Fri, 10 Aug 2012 12:31:24 GMT"}], "update_date": "2012-08-13", "authors_parsed": [["Weiland", "Michele", ""], ["Mitchell", "Lawrence", ""], ["Gorman", "Gerard", ""], ["Kramer", "Stephan", ""], ["Parsons", "Mark", ""], ["Southern", "James", ""]]}, {"id": "1205.2678", "submitter": "Manish Sharma Prof.", "authors": "Manish Sharma, Gurpadam Singh", "title": "Evaluation of Proactive, Reactive and Hybrid Ad hoc Routing Protocol for\n  various Battery models in VANET using Qualnet", "comments": "5 Pages, 5 Figures. arXiv admin note: substantial text overlap with\n  arXiv:1202.1720", "journal-ref": "International Journal of Smart Sensors and Ad Hoc Networks\n  (IJSSAN) ISSN No. 2248-9738 Vol.1(2) 2011", "doi": null, "report-no": null, "categories": "cs.PF cs.NI", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In VANET high speed is the real characteristics which leads frequent\nbreakdown, interference etc. In this paper we studied various Ad hoc routing\nprotocols, Reactive, Proactive & Hybrid, taking into consideration various\nVANET parameters like speed, altitude etc in real traffic scenario and\nevaluated them for various battery models for energy conservation.. The AODV\nand DYMO (Reactive), OLSR (Proactive) and ZRP (hybrid) protocols are compared\nfor battery models Duracell AA(MX- 1500),Duracell AAA(MN-2400),Duracell\nAAA(MX-2400), Duracell C-MN(MN-1400),Panasonic AA standard using Qualnet as a\nSimulation tool. Since Energy conservation is main focus area nowadays. Hence\nperformance of the protocols with various battery models counts and helps to\nmake a right selection. Varying parameters of VANET shows that in the real\ntraffic scenarios proactive protocol performs more efficiently for energy\nconservation.\n", "versions": [{"version": "v1", "created": "Wed, 8 Feb 2012 15:00:32 GMT"}], "update_date": "2012-05-14", "authors_parsed": [["Sharma", "Manish", ""], ["Singh", "Gurpadam", ""]]}, {"id": "1205.2889", "submitter": "Youssef Bassil", "authors": "Youssef Bassil", "title": "A Comparative Study on the Performance of the Top DBMS Systems", "comments": "LACSC - Lebanese Association for Computational Sciences,\n  http://www.lacsc.org", "journal-ref": "Journal of Computer Science & Research (JCSCR), Vol.1, No.1,\n  pp.20-31, 2012", "doi": null, "report-no": null, "categories": "cs.DB cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Database management systems are today's most reliable mean to organize data\ninto collections that can be searched and updated. However, many DBMS systems\nare available on the market each having their pros and cons in terms of\nreliability, usability, security, and performance. This paper presents a\ncomparative study on the performance of the top DBMS systems. They are mainly\nMS SQL Server 2008, Oracle 11g, IBM DB2, MySQL 5.5, and MS Access 2010. The\ntesting is aimed at executing different SQL queries with different level of\ncomplexities over the different five DBMSs under test. This would pave the way\nto build a head-to-head comparative evaluation that shows the average execution\ntime, memory usage, and CPU utilization of each DBMS after completion of the\ntest.\n", "versions": [{"version": "v1", "created": "Sun, 13 May 2012 17:54:51 GMT"}], "update_date": "2012-05-15", "authors_parsed": [["Bassil", "Youssef", ""]]}, {"id": "1205.3846", "submitter": "Guillaume Jourjon", "authors": "Olivier Mehani, Guillaume Jourjon and Thierry Rakotoarivelo", "title": "A Method for the Characterisation of Observer Effects and its\n  Application to OML", "comments": "24 pages, submitted to ACM MSWIM 2012", "journal-ref": null, "doi": null, "report-no": "NICTA technical report number 5895", "categories": "cs.PF cs.NI", "license": "http://creativecommons.org/licenses/by-nc-sa/3.0/", "abstract": "  In all measurement campaigns, one needs to assert that the instrumentation\ntools do not significantly impact the system being monitored. This is critical\nto future claims based on the collected data and is sometimes overseen in\nexperimental studies. We propose a method to evaluate the potential \"observer\neffect\" of an instrumentation system, and apply it to the OMF Measurement\nLibrary (OML). OML allows the instrumentation of almost any software to collect\nany type of measurements. As it is increasingly being used in networking\nresearch, it is important to characterise possible biases it may introduce in\nthe collected metrics. Thus, we study its effect on multiple types of reports\nfrom various applications commonly used in wireless research. To this end, we\ndesigned experiments comparing OML-instrumented software with their original\nflavours. Our analyses of the results from these experiments show that, with an\nappropriate reporting setup, OML has no significant impact on the instrumented\napplications, and may even improve some of their performances in specifics\ncases. We discuss our methodology and the implication of using OML, and provide\nguidelines on instrumenting off-the-shelf software.\n", "versions": [{"version": "v1", "created": "Thu, 17 May 2012 04:27:30 GMT"}], "update_date": "2012-05-18", "authors_parsed": [["Mehani", "Olivier", ""], ["Jourjon", "Guillaume", ""], ["Rakotoarivelo", "Thierry", ""]]}, {"id": "1205.5871", "submitter": "Michele Mazzucco", "authors": "Michele Mazzucco and Martti Vasar and Marlon Dumas", "title": "Squeezing out the Cloud via Profit-Maximizing Resource Allocation\n  Policies", "comments": "16 pages, 9 Figures. A 10 pages version of this manuscript will\n  appear in IEEE MASCOTS 2012", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DC cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We study the problem of maximizing the average hourly profit earned by a\nSoftware-as-a-Service (SaaS) provider who runs a software service on behalf of\na customer using servers rented from an Infrastructure-as-a-Service (IaaS)\nprovider. The SaaS provider earns a fee per successful transaction and incurs\ncosts proportional to the number of server-hours it uses. A number of resource\nallocation policies for this or similar problems have been proposed in previous\nwork. However, to the best of our knowledge, these policies have not been\ncomparatively evaluated in a cloud environment. This paper reports on an\nempirical evaluation of three policies using a replica of Wikipedia deployed on\nthe Amazon EC2 cloud. Experimental results show that a policy based on a\nsolution to an optimization problem derived from the SaaS provider's utility\nfunction outperforms well-known heuristics that have been proposed for similar\nproblems. It is also shown that all three policies outperform a \"reactive\"\nallocation approach based on Amazon's auto-scaling feature.\n", "versions": [{"version": "v1", "created": "Sat, 26 May 2012 10:37:27 GMT"}, {"version": "v2", "created": "Tue, 17 Jul 2012 08:40:00 GMT"}, {"version": "v3", "created": "Wed, 18 Jul 2012 07:31:05 GMT"}], "update_date": "2012-07-19", "authors_parsed": [["Mazzucco", "Michele", ""], ["Vasar", "Martti", ""], ["Dumas", "Marlon", ""]]}]