[{"id": "1405.1916", "submitter": "Tuan  Phung-Duc", "authors": "Kazuki Kajiwara and Tuan Phung-Duc", "title": "Asymptotic and Numerical Analysis of Multiserver Retrial Queue with\n  Guard Channel for Cellular Networks", "comments": null, "journal-ref": "Proceedings of the Eight International Conference on\n  Matrix-Analytic Methods in Stochastic Models (MAM8), NIT Calicut, Kerala,\n  India, pp. 85--102, January 06--10, 2014", "doi": null, "report-no": null, "categories": "cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This paper considers a retrial queueing model for a base station in cellular\nnetworks where fresh calls and handover calls are available. Fresh calls are\ninitiated from the cell of the base station. On the other hand, a handover call\nhas been connecting to a base station and moves to another one. In order to\nkeep the continuation of the communication, it is desired that an available\nchannel in the new base station is immediately assigned to the handover call.\nTo this end, a channel is reserved as the guard channel for handover calls in\nbase stations. Blocked fresh and handover calls join a virtual orbit and repeat\ntheir attempts in a later time. We assume that a base station can recognize\nretrial calls and give them the same priority as that of handover calls. We\nmodel a base station by a multiserver retrial queue with priority customers for\nwhich a level-dependent QBD process is formulated. We obtain Taylor series\nexpansion for the nonzero elements of the rate matrices of the level-dependent\nQBD. Using the expansion results, we obtain an asymptotic upper bound for the\njoint stationary distribution of the number of busy channels and that of\ncustomers in the orbit. Furthermore, we derive an efficient numerical algorithm\nto calculate the joint stationary distribution.\n", "versions": [{"version": "v1", "created": "Thu, 8 May 2014 13:17:09 GMT"}], "update_date": "2014-05-09", "authors_parsed": [["Kajiwara", "Kazuki", ""], ["Phung-Duc", "Tuan", ""]]}, {"id": "1405.2523", "submitter": "Nikzad Babaii-Rizvandi", "authors": "Nikzad Babaii Rizvandi", "title": "Performance Provisioning and Energy Efficiency in Cloud and Distributed\n  Computing Systems", "comments": "PhD thesis with 139 pages", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DC cs.NI cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In recent years, the issue of energy consumption in high performance\ncomputing (HPC) systems has attracted a great deal of attention. In response to\nthis, many energy-aware algorithms have been developed in different layers of\nHPC systems, including the hardware layer, service layer and system layer.\nThese algorithms are of two types: first, algorithms which directly try to\nimprove the energy by tweaking frequency operation or scheduling algorithms;\nand second, algorithms which focus on improving the performance of the system,\nwith the assumption that efficient running of a system may indirectly save more\nenergy.\n  In this thesis, we develop algorithms in both layers. First, we introduce\nthree algorithms to directly improve the energy of scheduled tasks at the\nhardware level by using Dynamic Voltage Frequency Scaling (DVFS). Second, we\npropose two algorithms for modelling and resource provisioning of MapReduce\napplications (a well-known parametric distributed framework currently used by\nGoogle, Yahoo, Facebook and LinkedIn) based on its configuration parameters.\nCertainly, estimating the performance (e.g., execution time or CPU clock ticks)\nof a MapReduce application can be later used for smart scheduling of such\napplications in clouds or clusters.\n  To evaluate the algorithms, we have conducted extensive simulation and real\nexperiments on a 5-node physical cluster with up to 25 virtual nodes, using\nboth synthetic and real world applications. Also, the proposed new algorithms\nare compared with existing algorithms by experimentation, and the experimental\nresults reveal new information on the performance of these algorithms, as well\nas on the properties of MapReduce and DVFS. In the end, three open problems are\nrevealed by the experimental observations, and their importance is explained.\n", "versions": [{"version": "v1", "created": "Sun, 11 May 2014 11:40:36 GMT"}], "update_date": "2014-05-13", "authors_parsed": [["Rizvandi", "Nikzad Babaii", ""]]}, {"id": "1405.2735", "submitter": "Omer H. Abdelrahman", "authors": "Omer H. Abdelrahman, Erol Gelenbe", "title": "Signalling Storms in 3G Mobile Networks", "comments": "IEEE ICC 2014 - Communications and Information Systems Security\n  Symposium", "journal-ref": null, "doi": "10.1109/ICC.2014.6883453", "report-no": null, "categories": "cs.NI cs.CR cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We review the characteristics of signalling storms that have been caused by\ncertain common apps and recently observed in cellular networks, leading to\nsystem outages. We then develop a mathematical model of a mobile user's\nsignalling behaviour which focuses on the potential of causing such storms, and\nrepresent it by a large Markov chain. The analysis of this model allows us to\ndetermine the key parameters of mobile user device behaviour that can lead to\nsignalling storms. We then identify the parameter values that will lead to\nworst case load for the network itself in the presence of such storms. This\nleads to explicit results regarding the manner in which individual mobile\nbehaviour can cause overload conditions on the network and its signalling\nservers, and provides insight into how this may be avoided.\n", "versions": [{"version": "v1", "created": "Mon, 12 May 2014 13:00:54 GMT"}], "update_date": "2016-11-18", "authors_parsed": [["Abdelrahman", "Omer H.", ""], ["Gelenbe", "Erol", ""]]}, {"id": "1405.2916", "submitter": "Andi Drebes", "authors": "Andi Drebes, Karine Heydemann, Antoniu Pop, Albert Cohen, Nathalie\n  Drach", "title": "Automatic Detection of Performance Anomalies in Task-Parallel Programs", "comments": "Presented at 1st Workshop on Resource Awareness and Adaptivity in\n  Multi-Core Computing (Racing 2014) (arXiv:1405.2281)", "journal-ref": null, "doi": null, "report-no": "Racing/2014/10", "categories": "cs.DC cs.PF cs.SE", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  To efficiently exploit the resources of new many-core architectures,\nintegrating dozens or even hundreds of cores per chip, parallel programming\nmodels have evolved to expose massive amounts of parallelism, often in the form\nof fine-grained tasks. Task-parallel languages, such as OpenStream, X10,\nHabanero Java and C or StarSs, simplify the development of applications for new\narchitectures, but tuning task-parallel applications remains a major challenge.\nPerformance bottlenecks can occur at any level of the implementation, from the\nalgorithmic level (e.g., lack of parallelism or over-synchronization), to\ninteractions with the operating and runtime systems (e.g., data placement on\nNUMA architectures), to inefficient use of the hardware (e.g., frequent cache\nmisses or misaligned memory accesses); detecting such issues and determining\nthe exact cause is a difficult task.\n  In previous work, we developed Aftermath, an interactive tool for trace-based\nperformance analysis and debugging of task-parallel programs and run-time\nsystems. In contrast to other trace-based analysis tools, such as Paraver or\nVampir, Aftermath offers native support for tasks, i.e., visualization,\nstatistics and analysis tools adapted for performance debugging at task\ngranularity. However, the tool currently does not provide support for the\nautomatic detection of performance bottlenecks and it is up to the user to\ninvestigate the relevant aspects of program execution by focusing the\ninspection on specific slices of a trace file. In this paper, we present\nongoing work on two extensions that guide the user through this process.\n", "versions": [{"version": "v1", "created": "Mon, 12 May 2014 16:42:48 GMT"}], "update_date": "2014-05-14", "authors_parsed": [["Drebes", "Andi", ""], ["Heydemann", "Karine", ""], ["Pop", "Antoniu", ""], ["Cohen", "Albert", ""], ["Drach", "Nathalie", ""]]}, {"id": "1405.4200", "submitter": "Rytis Pa\\v{s}kauskas", "authors": "Luca Bortolussi and Rytis Pa\\v{s}kauskas", "title": "Mean-Field approximation and Quasi-Equilibrium reduction of Markov\n  Population Models", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.SY cs.PF q-bio.QM", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Markov Population Model is a commonly used framework to describe stochastic\nsystems. Their exact analysis is unfeasible in most cases because of the state\nspace explosion. Approximations are usually sought, often with the goal of\nreducing the number of variables. Among them, the mean field limit and the\nquasi-equilibrium approximations stand out. We view them as techniques that are\nrooted in independent basic principles. At the basis of the mean field limit is\nthe law of large numbers. The principle of the quasi-equilibrium reduction is\nthe separation of temporal scales. It is common practice to apply both limits\nto an MPM yielding a fully reduced model. Although the two limits should be\nviewed as completely independent options, they are applied almost invariably in\na fixed sequence: MF limit first, QE-reduction second. We present a framework\nthat makes explicit the distinction of the two reductions, and allows an\narbitrary order of their application. By inverting the sequence, we show that\nthe double limit does not commute in general: the mean field limit of a\ntime-scale reduced model is not the same as the time-scale reduced limit of a\nmean field model. An example is provided to demonstrate this phenomenon.\nSufficient conditions for the two operations to be freely exchangeable are also\nprovided.\n", "versions": [{"version": "v1", "created": "Fri, 16 May 2014 15:11:24 GMT"}], "update_date": "2014-05-19", "authors_parsed": [["Bortolussi", "Luca", ""], ["Pa\u0161kauskas", "Rytis", ""]]}]