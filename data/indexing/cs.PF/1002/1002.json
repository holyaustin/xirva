[{"id": "1002.0134", "submitter": "Lars Kotthoff", "authors": "Lars Kotthoff", "title": "Constraint solvers: An empirical evaluation of design decisions", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.AI cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This paper presents an evaluation of the design decisions made in four\nstate-of-the-art constraint solvers; Choco, ECLiPSe, Gecode, and Minion. To\nassess the impact of design decisions, instances of the five problem classes\nn-Queens, Golomb Ruler, Magic Square, Social Golfers, and Balanced Incomplete\nBlock Design are modelled and solved with each solver. The results of the\nexperiments are not meant to give an indication of the performance of a solver,\nbut rather investigate what influence the choice of algorithms and data\nstructures has.\n  The analysis of the impact of the design decisions focuses on the different\nways of memory management, behaviour with increasing problem size, and\nspecialised algorithms for specific types of variables. It also briefly\nconsiders other, less significant decisions.\n", "versions": [{"version": "v1", "created": "Sun, 31 Jan 2010 15:36:36 GMT"}], "update_date": "2010-02-02", "authors_parsed": [["Kotthoff", "Lars", ""]]}, {"id": "1002.1099", "submitter": "Ioannis Chatzigiannakis", "authors": "Ioannis Chatzigiannakis, Georgios Mylonas, Orestis Akribopoulos,\n  Marios Logaras, Panagiotis Kokkinos, Paul Spirakis", "title": "The \"Hot Potato\" Case: Challenges in Multiplayer Pervasive Games Based\n  on Ad hoc Mobile Sensor Networks and the Experimental Evaluation of a\n  Prototype Game", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.HC cs.DC cs.MA cs.NI cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In this work, we discuss multiplayer pervasive games that rely on the use of\nad hoc mobile sensor networks. The unique feature in such games is that players\ninteract with each other and their surrounding environment by using movement\nand presence as a means of performing game-related actions, utilizing sensor\ndevices. We discuss the fundamental issues and challenges related to these type\nof games and the scenarios associated with them. We also present and evaluate\nan example of such a game, called the \"Hot Potato\", developed using the Sun\nSPOT hardware platform. We provide a set of experimental results, so as to both\nevaluate our implementation and also to identify issues that arise in pervasive\ngames which utilize sensor network nodes, which show that there is great\npotential in this type of games.\n", "versions": [{"version": "v1", "created": "Thu, 4 Feb 2010 23:02:02 GMT"}], "update_date": "2010-02-08", "authors_parsed": [["Chatzigiannakis", "Ioannis", ""], ["Mylonas", "Georgios", ""], ["Akribopoulos", "Orestis", ""], ["Logaras", "Marios", ""], ["Kokkinos", "Panagiotis", ""], ["Spirakis", "Paul", ""]]}, {"id": "1002.1149", "submitter": "Vishal Goyal", "authors": "S. R. Vijayalakshmi, G. Padmavathi", "title": "A Performance Study of GA and LSH in Multiprocessor Job Scheduling", "comments": "International Journal of Computer Science Issues, IJCSI, Vol. 7,\n  Issue 1, No. 1, January 2010,\n  http://ijcsi.org/articles/A-Performance-Study-of-GA-and-LSH-in-Multiprocessor-Job-Scheduling.php", "journal-ref": "International Journal of Computer Science Issues, IJCSI, Vol. 7,\n  Issue 1, No. 1, January 2010,\n  http://ijcsi.org/articles/A-Performance-Study-of-GA-and-LSH-in-Multiprocessor-Job-Scheduling.php", "doi": null, "report-no": null, "categories": "cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Multiprocessor task scheduling is an important and computationally difficult\nproblem. This paper proposes a comparison study of genetic algorithm and list\nscheduling algorithm. Both algorithms are naturally parallelizable but have\nheavy data dependencies. Based on experimental results, this paper presents a\ndetailed analysis of the scalability, advantages and disadvantages of each\nalgorithm. Multiprocessors have emerged as a powerful computing means for\nrunning real-time applications, especially where a uni-processor system would\nnot be sufficient enough to execute all the tasks. The high performance and\nreliability of multiprocessors have made them a powerful computing resource.\nSuch computing environment requires an efficient algorithm to determine when\nand on which processor a given task should execute. In multiprocessor systems,\nan efficient scheduling of a parallel program onto the processors that\nminimizes the entire execution time is vital for achieving a high performance.\nThis scheduling problem is known to be NP- Hard. In multiprocessor scheduling\nproblem, a given program is to be scheduled in a given multiprocessor system\nsuch that the program's execution time is minimized. The last job must be\ncompleted as early as possible. Genetic algorithm (GA) is one of the widely\nused techniques for constrained optimization.\n", "versions": [{"version": "v1", "created": "Fri, 5 Feb 2010 08:39:11 GMT"}], "update_date": "2010-02-08", "authors_parsed": [["Vijayalakshmi", "S. R.", ""], ["Padmavathi", "G.", ""]]}, {"id": "1002.1154", "submitter": "Vishal Goyal", "authors": "Dorsaf Sebai, Abderrazak Jemai, Imed Bennour", "title": "Performance Analysis of Software to Hardware Task Migration in Codesign", "comments": "International Journal of Computer Science Issues, IJCSI, Vol. 7,\n  Issue 1, No. 1, January 2010,\n  http://ijcsi.org/articles/Performance-Analysis-of-Software-to-Hardware-Task-Migration-in-Codesign.php", "journal-ref": "International Journal of Computer Science Issues, IJCSI, Vol. 7,\n  Issue 1, No. 1, January 2010,\n  http://ijcsi.org/articles/Performance-Analysis-of-Software-to-Hardware-Task-Migration-in-Codesign.php", "doi": null, "report-no": null, "categories": "cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The complexity of multimedia applications in terms of intensity of\ncomputation and heterogeneity of treated data led the designers to embark them\non multiprocessor systems on chip. The complexity of these systems on one hand\nand the expectations of the consumers on the other hand complicate the\ndesigners job to conceive and supply strong and successful systems in the\nshortest deadlines. They have to explore the different solutions of the design\nspace and estimate their performances in order to deduce the solution that\nrespects their design constraints. In this context, we propose the modeling of\none of the design space possible solutions: the software to hardware task\nmigration. This modeling exploits the synchronous dataflow graphs to take into\naccount the different migration impacts and estimate their performances in\nterms of throughput.\n", "versions": [{"version": "v1", "created": "Fri, 5 Feb 2010 08:51:44 GMT"}], "update_date": "2010-02-08", "authors_parsed": [["Sebai", "Dorsaf", ""], ["Jemai", "Abderrazak", ""], ["Bennour", "Imed", ""]]}, {"id": "1002.1691", "submitter": "Rdv Ijcsis", "authors": "Sumon Kumar Debnath, Foez Ahmed, Nayeema Islam", "title": "Performance Evaluation of Unicast and Broadcast Mobile Ad hoc Network\n  Routing Protocols", "comments": "7 Pages IEEE format, International Journal of Computer Science and\n  Information Security, IJCSIS January 2010, ISSN 1947 5500,\n  http://sites.google.com/site/ijcsis/", "journal-ref": "International Journal of Computer Science and Information\n  Security, IJCSIS, Vol. 7, No. 1, pp. 40-46, January 2010, USA", "doi": null, "report-no": "Computer Science Volume 7 ISSN 19475500", "categories": "cs.NI cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Efficient routing mechanism is a challenging issue for group oriented\ncomputing in Mobile Ad Hoc Networks (MANETs). The ability of MANETs to support\nadequate Quality of Service (QoS) for group communication is limited by the\nability of the underlying ad-hoc routing protocols to provide consistent\nbehavior despite the dynamic properties of mobile computing devices. In MANET\nQoS requirements can be quantified in terms of Packet Delivery Ratio (PDR),\nData Latency, Packet Loss Probability, Routing Overhead, Medium Access Control\n(MAC) Overhead and Data Throughput etc. This paper presents an in depth study\nof one to many and many to many communications in MANETs and provides a\ncomparative performance evaluation of unicast and broadcast routing protocols.\nDynamic Source Routing protocol (DSR) is used as unicast protocol and BCAST is\nused to represent broadcast protocol. The performance differentials are\nanalyzed using ns2 network simulator varying multicast group size (number of\ndata senders and data receivers). Both protocols are simulated with identical\ntraffic loads and mobility models. Simulation result shows that BCAST performs\nbetter than DSR in most cases.\n", "versions": [{"version": "v1", "created": "Mon, 8 Feb 2010 19:12:53 GMT"}], "update_date": "2010-02-09", "authors_parsed": [["Debnath", "Sumon Kumar", ""], ["Ahmed", "Foez", ""], ["Islam", "Nayeema", ""]]}, {"id": "1002.1953", "submitter": "Rdv Ijcsis", "authors": "Dr. R. Shashikumar, C. N. Vijay Kumar, M. Nagendrakumar, C. S.\n  Hemanthkumar", "title": "Ahb Compatible DDR Sdram Controller Ip Core for Arm Based Soc", "comments": "IEEE format, International Journal of Computer Science and\n  Information Security, IJCSIS January 2010, ISSN 1947 5500,\n  http://sites.google.com/site/ijcsis/", "journal-ref": "International Journal of Computer Science and Information\n  Security, IJCSIS, Vol. 7, No. 1, pp. 77-85, January 2010, USA", "doi": null, "report-no": "Journal of Computer Science, ISSN 1947 5500", "categories": "cs.AR cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  DDR SDRAM is similar in function to the regular SDRAM but doubles the\nbandwidth of the memory by transferring data on both edges of the clock cycles.\nDDR SDRAM most commonly used in various embedded application like networking,\nimage or video processing, Laptops ete. Now a days many applications needs more\nand more cheap and fast memory. Especially in the field of signal processing,\nrequires significant amount of memory. The most used type of dynamic memory for\nthat purpose is DDR SDRAM. For FPGA design the IC manufacturers are providing\ncommercial memory controller IP cores working only on their products. Main\ndisadvantage is the lack of memory access optimization for random memory access\npatterns. The data path part of those controllers can be used free of charge.\nThis work propose an architecture of a DDR SDRAM controller, which takes\nadvantage of those available and well tested data paths and can be used for any\nFPGA device or ASIC design.(5). In most of the SOC design, DDR SDRAM is\ncommonly used. ARM processor is widely used in SOCs; so that we focused to\nimplement AHB compatible DDR SDRAM controller suitable for ARM based SOC\ndesign.\n", "versions": [{"version": "v1", "created": "Tue, 9 Feb 2010 19:47:34 GMT"}], "update_date": "2010-02-10", "authors_parsed": [["Shashikumar", "Dr. R.", ""], ["Kumar", "C. N. Vijay", ""], ["Nagendrakumar", "M.", ""], ["Hemanthkumar", "C. S.", ""]]}, {"id": "1002.2450", "submitter": "Alejandro Chinea Manrique De Lara", "authors": "Alejandro Chinea Manrique de Lara", "title": "Modeling the Probability of Failure on LDAP Binding Operations in\n  Iplanet Web Proxy 3.6 Server", "comments": "11 pages, 3 figures, Published in Sun MicroSystems Laboratories April\n  2002", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.PF cs.DB", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This paper is devoted to the theoretical analysis of a problem derived from\ninteraction between two Iplanet products: Web Proxy Server and the Directory\nServer. In particular, a probabilistic and stochastic-approximation model is\nproposed to minimize the occurrence of LDAP connection failures in Iplanet Web\nProxy 3.6 Server. The proposed model serves not only to provide a\nparameterization of the aforementioned phenomena, but also to provide\nmeaningful insights illustrating and supporting these theoretical results. In\naddition, we shall also address practical considerations when estimating the\nparameters of the proposed model from experimental data. Finally, we shall\nprovide some interesting results from real-world data collected from our\ncustomers.\n", "versions": [{"version": "v1", "created": "Thu, 11 Feb 2010 23:20:40 GMT"}], "update_date": "2010-02-15", "authors_parsed": [["de Lara", "Alejandro Chinea Manrique", ""]]}, {"id": "1002.3493", "submitter": "Bruce Hajek", "authors": "Bruce Hajek and Ji Zhu", "title": "The Missing Piece Syndrome in Peer-to-Peer Communication", "comments": "14 pages, 3 figures in 5 files. An earlier version appeared in the\n  2010 IEEE International Symposium on Information Theory", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.PF cs.IT math.IT", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Typical protocols for peer-to-peer file sharing over the Internet divide\nfiles to be shared into pieces. New peers strive to obtain a complete\ncollection of pieces from other peers and from a seed. In this paper we\ninvestigate a problem that can occur if the seeding rate is not large enough.\nThe problem is that, even if the statistics of the system are symmetric in the\npieces, there can be symmetry breaking, with one piece becoming very rare. If\npeers depart after obtaining a complete collection, they can tend to leave\nbefore helping other peers receive the rare piece. Assuming that peers arrive\nwith no pieces, there is a single seed, random peer contacts are made, random\nuseful pieces are downloaded, and peers depart upon receiving the complete\nfile, the system is stable if the seeding rate (in pieces per time unit) is\ngreater than the arrival rate, and is unstable if the seeding rate is less than\nthe arrival rate. The result persists for any piece selection policy that\nselects from among useful pieces, such as rarest first, and it persists with\nthe use of network coding.\n", "versions": [{"version": "v1", "created": "Thu, 18 Feb 2010 17:30:54 GMT"}, {"version": "v2", "created": "Tue, 12 Jul 2011 20:06:58 GMT"}], "update_date": "2011-07-14", "authors_parsed": [["Hajek", "Bruce", ""], ["Zhu", "Ji", ""]]}, {"id": "1002.4182", "submitter": "Gokarna Sharma", "authors": "Gokarna Sharma, Brett Estrade and Costas Busch", "title": "Window-Based Greedy Contention Management for Transactional Memory", "comments": "13 pages", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DC cs.DS cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We consider greedy contention managers for transactional memory for M x N\nexecution windows of transactions with M threads and N transactions per thread.\nAssuming that each transaction conflicts with at most C other transactions\ninside the window, a trivial greedy contention manager can schedule them within\nCN time. In this paper, we show that there are much better schedules. We\npresent and analyze two new randomized greedy contention management algorithms.\nThe first algorithm Offline-Greedy produces a schedule of length O(C + N\nlog(MN)) with high probability, and gives competitive ratio O(log(MN)) for C <=\nN log(MN). The offline algorithm depends on knowing the conflict graph. The\nsecond algorithm Online-Greedy produces a schedule of length O(C log(MN) + N\nlog^2(MN)) with high probability which is only a O(log(NM)) factor worse, but\ndoes not require knowledge of the conflict graph. We also give an adaptive\nversion which achieves similar worst-case performance and C is determined on\nthe fly under execution. Our algorithms provide new tradeoffs for greedy\ntransaction scheduling that parameterize window sizes and transaction conflicts\nwithin the window.\n", "versions": [{"version": "v1", "created": "Mon, 22 Feb 2010 20:02:24 GMT"}], "update_date": "2010-02-23", "authors_parsed": [["Sharma", "Gokarna", ""], ["Estrade", "Brett", ""], ["Busch", "Costas", ""]]}, {"id": "1002.4264", "submitter": "Jianfeng Zhan", "authors": "Xu Liu, Lin Yuan, Jianfeng Zhan, Bibo Tu, Dan Meng", "title": "Automatic Performance Debugging of SPMD Parallel Programs", "comments": "The preliminary version appeared on SC 08 workshop on Node Level\n  Parallelism for Large Scale Supercomputers. The web site is\n  http://iss.ices.utexas.edu/sc08nlplss/program.html", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DC cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Automatic performance debugging of parallel applications usually involves two\nsteps: automatic detection of performance bottlenecks and uncovering their root\ncauses for performance optimization. Previous work fails to resolve this\nchallenging issue in several ways: first, several previous efforts automate\nanalysis processes, but present the results in a confined way that only\nidentifies performance problems with apriori knowledge; second, several tools\ntake exploratory or confirmatory data analysis to automatically discover\nrelevant performance data relationships. However, these efforts do not focus on\nlocating performance bottlenecks or uncovering their root causes. In this\npaper, we design and implement an innovative system, AutoAnalyzer, to\nautomatically debug the performance problems of single program multi-data\n(SPMD) parallel programs. Our system is unique in terms of two dimensions:\nfirst, without any apriori knowledge, we automatically locate bottlenecks and\nuncover their root causes for performance optimization; second, our method is\nlightweight in terms of size of collected and analyzed performance data. Our\ncontribution is three-fold. First, we propose a set of simple performance\nmetrics to represent behavior of different processes of parallel programs, and\npresent two effective clustering and searching algorithms to locate\nbottlenecks. Second, we propose to use the rough set algorithm to automatically\nuncover the root causes of bottlenecks. Third, we design and implement the\nAutoAnalyzer system, and use two production applications to verify the\neffectiveness and correctness of our methods. According to the analysis results\nof AutoAnalyzer, we optimize two parallel programs with performance\nimprovements by minimally 20% and maximally 170%.\n", "versions": [{"version": "v1", "created": "Tue, 23 Feb 2010 08:17:43 GMT"}], "update_date": "2010-02-24", "authors_parsed": [["Liu", "Xu", ""], ["Yuan", "Lin", ""], ["Zhan", "Jianfeng", ""], ["Tu", "Bibo", ""], ["Meng", "Dan", ""]]}]