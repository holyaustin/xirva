[{"id": "1011.0235", "submitter": "Sisir Koppaka", "authors": "Sisir Koppaka, Dheevatsa Mudigere, Srihari Narasimhan, Babu Narayanan", "title": "Fast Histograms using Adaptive CUDA Streams", "comments": "5 pages, 5 figures, 4 tables, to appear in Student Research\n  Symposium, High Performance Computing 2010, Goa, India (www.hipc.org)", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DC cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Histograms are widely used in medical imaging, network intrusion detection,\npacket analysis and other stream-based high throughput applications. However,\nwhile porting such software stacks to the GPU, the computation of the histogram\nis a typical bottleneck primarily due to the large impact on kernel speed by\natomic operations. In this work, we propose a stream-based model implemented in\nCUDA, using a new adaptive kernel that can be optimized based on latency hidden\nCPU compute. We also explore the tradeoffs of using the new kernel vis-\\`a-vis\nthe stock NVIDIA SDK kernel, and discuss an intelligent kernel switching method\nfor the stream based on a degeneracy criterion that is adaptively computed from\nthe input stream.\n", "versions": [{"version": "v1", "created": "Mon, 1 Nov 2010 01:26:11 GMT"}], "update_date": "2010-11-02", "authors_parsed": [["Koppaka", "Sisir", ""], ["Mudigere", "Dheevatsa", ""], ["Narasimhan", "Srihari", ""], ["Narayanan", "Babu", ""]]}, {"id": "1011.2313", "submitter": "Paulo Urriza", "authors": "Jun Wang, Paulo Urriza, Yuxing Han, and Danijela \\v{C}abri\\'c", "title": "Weighted Centroid Algorithm for Estimating Primary User Location:\n  Theoretical Analysis and Distributed Implementation", "comments": "24 pages, 10 figures, resubmitted with major revisions to IEEE\n  Transactions on Wireless Communications", "journal-ref": null, "doi": "10.1109/TWC.2011.11.102209", "report-no": null, "categories": "cs.PF cs.IT cs.NI math.IT", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Information about primary transmitter location is crucial in enabling several\nkey capabilities in cognitive radio networks, including improved\nspatio-temporal sensing, intelligent location-aware routing, as well as aiding\nspectrum policy enforcement. Compared to other proposed non-interactive\nlocalization algorithms, the weighted centroid localization (WCL) scheme uses\nonly the received signal strength information, which makes it simple to\nimplement and robust to variations in the propagation environment. In this\npaper we present the first theoretical framework for WCL performance analysis\nin terms of its localization error distribution parameterized by node density,\nnode placement, shadowing variance, correlation distance and inaccuracy of\nsensor node positioning. Using this analysis, we quantify the robustness of WCL\nto various physical conditions and provide design guidelines, such as node\nplacement and spacing, for the practical deployment of WCL. We also propose a\npower-efficient method for implementing WCL through a distributed cluster-based\nalgorithm, that achieves comparable accuracy with its centralized counterpart.\n", "versions": [{"version": "v1", "created": "Wed, 10 Nov 2010 08:38:46 GMT"}, {"version": "v2", "created": "Tue, 7 Dec 2010 23:00:42 GMT"}, {"version": "v3", "created": "Mon, 9 May 2011 22:37:08 GMT"}], "update_date": "2011-09-05", "authors_parsed": [["Wang", "Jun", ""], ["Urriza", "Paulo", ""], ["Han", "Yuxing", ""], ["\u010cabri\u0107", "Danijela", ""]]}, {"id": "1011.3583", "submitter": "Dheevatsa Mudigere", "authors": "Michael Bader, Hans-Joachim Bungartz, Dheevatsa Mudigere, Srihari\n  Narasimhan, Babu Narayanan", "title": "Fast GPGPU Data Rearrangement Kernels using CUDA", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DC cs.GR cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Many high performance-computing algorithms are bandwidth limited, hence the\nneed for optimal data rearrangement kernels as well as their easy integration\ninto the rest of the application. In this work, we have built a CUDA library of\nfast kernels for a set of data rearrangement operations. In particular, we have\nbuilt generic kernels for rearranging m dimensional data into n dimensions,\nincluding Permute, Reorder, Interlace/De-interlace, etc. We have also built\nkernels for generic Stencil computations on a two-dimensional data using\ntemplates and functors that allow application developers to rapidly build\ncustomized high performance kernels. All the kernels built achieve or surpass\nbest-known performance in terms of bandwidth utilization.\n", "versions": [{"version": "v1", "created": "Tue, 16 Nov 2010 04:38:53 GMT"}], "update_date": "2010-11-17", "authors_parsed": [["Bader", "Michael", ""], ["Bungartz", "Hans-Joachim", ""], ["Mudigere", "Dheevatsa", ""], ["Narasimhan", "Srihari", ""], ["Narayanan", "Babu", ""]]}, {"id": "1011.3595", "submitter": "Joshua Shinavier", "authors": "Joshua Shinavier", "title": "Optimizing real-time RDF data streams", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.AI cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The Resource Description Framework (RDF) provides a common data model for the\nintegration of \"real-time\" social and sensor data streams with the Web and with\neach other. While there exist numerous protocols and data formats for\nexchanging dynamic RDF data, or RDF updates, these options should be examined\ncarefully in order to enable a Semantic Web equivalent of the high-throughput,\nlow-latency streams of typical Web 2.0, multimedia, and gaming applications.\nThis paper contains a brief survey of RDF update formats and a high-level\ndiscussion of both TCP and UDP-based transport protocols for updates. Its main\ncontribution is the experimental evaluation of a UDP-based architecture which\nserves as a real-world example of a high-performance RDF streaming application\nin an Internet-scale distributed environment.\n", "versions": [{"version": "v1", "created": "Tue, 16 Nov 2010 07:17:53 GMT"}], "update_date": "2010-11-17", "authors_parsed": [["Shinavier", "Joshua", ""]]}, {"id": "1011.5317", "submitter": "Mathieu Feuillet Mr", "authors": "Thomas Bonald and Mathieu Feuillet", "title": "Performance of CSMA in Multi-Channel Wireless Networks", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.NI cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We analyze the performance of CSMA in multi-channel wireless networks,\naccounting for the random nature of traffic. Specifically, we assess the\nability of CSMA to fully utilize the radio resources and in turn to stabilize\nthe network in a dynamic setting with flow arrivals and departures. We prove\nthat CSMA is optimal in ad-hoc mode but not in infrastructure mode, when all\ndata flows originate from or are destined to some access points, due to the\ninherent bias of CSMA against downlink traffic. We propose a slight\nmodification of CSMA, that we refer to as flow-aware CSMA, which corrects this\nbias and makes the algorithm optimal in all cases. The analysis is based on\nsome time-scale separation assumption which is proved valid in the limit of\nlarge flow sizes.\n", "versions": [{"version": "v1", "created": "Wed, 24 Nov 2010 08:42:07 GMT"}, {"version": "v2", "created": "Sat, 2 Apr 2011 20:27:25 GMT"}], "update_date": "2011-04-05", "authors_parsed": [["Bonald", "Thomas", ""], ["Feuillet", "Mathieu", ""]]}, {"id": "1011.5674", "submitter": "Bo Ji", "authors": "Bo Ji, Changhee Joo, Ness B. Shroff", "title": "Delay-Based Back-Pressure Scheduling in Multihop Wireless Networks", "comments": "Accepted for publication in IEEE/ACM Transactions on Networking. A\n  preliminary version of this work was presented at the IEEE INFOCOM 2011", "journal-ref": null, "doi": "10.1109/TNET.2012.2227790", "report-no": null, "categories": "cs.NI cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Scheduling is a critical and challenging resource allocation mechanism for\nmultihop wireless networks. It is well known that scheduling schemes that favor\nlinks with larger queue length can achieve high throughput performance.\nHowever, these queue-length-based schemes could potentially suffer from large\n(even infinite) packet delays due to the well-known last packet problem,\nwhereby packets belonging to some flows may be excessively delayed due to lack\nof subsequent packet arrivals. Delay-based schemes have the potential to\nresolve this last packet problem by scheduling the link based on the delay the\npacket has encountered. However, characterizing throughput-optimality of these\ndelay-based schemes has largely been an open problem in multihop wireless\nnetworks (except in limited cases where the traffic is single-hop.) In this\npaper, we investigate delay-based scheduling schemes for multihop traffic\nscenarios with fixed routes. We develop a scheduling scheme based on a new\ndelay metric, and show that the proposed scheme achieves optimal throughput\nperformance. Further, we conduct simulations to support our analytical results,\nand show that the delay-based scheduler successfully removes excessive packet\ndelays, while it achieves the same throughput region as the queue-length-based\nscheme.\n", "versions": [{"version": "v1", "created": "Thu, 25 Nov 2010 19:25:41 GMT"}, {"version": "v2", "created": "Mon, 29 Nov 2010 02:18:28 GMT"}, {"version": "v3", "created": "Wed, 7 Nov 2012 02:07:03 GMT"}], "update_date": "2016-11-17", "authors_parsed": [["Ji", "Bo", ""], ["Joo", "Changhee", ""], ["Shroff", "Ness B.", ""]]}, {"id": "1011.6031", "submitter": "Olivier Zendra", "authors": "Hugues Cass\\'e (IRIT), Karine Heydemann (LIP6), Haluk Ozaktas (LIP6),\n  Jonathan Ponroy (INRIA Lorraine - LORIA), Christine Rochange (IRIT), Olivier\n  Zendra (INRIA Lorraine - LORIA)", "title": "A framework to experiment optimizations for real-time and embedded\n  software", "comments": "International Conference on Embedded Real Time Software and Systems\n  (ERTS2), Toulouse : France (2010)", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Typical constraints on embedded systems include code size limits, upper\nbounds on energy consumption and hard or soft deadlines. To meet these\nrequirements, it may be necessary to improve the software by applying various\nkinds of transformations like compiler optimizations, specific mapping of code\nand data in the available memories, code compression, etc. However, a\ntransformation that aims at improving the software with respect to a given\ncriterion might engender side effects on other criteria and these effects must\nbe carefully analyzed. For this purpose, we have developed a common framework\nthat makes it possible to experiment various code transfor-mations and to\nevaluate their impact of various criteria. This work has been carried out\nwithin the French ANR MORE project.\n", "versions": [{"version": "v1", "created": "Sun, 28 Nov 2010 11:13:40 GMT"}], "update_date": "2010-11-30", "authors_parsed": [["Cass\u00e9", "Hugues", "", "IRIT"], ["Heydemann", "Karine", "", "LIP6"], ["Ozaktas", "Haluk", "", "LIP6"], ["Ponroy", "Jonathan", "", "INRIA Lorraine - LORIA"], ["Rochange", "Christine", "", "IRIT"], ["Zendra", "Olivier", "", "INRIA Lorraine - LORIA"]]}, {"id": "1011.6223", "submitter": "Benedikt Meurer", "authors": "Benedikt Meurer", "title": "Just-In-Time compilation of OCaml byte-code", "comments": "15 pages, 6 figures, 3 tables", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.PL cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This paper presents various improvements that were applied to OCamlJIT2, a\nJust-In-Time compiler for the OCaml byte-code virtual machine. OCamlJIT2\ncurrently runs on various Unix-like systems with x86 or x86-64 processors. The\nimprovements, including the new x86 port, are described in detail, and\nperformance measures are given, including a direct comparison of OCamlJIT2 to\nOCamlJIT.\n", "versions": [{"version": "v1", "created": "Mon, 29 Nov 2010 13:24:11 GMT"}, {"version": "v2", "created": "Wed, 11 May 2011 08:37:18 GMT"}, {"version": "v3", "created": "Tue, 27 Sep 2011 14:14:21 GMT"}], "update_date": "2011-09-28", "authors_parsed": [["Meurer", "Benedikt", ""]]}]