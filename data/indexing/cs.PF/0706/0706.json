[{"id": "0706.2839", "submitter": "Rajeev Raman", "authors": "Naila Rahman and Rajeev Raman", "title": "Cache Analysis of Non-uniform Distribution Sorting Algorithms", "comments": "The full version of our ESA 2000 paper (LNCS 1879) on this subject", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DS cs.PF", "license": null, "abstract": "  We analyse the average-case cache performance of distribution sorting\nalgorithms in the case when keys are independently but not necessarily\nuniformly distributed. The analysis is for both `in-place' and `out-of-place'\ndistribution sorting algorithms and is more accurate than the analysis\npresented in \\cite{RRESA00}. In particular, this new analysis yields tighter\nupper and lower bounds when the keys are drawn from a uniform distribution.\n  We use this analysis to tune the performance of the integer sorting algorithm\nMSB radix sort when it is used to sort independent uniform floating-point\nnumbers (floats). Our tuned MSB radix sort algorithm comfortably outperforms a\ncache-tuned implementations of bucketsort \\cite{RR99} and Quicksort when\nsorting uniform floats from $[0, 1)$.\n", "versions": [{"version": "v1", "created": "Tue, 19 Jun 2007 17:12:47 GMT"}, {"version": "v2", "created": "Mon, 13 Aug 2007 22:57:01 GMT"}], "update_date": "2007-08-14", "authors_parsed": [["Rahman", "Naila", ""], ["Raman", "Rajeev", ""]]}, {"id": "0706.3984", "submitter": "Ali Mesbah", "authors": "Engin Bozdag, Ali Mesbah, Arie van Deursen", "title": "A Comparison of Push and Pull Techniques for Ajax", "comments": "Conference: WSE 2007", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.SE cs.PF", "license": null, "abstract": "  Ajax applications are designed to have high user interactivity and low\nuser-perceived latency. Real-time dynamic web data such as news headlines,\nstock tickers, and auction updates need to be propagated to the users as soon\nas possible. However, Ajax still suffers from the limitations of the Web's\nrequest/response architecture which prevents servers from pushing real-time\ndynamic web data. Such applications usually use a pull style to obtain the\nlatest updates, where the client actively requests the changes based on a\npredefined interval. It is possible to overcome this limitation by adopting a\npush style of interaction where the server broadcasts data when a change occurs\non the server side. Both these options have their own trade-offs. This paper\nexplores the fundamental limits of browser-based applications and analyzes push\nsolutions for Ajax technology. It also shows the results of an empirical study\ncomparing push and pull.\n", "versions": [{"version": "v1", "created": "Wed, 27 Jun 2007 09:14:40 GMT"}, {"version": "v2", "created": "Thu, 16 Aug 2007 11:53:37 GMT"}], "update_date": "2007-08-16", "authors_parsed": [["Bozdag", "Engin", ""], ["Mesbah", "Ali", ""], ["van Deursen", "Arie", ""]]}]