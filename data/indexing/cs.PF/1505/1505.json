[{"id": "1505.00558", "submitter": "Ammar Muqaddas", "authors": "Ammar Muqaddas", "title": "Triple State QuickSort, A replacement for the C/C++ library qsort", "comments": "31 pages, 49 Figures. Minor fix in page 15 and a typo", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DS cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  An industrial grade Quicksort function along with its new algorithm is\npresented. Compared to 4 other well known implementations of Quicksort, the new\nalgorithm reduces both the number of comparisons and swaps in most cases while\nstaying close to the best of the 4 in worst cases. We trade space for\nperformance, at the price of n/2 temporary extra spaces in the worst case. Run\ntime tests reveal an overall improvement of at least 15.8% compared to the\noverall best of the other 4 functions. Furthermore, our function scores a 32.7%\nrun time improvement against Yaroslavskiy's new Dual Pivot Quicksort. Our\nfunction is pointer based, which is meant as a replacement for the C/C++\nlibrary qsort(). But we also provide an array based function of the same\nalgorithm for easy porting to different programming languages.\n", "versions": [{"version": "v1", "created": "Mon, 4 May 2015 08:45:38 GMT"}, {"version": "v2", "created": "Mon, 11 May 2015 11:01:43 GMT"}], "update_date": "2015-05-12", "authors_parsed": [["Muqaddas", "Ammar", ""]]}, {"id": "1505.02586", "submitter": "Georg Hager", "authors": "Johannes Hofmann, Dietmar Fey, Jan Eitzinger, Georg Hager, Gerhard\n  Wellein", "title": "Performance analysis of the Kahan-enhanced scalar product on current\n  multicore processors", "comments": "10 pages, 4 figures", "journal-ref": null, "doi": "10.1007/978-3-319-32149-3_7", "report-no": null, "categories": "cs.PF cs.DC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We investigate the performance characteristics of a numerically enhanced\nscalar product (dot) kernel loop that uses the Kahan algorithm to compensate\nfor numerical errors, and describe efficient SIMD-vectorized implementations on\nrecent Intel processors. Using low-level instruction analysis and the\nexecution-cache-memory (ECM) performance model we pinpoint the relevant\nperformance bottlenecks for single-core and thread-parallel execution, and\npredict performance and saturation behavior. We show that the Kahan-enhanced\nscalar product comes at almost no additional cost compared to the naive\n(non-Kahan) scalar product if appropriate low-level optimizations, notably SIMD\nvectorization and unrolling, are applied. We also investigate the impact of\narchitectural changes across four generations of Intel Xeon processors.\n", "versions": [{"version": "v1", "created": "Mon, 11 May 2015 12:34:54 GMT"}], "update_date": "2019-02-19", "authors_parsed": [["Hofmann", "Johannes", ""], ["Fey", "Dietmar", ""], ["Eitzinger", "Jan", ""], ["Hager", "Georg", ""], ["Wellein", "Gerhard", ""]]}, {"id": "1505.03374", "submitter": "Jeremy Morse", "authors": "James Pallister, Steve Kerrison, Jeremy Morse, Kerstin Eder", "title": "Data dependent energy modelling for worst case energy consumption\n  analysis", "comments": null, "journal-ref": null, "doi": "10.1145/3078659.3078666", "report-no": null, "categories": "cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Safely meeting Worst Case Energy Consumption (WCEC) criteria requires\naccurate energy modeling of software. We investigate the impact of instruction\noperand values upon energy consumption in cacheless embedded processors.\nExisting instruction-level energy models typically use measurements from random\ninput data, providing estimates unsuitable for safe WCEC analysis.\n  We examine probabilistic energy distributions of instructions and propose a\nmodel for composing instruction sequences using distributions, enabling WCEC\nanalysis on program basic blocks. The worst case is predicted with statistical\nanalysis. Further, we verify that the energy of embedded benchmarks can be\ncharacterised as a distribution, and compare our proposed technique with other\nmethods of estimating energy consumption.\n", "versions": [{"version": "v1", "created": "Wed, 13 May 2015 13:21:25 GMT"}, {"version": "v2", "created": "Tue, 3 Nov 2015 21:49:26 GMT"}, {"version": "v3", "created": "Fri, 12 May 2017 13:09:43 GMT"}], "update_date": "2017-05-15", "authors_parsed": [["Pallister", "James", ""], ["Kerrison", "Steve", ""], ["Morse", "Jeremy", ""], ["Eder", "Kerstin", ""]]}, {"id": "1505.03774", "submitter": "Cong Shi", "authors": "Retsef Levi, Cong Shi", "title": "Dynamic Allocation Problems in Loss Network Systems with Advanced\n  Reservation", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "math.PR cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We consider a class of well-known dynamic resource allocation models in loss\nnetwork systems with advanced reservation. The most important performance\nmeasure in any loss network system is to compute its blocking probability,\ni.e., the probability of an arriving customer in equilibrium finds a fully\nutilized system (thereby getting rejected by the system). In this paper, we\nderive upper bounds on the asymptotic blocking probabilities for such systems\nin high-volume regimes. There have been relatively few results on loss network\nsystems with advanced reservation due to its inherent complexity. The\ntheoretical results find applications in a wide class of revenue management\nproblems in systems with reusable resources and advanced reservation, e.g.,\nhotel room, car rental and workforce management. We propose a simple control\npolicy called the improved class selection policy (ICSP) based on solving a\ncontinuous knapsack problem, similar in spirit to the one proposed in Levi and\nRadovanovic (2010). Using our results derived for loss network systems with\nadvanced reservation, we show the ICSP performs asymptotically near-optimal in\nhigh-volume regimes.\n", "versions": [{"version": "v1", "created": "Thu, 14 May 2015 16:02:12 GMT"}], "update_date": "2015-05-15", "authors_parsed": [["Levi", "Retsef", ""], ["Shi", "Cong", ""]]}, {"id": "1505.04996", "submitter": "Marko Boon", "authors": "Marko Boon, Erik Winands", "title": "Critically loaded k-limited polling systems", "comments": "Proceedings of ValueTools 2015", "journal-ref": null, "doi": null, "report-no": null, "categories": "math.PR cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We consider a two-queue polling model with switch-over times and $k$-limited\nservice (serve at most $k_i$ customers during one visit period to queue $i$) in\neach queue. The major benefit of the $k$-limited service discipline is that it\n- besides bounding the cycle time - effectuates prioritization by assigning\ndifferent service limits to different queues. System performance is studied in\nthe heavy-traffic regime, in which one of the queues becomes critically loaded\nwith the other queue remaining stable. By using a singular-perturbation\ntechnique, we rigorously prove heavy-traffic limits for the joint queue-length\ndistribution. Moreover, it is observed that an interchange exists among the\nfirst two moments in service and switch-over times such that the HT limits\nremain unchanged. Not only do the rigorously proven results readily carry over\nto $N$($\\geq2$) queue polling systems, but one can also easily relax the\ndistributional assumptions. The results and insights of this note prove their\nworth in the performance analysis of Wireless Personal Area Networks (WPAN) and\nmobile networks, where different users compete for access to the shared scarce\nresources.\n", "versions": [{"version": "v1", "created": "Tue, 19 May 2015 13:52:43 GMT"}, {"version": "v2", "created": "Fri, 4 Mar 2016 08:58:39 GMT"}], "update_date": "2016-03-07", "authors_parsed": [["Boon", "Marko", ""], ["Winands", "Erik", ""]]}, {"id": "1505.05135", "submitter": "Marcos Portnoi", "authors": "Marcos Portnoi, Rafael Gon\\c{c}alves Bezerra de Ara\\'ujo", "title": "Network Simulator - Vis\\~ao Geral da Ferramenta de Simula\\c{c}\\~ao de\n  Redes", "comments": "in Portuguese, Semin\\'ario Estudantil de Produ\\c{c}\\~ao Acad\\^emica,\n  2002", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This paper describes NS - Network Simulator, the computer networks simulation\ntool. We offer an overview NS, and also analyze its characteristics and\nfunctions. Finally, we present in detail all steps for preparing a simulation\nof a simple model in NS.\n", "versions": [{"version": "v1", "created": "Mon, 27 Apr 2015 18:29:58 GMT"}], "update_date": "2015-05-20", "authors_parsed": [["Portnoi", "Marcos", ""], ["de Ara\u00fajo", "Rafael Gon\u00e7alves Bezerra", ""]]}, {"id": "1505.06630", "submitter": "Laurent Vanbever", "authors": "Michael Alan Chang, Thomas Holterbach, Markus Happe, Laurent Vanbever", "title": "Supercharge me: Boost Router Convergence with SDN", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.NI cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Software Defined Networking (SDN) is a promising approach for improving the\nperformance and manageability of future network architectures. However, little\nwork has gone into using SDN to improve the performance and manageability of\nexisting networks without requiring a major overhaul of the existing network\ninfrastructure.\n  In this paper, we show how we can dramatically improve, or supercharge, the\nperformance of existing IP routers by combining them with SDN-enabled equipment\nin a novel way. More particularly, our supercharged solution substantially\nreduces the convergence time of an IP router upon link or node failure without\ninducing any reconfiguration of the IP router itself. Our key insight is to use\nthe SDN controller to precompute backup forwarding entries and immediately\nactivate them upon failure, enabling almost immediate data-plane recovery,\nwhile letting the router converge at its typical slow pace. By boosting\nexisting equipment's performance, we not only increase their lifetime but also\nprovide new incentives for network operators to kickstart SDN deployment.\n  We implemented a fully functional \"supercharger\" and use it to boost the\nconvergence performance of a Cisco Nexus 7k router. Using a FPGA-based traffic\ngenerator, we show that our supercharged router systematically converges within\n~150ms, a 900x reduction with respect to its normal convergence time under\nsimilar conditions.\n", "versions": [{"version": "v1", "created": "Mon, 25 May 2015 13:52:19 GMT"}], "update_date": "2015-05-26", "authors_parsed": [["Chang", "Michael Alan", ""], ["Holterbach", "Thomas", ""], ["Happe", "Markus", ""], ["Vanbever", "Laurent", ""]]}, {"id": "1505.07648", "submitter": "Kuang Xu", "authors": "John N. Tsitsiklis and Kuang Xu", "title": "Flexible Queueing Architectures", "comments": "Revised October 2016. A preliminary version of this paper appeared at\n  the 2013 ACM Sigmetrics conference; the performance of the architectures\n  proposed in the current paper is significantly better than the one in the\n  conference version", "journal-ref": null, "doi": null, "report-no": null, "categories": "math.PR cs.NI cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We study a multi-server model with $n$ flexible servers and $n$ queues,\nconnected through a bipartite graph, where the level of flexibility is captured\nby the graph's average degree, $d_n$. Applications in content replication in\ndata centers, skill-based routing in call centers, and flexible supply chains\nare among our main motivations.\n  We focus on the scaling regime where the system size $n$ tends to infinity,\nwhile the overall traffic intensity stays fixed. We show that a large capacity\nregion and an asymptotically vanishing queueing delay are simultaneously\nachievable even under limited flexibility ($d_n \\ll n$). Our main results\ndemonstrate that, when $d_n\\gg \\ln n$, a family of expander-graph-based\nflexibility architectures has a capacity region that is within a constant\nfactor of the maximum possible, while simultaneously ensuring a diminishing\nqueueing delay for all arrival rate vectors in the capacity region. Our\nanalysis is centered around a new class of virtual-queue-based scheduling\npolicies that rely on dynamically constructed job-to-server assignments on the\nconnectivity graph. For comparison, we also analyze a natural family of modular\narchitectures, which is simpler but has provably weaker performance.\n", "versions": [{"version": "v1", "created": "Thu, 28 May 2015 11:25:04 GMT"}, {"version": "v2", "created": "Mon, 6 Feb 2017 08:44:35 GMT"}], "update_date": "2017-02-07", "authors_parsed": [["Tsitsiklis", "John N.", ""], ["Xu", "Kuang", ""]]}, {"id": "1505.08067", "submitter": "Mohamed Amine Bergach", "authors": "Mohamed Amine Bergach and Emilien Kofman and Robert de Simone and\n  Serge Tissot and Michel Syska", "title": "Efficient FFT mapping on GPU for radar processing application: modeling\n  and implementation", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.MS cs.DC cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  General-purpose multiprocessors (as, in our case, Intel IvyBridge and Intel\nHaswell) increasingly add GPU computing power to the former multicore\narchitectures. When used for embedded applications (for us, Synthetic aperture\nradar) with intensive signal processing requirements, they must constantly\ncompute convolution algorithms, such as the famous Fast Fourier Transform. Due\nto its \"fractal\" nature (the typical butterfly shape, with larger FFTs defined\nas combination of smaller ones with auxiliary data array transpose functions),\none can hope to compute analytically the size of the largest FFT that can be\nperformed locally on an elementary GPU compute block. Then, the full\napplication must be organized around this given building block size. Now, due\nto phenomena involved in the data transfers between various memory levels\nacross CPUs and GPUs, the optimality of such a scheme is only loosely\npredictable (as communications tend to overcome in time the complexity of\ncomputations). Therefore a mix of (theoretical) analytic approach and\n(practical) runtime validation is here needed. As we shall illustrate, this\noccurs at both stage, first at the level of deciding on a given elementary FFT\nblock size, then at the full application level.\n", "versions": [{"version": "v1", "created": "Fri, 29 May 2015 14:45:03 GMT"}], "update_date": "2015-06-01", "authors_parsed": [["Bergach", "Mohamed Amine", ""], ["Kofman", "Emilien", ""], ["de Simone", "Robert", ""], ["Tissot", "Serge", ""], ["Syska", "Michel", ""]]}]