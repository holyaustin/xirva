[{"id": "1610.00149", "submitter": "Takashi Ikegawa", "authors": "Takashi Ikegawa", "title": "Data-Unit-Size Distribution Model with Retransmitted Packet Size\n  Preservation Property and Its Application to Goodput Analysis for\n  Stop-and-Wait Protocol: Case of Independent Packet Losses", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.PF cs.NI", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This paper proposes a data-unit-size distribution model to represent the\nretransmitted packet size preservation (RPSP) property in a scenario where\nindependently lost packets are retransmitted by a stop-and-wait protocol. RPSP\nmeans that retransmitted packets with the same sequence number are equal in\nsize to the packet of the original transmission, which is identical to the\npacket generated from a message through the segmentation function, namely,\ngenerated packet. Furthermore, we derive goodput formula using an approach to\nderive the data-unit-size distribution. We investigate the effect of RPSP on\nframe size distributions and goodput in a simple case when no collision happens\nover the bit-error prone wireless network equipped with IEEE 802.11 Distributed\nCoordination Function, which is a typical example of the stop-and-wait\nprotocol. Numerical results show that the effect gets stronger as bit error\nrate increases and the maximum size of the generated packets is larger than the\nmean size for large enough packet retry limits because longer packets will be\nrepeatedly corrupted and retransmitted more times as a result of RPSP.\n", "versions": [{"version": "v1", "created": "Sat, 1 Oct 2016 15:29:52 GMT"}], "update_date": "2016-10-04", "authors_parsed": [["Ikegawa", "Takashi", ""]]}, {"id": "1610.00560", "submitter": "C\\'eline Comte", "authors": "Thomas Bonald, C\\'eline Comte, Virag Shah, Gustavo de Veciana", "title": "Poly-Symmetry in Processor-Sharing Systems", "comments": null, "journal-ref": "Queueing Systems 86.3-4 (2017) 327-359", "doi": "10.1007/s11134-017-9525-2", "report-no": null, "categories": "cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We consider a system of processor-sharing queues with state-dependent service\nrates. These are allocated according to balanced fairness within a polymatroid\ncapacity set. Balanced fairness is known to be both insensitive and\nPareto-efficient in such systems, which ensures that the performance metrics,\nwhen computable, will provide robust insights into the real performance of the\nsystem considered. We first show that these performance metrics can be\nevaluated with a complexity that is polynomial in the system size if the system\nis partitioned into a finite number of parts, so that queues are exchangeable\nwithin each part and asymmetric across different parts. This in turn allows us\nto derive stochastic bounds for a larger class of systems which satisfy less\nrestrictive symmetry assumptions. These results are applied to practical\nexamples of tree data networks, such as backhaul networks of Internet service\nproviders, and computer clusters.\n", "versions": [{"version": "v1", "created": "Mon, 3 Oct 2016 14:05:04 GMT"}, {"version": "v2", "created": "Tue, 25 Apr 2017 20:45:37 GMT"}, {"version": "v3", "created": "Thu, 24 Oct 2019 10:06:44 GMT"}], "update_date": "2019-10-25", "authors_parsed": [["Bonald", "Thomas", ""], ["Comte", "C\u00e9line", ""], ["Shah", "Virag", ""], ["de Veciana", "Gustavo", ""]]}, {"id": "1610.00662", "submitter": "Andrea Tassi", "authors": "Andrea Tassi, Malcolm Egan, Robert J. Piechocki, Andrew Nix", "title": "Wireless Vehicular Networks in Emergencies: A Single Frequency Network\n  Approach", "comments": "The invited paper will be presented in the Telecommunications Systems\n  and Networks symposium of SigTelCom 2017", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.IT cs.NI cs.PF math.IT", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Obtaining high quality sensor information is critical in vehicular\nemergencies. However, existing standards such as IEEE 802.11p/DSRC and LTE-A\ncannot support either the required data rates or the latency requirements. One\nsolution to this problem is for municipalities to invest in dedicated base\nstations to ensure that drivers have the information they need to make safe\ndecisions in or near accidents. In this paper we further propose that these\nmunicipality-owned base stations form a Single Frequency Network (SFN). In\norder to ensure that transmissions are reliable, we derive tight bounds on the\noutage probability when the SFN is overlaid on an existing cellular network.\nUsing our bounds, we propose a transmission power allocation algorithm. We show\nthat our power allocation model can reduce the total instantaneous SFN\ntransmission power up to $20$ times compared to a static uniform power\nallocation solution, for the considered scenarios. The result is particularly\nimportant when base stations rely on an off-grid power source (i.e.,\nbatteries).\n", "versions": [{"version": "v1", "created": "Mon, 3 Oct 2016 18:25:53 GMT"}, {"version": "v2", "created": "Wed, 5 Oct 2016 07:29:20 GMT"}], "update_date": "2016-10-06", "authors_parsed": [["Tassi", "Andrea", ""], ["Egan", "Malcolm", ""], ["Piechocki", "Robert J.", ""], ["Nix", "Andrew", ""]]}, {"id": "1610.01267", "submitter": "Tianshu Hao", "authors": "Gang Lu, Jianfeng Zhan, Tianshu Hao, and Lei Wang", "title": "10-millisecond Computing", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Despite computation becomes much complex on data with an unprecedented scale,\nwe argue computers or smart devices should and will consistently provide\ninformation and knowledge to human being in the order of a few tens\nmilliseconds. We coin a new term 10-millisecond computing to call attention to\nthis class of workloads. 10-millisecond computing raises many challenges for\nboth software and hardware stacks. In this paper, using a typical\nworkload-memcached on a 40-core server (a main-stream server in near future),\nwe quantitatively measure 10-ms computing's challenges to conventional\noperating systems. For better communication, we propose a simple metric-outlier\nproportion to measure quality of service: for N completed requests or jobs, if\nM jobs or requests' latencies exceed the outlier threshold t, the outlier\nproportion is M/N . For a 1K-scale system running Linux (version 2.6.32), LXC\n(version 0.7.5) or XEN (version 4.0.0), respectively, we surprisingly find that\nso as to reduce the service outlier proportion to 10% (10% users will feel QoS\ndegradation), the outlier proportion of a single server has to be reduced by\n871X, 2372X, 2372X accordingly. Also, we discuss the possible design spaces of\n10-ms computing systems from perspectives of datacenter architectures,\nnetworking, OS and scheduling, and benchmarking.\n", "versions": [{"version": "v1", "created": "Wed, 5 Oct 2016 03:55:02 GMT"}, {"version": "v2", "created": "Fri, 3 Mar 2017 14:25:06 GMT"}, {"version": "v3", "created": "Wed, 8 Mar 2017 02:05:53 GMT"}], "update_date": "2017-03-09", "authors_parsed": [["Lu", "Gang", ""], ["Zhan", "Jianfeng", ""], ["Hao", "Tianshu", ""], ["Wang", "Lei", ""]]}, {"id": "1610.01295", "submitter": "Gabriele D'Angelo", "authors": "Gabriele D'Angelo", "title": "The Simulation Model Partitioning Problem: an Adaptive Solution Based on\n  Self-Clustering (Extended Version)", "comments": null, "journal-ref": "Simulation Modelling Practice and Theory, Elsevier, Volume 70,\n  January 2017 pages 1-20", "doi": "10.1016/j.simpat.2016.10.001", "report-no": null, "categories": "cs.DC cs.MA cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This paper is about partitioning in parallel and distributed simulation. That\nmeans decomposing the simulation model into a numberof components and to\nproperly allocate them on the execution units. An adaptive solution based on\nself-clustering, that considers both communication reduction and computational\nload-balancing, is proposed. The implementation of the proposed mechanism is\ntested using a simulation model that is challenging both in terms of structure\nand dynamicity. Various configurations of the simulation model and the\nexecution environment have been considered. The obtained performance results\nare analyzed using a reference cost model. The results demonstrate that the\nproposed approach is promising and that it can reduce the simulation execution\ntime in both parallel and distributed architectures.\n", "versions": [{"version": "v1", "created": "Wed, 5 Oct 2016 07:30:54 GMT"}, {"version": "v2", "created": "Fri, 4 Nov 2016 12:16:11 GMT"}], "update_date": "2016-11-07", "authors_parsed": [["D'Angelo", "Gabriele", ""]]}, {"id": "1610.01302", "submitter": "Quan-Lin Li", "authors": "Quan-Lin Li and Rui-Na Fan", "title": "A Mean-Field Matrix-Analytic Method for Bike Sharing Systems under\n  Markovian Environment", "comments": "45 pages; 10 figures", "journal-ref": null, "doi": null, "report-no": null, "categories": "math.PR cs.PF math.DS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  To reduce automobile exhaust pollution, traffic congestion and parking\ndifficulties, bike-sharing systems are rapidly developed in many countries and\nmore than 500 major cities in the world over the past decade. In this paper, we\ndiscuss a large-scale bike-sharing system under Markovian environment, and\npropose a mean-field matrix-analytic method in the study of bike-sharing\nsystems through combining the mean-field theory with the time-inhomogeneous\nqueues as well as the nonlinear QBD processes. Firstly, we establish an\nempirical measure process to express the states of this bike-sharing system.\nSecondly, we apply the mean-field theory to establishing a time-inhomogeneous\nMAP(t)/MAP(t)/1/K+2L+1 queue, and then to setting up a system of mean-field\nequations. Thirdly, we use the martingale limit theory to show the asymptotic\nindependence of this bike-sharing system, and further analyze the limiting\ninterchangeability as N goes to infinity and t goes to infinity. Based on this,\nwe discuss and compute the fixed point in terms of a nonlinear QBD process.\nFinally, we analyze performance measures of this bike-sharing system, such as,\nthe mean of stationary bike number at any station and the stationary\nprobability of problematic stations. Furthermore, we use numerical examples to\nshow how the performance measures depend on the key parameters of this\nbike-sharing system. We hope the methodology and results of this paper are\napplicable in the study of more general large-scale bike-sharing systems.\n", "versions": [{"version": "v1", "created": "Wed, 5 Oct 2016 08:03:38 GMT"}, {"version": "v2", "created": "Tue, 13 Feb 2018 07:53:53 GMT"}], "update_date": "2018-02-14", "authors_parsed": [["Li", "Quan-Lin", ""], ["Fan", "Rui-Na", ""]]}, {"id": "1610.03618", "submitter": "Chao Li", "authors": "Chao Li, Yi Yang, Min Feng, Srimat Chakradhar, Huiyang Zhou", "title": "Optimizing Memory Efficiency for Deep Convolutional Neural Networks on\n  GPUs", "comments": "Published as a conference paper International Conference on High\n  Performance Computing, Networking, Storage, and Analysis (SC'16), 2016", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DC cs.LG cs.NE cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Leveraging large data sets, deep Convolutional Neural Networks (CNNs) achieve\nstate-of-the-art recognition accuracy. Due to the substantial compute and\nmemory operations, however, they require significant execution time. The\nmassive parallel computing capability of GPUs make them as one of the ideal\nplatforms to accelerate CNNs and a number of GPU-based CNN libraries have been\ndeveloped. While existing works mainly focus on the computational efficiency of\nCNNs, the memory efficiency of CNNs have been largely overlooked. Yet CNNs have\nintricate data structures and their memory behavior can have significant impact\non the performance. In this work, we study the memory efficiency of various CNN\nlayers and reveal the performance implication from both data layouts and memory\naccess patterns. Experiments show the universal effect of our proposed\noptimizations on both single layers and various networks, with up to 27.9x for\na single layer and up to 5.6x on the whole networks.\n", "versions": [{"version": "v1", "created": "Wed, 12 Oct 2016 07:02:48 GMT"}], "update_date": "2016-10-13", "authors_parsed": [["Li", "Chao", ""], ["Yang", "Yi", ""], ["Feng", "Min", ""], ["Chakradhar", "Srimat", ""], ["Zhou", "Huiyang", ""]]}, {"id": "1610.04260", "submitter": "Victor Millnert", "authors": "Victor Millnert, Enrico Bini, Johan Eker", "title": "Cost minimization of network services with buffer and end-to-end\n  deadline constraints", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.NI cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Cloud computing technology provides the means to share physical resources\namong multiple users and data center tenants by exposing them as virtual\nresources. There is a strong industrial drive to use similar technology and\nconcepts to provide timing sensitive services. One such is virtual networking\nservices, so called services chains, which consist of several interconnected\nvirtual network functions. This allows for the capacity to be scaled up and\ndown by adding or removing virtual resources. In this work, we develop a model\nof a service chain and pose the dynamic allocation of resources as an\noptimization problem. We design and present a set of strategies to allot\nvirtual network nodes in an optimal fashion subject to latency and buffer\nconstraints.\n", "versions": [{"version": "v1", "created": "Thu, 15 Sep 2016 11:30:42 GMT"}], "update_date": "2016-10-17", "authors_parsed": [["Millnert", "Victor", ""], ["Bini", "Enrico", ""], ["Eker", "Johan", ""]]}, {"id": "1610.04429", "submitter": "Zheng Liu", "authors": "Chen Cao, Zheng Liu, Lei Chen and H. V. Jagadish", "title": "Tuning Crowdsourced Human Computation", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.HC cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  As the use of crowdsourcing increases, it is important to think about\nperformance optimization. For this purpose, it is possible to think about each\nworker as a HPU(Human Processing Unit), and to draw inspiration from\nperformance optimization on traditional computers or cloud nodes with CPUs.\nHowever, as we characterize HPUs in detail for this purpose, we find that there\nare important differences between CPUs and HPUs, leading to the need for\ncompletely new optimization algorithms.\n  In this paper, we study the specific optimization problem of obtaining\nresults fastest for a crowd sourced job with a fixed total budget. In\ncrowdsourcing, jobs are usually broken down into sets of small tasks, which are\nassigned to workers one at a time. We consider three scenarios of increasing\ncomplexity: Identical Round Homogeneous tasks, Multiplex Round Homogeneous\ntasks, and Multiple Round Heterogeneous tasks. For each scenario, we analyze\nthe stochastic behavior of the HPU clock-rate as a function of the remuneration\noffered. After that, we develop an optimum Budget Allocation strategy to\nminimize the latency for job completion. We validate our results through\nextensive simulations and experiments on Amazon Mechanical Turk.\n", "versions": [{"version": "v1", "created": "Fri, 14 Oct 2016 12:26:18 GMT"}], "update_date": "2016-10-17", "authors_parsed": [["Cao", "Chen", ""], ["Liu", "Zheng", ""], ["Chen", "Lei", ""], ["Jagadish", "H. V.", ""]]}, {"id": "1610.04919", "submitter": "Neal Master", "authors": "Neal Master and Nicholas Bambos", "title": "Power Control for Packet Streaming with Head-of-Line Deadlines", "comments": "Accepted for publication in Performance Evaluation", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.NI cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We consider a mathematical model for streaming media packets (as the\nmotivating key example) from a transmitter buffer to a receiver over a wireless\nlink while controlling the transmitter power (hence, the packet/job processing\nrate). When each packet comes to the head-of-line (HOL) in the buffer, it is\ngiven a deadline $D$ which is the maximum number of times the transmitter can\nattempt retransmission in order to successfully transmit the packet. If this\nnumber of transmission attempts is exhausted, the packet is ejected from the\nbuffer and the next packet comes to the HOL. Costs are incurred in each time\nslot for holding packets in the buffer, expending transmitter power, and\nejecting packets which exceed their deadlines. We investigate how transmission\npower should be chosen so as to minimize the total cost of transmitting the\nitems in the buffer. We formulate the optimal power control problem in a\ndynamic programming framework and then hone in on the special case of fixed\ninterference. For this special case, we are able to provide a precise analytic\ncharacterization of how the power control should vary with the backlog and how\nthe power control should react to approaching deadlines. In particular, we show\nmonotonicity results for how the transmitter should adapt power levels to the\nbacklog and approaching deadlines. We leverage these analytic results from the\nspecial case to build a power control scheme for the general case. Monte Carlo\nsimulations are used to evaluate the performance of the resulting power control\nscheme as compared to the optimal scheme. The resulting power control scheme is\nsub-optimal but it provides a low-complexity approximation of the optimal power\ncontrol. Simulations show that our proposed schemes outperform benchmark\nalgorithms. We also discuss applications of the model to other practical\noperational scenarios.\n", "versions": [{"version": "v1", "created": "Sun, 16 Oct 2016 21:33:57 GMT"}], "update_date": "2016-10-19", "authors_parsed": [["Master", "Neal", ""], ["Bambos", "Nicholas", ""]]}, {"id": "1610.04982", "submitter": "Hongliang Zhang", "authors": "Hongliang Zhang and Yun Liao and Lingyang Song", "title": "D2D-U: Device-to-Device Communications in Unlicensed Bands for 5G and\n  Beyond", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.NI cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Device-to-Device (D2D) communication, which enables direct communication\nbetween nearby mobile devices, is an attractive add-on component to improve\nspectrum efficiency and user experience by reusing licensed cellular spectrum\nin 5G system. In this paper, we propose to enable D2D communication in\nunlicensed spectrum (D2D-U) as an underlay of the uplink LTE network for\nfurther booming the network capacity. A sensing-based protocol is designed to\nsupport the unlicensed channel access for both LTE and D2D users. We further\ninvestigate the subchannel allocation problem to maximize the sum rate of LTE\nand D2D users while taking into account their interference to the existing\nWi-Fi systems. Specifically, we formulate the subchannel allocation as a\nmany-to-many matching problem with externalities, and develop an iterative\nuser-subchannel swap algorithm. Analytical and simulation results show that the\nproposed D2D-U scheme can significantly improve the system sum-rate.\n", "versions": [{"version": "v1", "created": "Mon, 17 Oct 2016 06:32:03 GMT"}, {"version": "v2", "created": "Tue, 7 Mar 2017 02:56:54 GMT"}], "update_date": "2017-03-08", "authors_parsed": [["Zhang", "Hongliang", ""], ["Liao", "Yun", ""], ["Song", "Lingyang", ""]]}, {"id": "1610.06307", "submitter": "Kazuyuki Shudo Kazuyuki Shudo", "authors": "Naoki Matagawa, Kazuyuki Shudo", "title": "Breakdown of a Benchmark Score Without Internal Analysis of Benchmarking\n  Program", "comments": "6 pages, 2 figures", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  A breakdown of a benchmark score is how much each aspect of the system\nperformance affects the score. Existing methods require internal analysis on\nthe benchmarking program and then involve the following problems: (1) require a\ncertain amount of labor for code analysis, profiling, simulation, and so on and\n(2) require the benchmarking program itself. In this paper, we present a method\nfor breaking down a benchmark score without internal analysis of the\nbenchmarking program. The method utilizes regression analysis of benchmark\nscores on a number of systems. Experimental results with 3 benchmarks on 15\nAndroid smartphones showed that our method could break down those benchmark\nscores even though there is room for improvement in accuracy.\n", "versions": [{"version": "v1", "created": "Thu, 20 Oct 2016 07:23:33 GMT"}], "update_date": "2016-10-21", "authors_parsed": [["Matagawa", "Naoki", ""], ["Shudo", "Kazuyuki", ""]]}, {"id": "1610.06309", "submitter": "Markus Fidler", "authors": "Markus Fidler and Brenton Walker and Yuming Jiang", "title": "Non-Asymptotic Delay Bounds for Multi-Server Systems with\n  Synchronization Constraints", "comments": "arXiv admin note: text overlap with arXiv:1512.08354", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.PF cs.DC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Multi-server systems have received increasing attention with important\nimplementations such as Google MapReduce, Hadoop, and Spark. Common to these\nsystems are a fork operation, where jobs are first divided into tasks that are\nprocessed in parallel, and a later join operation, where completed tasks wait\nuntil the results of all tasks of a job can be combined and the job leaves the\nsystem. The synchronization constraint of the join operation makes the analysis\nof fork-join systems challenging and few explicit results are known. In this\nwork, we model fork-join systems using a max-plus server model that enables us\nto derive statistical bounds on waiting and sojourn times for general arrival\nand service time processes. We contribute end-to-end delay bounds for\nmulti-stage fork-join networks that grow in $\\mathcal{O}(h \\ln k)$ for $h$\nfork-join stages, each with $k$ parallel servers. We perform a detailed\ncomparison of different multi-server configurations and highlight their pros\nand cons. We also include an analysis of single-queue fork-join systems that\nare non-idling and achieve a fundamental performance gain, and compare these\nresults to both simulation and a live Spark system.\n", "versions": [{"version": "v1", "created": "Thu, 20 Oct 2016 07:39:23 GMT"}], "update_date": "2016-10-21", "authors_parsed": [["Fidler", "Markus", ""], ["Walker", "Brenton", ""], ["Jiang", "Yuming", ""]]}, {"id": "1610.07236", "submitter": "Sanjay Rajopadhye", "authors": "Tian Jin, Nirmal Prajapati, Waruna Ranasinghe, Guillaume Iooss, Yun\n  Zou, Sanjay Rajopadhye and David Wonnacott", "title": "Hybrid Static/Dynamic Schedules for Tiled Polyhedral Programs", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.PL cs.DC cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Polyhedral compilers perform optimizations such as tiling and\nparallelization; when doing both, they usually generate code that executes\n\"barrier-synchronized wavefronts\" of tiles. We present a system to express and\ngenerate code for hybrid schedules, where some constraints are automatically\nsatisfied through the structure of the code, and the remainder are dynamically\nenforced at run-time with data flow mechanisms. We prove bounds on the added\noverheads that are better, by at least one polynomial degree, than those of\nprevious techniques.\n  We propose a generic mechanism to implement the needed synchronization, and\nshow it can be easily realized for a variety of targets: OpenMP, Pthreads, GPU\n(CUDA or OpenCL) code, languages like X10, Habanero, Cilk, as well as data flow\nplatforms like DAGuE, and OpenStream and MPI. We also provide a simple concrete\nimplementation that works without the need of any sophisticated run-time\nmechanism.\n  Our experiments show our simple implementation to be competitive or better\nthan the wavefront-synchronized code generated by other systems. We also show\nhow the proposed mechanism can achieve 24% to 70% reduction in energy.\n", "versions": [{"version": "v1", "created": "Sun, 23 Oct 2016 21:29:29 GMT"}], "update_date": "2016-10-25", "authors_parsed": [["Jin", "Tian", ""], ["Prajapati", "Nirmal", ""], ["Ranasinghe", "Waruna", ""], ["Iooss", "Guillaume", ""], ["Zou", "Yun", ""], ["Rajopadhye", "Sanjay", ""], ["Wonnacott", "David", ""]]}, {"id": "1610.08168", "submitter": "EPTCS", "authors": "Luca Bortolussi (University of Trieste, CNR-ISTI), Cheng Feng\n  (University of Edinburgh)", "title": "Location Aggregation of Spatial Population CTMC Models", "comments": "In Proceedings QAPL'16, arXiv:1610.07696", "journal-ref": "EPTCS 227, 2016, pp. 30-43", "doi": "10.4204/EPTCS.227.3", "report-no": null, "categories": "cs.MA cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In this paper we focus on spatial Markov population models, describing the\nstochastic evolution of populations of agents, explicitly modelling their\nspatial distribution, representing space as a discrete, finite graph. More\nspecifically, we present a heuristic approach to aggregating spatial locations,\nwhich is designed to preserve the dynamical behaviour of the model whilst\nreducing the computational cost of analysis. Our approach combines stochastic\napproximation ideas (moment closure, linear noise), with computational\nstatistics (spectral clustering) to obtain an efficient aggregation, which is\nexperimentally shown to be reasonably accurate on two case studies: an instance\nof epidemic spreading and a London bike sharing scenario.\n", "versions": [{"version": "v1", "created": "Wed, 26 Oct 2016 05:00:16 GMT"}], "update_date": "2016-10-27", "authors_parsed": [["Bortolussi", "Luca", "", "University of Trieste, CNR-ISTI"], ["Feng", "Cheng", "", "University of Edinburgh"]]}, {"id": "1610.08172", "submitter": "EPTCS", "authors": "Freek van den Berg (University of Twente), Bj\\\"orn F. Postema\n  (University of Twente), Boudewijn R. Haverkort (University of Twente)", "title": "Evaluating load balancing policies for performance and energy-efficiency", "comments": "In Proceedings QAPL'16, arXiv:1610.07696", "journal-ref": "EPTCS 227, 2016, pp. 98-117", "doi": "10.4204/EPTCS.227.7", "report-no": null, "categories": "cs.PF cs.DC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Nowadays, more and more increasingly hard computations are performed in\nchallenging fields like weather forecasting, oil and gas exploration, and\ncryptanalysis. Many of such computations can be implemented using a computer\ncluster with a large number of servers. Incoming computation requests are then,\nvia a so-called load balancing policy, distributed over the servers to ensure\noptimal performance. Additionally, being able to switch-off some servers during\nlow period of workload, gives potential to reduced energy consumption.\nTherefore, load balancing forms, albeit indirectly, a trade-off between\nperformance and energy consumption. In this paper, we introduce a syntax for\nload-balancing policies to dynamically select a server for each request based\non relevant criteria, including the number of jobs queued in servers, power\nstates of servers, and transition delays between power states of servers. To\nevaluate many policies, we implement two load balancers in: (i) iDSL, a\nlanguage and tool-chain for evaluating service-oriented systems, and (ii) a\nsimulation framework in AnyLogic. Both implementations are successfully\nvalidated by comparison of the results.\n", "versions": [{"version": "v1", "created": "Wed, 26 Oct 2016 05:00:54 GMT"}], "update_date": "2016-10-27", "authors_parsed": [["Berg", "Freek van den", "", "University of Twente"], ["Postema", "Bj\u00f6rn F.", "", "University of Twente"], ["Haverkort", "Boudewijn R.", "", "University of Twente"]]}]