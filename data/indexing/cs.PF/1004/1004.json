[{"id": "1004.0023", "submitter": "Kamran Karimi", "authors": "Kamran Karimi, Neil G. Dickson, Firas Hamze", "title": "High-Performance Physics Simulations Using Multi-Core CPUs and GPGPUs in\n  a Volunteer Computing Context", "comments": "15 pages, 9 figures, 3 tables. Accepted in the International Journal\n  of High Performance Computing Applications", "journal-ref": null, "doi": "10.1177/1094342010372928", "report-no": null, "categories": "cs.DC cs.PF physics.comp-ph", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This paper presents two conceptually simple methods for parallelizing a\nParallel Tempering Monte Carlo simulation in a distributed volunteer computing\ncontext, where computers belonging to the general public are used. The first\nmethod uses conventional multi-threading. The second method uses CUDA, a\ngraphics card computing system. Parallel Tempering is described, and challenges\nsuch as parallel random number generation and mapping of Monte Carlo chains to\ndifferent threads are explained. While conventional multi-threading on CPUs is\nwell-established, GPGPU programming techniques and technologies are still\ndeveloping and present several challenges, such as the effective use of a\nrelatively large number of threads. Having multiple chains in Parallel\nTempering allows parallelization in a manner that is similar to the serial\nalgorithm. Volunteer computing introduces important constraints to high\nperformance computing, and we show that both versions of the application are\nable to adapt themselves to the varying and unpredictable computing resources\nof volunteers' computers, while leaving the machines responsive enough to use.\nWe present experiments to show the scalable performance of these two\napproaches, and indicate that the efficiency of the methods increases with\nbigger problem sizes.\n", "versions": [{"version": "v1", "created": "Wed, 31 Mar 2010 22:38:24 GMT"}], "update_date": "2011-03-31", "authors_parsed": [["Karimi", "Kamran", ""], ["Dickson", "Neil G.", ""], ["Hamze", "Firas", ""]]}, {"id": "1004.0024", "submitter": "Neil Dickson", "authors": "Neil G. Dickson, Kamran Karimi, Firas Hamze", "title": "Importance of Explicit Vectorization for CPU and GPU Software\n  Performance", "comments": "17 pages, 17 figures", "journal-ref": null, "doi": "10.1016/j.jcp.2011.03.041", "report-no": null, "categories": "cs.DC cs.PF physics.comp-ph", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Much of the current focus in high-performance computing is on\nmulti-threading, multi-computing, and graphics processing unit (GPU) computing.\nHowever, vectorization and non-parallel optimization techniques, which can\noften be employed additionally, are less frequently discussed. In this paper,\nwe present an analysis of several optimizations done on both central processing\nunit (CPU) and GPU implementations of a particular computationally intensive\nMetropolis Monte Carlo algorithm. Explicit vectorization on the CPU and the\nequivalent, explicit memory coalescing, on the GPU are found to be critical to\nachieving good performance of this algorithm in both environments. The\nfully-optimized CPU version achieves a 9x to 12x speedup over the original CPU\nversion, in addition to speedup from multi-threading. This is 2x faster than\nthe fully-optimized GPU version.\n", "versions": [{"version": "v1", "created": "Wed, 31 Mar 2010 22:38:48 GMT"}], "update_date": "2015-05-18", "authors_parsed": [["Dickson", "Neil G.", ""], ["Karimi", "Kamran", ""], ["Hamze", "Firas", ""]]}, {"id": "1004.0263", "submitter": "Vincenzo Pellegrini", "authors": "Vincenzo Pellegrini, Luca Rose, and Mario Di Dio", "title": "On Memory Accelerated Signal Processing within Software Defined Radios", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.NI cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Since J. Mitola's work in 1992, Software Defined Radios (SDRs) have been\nquite a hot topic in wireless systems research. Though many notable\nachievements were reported in the field, the scarcity of computational power on\ngeneral purpose CPUs has always constrained their wide adoption in production\nenvironments. If conveniently applied within an SDR context, classical concepts\nknown in computer science as space/time tradeoffs can be extremely helpful when\ntrying to mitigate this problem. Inspired by and building on those concepts,\nthis paper presents a novel SDR implementation technique which we call Memory\nAcceleration (MA) that makes extensive use of the memory resources available on\na general purpose computing system, in order to accelerate signal computation.\nMA can provide substantial acceleration factors when applied to conventional\nSDRs without reducing their peculiar flexibility. As a practical proof of this,\nan example of MA applied in the real world to the ETSI DVB-T Viterbi decoder is\nprovided. Actually MA is shown able to provide, when applied to such Viterbi\ndecoder, an acceleration factor of 10.4x, with no impact on error correction\nperformances of the decoder and by making no use of any other typical\nperformance enhancement techniques such as low level (Assembler) programming or\nparallel computation, which though remain compatible with MA. Opportunity for\nextending the MA approach to the entire radio system, thus implementing what we\ncall a Memory-Based Software Defined Radio (MB-SDR) is finally considered and\ndiscussed.\n", "versions": [{"version": "v1", "created": "Fri, 2 Apr 2010 00:31:28 GMT"}], "update_date": "2015-03-13", "authors_parsed": [["Pellegrini", "Vincenzo", ""], ["Rose", "Luca", ""], ["Di Dio", "Mario", ""]]}, {"id": "1004.0395", "submitter": "Daniel Menasche", "authors": "Daniel S. Menasche, Antonio A. A. Rocha, Edmundo A. de Souza e Silva,\n  Rosa M. Leao, Don Towsley, Arun Venkataramani", "title": "Estimating Self-Sustainability in Peer-to-Peer Swarming Systems", "comments": "27 pages, 5 figures", "journal-ref": "Performance Evaluation, 67(11), 1243-1258 (2010)", "doi": "10.1016/j.peva.2010.08.013", "report-no": null, "categories": "cs.NI cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Peer-to-peer swarming is one of the \\emph{de facto} solutions for distributed\ncontent dissemination in today's Internet. By leveraging resources provided by\nclients, swarming systems reduce the load on and costs to publishers. However,\nthere is a limit to how much cost savings can be gained from swarming; for\nexample, for unpopular content peers will always depend on the publisher in\norder to complete their downloads. In this paper, we investigate this\ndependence. For this purpose, we propose a new metric, namely \\emph{swarm\nself-sustainability}. A swarm is referred to as self-sustaining if all its\nblocks are collectively held by peers; the self-sustainability of a swarm is\nthe fraction of time in which the swarm is self-sustaining. We pose the\nfollowing question: how does the self-sustainability of a swarm vary as a\nfunction of content popularity, the service capacity of the users, and the size\nof the file? We present a model to answer the posed question. We then propose\nefficient solution methods to compute self-sustainability. The accuracy of our\nestimates is validated against simulation. Finally, we also provide closed-form\nexpressions for the fraction of time that a given number of blocks is\ncollectively held by peers.\n", "versions": [{"version": "v1", "created": "Fri, 2 Apr 2010 21:55:11 GMT"}, {"version": "v2", "created": "Tue, 6 Apr 2010 16:38:28 GMT"}, {"version": "v3", "created": "Mon, 9 Aug 2010 19:53:50 GMT"}], "update_date": "2019-03-07", "authors_parsed": [["Menasche", "Daniel S.", ""], ["Rocha", "Antonio A. A.", ""], ["Silva", "Edmundo A. de Souza e", ""], ["Leao", "Rosa M.", ""], ["Towsley", "Don", ""], ["Venkataramani", "Arun", ""]]}, {"id": "1004.0534", "submitter": "Przemyslaw Pawelczak", "authors": "Przemys{\\l}aw Pawe{\\l}czak, Shaunak Joshi, Sateesh Addepalli, John\n  Villasenor, and Danijela \\v{C}abri\\'c", "title": "Impact of Connection Admission Process on the Direct Retry Load\n  Balancing Algorithm in Cellular Network", "comments": "accepted to IEEE Transactions on Mobile Computing", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.NI cs.IT cs.PF math.IT", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We present an analytical framework for modeling a priority-based load\nbalancing scheme in cellular networks based on a new algorithm called direct\nretry with truncated offloading channel resource pool (DR$_{K}$). The model,\ndeveloped for a baseline case of two cell network, differs in many respects\nfrom previous works on load balancing. Foremost, it incorporates the call\nadmission process, through random access. In specific, the proposed model\nimplements the Physical Random Access Channel used in 3GPP network standards.\nFurthermore, the proposed model allows the differentiation of users based on\ntheir priorities. The quantitative results illustrate that, for example,\ncellular network operators can control the manner in which traffic is offloaded\nbetween neighboring cells by simply adjusting the length of the random access\nphase. Our analysis also allows for the quantitative determination of the\nblocking probability individual users will experience given a specific length\nof random access phase. Furthermore, we observe that the improvement in\nblocking probability per shared channel for load balanced users using DR$_{K}$\nis maximized at an intermediate number of shared channels, as opposed to the\nmaximum number of these shared resources. This occurs because a balance is\nachieved between the number of users requesting connections and those that are\nalready admitted to the network. We also present an extension of our analytical\nmodel to a multi-cell network (by means of an approximation) and an application\nof the proposed load balancing scheme in the context of opportunistic spectrum\naccess.\n", "versions": [{"version": "v1", "created": "Sun, 4 Apr 2010 21:09:37 GMT"}, {"version": "v2", "created": "Wed, 2 Jun 2010 23:34:40 GMT"}, {"version": "v3", "created": "Thu, 30 Sep 2010 22:16:54 GMT"}, {"version": "v4", "created": "Sun, 6 Feb 2011 06:27:38 GMT"}, {"version": "v5", "created": "Tue, 8 May 2012 14:53:10 GMT"}, {"version": "v6", "created": "Fri, 31 Aug 2012 13:42:03 GMT"}], "update_date": "2015-03-14", "authors_parsed": [["Pawe\u0142czak", "Przemys\u0142aw", ""], ["Joshi", "Shaunak", ""], ["Addepalli", "Sateesh", ""], ["Villasenor", "John", ""], ["\u010cabri\u0107", "Danijela", ""]]}, {"id": "1004.1680", "submitter": "Bijia Pang", "authors": "Bijia Pang, Ue-li Pen, Michael Perrone", "title": "Magnetohydrodynamics on Heterogeneous architectures: a performance\n  comparison", "comments": "8 pages, 2 figures", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.PF astro-ph.IM physics.comp-ph", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We present magneto-hydrodynamic simulation results for heterogeneous systems.\nHeterogeneous architectures combine high floating point performance many-core\nunits hosted in conventional server nodes. Examples include Graphics Processing\nUnits (GPU's) and Cell. They have potentially large gains in performance, at\nmodest power and monetary cost. We implemented a magneto-hydrodynamic (MHD)\nsimulation code on a variety of heterogeneous and multi-core architectures ---\nmulti-core x86, Cell, Nvidia and ATI GPU --- in different languages, FORTRAN,\nC, Cell, CUDA and OpenCL. We present initial performance results for these\nsystems. To our knowledge, this is the widest comparison of heterogeneous\nsystems for MHD simulations. We review the different challenges faced in each\narchitecture, and potential bottlenecks. We conclude that substantial gains in\nperformance over traditional systems are possible, and in particular that is\npossible to extract a greater percentage of peak theoretical performance from\nsome systems when compared to x86 architectures.\n", "versions": [{"version": "v1", "created": "Sat, 10 Apr 2010 04:14:15 GMT"}], "update_date": "2010-11-04", "authors_parsed": [["Pang", "Bijia", ""], ["Pen", "Ue-li", ""], ["Perrone", "Michael", ""]]}, {"id": "1004.1741", "submitter": "Georg Hager", "authors": "Jan Treibig, Gerhard Wellein, Georg Hager", "title": "Efficient multicore-aware parallelization strategies for iterative\n  stencil computations", "comments": "15 pages, 10 figures", "journal-ref": "Journal of Computational Science 2, 130-137 (2011)", "doi": "10.1016/j.jocs.2011.01.010", "report-no": null, "categories": "cs.PF cs.DC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Stencil computations consume a major part of runtime in many scientific\nsimulation codes. As prototypes for this class of algorithms we consider the\niterative Jacobi and Gauss-Seidel smoothers and aim at highly efficient\nparallel implementations for cache-based multicore architectures. Temporal\ncache blocking is a known advanced optimization technique, which can reduce the\npressure on the memory bus significantly. We apply and refine this optimization\nfor a recently presented temporal blocking strategy designed to explicitly\nutilize multicore characteristics. Especially for the case of Gauss-Seidel\nsmoothers we show that simultaneous multi-threading (SMT) can yield substantial\nperformance improvements for our optimized algorithm.\n", "versions": [{"version": "v1", "created": "Sat, 10 Apr 2010 20:56:21 GMT"}], "update_date": "2012-03-01", "authors_parsed": [["Treibig", "Jan", ""], ["Wellein", "Gerhard", ""], ["Hager", "Georg", ""]]}, {"id": "1004.2342", "submitter": "Nicolas Gast", "authors": "Nicolas Gast (INRIA Grenoble Rh\\^one-Alpes / LIG laboratoire\n  d'Informatique de Grenoble, EPFL), Bruno Gaujal (INRIA Grenoble Rh\\^one-Alpes\n  / LIG laboratoire d'Informatique de Grenoble), Jean-Yves Le Boudec (EPFL)", "title": "Mean field for Markov Decision Processes: from Discrete to Continuous\n  Optimization", "comments": null, "journal-ref": null, "doi": null, "report-no": "RR-7239, RR-7239", "categories": "cs.AI cs.PF cs.SY math.OC math.PR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We study the convergence of Markov Decision Processes made of a large number\nof objects to optimization problems on ordinary differential equations (ODE).\nWe show that the optimal reward of such a Markov Decision Process, satisfying a\nBellman equation, converges to the solution of a continuous\nHamilton-Jacobi-Bellman (HJB) equation based on the mean field approximation of\nthe Markov Decision Process. We give bounds on the difference of the rewards,\nand a constructive algorithm for deriving an approximating solution to the\nMarkov Decision Process from a solution of the HJB equations. We illustrate the\nmethod on three examples pertaining respectively to investment strategies,\npopulation dynamics control and scheduling in queues are developed. They are\nused to illustrate and justify the construction of the controlled ODE and to\nshow the gain obtained by solving a continuous HJB equation rather than a large\ndiscrete Bellman equation.\n", "versions": [{"version": "v1", "created": "Wed, 14 Apr 2010 07:56:40 GMT"}, {"version": "v2", "created": "Fri, 2 Jul 2010 14:26:32 GMT"}, {"version": "v3", "created": "Thu, 19 May 2011 07:27:54 GMT"}], "update_date": "2011-05-20", "authors_parsed": [["Gast", "Nicolas", "", "INRIA Grenoble Rh\u00f4ne-Alpes / LIG laboratoire\n  d'Informatique de Grenoble, EPFL"], ["Gaujal", "Bruno", "", "INRIA Grenoble Rh\u00f4ne-Alpes\n  / LIG laboratoire d'Informatique de Grenoble"], ["Boudec", "Jean-Yves Le", "", "EPFL"]]}, {"id": "1004.2637", "submitter": "Matthieu Moy", "authors": "Karine Altisen, Yanhong Liu, Matthieu Moy", "title": "Performance Evaluation of Components Using a Granularity-based Interface\n  Between Real-Time Calculus and Timed Automata", "comments": "QAPL 2010", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  To analyze complex and heterogeneous real-time embedded systems, recent works\nhave proposed interface techniques between real-time calculus (RTC) and timed\nautomata (TA), in order to take advantage of the strengths of each technique\nfor analyzing various components. But the time to analyze a state-based\ncomponent modeled by TA may be prohibitively high, due to the state space\nexplosion problem. In this paper, we propose a framework of granularity-based\ninterfacing to speed up the analysis of a TA modeled component. First, we\nabstract fine models to work with event streams at coarse granularity. We\nperform analysis of the component at multiple coarse granularities and then\nbased on RTC theory, we derive lower and upper bounds on arrival patterns of\nthe fine output streams using the causality closure algorithm. Our framework\ncan help to achieve tradeoffs between precision and analysis time.\n", "versions": [{"version": "v1", "created": "Thu, 15 Apr 2010 14:31:32 GMT"}], "update_date": "2010-04-16", "authors_parsed": [["Altisen", "Karine", ""], ["Liu", "Yanhong", ""], ["Moy", "Matthieu", ""]]}, {"id": "1004.3109", "submitter": "Yue Wang", "authors": "Yue Wang", "title": "Applying Stochastic Network Calculus to 802.11 Backlog and Delay\n  Analysis", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Stochastic network calculus provides an elegant way to characterize traffic\nand service processes. However, little effort has been made on applying it to\nmulti-access communication systems such as 802.11. In this paper, we take the\nfirst step to apply it to the backlog and delay analysis of an 802.11 wireless\nlocal network. In particular, we address the following questions: In applying\nstochastic network calculus, under what situations can we derive stable backlog\nand delay bounds? How to derive the backlog and delay bounds of an 802.11\nwireless node? And how tight are these bounds when compared with simulations?\nTo answer these questions, we first derive the general stability condition of a\nwireless node (not restricted to 802.11). From this, we give the specific\nstability condition of an 802.11 wireless node. Then we derive the backlog and\ndelay bounds of an 802.11 node based on an existing model of 802.11. We observe\nthat the derived bounds are loose when compared with ns-2 simulations,\nindicating that improvements are needed in the current version of stochastic\nnetwork calculus.\n", "versions": [{"version": "v1", "created": "Mon, 19 Apr 2010 07:13:00 GMT"}], "update_date": "2010-04-20", "authors_parsed": [["Wang", "Yue", ""]]}, {"id": "1004.3254", "submitter": "Vishal Goyal", "authors": "Laura De Giusti, Franco Chichizola, Marcelo Naiouf, Armando De Giusti,\n  Emilio Luque", "title": "Automatic Mapping Tasks to Cores - Evaluating AMTHA Algorithm in\n  Multicore Architectures", "comments": "http://ijcsi.org/articles/Automatic-Mapping-Tasks-to-Cores-Evaluating-AMTHA-Algorithm-in-Multicore-Architectures.php", "journal-ref": "IJCSI, Volume 7, Issue 2, March 2010", "doi": null, "report-no": null, "categories": "cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The AMTHA (Automatic Mapping Task on Heterogeneous Architectures) algorithm\nfor task-to-processors assignment and the MPAHA (Model of Parallel Algorithms\non Heterogeneous Architectures) model are presented. The use of AMTHA is\nanalyzed for multicore processor-based architectures, considering the\ncommunication model among processes in use. The results obtained in the tests\ncarried out are presented, comparing the real execution times on multicores of\na set of synthetic applications with the predictions obtained with AMTHA.\nFinally current lines of research are presented, focusing on clusters of\nmulticores and hybrid programming paradigms.\n", "versions": [{"version": "v1", "created": "Mon, 19 Apr 2010 17:42:16 GMT"}], "update_date": "2010-04-20", "authors_parsed": [["De Giusti", "Laura", ""], ["Chichizola", "Franco", ""], ["Naiouf", "Marcelo", ""], ["De Giusti", "Armando", ""], ["Luque", "Emilio", ""]]}, {"id": "1004.3560", "submitter": "Vishal Goyal", "authors": "Angel Vassilev Nikolov, Lerato Lerato", "title": "Comparison of the Performance of Two Service Disciplines for a Shared\n  Bus Multiprocessor with Private Caches", "comments": "International Journal of Computer Science Issues online at\n  http://ijcsi.org/articles/Comparison-of-the-Performance-of-Two-Service-Disciplines-for-a-Shared-Bus-Multiprocessor-with-Private-Caches.php", "journal-ref": "IJCSI, Volume 7, Issue 2, March 2010", "doi": null, "report-no": null, "categories": "cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In this paper, we compare two analytical models for evaluation of cache\ncoherence overhead of a shared bus multiprocessor with private caches. The\nmodels are based on a closed queuing network with different service\ndisciplines. We find that the priority discipline can be used as a lower-level\nbound. Some numerical results are shown graphically.\n", "versions": [{"version": "v1", "created": "Tue, 20 Apr 2010 20:21:18 GMT"}], "update_date": "2010-04-22", "authors_parsed": [["Nikolov", "Angel Vassilev", ""], ["Lerato", "Lerato", ""]]}, {"id": "1004.4286", "submitter": "Stefan Kiefer", "authors": "Tom\\'a\\v{s} Br\\'azdil and Javier Esparza and Stefan Kiefer and Michael\n  Luttenberger", "title": "Space-efficient scheduling of stochastically generated tasks", "comments": "technical report accompanying an ICALP'10 paper", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We study the problem of scheduling tasks for execution by a processor when\nthe tasks can stochastically generate new tasks. Tasks can be of different\ntypes, and each type has a fixed, known probability of generating other tasks.\nWe present results on the random variable S^sigma modeling the maximal space\nneeded by the processor to store the currently active tasks when acting under\nthe scheduler sigma. We obtain tail bounds for the distribution of S^sigma for\nboth offline and online schedulers, and investigate the expected value of\nS^sigma.\n", "versions": [{"version": "v1", "created": "Sat, 24 Apr 2010 15:17:56 GMT"}, {"version": "v2", "created": "Tue, 27 Apr 2010 12:52:46 GMT"}], "update_date": "2010-04-28", "authors_parsed": [["Br\u00e1zdil", "Tom\u00e1\u0161", ""], ["Esparza", "Javier", ""], ["Kiefer", "Stefan", ""], ["Luttenberger", "Michael", ""]]}, {"id": "1004.4431", "submitter": "Georg Hager", "authors": "Jan Treibig, Georg Hager, Gerhard Wellein", "title": "LIKWID: A lightweight performance-oriented tool suite for x86 multicore\n  environments", "comments": "10 pages, 11 figures. Some clarifications and corrections", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DC cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Exploiting the performance of today's processors requires intimate knowledge\nof the microarchitecture as well as an awareness of the ever-growing complexity\nin thread and cache topology. LIKWID is a set of command-line utilities that\naddresses four key problems: Probing the thread and cache topology of a\nshared-memory node, enforcing thread-core affinity on a program, measuring\nperformance counter metrics, and toggling hardware prefetchers. An API for\nusing the performance counting features from user code is also included. We\nclearly state the differences to the widely used PAPI interface. To demonstrate\nthe capabilities of the tool set we show the influence of thread pinning on\nperformance using the well-known OpenMP STREAM triad benchmark, and use the\naffinity and hardware counter tools to study the performance of a stencil code\nspecifically optimized to utilize shared caches on multicore chips.\n", "versions": [{"version": "v1", "created": "Mon, 26 Apr 2010 08:33:25 GMT"}, {"version": "v2", "created": "Wed, 28 Apr 2010 10:39:17 GMT"}, {"version": "v3", "created": "Wed, 30 Jun 2010 13:08:39 GMT"}], "update_date": "2010-07-01", "authors_parsed": [["Treibig", "Jan", ""], ["Hager", "Georg", ""], ["Wellein", "Gerhard", ""]]}, {"id": "1004.4709", "submitter": "Bo Tan", "authors": "Bo (Rambo) Tan, Laurent Massoulie", "title": "Optimal Content Placement for Peer-to-Peer Video-on-Demand Systems", "comments": "18 pages (double column), 6 figures", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.NI cs.DC cs.PF math.PR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In this paper, we address the problem of content placement in peer-to-peer\nsystems, with the objective of maximizing the utilization of peers' uplink\nbandwidth resources. We consider system performance under a many-user\nasymptotic. We distinguish two scenarios, namely \"Distributed Server Networks\"\n(DSN) for which requests are exogenous to the system, and \"Pure P2P Networks\"\n(PP2PN) for which requests emanate from the peers themselves. For both\nscenarios, we consider a loss network model of performance, and determine\nasymptotically optimal content placement strategies in the case of a limited\ncontent catalogue. We then turn to an alternative \"large catalogue\" scaling\nwhere the catalogue size scales with the peer population. Under this scaling,\nwe establish that storage space per peer must necessarily grow unboundedly if\nbandwidth utilization is to be maximized. Relating the system performance to\nproperties of a specific random graph model, we then identify a content\nplacement strategy and a request acceptance policy which jointly maximize\nbandwidth utilization, provided storage space per peer grows unboundedly,\nalthough arbitrarily slowly, with system size.\n", "versions": [{"version": "v1", "created": "Tue, 27 Apr 2010 04:26:40 GMT"}, {"version": "v2", "created": "Sun, 1 Aug 2010 07:52:29 GMT"}, {"version": "v3", "created": "Sat, 29 Jan 2011 14:38:27 GMT"}, {"version": "v4", "created": "Wed, 17 Aug 2011 20:17:18 GMT"}], "update_date": "2015-03-17", "authors_parsed": [["Bo", "", "", "Rambo"], ["Tan", "", ""], ["Massoulie", "Laurent", ""]]}]