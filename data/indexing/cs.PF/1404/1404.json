[{"id": "1404.0851", "submitter": "EPTCS", "authors": "Antinisca Di Marco (University of L'Aquila), Catia Trubiani\n  (University of L'Aquila)", "title": "A model-driven approach to broaden the detection of software performance\n  antipatterns at runtime", "comments": "In Proceedings FESCA 2014, arXiv:1404.0436", "journal-ref": "EPTCS 147, 2014, pp. 77-92", "doi": "10.4204/EPTCS.147.6", "report-no": null, "categories": "cs.SE cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Performance antipatterns document bad design patterns that have negative\ninfluence on system performance. In our previous work we formalized such\nantipatterns as logical predicates that predicate on four views: (i) the static\nview that captures the software elements (e.g. classes, components) and the\nstatic relationships among them; (ii) the dynamic view that represents the\ninteraction (e.g. messages) that occurs between the software entities elements\nto provide the system functionalities; (iii) the deployment view that describes\nthe hardware elements (e.g. processing nodes) and the mapping of the software\nentities onto the hardware platform; (iv) the performance view that collects\nspecific performance indices. In this paper we present a lightweight\ninfrastructure that is able to detect performance antipatterns at runtime\nthrough monitoring. The proposed approach precalculates such predicates and\nidentifies antipatterns whose static, dynamic and deployment sub-predicates are\nvalidated by the current system configuration and brings at runtime the\nverification of performance sub-predicates. The proposed infrastructure\nleverages model-driven techniques to generate probes for monitoring the\nperformance sub-predicates and detecting antipatterns at runtime.\n", "versions": [{"version": "v1", "created": "Thu, 3 Apr 2014 10:44:30 GMT"}], "update_date": "2014-04-04", "authors_parsed": [["Di Marco", "Antinisca", "", "University of L'Aquila"], ["Trubiani", "Catia", "", "University of L'Aquila"]]}, {"id": "1404.0975", "submitter": "Enrico Bibbona", "authors": "Marco Beccuti, Enrico Bibbona, Andras Horvath, Roberta Sirovich,\n  Alessio Angius, Gianfranco Balbo", "title": "Analysis of Petri Net Models through Stochastic Differential Equations", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.PF math.PR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  It is well known, mainly because of the work of Kurtz, that density dependent\nMarkov chains can be approximated by sets of ordinary differential equations\n(ODEs) when their indexing parameter grows very large. This approximation\ncannot capture the stochastic nature of the process and, consequently, it can\nprovide an erroneous view of the behavior of the Markov chain if the indexing\nparameter is not sufficiently high. Important phenomena that cannot be revealed\ninclude non-negligible variance and bi-modal population distributions. A\nless-known approximation proposed by Kurtz applies stochastic differential\nequations (SDEs) and provides information about the stochastic nature of the\nprocess. In this paper we apply and extend this diffusion approximation to\nstudy stochastic Petri nets. We identify a class of nets whose underlying\nstochastic process is a density dependent Markov chain whose indexing parameter\nis a multiplicative constant which identifies the population level expressed by\nthe initial marking and we provide means to automatically construct the\nassociated set of SDEs. Since the diffusion approximation of Kurtz considers\nthe process only up to the time when it first exits an open interval, we extend\nthe approximation by a machinery that mimics the behavior of the Markov chain\nat the boundary and allows thus to apply the approach to a wider set of\nproblems. The resulting process is of the jump-diffusion type. We illustrate by\nexamples that the jump-diffusion approximation which extends to bounded domains\ncan be much more informative than that based on ODEs as it can provide accurate\nquantity distributions even when they are multi-modal and even for relatively\nsmall population levels. Moreover, we show that the method is faster than\nsimulating the original Markov chain.\n", "versions": [{"version": "v1", "created": "Thu, 3 Apr 2014 15:34:24 GMT"}], "update_date": "2014-04-04", "authors_parsed": [["Beccuti", "Marco", ""], ["Bibbona", "Enrico", ""], ["Horvath", "Andras", ""], ["Sirovich", "Roberta", ""], ["Angius", "Alessio", ""], ["Balbo", "Gianfranco", ""]]}, {"id": "1404.2228", "submitter": "Tuan  Phung-Duc", "authors": "Tuan Phung-Duc", "title": "Batch Arrival Multiserver Queue with Setup Time", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.PF math.PR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Queues with setup time are extensively studied because they have application\nin performance evaluation of power-saving data centers. In a data center, there\nare a huge number of servers which consume a large amount of energy. In the\ncurrent technology, an idle server still consumes about 60\\% of its peak\nprocessing a job. Thus, the only way to save energy is to turn off servers\nwhich are not processing a job. However, when there are some waiting jobs, we\nhave to turn on the OFF servers. A server needs some setup time to be active\nduring which it consumes energy but cannot process a job. Therefore, there\nexists a trade-off between power consumption and delay performance. Gandhi et\nal. \\cite{Gandhi10a,Gandhi10} analyze this trade-off using an M/M/$c$ queue\nwith staggered setup (one server in setup at a time). In this paper, using an\nalternative approach, we obtain generating functions for the joint stationary\ndistribution of the number of active servers and that of jobs in the system for\na more general model with batch arrivals and state-dependent setup time. We\nfurther obtain moments for the queue size. Numerical results reveal that\nkeeping the same traffic intensity, the mean power consumption decreases with\nthe mean batch size for the case of fixed batch size. One of the main\ntheoretical contribution is a new conditional decomposition formula showing\nthat the number of waiting customers under the condition that all servers are\nbusy can be decomposed to the sum of two independent random variables where the\nfirst is the same quantity in the corresponding model without setup time while\nthe second is the number of waiting customers before an arbitrary customer.\n", "versions": [{"version": "v1", "created": "Mon, 7 Apr 2014 00:57:26 GMT"}, {"version": "v2", "created": "Sun, 18 May 2014 13:51:49 GMT"}, {"version": "v3", "created": "Sat, 12 Dec 2015 08:32:07 GMT"}], "update_date": "2015-12-15", "authors_parsed": [["Phung-Duc", "Tuan", ""]]}, {"id": "1404.2266", "submitter": "James Roberts", "authors": "Thomas Bonald and James Roberts", "title": "Enhanced Cluster Computing Performance Through Proportional Fairness", "comments": "Submitted to Performance 2014", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.PF cs.DC cs.NI", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The performance of cluster computing depends on how concurrent jobs share\nmultiple data center resource types like CPU, RAM and disk storage. Recent\nresearch has discussed efficiency and fairness requirements and identified a\nnumber of desirable scheduling objectives including so-called dominant resource\nfairness (DRF). We argue here that proportional fairness (PF), long recognized\nas a desirable objective in sharing network bandwidth between ongoing flows, is\npreferable to DRF. The superiority of PF is manifest under the realistic\nmodelling assumption that the population of jobs in progress is a stochastic\nprocess. In random traffic the strategy-proof property of DRF proves\nunimportant while PF is shown by analysis and simulation to offer a\nsignificantly better efficiency-fairness tradeoff.\n", "versions": [{"version": "v1", "created": "Tue, 8 Apr 2014 09:44:11 GMT"}], "update_date": "2014-04-10", "authors_parsed": [["Bonald", "Thomas", ""], ["Roberts", "James", ""]]}, {"id": "1404.3891", "submitter": "Xiaoxiong Zhong", "authors": "Yang Qin, Xiaoxiong Zhong, Yuanyuan Yang, Yanlin Li, Li Li", "title": "Joint Channel Assignment and Opportunistic Routing for Maximizing\n  Throughput in Cognitive Radio Networks", "comments": "5 pages, 4 figures, to appear in Proc. of IEEE GlobeCom 2014", "journal-ref": null, "doi": "10.1109/GLOCOM.2014.7037532", "report-no": null, "categories": "cs.NI cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In this paper, we consider the joint opportunistic routing and channel\nassignment problem in multi-channel multi-radio (MCMR) cognitive radio networks\n(CRNs) for improving aggregate throughput of the secondary users. We first\npresent the nonlinear programming optimization model for this joint problem,\ntaking into account the feature of CRNs-channel uncertainty. Then considering\nthe queue state of a node, we propose a new scheme to select proper forwarding\ncandidates for opportunistic routing. Furthermore, a new algorithm for\ncalculating the forwarding probability of any packet at a node is proposed,\nwhich is used to calculate how many packets a forwarder should send, so that\nthe duplicate transmission can be reduced compared with MAC-independent\nopportunistic routing & encoding (MORE) [11]. Our numerical results show that\nthe proposed scheme performs significantly better that traditional routing and\nopportunistic routing in which channel assignment strategy is employed.\n", "versions": [{"version": "v1", "created": "Tue, 15 Apr 2014 12:39:10 GMT"}, {"version": "v2", "created": "Mon, 28 Jul 2014 11:11:36 GMT"}, {"version": "v3", "created": "Sun, 12 Oct 2014 13:46:20 GMT"}, {"version": "v4", "created": "Thu, 2 Jul 2015 06:23:05 GMT"}], "update_date": "2016-11-17", "authors_parsed": [["Qin", "Yang", ""], ["Zhong", "Xiaoxiong", ""], ["Yang", "Yuanyuan", ""], ["Li", "Yanlin", ""], ["Li", "Li", ""]]}, {"id": "1404.4547", "submitter": "Jonatha Anselmi", "authors": "Jonatha Anselmi, Bruno Gaujal, Tommaso Nesti", "title": "Control of parallel non-observable queues: asymptotic equivalence and\n  optimality of periodic policies", "comments": "17 pages, 1 figure", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.PF math.OC math.PR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We consider a queueing system composed of a dispatcher that routes\ndeterministically jobs to a set of non-observable queues working in parallel.\nIn this setting, the fundamental problem is which policy should the dispatcher\nimplement to minimize the stationary mean waiting time of the incoming jobs. We\npresent a structural property that holds in the classic scaling of the system\nwhere the network demand (arrival rate of jobs) grows proportionally with the\nnumber of queues. Assuming that each queue of type $r$ is replicated $k$ times,\nwe consider a set of policies that are periodic with period $k \\sum_r p_r$ and\nsuch that exactly $p_r$ jobs are sent in a period to each queue of type $r$.\nWhen $k\\to\\infty$, our main result shows that all the policies in this set are\nequivalent, in the sense that they yield the same mean stationary waiting time,\nand optimal, in the sense that no other policy having the same aggregate\narrival rate to \\emph{all} queues of a given type can do better in minimizing\nthe stationary mean waiting time. This property holds in a strong probabilistic\nsense. Furthermore, the limiting mean waiting time achieved by our policies is\na convex function of the arrival rate in each queue, which facilitates the\ndevelopment of a further optimization aimed at solving the fundamental problem\nabove for large systems.\n", "versions": [{"version": "v1", "created": "Thu, 17 Apr 2014 14:56:53 GMT"}, {"version": "v2", "created": "Fri, 9 May 2014 12:08:26 GMT"}, {"version": "v3", "created": "Mon, 19 Jan 2015 14:10:24 GMT"}], "update_date": "2015-01-20", "authors_parsed": [["Anselmi", "Jonatha", ""], ["Gaujal", "Bruno", ""], ["Nesti", "Tommaso", ""]]}, {"id": "1404.4865", "submitter": "Huangxin Wang", "authors": "Huangxin Wang and Jean X. Zhang and Fei Li", "title": "On Time-Sensitive Revenue Management and Energy Scheduling in Green Data\n  Centers", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In this paper, we design an analytically and experimentally better online\nenergy and job scheduling algorithm with the objective of maximizing net profit\nfor a service provider in green data centers. We first study the previously\nknown algorithms and conclude that these online algorithms have provable poor\nperformance against their worst-case scenarios. To guarantee an online\nalgorithm's performance in hindsight, we design a randomized algorithm to\nschedule energy and jobs in the data centers and prove the algorithm's expected\ncompetitive ratio in various settings. Our algorithm is theoretical-sound and\nit outperforms the previously known algorithms in many settings using both real\ntraces and simulated data. An optimal offline algorithm is also implemented as\nan empirical benchmark.\n", "versions": [{"version": "v1", "created": "Fri, 18 Apr 2014 19:34:24 GMT"}, {"version": "v2", "created": "Mon, 21 Apr 2014 15:09:46 GMT"}], "update_date": "2014-04-22", "authors_parsed": [["Wang", "Huangxin", ""], ["Zhang", "Jean X.", ""], ["Li", "Fei", ""]]}, {"id": "1404.5121", "submitter": "Yanpei Liu", "authors": "Yanpei Liu and Stark C. Draper and Nam Sung Kim", "title": "SleepScale: Runtime Joint Speed Scaling and Sleep States Management for\n  Power Efficient Data Centers", "comments": "Accepted by ACM/IEEE International Symposium on Computer Architecture\n  (ISCA) 2014", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.PF cs.SY", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Power consumption in data centers has been growing significantly in recent\nyears. To reduce power, servers are being equipped with increasingly\nsophisticated power management mechanisms. Different mechanisms offer\ndramatically different trade-offs between power savings and performance\npenalties. Considering the complexity, variety, and temporally varying nature\nof the applications hosted in a typical data center, intelligently determining\nwhich power management policy to use and when is a complicated task.\n  In this paper we analyze a system model featuring both performance scaling\nand low-power states. We reveal the interplay between performance scaling and\nlow-power states via intensive simulation and analytic verification. Based on\nthe observations, we present SleepScale, a runtime power management tool\ndesigned to efficiently exploit existing power control mechanisms. At run time,\nSleepScale characterizes power consumption and quality-of-service (QoS) for\neach low-power state and frequency setting, and selects the best policy for a\ngiven QoS constraint. We evaluate SleepScale using workload traces from data\ncenters and achieve significant power savings relative to conventional power\nmanagement strategies.\n", "versions": [{"version": "v1", "created": "Mon, 21 Apr 2014 06:12:22 GMT"}], "update_date": "2014-04-22", "authors_parsed": [["Liu", "Yanpei", ""], ["Draper", "Stark C.", ""], ["Kim", "Nam Sung", ""]]}, {"id": "1404.5406", "submitter": "Shrisha Rao", "authors": "Avinash Saxena, Shrisha Rao", "title": "Degradation Analysis of Probabilistic Parallel Choice Systems", "comments": null, "journal-ref": "International Journal of Reliability, Quality and Safety\n  Engineering, vol. 21(3), June 2014", "doi": "10.1142/S0218539314500120", "report-no": null, "categories": "cs.PF math.ST stat.TH", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Degradation analysis is used to analyze the useful lifetimes of systems,\ntheir failure rates, and various other system parameters like mean time to\nfailure (MTTF), mean time between failures (MTBF), and the system failure rate\n(SFR). In many systems, certain possible parallel paths of execution that have\ngreater chances of success are preferred over others. Thus we introduce here\nthe concept of probabilistic parallel choice. We use binary and $n$-ary\nprobabilistic choice operators in describing the selections of parallel paths.\nThese binary and $n$-ary probabilistic choice operators are considered so as to\nrepresent the complete system (described as a series-parallel system) in terms\nof the probabilities of selection of parallel paths and their relevant\nparameters. Our approach allows us to derive new and generalized formulae for\nsystem parameters like MTTF, MTBF, and SFR. We use a generalized exponential\ndistribution, allowing distinct installation times for individual components,\nand use this model to derive expressions for such system parameters.\n", "versions": [{"version": "v1", "created": "Tue, 22 Apr 2014 07:40:51 GMT"}], "update_date": "2014-04-23", "authors_parsed": [["Saxena", "Avinash", ""], ["Rao", "Shrisha", ""]]}, {"id": "1404.6218", "submitter": "Ashkan Tousimojarad Mr", "authors": "Ashkan Tousimojarad and Wim Vanderbauwhede", "title": "A Parallel Task-based Approach to Linear Algebra", "comments": "Final version as appeared in \"dx.doi.org/10.1109/ISPDC.2014.11\"", "journal-ref": "Tousimojarad, A., Vanderbauwhede, W.: A parallel task-based\n  approach to linear algebra. In: Parallel and Distributed Computing (ISPDC),\n  2014 IEEE 13th International Symposium on. pp. 59-66. IEEE (2014)", "doi": "10.1109/ISPDC.2014.11", "report-no": null, "categories": "cs.DC cs.PF cs.PL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Processors with large numbers of cores are becoming commonplace. In order to\ntake advantage of the available resources in these systems, the programming\nparadigm has to move towards increased parallelism. However, increasing the\nlevel of concurrency in the program does not necessarily lead to better\nperformance. Parallel programming models have to provide flexible ways of\ndefining parallel tasks and at the same time, efficiently managing the created\ntasks. OpenMP is a widely accepted programming model for shared-memory\narchitectures. In this paper we highlight some of the drawbacks in the OpenMP\ntasking approach, and propose an alternative model based on the Glasgow\nParallel Reduction Machine (GPRM) programming framework. As the main focus of\nthis study, we deploy our model to solve a fundamental linear algebra problem,\nLU factorisation of sparse matrices. We have used the SparseLU benchmark from\nthe BOTS benchmark suite, and compared the results obtained from our model to\nthose of the OpenMP tasking approach. The TILEPro64 system has been used to run\nthe experiments. The results are very promising, not only because of the\nperformance improvement for this particular problem, but also because they\nverify the task management efficiency, stability, and flexibility of our model,\nwhich can be applied to solve problems in future many-core systems.\n", "versions": [{"version": "v1", "created": "Thu, 24 Apr 2014 18:39:30 GMT"}, {"version": "v2", "created": "Fri, 3 Oct 2014 14:53:58 GMT"}, {"version": "v3", "created": "Mon, 6 Oct 2014 15:46:24 GMT"}], "update_date": "2014-10-07", "authors_parsed": [["Tousimojarad", "Ashkan", ""], ["Vanderbauwhede", "Wim", ""]]}, {"id": "1404.6687", "submitter": "Yin Sun", "authors": "Shengbo Chen, Yin Sun, Ulas C. Kozat, Longbo Huang, Prasun Sinha,\n  Guanfeng Liang, Xin Liu, Ness B. Shroff", "title": "When Queueing Meets Coding: Optimal-Latency Data Retrieving Scheme in\n  Storage Clouds", "comments": "Original accepted by IEEE Infocom 2014, 9 pages. Some statements in\n  the Infocom paper are corrected", "journal-ref": null, "doi": "10.1109/INFOCOM.2014.6848034", "report-no": null, "categories": "cs.IT cs.DC cs.NI cs.PF math.IT", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In this paper, we study the problem of reducing the delay of downloading data\nfrom cloud storage systems by leveraging multiple parallel threads, assuming\nthat the data has been encoded and stored in the clouds using fixed rate\nforward error correction (FEC) codes with parameters (n, k). That is, each file\nis divided into k equal-sized chunks, which are then expanded into n chunks\nsuch that any k chunks out of the n are sufficient to successfully restore the\noriginal file. The model can be depicted as a multiple-server queue with\narrivals of data retrieving requests and a server corresponding to a thread.\nHowever, this is not a typical queueing model because a server can terminate\nits operation, depending on when other servers complete their service (due to\nthe redundancy that is spread across the threads). Hence, to the best of our\nknowledge, the analysis of this queueing model remains quite uncharted.\n  Recent traces from Amazon S3 show that the time to retrieve a fixed size\nchunk is random and can be approximated as a constant delay plus an i.i.d.\nexponentially distributed random variable. For the tractability of the\ntheoretical analysis, we assume that the chunk downloading time is i.i.d.\nexponentially distributed. Under this assumption, we show that any\nwork-conserving scheme is delay-optimal among all on-line scheduling schemes\nwhen k = 1. When k > 1, we find that a simple greedy scheme, which allocates\nall available threads to the head of line request, is delay optimal among all\non-line scheduling schemes. We also provide some numerical results that point\nto the limitations of the exponential assumption, and suggest further research\ndirections.\n", "versions": [{"version": "v1", "created": "Sat, 26 Apr 2014 21:32:13 GMT"}], "update_date": "2016-11-17", "authors_parsed": [["Chen", "Shengbo", ""], ["Sun", "Yin", ""], ["Kozat", "Ulas C.", ""], ["Huang", "Longbo", ""], ["Sinha", "Prasun", ""], ["Liang", "Guanfeng", ""], ["Liu", "Xin", ""], ["Shroff", "Ness B.", ""]]}, {"id": "1404.6924", "submitter": "Maria Vlasiou", "authors": "Maria Vlasiou, Jiheng Zhang, Bert Zwart", "title": "Separation of timescales in a two-layered network", "comments": "8 pages, 2 figures, 1 table, ITC 24 (2012)", "journal-ref": "Proceedings of the 24th International Teletraffic Congress,\n  Article No.: 32, 2012", "doi": null, "report-no": null, "categories": "math.PR cs.PF", "license": "http://creativecommons.org/licenses/by-nc-sa/3.0/", "abstract": "  We investigate a computer network consisting of two layers occurring in, for\nexample, application servers. The first layer incorporates the arrival of jobs\nat a network of multi-server nodes, which we model as a many-server Jackson\nnetwork. At the second layer, active servers at these nodes act now as\ncustomers who are served by a common CPU. Our main result shows a separation of\ntime scales in heavy traffic: the main source of randomness occurs at the\n(aggregate) CPU layer; the interactions between different types of nodes at the\nother layer is shown to converge to a fixed point at a faster time scale; this\nalso yields a state-space collapse property. Apart from these fundamental\ninsights, we also obtain an explicit approximation for the joint law of the\nnumber of jobs in the system, which is provably accurate for heavily loaded\nsystems and performs numerically well for moderately loaded systems. The\nobtained results for the model under consideration can be applied to\nthread-pool dimensioning in application servers, while the technique seems\napplicable to other layered systems too.\n", "versions": [{"version": "v1", "created": "Mon, 28 Apr 2014 10:45:03 GMT"}], "update_date": "2014-04-29", "authors_parsed": [["Vlasiou", "Maria", ""], ["Zhang", "Jiheng", ""], ["Zwart", "Bert", ""]]}]