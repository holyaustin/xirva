[{"id": "1005.0178", "submitter": "Pui King Wong", "authors": "Pui King Wong, Dongjie Yin, Tony T. Lee", "title": "Analysis of Non-Persistent CSMA Protocols with Exponential Backoff\n  Scheduling", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.NI cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This paper studies the performance of Non-persistent CSMA/CA protocols with\nK-Exponential Backoff scheduling algorithms. A multi-queue single-server system\nis proposed to model multiple access networks. The input buffer of each access\nnode is modeled as a Geo/G/1 queue, and the service time distribution of\nhead-of-line packets is derived from the Markov chain of underlying scheduling\nalgorithm. The main results include the complete analysis of the throughput and\ndelay distribution, from which we obtained stable regions with respect to the\nthroughput and bounded mean delay of the Geometric Retransmission and\nExponential Backoff schemes. We show that the throughput stable region of\nGeometric Retransmission will vanish as the number of nodes n \\rightarrow\n\\infty; thus, it is inherently unstable for large n. In contrast to Geometric\nRetransmission, the throughput stable region of Exponential Backoff can be\nobtained for an infinite population. We found that the bounded mean delay\nregion of Geometric Retransmission remains the same as its throughput stable\nregion. Besides, the variance of service time of Exponential Backoff can be\nunbounded due to the capture effect; thus, its bounded delay region is only a\nsub-set of its throughput stable region. Analytical results presented in this\npaper are all verified by simulation.\n", "versions": [{"version": "v1", "created": "Mon, 3 May 2010 03:07:59 GMT"}, {"version": "v2", "created": "Mon, 6 Dec 2010 08:06:45 GMT"}], "update_date": "2010-12-07", "authors_parsed": [["Wong", "Pui King", ""], ["Yin", "Dongjie", ""], ["Lee", "Tony T.", ""]]}, {"id": "1005.0806", "submitter": "Andy Yoo", "authors": "Andy B. Yoo and Yang Liu and Sheila Vaidya and Stephen Poole", "title": "A New Benchmark For Evaluation Of Graph-Theoretic Algorithms", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.PF", "license": "http://creativecommons.org/licenses/publicdomain/", "abstract": "  We propose a new graph-theoretic benchmark in this paper. The benchmark is\ndeveloped to address shortcomings of an existing widely-used graph benchmark.\nWe thoroughly studied a large number of traditional and contemporary graph\nalgorithms reported in the literature to have clear understanding of their\nalgorithmic and run-time characteristics. Based on this study, we designed a\nsuite of kernels, each of which represents a specific class of graph\nalgorithms. The kernels are designed to capture the typical run-time behavior\nof target algorithms accurately, while limiting computational and spatial\noverhead to ensure its computation finishes in reasonable time. We expect that\nthe developed benchmark will serve as a much needed tool for evaluating\ndifferent architectures and programming models to run graph algorithms.\n", "versions": [{"version": "v1", "created": "Wed, 5 May 2010 18:33:28 GMT"}], "update_date": "2010-05-06", "authors_parsed": [["Yoo", "Andy B.", ""], ["Liu", "Yang", ""], ["Vaidya", "Sheila", ""], ["Poole", "Stephen", ""]]}, {"id": "1005.1992", "submitter": "Secretary Aircc Journal", "authors": "G.F. Ali Ahammed and Reshma Banu (Ghousia college of Engg.Ramanagaram,\n  India)", "title": "Analyzing the Performance of Active Queue Management Algorithms", "comments": "19 Pages, IJCNC 2010", "journal-ref": "International Journal of Computer Networks & Communications 2.2\n  (2010) 1-19", "doi": "10.5121/ijcnc.2010.2201", "report-no": null, "categories": "cs.PF", "license": "http://creativecommons.org/licenses/by-nc-sa/3.0/", "abstract": "  Congestion is an important issue which researchers focus on in the\nTransmission Control Protocol (TCP) network environment. To keep the stability\nof the whole network, congestion control algorithms have been extensively\nstudied. Queue management method employed by the routers is one of the\nimportant issues in the congestion control study. Active queue management (AQM)\nhas been proposed as a router-based mechanism for early detection of congestion\ninside the network. In this paper we analyzed several active queue management\nalgorithms with respect to their abilities of maintaining high resource\nutilization, identifying and restricting disproportionate bandwidth usage, and\ntheir deployment complexity. We compare the performance of FRED, BLUE, SFB, and\nCHOKe based on simulation results, using RED and Drop Tail as the evaluation\nbaseline. The characteristics of different algorithms are also discussed and\ncompared. Simulation is done by using Network Simulator(NS2) and the graphs are\ndrawn using X- graph.\n", "versions": [{"version": "v1", "created": "Wed, 12 May 2010 05:29:40 GMT"}], "update_date": "2010-07-15", "authors_parsed": [["Ahammed", "G. F. Ali", "", "Ghousia college of Engg.Ramanagaram,\n  India"], ["Banu", "Reshma", "", "Ghousia college of Engg.Ramanagaram,\n  India"]]}, {"id": "1005.2581", "submitter": "Kamran Karimi", "authors": "Kamran Karimi, Neil G. Dickson, and Firas Hamze", "title": "A Performance Comparison of CUDA and OpenCL", "comments": "12 pages, 6 Tables, 5 Figures", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.PF cs.DC physics.comp-ph", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  CUDA and OpenCL are two different frameworks for GPU programming. OpenCL is\nan open standard that can be used to program CPUs, GPUs, and other devices from\ndifferent vendors, while CUDA is specific to NVIDIA GPUs. Although OpenCL\npromises a portable language for GPU programming, its generality may entail a\nperformance penalty. In this paper, we use complex, near-identical kernels from\na Quantum Monte Carlo application to compare the performance of CUDA and\nOpenCL. We show that when using NVIDIA compiler tools, converting a CUDA kernel\nto an OpenCL kernel involves minimal modifications. Making such a kernel\ncompile with ATI's build tools involves more modifications. Our performance\ntests measure and compare data transfer times to and from the GPU, kernel\nexecution times, and end-to-end application execution times for both CUDA and\nOpenCL.\n", "versions": [{"version": "v1", "created": "Fri, 14 May 2010 17:41:53 GMT"}, {"version": "v2", "created": "Thu, 12 Aug 2010 18:25:57 GMT"}, {"version": "v3", "created": "Mon, 16 May 2011 16:39:03 GMT"}], "update_date": "2011-05-17", "authors_parsed": [["Karimi", "Kamran", ""], ["Dickson", "Neil G.", ""], ["Hamze", "Firas", ""]]}, {"id": "1005.2898", "submitter": "Zoran Hadzi-Velkov", "authors": "Zoran Hadzi-Velkov and Boris Spasenovski", "title": "Saturation Throughput - Delay Analysis of IEEE 802.11 DCF in Fading\n  Channel", "comments": "Proceedings of the IEEE International Conference on Communications\n  2003 (ICC 2003), 6 pages", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.NI cs.IT cs.PF math.IT", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In this paper, we analytically analyzed the impact of an error-prone channel\nover all performance measures in a trafficsaturated IEEE 802.11 WLAN. We\ncalculated station's transmission probability by using the modified Markov\nchain model of the backoff window size that considers the frame-error rates and\nmaximal allowable number of retransmission attempts. The frame error rate has a\nsignificant impact over theoretical throughput, mean frame delay, and discard\nprobability. The peak throughput of a WLAN is insensitive of the maximal number\nof retransmissions. Discard probabilities are insensitive to the station access\nmethod, Basic or RTS/CTS.\n", "versions": [{"version": "v1", "created": "Mon, 17 May 2010 12:08:14 GMT"}], "update_date": "2010-05-18", "authors_parsed": [["Hadzi-Velkov", "Zoran", ""], ["Spasenovski", "Boris", ""]]}, {"id": "1005.5241", "submitter": "Jalil Boukhobza", "authors": "Jalil Boukhobza (LESTER), Timsit Claude (PRISM)", "title": "Simulation de traces r\\'eelles d'E/S disque de PC", "comments": null, "journal-ref": "RenPar'17 / SympA'2006 / CFSE'5 / JC'2006, Canet en Roussillon :\n  France (2006)", "doi": null, "report-no": null, "categories": "cs.PF cs.OS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Under Windows operating system, existing I/O benchmarking tools does not\nallow a developer to efficiently define a file access strategy according to the\napplications' constraints. This is essentially due to the fact that the\nexisting tools do allow only a restricted set of I/O workloads that does not\ngenerally correspond to the target applications. To cope with this problem, we\ndesigned and implemented a precise I/O simulator allowing to simulate whatever\nreal I/O trace on a given defined architecture, and in which most of file and\ndisk cache strategies, their interactions and the detailed storage system\narchitecture are implemented. Simulation results on different workloads and\narchitectures show a very high degree of precision. In fact, the mean error\nrate as compared to real measures is of about 6% with a maximum of 10% on\nglobal throughput.\n", "versions": [{"version": "v1", "created": "Fri, 28 May 2010 08:55:12 GMT"}], "update_date": "2010-07-26", "authors_parsed": [["Boukhobza", "Jalil", "", "LESTER"], ["Claude", "Timsit", "", "PRISM"]]}]