[{"id": "0705.1915", "submitter": "John Kouvakis", "authors": "John Kouvakis, Fotis Georgatos", "title": "A Technical Report On Grid Benchmarking using ATLAS V.O", "comments": "29 pages, 35 figures, including charts and results of benchmarking\n  over the grid, ATLAS V.O", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.PF", "license": null, "abstract": "  Grids include heterogeneous resources, which are based on different hardware\nand software architectures or components. In correspondence with this diversity\nof the infrastructure, the execution time of any single job, as well as the\ntotal grid performance can both be affected substantially, which can be\ndemonstrated by measurements. Running a simple benchmarking suite can show this\nheterogeneity and give us results about the differences over the grid sites.\n", "versions": [{"version": "v1", "created": "Mon, 14 May 2007 11:39:52 GMT"}, {"version": "v2", "created": "Fri, 25 May 2007 07:56:22 GMT"}, {"version": "v3", "created": "Sun, 3 Jun 2007 06:57:27 GMT"}], "update_date": "2007-06-13", "authors_parsed": [["Kouvakis", "John", ""], ["Georgatos", "Fotis", ""]]}, {"id": "0705.1939", "submitter": "Hamed Haddadi MSc MIEE", "authors": "Richard G. Clegg, Hamed Haddadi, Raul Landa, Miguel Rio", "title": "Towards Informative Statistical Flow Inversion", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.NI cs.PF", "license": null, "abstract": "  A problem which has recently attracted research attention is that of\nestimating the distribution of flow sizes in internet traffic. On high traffic\nlinks it is sometimes impossible to record every packet. Researchers have\napproached the problem of estimating flow lengths from sampled packet data in\ntwo separate ways. Firstly, different sampling methodologies can be tried to\nmore accurately measure the desired system parameters. One such method is the\nsample-and-hold method where, if a packet is sampled, all subsequent packets in\nthat flow are sampled. Secondly, statistical methods can be used to ``invert''\nthe sampled data and produce an estimate of flow lengths from a sample.\n  In this paper we propose, implement and test two variants on the\nsample-and-hold method. In addition we show how the sample-and-hold method can\nbe inverted to get an estimation of the genuine distribution of flow sizes.\nExperiments are carried out on real network traces to compare standard packet\nsampling with three variants of sample-and-hold. The methods are compared for\ntheir ability to reconstruct the genuine distribution of flow sizes in the\ntraffic.\n", "versions": [{"version": "v1", "created": "Mon, 14 May 2007 13:14:33 GMT"}], "update_date": "2007-05-23", "authors_parsed": [["Clegg", "Richard G.", ""], ["Haddadi", "Hamed", ""], ["Landa", "Raul", ""], ["Rio", "Miguel", ""]]}, {"id": "0705.2065", "submitter": "Aaron Harwood", "authors": "Aaron Harwood, Olga Ohrimenko", "title": "Mean Field Models of Message Throughput in Dynamic Peer-to-Peer Systems", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DC cs.PF", "license": null, "abstract": "  The churn rate of a peer-to-peer system places direct limitations on the rate\nat which messages can be effectively communicated to a group of peers. These\nlimitations are independent of the topology and message transmission latency.\nIn this paper we consider a peer-to-peer network, based on the Engset model,\nwhere peers arrive and depart independently at random. We show how the arrival\nand departure rates directly limit the capacity for message streams to be\nbroadcast to all other peers, by deriving mean field models that accurately\ndescribe the system behavior. Our models cover the unit and more general k\nbuffer cases, i.e. where a peer can buffer at most k messages at any one time,\nand we give results for both single and multi-source message streams. We define\ncoverage rate as peer-messages per unit time, i.e. the rate at which a number\nof peers receive messages, and show that the coverage rate is limited by the\nchurn rate and buffer size. Our theory introduces an Instantaneous Message\nExchange (IME) model and provides a template for further analysis of more\ncomplicated systems. Using the IME model, and assuming random processes, we\nhave obtained very accurate equations of the system dynamics in a variety of\ninteresting cases, that allow us to tune a peer-to-peer system. It remains to\nbe seen if we can maintain this accuracy for general processes and when\napplying a non-instantaneous model.\n", "versions": [{"version": "v1", "created": "Tue, 15 May 2007 01:42:44 GMT"}], "update_date": "2007-05-23", "authors_parsed": [["Harwood", "Aaron", ""], ["Ohrimenko", "Olga", ""]]}, {"id": "0705.2819", "submitter": "Preetam Patil", "authors": "Preetam Patil, Varsha Apte (Department of CSE, IIT-Bombay, India)", "title": "An Autonomous Distributed Admission Control Scheme for IEEE 802.11 DCF", "comments": "Submitted to QShine'07", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.NI cs.PF", "license": null, "abstract": "  Admission control as a mechanism for providing QoS requires an accurate\ndescription of the requested flow as well as already admitted flows. Since\n802.11 WLAN capacity is shared between flows belonging to all stations,\nadmission control requires knowledge of all flows in the WLAN. Further,\nestimation of the load-dependent WLAN capacity through analytical model\nrequires inputs about channel data rate, payload size and the number of\nstations. These factors combined point to a centralized admission control\nwhereas for 802.11 DCF it is ideally performed in a distributed manner. The use\nof measurements from the channel avoids explicit inputs about the state of the\nchannel described above. BUFFET, a model based measurement-assisted distributed\nadmission control scheme for DCF proposed in this paper relies on measurements\nto derive model inputs and predict WLAN saturation, thereby maintaining average\ndelay within acceptable limits. Being measurement based, it adapts to a\ncombination of data rates and payload sizes, making it completely autonomous\nand distributed. Performance analysis using OPNET simulations suggests that\nBUFFET is able to ensure average delay under 7ms at a near-optimal throughput.\n", "versions": [{"version": "v1", "created": "Sat, 19 May 2007 13:54:25 GMT"}], "update_date": "2007-05-23", "authors_parsed": [["Patil", "Preetam", "", "Department of CSE, IIT-Bombay, India"], ["Apte", "Varsha", "", "Department of CSE, IIT-Bombay, India"]]}, {"id": "0705.3015", "submitter": "Erik Schnetter", "authors": "Dylan Stark, Gabrielle Allen, Tom Goodale, Thomas Radke, Erik\n  Schnetter", "title": "An Extensible Timing Infrastructure for Adaptive Large-scale\n  Applications", "comments": null, "journal-ref": "In Roman Wyrzykowski et al., editors, Parallel Processing and\n  Applied Mathematics (PPAM), 2007, Gdansk, Poland, volume 4967 of Lecture\n  Notes in Computer Science (LNCS), pages 1170-1179. Springer, 2007.", "doi": null, "report-no": null, "categories": "cs.PF cs.DC", "license": null, "abstract": "  Real-time access to accurate and reliable timing information is necessary to\nprofile scientific applications, and crucial as simulations become increasingly\ncomplex, adaptive, and large-scale. The Cactus Framework provides flexible and\nextensible capabilities for timing information through a well designed\ninfrastructure and timing API. Applications built with Cactus automatically\ngain access to built-in timers, such as gettimeofday and getrusage,\nsystem-specific hardware clocks, and high-level interfaces such as PAPI. We\ndescribe the Cactus timer interface, its motivation, and its implementation. We\nthen demonstrate how this timing information can be used by an example\nscientific application to profile itself, and to dynamically adapt itself to a\nchanging environment at run time.\n", "versions": [{"version": "v1", "created": "Mon, 21 May 2007 19:00:25 GMT"}], "update_date": "2009-04-16", "authors_parsed": [["Stark", "Dylan", ""], ["Allen", "Gabrielle", ""], ["Goodale", "Tom", ""], ["Radke", "Thomas", ""], ["Schnetter", "Erik", ""]]}]