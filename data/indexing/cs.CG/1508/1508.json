[{"id": "1508.00060", "submitter": "Shankar Sastry", "authors": "Shankar Prasad Sastry", "title": "Snow Globe: An Advancing-Front 3D Delaunay Mesh Refinement Algorithm", "comments": "incorrect proofs; does not consider an important case because of\n  which the proofs are wrong", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.CG cs.DS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  <incorrect proofs; does not consider an important case because of which the\nproofs are wrong. The paper was withdrawn from submission> One of the\nobjectives of a Delaunay mesh refinement algorithm is to produce meshes with\ntetrahedral elements having a bounded aspect ratio, which is the ratio between\nthe radius of the circumscribing and inscribing spheres. The refinement is\ncarried out by inserting additional Steiner vertices inside the circumsphere of\na poor-quality tetrahedron (to remove the tetrahedron) at a sufficient distance\nfrom existing vertices to guarantee the termination and size optimality of the\nalgorithm. This technique eliminates tetrahedra whose ratio of the radius of\nthe circumscribing sphere and the shortest side, the radius-edge ratio, is\nlarge. Slivers, almost-planar tetrahedra, which have a small radius-edge ratio,\nbut a large aspect ratio, are avoided by small random perturbations of the\nSteiner vertices to improve the aspect ratio. Additionally, geometric\nconstraints, called \"petals\", have been shown to produce smaller high-quality\nmeshes in 2D Delaunay refinement algorithms. In this paper, we develop a\ndeterministic nondifferentiable optimization routine to place the Steiner\nvertex inside geometrical constraints that we call \"snow globes\" for 3D\nDelaunay refinement. We explore why the geometrical constraints and an ordering\non processing of poor-quality tetrahedra result in smaller meshes. The stricter\nanalysis provides an improved constant associated with the size optimality of\nthe generated meshes. Aided by the analysis, we present a modified algorithm to\nhandle boundary encroachment. The final algorithm behaves like an\nadvancing-front algorithms that are commonly used for quadrilateral and\nhexahedral meshing.\n", "versions": [{"version": "v1", "created": "Sat, 1 Aug 2015 00:33:12 GMT"}, {"version": "v2", "created": "Mon, 25 Jun 2018 05:28:17 GMT"}, {"version": "v3", "created": "Sat, 4 Aug 2018 22:50:20 GMT"}], "update_date": "2018-08-07", "authors_parsed": [["Sastry", "Shankar Prasad", ""]]}, {"id": "1508.00396", "submitter": "Gary Pui-Tung Choi", "authors": "Gary Pui-Tung Choi, Lok Ming Lui", "title": "A Linear Formulation for Disk Conformal Parameterization of\n  Simply-Connected Open Surfaces", "comments": null, "journal-ref": "Advances in Computational Mathematics 44, 87-114 (2018)", "doi": "10.1007/s10444-017-9536-x", "report-no": null, "categories": "cs.CG cs.GR math.DG", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Surface parameterization is widely used in computer graphics and geometry\nprocessing. It simplifies challenging tasks such as surface registrations,\nmorphing, remeshing and texture mapping. In this paper, we present an efficient\nalgorithm for computing the disk conformal parameterization of simply-connected\nopen surfaces. A double covering technique is used to turn a simply-connected\nopen surface into a genus-0 closed surface, and then a fast algorithm for\nparameterization of genus-0 closed surfaces can be applied. The symmetry of the\ndouble covered surface preserves the efficiency of the computation. A planar\nparameterization can then be obtained with the aid of a M\\\"obius transformation\nand the stereographic projection. After that, a normalization step is applied\nto guarantee the circular boundary. Finally, we achieve a bijective disk\nconformal parameterization by a composition of quasi-conformal mappings.\nExperimental results demonstrate a significant improvement in the computational\ntime by over 60%. At the same time, our proposed method retains comparable\naccuracy, bijectivity and robustness when compared with the state-of-the-art\napproaches. Applications to texture mapping are presented for illustrating the\neffectiveness of our proposed algorithm.\n", "versions": [{"version": "v1", "created": "Mon, 3 Aug 2015 12:25:25 GMT"}, {"version": "v2", "created": "Tue, 2 Aug 2016 03:22:22 GMT"}], "update_date": "2020-02-10", "authors_parsed": [["Choi", "Gary Pui-Tung", ""], ["Lui", "Lok Ming", ""]]}, {"id": "1508.00510", "submitter": "Nicolas Schabanel", "authors": "Cody Geary, Pierre-\\'Etienne Meunier, Nicolas Schabanel, Shinnosuke\n  Seki", "title": "Proving the Turing Universality of Oritatami Co-Transcriptional Folding\n  (Full Text)", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.CG cs.CC cs.ET", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We study the oritatami model for molecular co-transcriptional folding. In\noritatami systems, the transcript (the \"molecule\") folds as it is synthesized\n(transcribed), according to a local energy optimisation process, which is\nsimilar to how actual biomolecules such as RNA fold into complex shapes and\nfunctions as they are transcribed. We prove that there is an oritatami system\nembedding universal computation in the folding process itself.\n  Our result relies on the development of a generic toolbox, which is easily\nreusable for future work to design complex functions in oritatami systems. We\ndevelop \"low-level\" tools that allow to easily spread apart the encoding of\ndifferent \"functions\" in the transcript, even if they are required to be\napplied at the same geometrical location in the folding. We build upon these\nlow-level tools, a programming framework with increasing levels of abstraction,\nfrom encoding of instructions into the transcript to logical analysis. This\nframework is similar to the hardware-to-algorithm levels of abstractions in\nstandard algorithm theory. These various levels of abstractions allow to\nseparate the proof of correctness of the global behavior of our system, from\nthe proof of correctness of its implementation. Thanks to this framework, we\nwere able to computerize the proof of correctness of its implementation and\nproduce certificates, in the form of a relatively small number of proof trees,\ncompact and easily readable and checkable by human, while encapsulating huge\ncase enumerations. We believe this particular type of certificates can be\ngeneralized to other discrete dynamical systems, where proofs involve large\ncase enumerations as well.\n", "versions": [{"version": "v1", "created": "Mon, 3 Aug 2015 18:24:41 GMT"}, {"version": "v2", "created": "Mon, 14 Mar 2016 11:43:39 GMT"}, {"version": "v3", "created": "Fri, 13 Jul 2018 16:10:22 GMT"}], "update_date": "2018-07-16", "authors_parsed": [["Geary", "Cody", ""], ["Meunier", "Pierre-\u00c9tienne", ""], ["Schabanel", "Nicolas", ""], ["Seki", "Shinnosuke", ""]]}, {"id": "1508.01076", "submitter": "Peter Palfrader", "authors": "Oswin Aichholzer and Therese Biedl and Thomas Hackl and Martin Held\n  and Stefan Huber and Peter Palfrader and Birgit Vogtenhuber", "title": "Representing Directed Trees as Straight Skeletons", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.CG", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The straight skeleton of a polygon is the geometric graph obtained by tracing\nthe vertices during a mitered offsetting process. It is known that the straight\nskeleton of a simple polygon is a tree, and one can naturally derive directions\non the edges of the tree from the propagation of the shrinking process.\n  In this paper, we ask the reverse question: Given a tree with directed edges,\ncan it be the straight skeleton of a polygon? And if so, can we find a suitable\nsimple polygon? We answer these questions for all directed trees where the\norder of edges around each node is fixed.\n", "versions": [{"version": "v1", "created": "Wed, 5 Aug 2015 13:58:59 GMT"}], "update_date": "2015-08-06", "authors_parsed": [["Aichholzer", "Oswin", ""], ["Biedl", "Therese", ""], ["Hackl", "Thomas", ""], ["Held", "Martin", ""], ["Huber", "Stefan", ""], ["Palfrader", "Peter", ""], ["Vogtenhuber", "Birgit", ""]]}, {"id": "1508.01097", "submitter": "Vincent Froese", "authors": "Vincent Froese, Iyad Kanj, Andr\\'e Nichterlein, Rolf Niedermeier", "title": "Finding Points in General Position", "comments": "17 pages, improved problem kernel wrt. dual parameter h, added a\n  figure", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.CG", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We study computational aspects of the General Position Subset Selection\nproblem defined as follows: Given a set of points in the plane, find a\nmaximum-cardinality subset of points in general position. We prove that General\nPosition Subset Selection is NP-hard, APX-hard, and give several\nfixed-parameter tractability results as well as a subexponential running time\nlower bound based on the Exponential Time Hypothesis.\n", "versions": [{"version": "v1", "created": "Wed, 5 Aug 2015 15:06:24 GMT"}, {"version": "v2", "created": "Thu, 12 May 2016 08:39:46 GMT"}, {"version": "v3", "created": "Tue, 6 Jun 2017 12:48:25 GMT"}], "update_date": "2017-06-07", "authors_parsed": [["Froese", "Vincent", ""], ["Kanj", "Iyad", ""], ["Nichterlein", "Andr\u00e9", ""], ["Niedermeier", "Rolf", ""]]}, {"id": "1508.02349", "submitter": "Isaac Mabillard", "authors": "Isaac Mabillard, Uli Wagner", "title": "Eliminating Higher-Multiplicity Intersections, I. A Whitney Trick for\n  Tverberg-Type Problems", "comments": "46 pages, 14 figures", "journal-ref": null, "doi": null, "report-no": null, "categories": "math.GT cs.CG cs.DM math.CO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Motivated by topological Tverberg-type problems and by classical results\nabout embeddings (maps without double points), we study the question whether a\nfinite simplicial complex K can be mapped into R^d without triple, quadruple,\nor, more generally, r-fold points. Specifically, we are interested in maps f\nfrom K to R^d that have no r-Tverberg points, i.e., no r-fold points with\npreimages in r pairwise disjoint simplices of K, and we seek necessary and\nsufficient conditions for the existence of such maps.\n  We present a higher-multiplicity analogue of the completeness of the Van\nKampen obstruction for embeddability in twice the dimension. Specifically, we\nshow that under suitable restrictions on the dimensions, a well-known Deleted\nProduct Criterion (DPC) is not only necessary but also sufficient for the\nexistence of maps without r-Tverberg points. Our main technical tool is a\nhigher-multiplicity version of the classical Whitney trick.\n  An important guiding idea for our work was that sufficiency of the DPC,\ntogether with an old result of Ozaydin on the existence of equivariant maps,\nmight yield an approach to disproving the remaining open cases of the\nlong-standing topological Tverberg conjecture. Unfortunately, our proof of the\nsufficiency of the DPC requires a \"codimension 3\" proviso, which is not\nsatisfied for when K is the N-simplex.\n  Recently, Frick found an extremely elegant way to overcome this last\n\"codimension 3\" obstacle and to construct counterexamples to the topological\nTverberg conjecture for d at least 3r+1 (r not a prime power). Here, we present\na different construction that yields counterexamples for d at least 3r (r not a\nprime power).\n", "versions": [{"version": "v1", "created": "Mon, 10 Aug 2015 18:37:06 GMT"}], "update_date": "2015-08-13", "authors_parsed": [["Mabillard", "Isaac", ""], ["Wagner", "Uli", ""]]}, {"id": "1508.02477", "submitter": "Indranil Banerjee", "authors": "Indranil Banerjee, Dana Richards", "title": "Computing Maximal Layers Of Points in $E^{f(n)}$", "comments": "13 pages, submitted to LATIN 2016", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.CG cs.DS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In this paper we present a randomized algorithm for computing the collection\nof maximal layers for a point set in $E^{k}$ ($k = f(n)$). The input to our\nalgorithm is a point set $P = \\{p_1,...,p_n\\}$ with $p_i \\in E^{k}$. The\nproposed algorithm achieves a runtime of $O\\left(kn^{2 - {1 \\over \\log{k}} +\n\\log_k{\\left(1 + {2 \\over {k+1}}\\right)}}\\log{n}\\right)$ when $P$ is a random\norder and a runtime of $O(k^2 n^{3/2 + (\\log_{k}{(k-1)})/2}\\log{n})$ for an\narbitrary $P$. Both bounds hold in expectation. Additionally, the run time is\nbounded by $O(kn^2)$ in the worst case. This is the first non-trivial algorithm\nwhose run-time remains polynomial whenever $f(n)$ is bounded by some polynomial\nin $n$ while remaining sub-quadratic in $n$ for constant $k$. The algorithm is\nimplemented using a new data-structure for storing and answering dominance\nqueries over the set of incomparable points.\n", "versions": [{"version": "v1", "created": "Tue, 11 Aug 2015 03:21:06 GMT"}, {"version": "v2", "created": "Tue, 10 Nov 2015 21:45:18 GMT"}], "update_date": "2015-11-12", "authors_parsed": [["Banerjee", "Indranil", ""], ["Richards", "Dana", ""]]}, {"id": "1508.02517", "submitter": "Herman Haverkort", "authors": "Arie Bos and Herman Haverkort", "title": "Hyperorthogonal well-folded Hilbert curves", "comments": "Manuscript submitted to Journal of Computational Geometry. An\n  abstract appeared in the 31st Int Symp on Computational Geometry (SoCG 2015),\n  LIPIcs 34:812-826", "journal-ref": "Journal of Computational Geometry 7(2):145-190 (2016)", "doi": null, "report-no": null, "categories": "cs.CG", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  R-trees can be used to store and query sets of point data in two or more\ndimensions. An easy way to construct and maintain R-trees for two-dimensional\npoints, due to Kamel and Faloutsos, is to keep the points in the order in which\nthey appear along the Hilbert curve. The R-tree will then store bounding boxes\nof points along contiguous sections of the curve, and the efficiency of the\nR-tree depends on the size of the bounding boxes---smaller is better. Since\nthere are many different ways to generalize the Hilbert curve to higher\ndimensions, this raises the question which generalization results in the\nsmallest bounding boxes. Familiar methods, such as the one by Butz, can result\nin curve sections whose bounding boxes are a factor $\\Omega(2^{d/2})$ larger\nthan the volume traversed by that section of the curve. Most of the volume\nbounded by such bounding boxes would not contain any data points. In this paper\nwe present a new way of generalizing Hilbert's curve to higher dimensions,\nwhich results in much tighter bounding boxes: they have at most 4 times the\nvolume of the part of the curve covered, independent of the number of\ndimensions. Moreover, we prove that a factor 4 is asymptotically optimal.\n", "versions": [{"version": "v1", "created": "Tue, 11 Aug 2015 08:33:54 GMT"}], "update_date": "2017-11-08", "authors_parsed": [["Bos", "Arie", ""], ["Haverkort", "Herman", ""]]}, {"id": "1508.03381", "submitter": "Hangjun Xu", "authors": "Hangjun Xu", "title": "An Algorithm for Comparing Similarity Between Two Trees", "comments": "M.S. degree Project, Department of Computer Science, Duke University,\n  April, 2014", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.CG", "license": "http://creativecommons.org/licenses/by-nc-sa/4.0/", "abstract": "  An important problem in geometric computing is defining and computing\nsimilarity between two geometric shapes, e.g. point sets, curves and surfaces,\netc. Important geometric and topological information of many shapes can be\ncaptured by defining a tree structure on them (e.g. medial axis and contour\ntrees). Hence, it is natural to study the problem of comparing similarity\nbetween trees. We study gapped edit distance between two ordered labeled trees,\nfirst proposed by Touzet \\cite{Touzet2003}.\n  Given two binary trees $T_{1}$ and $T_{2}$ with $m$ and $n$ nodes. We compute\nthe general gap edit distance in $O(m^{3}n^{2} + m^{2}n^{3})$ time. The\ncomputation of this distance in the case of arbitrary trees has shown to be\nNP-hard \\cite{Touzet2003}. We also give an algorithm for computing the complete\nsubtree gap edit distance, which can be applied to comparing contour trees of\nterrains in $\\mathbb{R}^{3}$.\n", "versions": [{"version": "v1", "created": "Thu, 13 Aug 2015 23:01:02 GMT"}], "update_date": "2015-08-17", "authors_parsed": [["Xu", "Hangjun", ""]]}, {"id": "1508.03473", "submitter": "Fabrizio Frati", "authors": "Fabrizio Frati", "title": "A Lower Bound on the Diameter of the Flip Graph", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.CG cs.DS math.CO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The flip graph is the graph whose nodes correspond to non-isomorphic\ncombinatorial triangulations and whose edges connect pairs of triangulations\nthat can be obtained one from the other by flipping a single edge. In this note\nwe show that the diameter of the flip graph is at least $\\frac{7n}{3} +\n\\Theta(1)$, improving upon the previous $2n + \\Theta(1)$ lower bound.\n", "versions": [{"version": "v1", "created": "Fri, 14 Aug 2015 12:00:19 GMT"}], "update_date": "2015-08-17", "authors_parsed": [["Frati", "Fabrizio", ""]]}, {"id": "1508.03773", "submitter": "Herman Haverkort", "authors": "Herman Haverkort", "title": "No acute tetrahedron is an 8-reptile", "comments": "updated text, as in press with Discrete Mathematics, Discrete\n  Mathematics Available online 10 November 2017", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.CG math.MG", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  An $r$-gentiling is a dissection of a shape into $r \\geq 2$ parts which are\nall similar to the original shape. An $r$-reptiling is an $r$-gentiling of\nwhich all parts are mutually congruent. This article shows that no acute\ntetrahedron is an $r$-gentile or $r$-reptile for any $r < 9$, by showing that\nno acute spherical diangle can be dissected into less than nine acute spherical\ntriangles.\n", "versions": [{"version": "v1", "created": "Sat, 15 Aug 2015 22:21:42 GMT"}, {"version": "v2", "created": "Mon, 29 Jan 2018 10:30:25 GMT"}], "update_date": "2018-01-30", "authors_parsed": [["Haverkort", "Herman", ""]]}, {"id": "1508.03931", "submitter": "Michael Goodrich", "authors": "Michael T. Goodrich and Timothy Johnson and Manuel Torres", "title": "Knuthian Drawings of Series-Parallel Flowcharts", "comments": "Full version", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.CG cs.DS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Inspired by a classic paper by Knuth, we revisit the problem of drawing\nflowcharts of loop-free algorithms, that is, degree-three series-parallel\ndigraphs. Our drawing algorithms show that it is possible to produce Knuthian\ndrawings of degree-three series-parallel digraphs with good aspect ratios and\nsmall numbers of edge bends.\n", "versions": [{"version": "v1", "created": "Mon, 17 Aug 2015 05:59:27 GMT"}], "update_date": "2015-08-18", "authors_parsed": [["Goodrich", "Michael T.", ""], ["Johnson", "Timothy", ""], ["Torres", "Manuel", ""]]}, {"id": "1508.05488", "submitter": "Gang Mei", "authors": "Gang Mei", "title": "CudaChain: A Practical GPU-accelerated 2D Convex Hull Algorithm", "comments": null, "journal-ref": "SpringerPlus 2016:2284", "doi": "10.1186/s40064-016-2284-4", "report-no": null, "categories": "cs.CG", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This paper presents a practical GPU-accelerated convex hull algorithm and a\nnovel Sorting-based Preprocessing Approach (SPA) for planar point sets. The\nproposed algorithm consists of two stages: (1) two rounds of preprocessing\nperformed on the GPU and (2) the finalization of calculating the expected\nconvex hull on the CPU. We first discard the interior points that locate inside\na quadrilateral formed by four extreme points, and then distribute the\nremaining points into several (typically four) sub regions. For each subset of\npoints, we first sort them in parallel, then perform the second round of\ndiscarding using SPA, and finally form a simple chain for the current remaining\npoints. A simple polygon can be easily generated by directly connecting all the\nchains in sub regions. We at last obtain the expected convex hull of the input\npoints by calculating the convex hull of the simple polygon. We use the library\nThrust to realize the parallel sorting, reduction, and partitioning for better\nefficiency and simplicity. Experimental results show that our algorithm\nachieves 5x ~ 6x speedups over the Qhull implementation for 20M points. Thus,\nthis algorithm is competitive in practical applications for its simplicity and\nsatisfied efficiency.\n", "versions": [{"version": "v1", "created": "Sat, 22 Aug 2015 09:32:11 GMT"}], "update_date": "2016-05-24", "authors_parsed": [["Mei", "Gang", ""]]}, {"id": "1508.05657", "submitter": "Oliver Knill", "authors": "Oliver Knill", "title": "A Sard theorem for graph theory", "comments": "30 pages, 8 figures", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DM cs.CG math.GT", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The zero locus of a function f on a graph G is defined as the graph with\nvertex set consisting of all complete subgraphs of G, on which f changes sign\nand where x,y are connected if one is contained in the other. For d-graphs,\nfinite simple graphs for which every unit sphere is a d-sphere, the zero locus\nof (f-c) is a (d-1)-graph for all c different from the range of f. If this Sard\nlemma is inductively applied to an ordered list functions f_1,...,f_k in which\nthe functions are extended on the level surfaces, the set of critical values\n(c_1,...,c_k) for which F-c=0 is not a (d-k)-graph is a finite set. This\ndiscrete Sard result allows to construct explicit graphs triangulating a given\nalgebraic set. We also look at a second setup: for a function F from the vertex\nset to R^k, we give conditions for which the simultaneous discrete algebraic\nset { F=c } defined as the set of simplices of dimension in {k, k+1,...,n} on\nwhich all f_i change sign, is a (d-k)-graph in the barycentric refinement of G.\nThis maximal rank condition is adapted from the continuum and the graph { F=c }\nis a (n-k)-graph. While now, the critical values can have positive measure, we\nare closer to calculus: for k=2 for example, extrema of functions f under a\nconstraint {g=c} happen at points, where the gradients of f and g are parallel\nD f = L D g, the Lagrange equations on the discrete network. As for an\napplication, we illustrate eigenfunctions of geometric graphs and especially\nthe second eigenvector of 3-spheres, which by Courant-Fiedler has exactly two\nnodal regions. The separating nodal surface of the second eigenfunction f_2\nbelonging to the smallest nonzero eigenvalue always appears to be a 2-sphere in\nexperiments if G is a 3-sphere.\n", "versions": [{"version": "v1", "created": "Sun, 23 Aug 2015 20:36:19 GMT"}], "update_date": "2015-08-25", "authors_parsed": [["Knill", "Oliver", ""]]}, {"id": "1508.05784", "submitter": "Patrizio Angelini", "authors": "Patrizio Angelini and Till Bruckdorfer and Michael Kaufmann and Tamara\n  Mchedlidze", "title": "A Universal Point Set for 2-Outerplanar Graphs", "comments": "23 pages, 11 figures, conference version at GD 2015", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.CG", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  A point set $S \\subseteq \\mathbb{R}^2$ is universal for a class $\\cal G$ if\nevery graph of ${\\cal G}$ has a planar straight-line embedding on $S$. It is\nwell-known that the integer grid is a quadratic-size universal point set for\nplanar graphs, while the existence of a sub-quadratic universal point set for\nthem is one of the most fascinating open problems in Graph Drawing. Motivated\nby the fact that outerplanarity is a key property for the existence of small\nuniversal point sets, we study 2-outerplanar graphs and provide for them a\nuniversal point set of size $O(n \\log n)$.\n", "versions": [{"version": "v1", "created": "Mon, 24 Aug 2015 12:36:48 GMT"}], "update_date": "2015-08-25", "authors_parsed": [["Angelini", "Patrizio", ""], ["Bruckdorfer", "Till", ""], ["Kaufmann", "Michael", ""], ["Mchedlidze", "Tamara", ""]]}, {"id": "1508.05931", "submitter": "Gang Mei", "authors": "Gang Mei", "title": "gScan: Accelerating Graham Scan on the GPU", "comments": "arXiv admin note: text overlap with arXiv:1508.05488", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.CG", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This paper presents a fast implementation of the Graham scan on the GPU. The\nproposed algorithm is composed of two stages: (1) two rounds of preprocessing\nperformed on the GPU and (2) the finalization of finding the convex hull on the\nCPU. We first discard the interior points that locate inside a quadrilateral\nformed by four extreme points, sort the remaining points according to the\nangles, and then divide them into the left and the right regions. For each\nregion, we perform a second round of filtering using the proposed preprocessing\napproach to discard the interior points in further. We finally obtain the\nexpected convex hull by calculating the convex hull of the remaining points on\nthe CPU. We directly employ the parallel sorting, reduction, and partitioning\nprovided by the library Thrust for better efficiency and simplicity.\nExperimental results show that our implementation achieves 6x ~ 7x speedups\nover the Qhull implementation for 20M points.\n", "versions": [{"version": "v1", "created": "Sat, 22 Aug 2015 09:37:52 GMT"}], "update_date": "2015-08-26", "authors_parsed": [["Mei", "Gang", ""]]}, {"id": "1508.06181", "submitter": "Changsoo Je", "authors": "Changsoo Je, Min Tang, Youngeun Lee, Minkyoung Lee, Young J. Kim", "title": "PolyDepth: Real-time Penetration Depth Computation using Iterative\n  Contact-Space Projection", "comments": "Presented in ACM SIGGRAPH 2012. 15 pages, 23 figures", "journal-ref": "ACM Transactions on Graphics (ToG 2012), Volume 31, Issue 1,\n  Article 5, pp. 1-14, January 1, 2012", "doi": "10.1145/2077341.2077346", "report-no": null, "categories": "cs.GR cs.CG cs.RO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We present a real-time algorithm that finds the Penetration Depth (PD)\nbetween general polygonal models based on iterative and local optimization\ntechniques. Given an in-collision configuration of an object in configuration\nspace, we find an initial collision-free configuration using several methods\nsuch as centroid difference, maximally clear configuration, motion coherence,\nrandom configuration, and sampling-based search. We project this configuration\non to a local contact space using a variant of continuous collision detection\nalgorithm and construct a linear convex cone around the projected\nconfiguration. We then formulate a new projection of the in-collision\nconfiguration onto the convex cone as a Linear Complementarity Problem (LCP),\nwhich we solve using a type of Gauss-Seidel iterative algorithm. We repeat this\nprocedure until a locally optimal PD is obtained. Our algorithm can process\ncomplicated models consisting of tens of thousands triangles at interactive\nrates.\n", "versions": [{"version": "v1", "created": "Tue, 25 Aug 2015 15:01:47 GMT"}], "update_date": "2015-08-26", "authors_parsed": [["Je", "Changsoo", ""], ["Tang", "Min", ""], ["Lee", "Youngeun", ""], ["Lee", "Minkyoung", ""], ["Kim", "Young J.", ""]]}, {"id": "1508.06760", "submitter": "Till Bruckdorfer", "authors": "Till Bruckdorfer and Michael Kaufmann and Stephen Kobourov and Sergey\n  Pupyrev", "title": "On Embeddability of Buses in Point Sets", "comments": "19 pages, 9 figures, conference version at GD 2015", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.CG", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Set membership of points in the plane can be visualized by connecting\ncorresponding points via graphical features, like paths, trees, polygons,\nellipses. In this paper we study the \\emph{bus embeddability problem} (BEP):\ngiven a set of colored points we ask whether there exists a planar realization\nwith one horizontal straight-line segment per color, called bus, such that all\npoints with the same color are connected with vertical line segments to their\nbus. We present an ILP and an FPT algorithm for the general problem. For\nrestricted versions of this problem, such as when the relative order of buses\nis predefined, or when a bus must be placed above all its points, we provide\nefficient algorithms. We show that another restricted version of the problem\ncan be solved using 2-stack pushall sorting. On the negative side we prove the\nNP-completeness of a special case of BEP.\n", "versions": [{"version": "v1", "created": "Thu, 27 Aug 2015 09:14:44 GMT"}], "update_date": "2015-08-28", "authors_parsed": [["Bruckdorfer", "Till", ""], ["Kaufmann", "Michael", ""], ["Kobourov", "Stephen", ""], ["Pupyrev", "Sergey", ""]]}, {"id": "1508.07557", "submitter": "Giordano Da Lozzo", "authors": "Patrizio Angelini, Giordano Da Lozzo, Giuseppe Di Battista, Fabrizio\n  Frati, Maurizio Patrignani, and Ignaz Rutter", "title": "Intersection-Link Representations of Graphs", "comments": "15 pages, 8 figures, extended version of 'Intersection-Link\n  Representations of Graphs' (23rd International Symposium on Graph Drawing,\n  2015)", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DS cs.CG cs.DM", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We consider drawings of graphs that contain dense subgraphs. We introduce\nintersection-link representations for such graphs, in which each vertex $u$ is\nrepresented by a geometric object $R(u)$ and in which each edge $(u,v)$ is\nrepresented by the intersection between $R(u)$ and $R(v)$ if it belongs to a\ndense subgraph or by a curve connecting the boundaries of $R(u)$ and $R(v)$\notherwise. We study a notion of planarity, called Clique Planarity, for\nintersection-link representations of graphs in which the dense subgraphs are\ncliques.\n", "versions": [{"version": "v1", "created": "Sun, 30 Aug 2015 11:46:18 GMT"}], "update_date": "2015-09-01", "authors_parsed": [["Angelini", "Patrizio", ""], ["Da Lozzo", "Giordano", ""], ["Di Battista", "Giuseppe", ""], ["Frati", "Fabrizio", ""], ["Patrignani", "Maurizio", ""], ["Rutter", "Ignaz", ""]]}, {"id": "1508.07569", "submitter": "Pui Tung Choi", "authors": "Gary Pui-Tung Choi, Kin Tat Ho, Lok Ming Lui", "title": "Spherical Conformal Parameterization of Genus-0 Point Clouds for Meshing", "comments": null, "journal-ref": "SIAM Journal on Imaging Sciences 9, 1582-1618 (2016)", "doi": "10.1137/15M1037561", "report-no": null, "categories": "cs.CG cs.CV cs.GR math.DG", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Point cloud is the most fundamental representation of 3D geometric objects.\nAnalyzing and processing point cloud surfaces is important in computer graphics\nand computer vision. However, most of the existing algorithms for surface\nanalysis require connectivity information. Therefore, it is desirable to\ndevelop a mesh structure on point clouds. This task can be simplified with the\naid of a parameterization. In particular, conformal parameterizations are\nadvantageous in preserving the geometric information of the point cloud data.\nIn this paper, we extend a state-of-the-art spherical conformal\nparameterization algorithm for genus-0 closed meshes to the case of point\nclouds, using an improved approximation of the Laplace-Beltrami operator on\ndata points. Then, we propose an iterative scheme called the North-South\nreiteration for achieving a spherical conformal parameterization. A balancing\nscheme is introduced to enhance the distribution of the spherical\nparameterization. High quality triangulations and quadrangulations can then be\nbuilt on the point clouds with the aid of the parameterizations. Also, the\nmeshes generated are guaranteed to be genus-0 closed meshes. Moreover, using\nour proposed spherical conformal parameterization, multilevel representations\nof point clouds can be easily constructed. Experimental results demonstrate the\neffectiveness of our proposed framework.\n", "versions": [{"version": "v1", "created": "Sun, 30 Aug 2015 13:42:43 GMT"}, {"version": "v2", "created": "Tue, 19 Jan 2016 06:05:49 GMT"}, {"version": "v3", "created": "Wed, 16 Mar 2016 08:47:28 GMT"}], "update_date": "2020-02-10", "authors_parsed": [["Choi", "Gary Pui-Tung", ""], ["Ho", "Kin Tat", ""], ["Lui", "Lok Ming", ""]]}, {"id": "1508.07603", "submitter": "Andrew Beveridge", "authors": "Lindsay Berry, Andrew Beveridge, Jane Butterfield, Volkan Isler,\n  Zachary Keller, Alana Shine, and Junyi Wang", "title": "Line-of-Sight Pursuit in Monotone and Scallop Polygons", "comments": "42 pages, 22 figures", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.CG", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We study a turn-based game in a simply connected polygonal environment $Q$\nbetween a pursuer $P$ and an adversarial evader $E$. Both players can move in a\nstraight line to any point within unit distance during their turn. The pursuer\n$P$ wins by capturing the evader, meaning that their distance satisfies $d(P,\nE) \\leq 1$, while the evader wins by eluding capture forever. Both players have\na map of the environment, but they have different sensing capabilities. The\nevader $E$ always knows the location of $P$. Meanwhile, $P$ only has\nline-of-sight visibility: $P$ observes the evader's position only when the line\nsegment connecting them lies entirely within the polygon. Therefore $P$ must\nsearch for $E$ when the evader is hidden from view.\n  We provide a winning strategy for $P$ in two families of polygons: monotone\npolygons and scallop polygons. In both families, a straight line $L$ can be\nmoved continuously over $Q$ so that (1) $L \\cap Q$ is a line segment and (2)\nevery point on the boundary $\\partial Q$ is swept exactly once. These are both\nsubfamilies of strictly sweepable polygons. The sweeping motion for a monotone\npolygon is a single translation, and the sweeping motion for a scallop polygon\nis a single rotation. Our algorithms use rook's strategy during its pursuit\nphase, rather than the well-known lion's strategy. The rook's strategy is\ncrucial for obtaining a capture time that is linear in the area of $Q$. For\nboth monotone and scallop polygons, our algorithm has a capture time of $O(n(Q)\n+ \\mbox{area}(Q))$, where $n(Q)$ is the number of polygon vertices.\n", "versions": [{"version": "v1", "created": "Sun, 30 Aug 2015 17:25:45 GMT"}, {"version": "v2", "created": "Tue, 19 May 2020 21:04:13 GMT"}], "update_date": "2020-05-21", "authors_parsed": [["Berry", "Lindsay", ""], ["Beveridge", "Andrew", ""], ["Butterfield", "Jane", ""], ["Isler", "Volkan", ""], ["Keller", "Zachary", ""], ["Shine", "Alana", ""], ["Wang", "Junyi", ""]]}, {"id": "1508.07921", "submitter": "Fabrizio Frati", "authors": "Fabrizio Frati, Michael Hoffmann, Vincent Kusters", "title": "Simultaneous Embeddings with Few Bends and Crossings", "comments": "Full version of the paper \"Simultaneous Embeddings with Few Bends and\n  Crossings\" accepted at GD '15", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.CG cs.DS math.CO", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  A simultaneous embedding with fixed edges (SEFE) of two planar graphs $R$ and\n$B$ is a pair of plane drawings of $R$ and $B$ that coincide when restricted to\nthe common vertices and edges of $R$ and $B$. We show that whenever $R$ and $B$\nadmit a SEFE, they also admit a SEFE in which every edge is a polygonal curve\nwith few bends and every pair of edges has few crossings. Specifically: (1) if\n$R$ and $B$ are trees then one bend per edge and four crossings per edge pair\nsuffice (and one bend per edge is sometimes necessary), (2) if $R$ is a planar\ngraph and $B$ is a tree then six bends per edge and eight crossings per edge\npair suffice, and (3) if $R$ and $B$ are planar graphs then six bends per edge\nand sixteen crossings per edge pair suffice. Our results improve on a paper by\nGrilli et al. (GD'14), which proves that nine bends per edge suffice, and on a\npaper by Chan et al. (GD'14), which proves that twenty-four crossings per edge\npair suffice.\n", "versions": [{"version": "v1", "created": "Mon, 31 Aug 2015 17:12:21 GMT"}], "update_date": "2015-09-01", "authors_parsed": [["Frati", "Fabrizio", ""], ["Hoffmann", "Michael", ""], ["Kusters", "Vincent", ""]]}]