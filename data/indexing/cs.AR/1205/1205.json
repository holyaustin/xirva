[{"id": "1205.1737", "submitter": "Rourab Paul", "authors": "Rourab Paul, Sangeet Saha, Jkm Sadique Uz Zaman, Suman Das, Amlan\n  Chakrabarti and Ranjan Ghosh", "title": "A simple 1-byte 1-clock RC4 design and its efficient implementation in\n  FPGA coprocessor for secured ethernet communication", "comments": "Proceedings of National Workshop on Cryptology 2012 Organized by\n  CRSI(http://crsind.com/),INDIA Held at VIT,INDIA (06.08.12 - 08.08.12)", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.AR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In the field of cryptography till date the 1-byte in 1-clock is the best\nknown RC4 hardware design [1], while the 1-byte in 3clocks is the best known\nimplementation [2,3]. The design algorithm in [1] considers two consecutive\nbytes together and processes them in 2 clocks. The design of 1-byte in 3-clocks\nis too much modular and clock hungry. In this paper considering the RC4\nalgorithm, as it is, a simpler RC4 hardware design providing higher throughput\nis proposed in which 1-byte is processed in 1-clock. In the design two\nsequential tasks are executed as two independent events during rising and\nfalling edges of the same clock and the swapping is directly executed using a\nMUX-DEMUX combination. The power consumed in behavioral and structural designs\nof RC4 are estimated and a power optimization technique is proposed. The NIST\nstatistical test suite is run on RC4 key streams in order to know its\nrandomness property. The encryption and decryption designs are respectively\nembedded on two FPGA boards with RC4 in a custom coprocessor followed by\nEthernet communication.\n", "versions": [{"version": "v1", "created": "Tue, 8 May 2012 16:30:40 GMT"}, {"version": "v2", "created": "Fri, 27 Jul 2012 15:15:34 GMT"}], "update_date": "2012-07-30", "authors_parsed": [["Paul", "Rourab", ""], ["Saha", "Sangeet", ""], ["Zaman", "Jkm Sadique Uz", ""], ["Das", "Suman", ""], ["Chakrabarti", "Amlan", ""], ["Ghosh", "Ranjan", ""]]}, {"id": "1205.1860", "submitter": "Mohandeep Sharma", "authors": "Mohandeep Sharma, Dilip Kumar", "title": "Wishbone bus Architecture - A Survey and Comparison", "comments": "18 pages", "journal-ref": "International journal of VLSI Design & Communication Systems\n  (VLSICS) Vol.3, No.2 April 2012, 107-124", "doi": "10.5121/vlsic.2012.3210", "report-no": null, "categories": "cs.AR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The performance of an on-chip interconnection architecture used for\ncommunication between IP cores depends on the efficiency of its bus\narchitecture. Any bus architecture having advantages of faster bus clock speed,\nextra data transfer cycle, improved bus width and throughput is highly\ndesirable for a low cost, reduced time-to-market and efficient System-on-Chip\n(SoC). This paper presents a survey of WISHBONE bus architecture and its\ncomparison with three other on-chip bus architectures viz. Advanced Micro\ncontroller Bus Architecture (AMBA) by ARM, CoreConnect by IBM and Avalon by\nAltera. The WISHBONE Bus Architecture by Silicore Corporation appears to be\ngaining an upper edge over the other three bus architecture types because of\nits special performance parameters like the use of flexible arbitration scheme\nand additional data transfer cycle (Read-Modify-Write cycle). Moreover, its IP\nCores are available free for use requiring neither any registration nor any\nagreement or license.\n", "versions": [{"version": "v1", "created": "Wed, 9 May 2012 03:18:40 GMT"}], "update_date": "2012-05-10", "authors_parsed": [["Sharma", "Mohandeep", ""], ["Kumar", "Dilip", ""]]}, {"id": "1205.1866", "submitter": "Amandeep Singh", "authors": "Amandeep Singh, Balwinder Singh", "title": "Microcontroller Based Testing of Digital IP-Core", "comments": "Microcontroller, FPGA, Testing, TMR, SOC", "journal-ref": null, "doi": "10.5121/vlsic.2012.3205", "report-no": null, "categories": "cs.AR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Testing core based System on Chip is a challenge for the test engineers. To\ntest the complete SOC at one time with maximum fault coverage, test engineers\nprefer to test each IP-core separately. At speed testing using external testers\nis more expensive because of gigahertz processor. The purpose of this paper is\nto develop cost efficient and flexible test methodology for testing digital\nIP-cores . The prominent feature of the approach is to use microcontroller to\ntest IP-core. The novel feature is that there is no need of test pattern\ngenerator and output response analyzer as microcontroller performs the function\nof both. This approach has various advantages such as at speed testing, low\ncost, less area overhead and greater flexibility since most of the testing\nprocess is based on software.\n", "versions": [{"version": "v1", "created": "Wed, 9 May 2012 04:15:39 GMT"}], "update_date": "2012-05-10", "authors_parsed": [["Singh", "Amandeep", ""], ["Singh", "Balwinder", ""]]}, {"id": "1205.1871", "submitter": "Mehdi Alipour", "authors": "Mehdi Alipour, Mostafa E. Salehi, and Hesamodin shojaei baghini", "title": "Design Space Exploration to Find the Optimum Cache and Register File\n  Size for Embedded Applications", "comments": "The 2011 International Conference on Embedded Systems and\n  Applications, las vegas, nevada, USA", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.AR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In the future, embedded processors must process more computation-intensive\nnetwork applications and internet traffic and packet-processing tasks become\nheavier and sophisticated. Since the processor performance is severely related\nto the average memory access delay and also the number of processor registers\naffects the performance, cache and register file are two major parts in\ndesigning embedded processor architecture. Although increasing cache and\nregister file size leads to performance improvement in embedded applications\nand packet-processing tasks in high traffic networks with too much packets, the\nincreased area, power consumption and memory hierarchy delay are the overheads\nof these techniques. Therefore, implementing these components in the optimum\nsize is of significant interest in the design of embedded processors. This\npaper explores the effect of cache and register file size on the processor\nperformance to calculate the optimum size of these components for embedded\napplications. Experimental results show that although having bigger cache and\nregister file is one of the performance improvement approaches in embedded\nprocessors, however, by increasing the size of these parameters over a\nthreshold level, performance improvement is saturated and then, decreased.\n", "versions": [{"version": "v1", "created": "Wed, 9 May 2012 05:23:13 GMT"}], "update_date": "2012-05-10", "authors_parsed": [["Alipour", "Mehdi", ""], ["Salehi", "Mostafa E.", ""], ["baghini", "Hesamodin shojaei", ""]]}, {"id": "1205.2153", "submitter": "Rourab Paul", "authors": "Rourab Paul, Sangeet Saha, Suman Sau, Amlan Chakrabarti", "title": "Design and implementation of real time AES-128 on real time operating\n  system for multiple FPGA communication", "comments": "6 pages, IEMCON 12, Kolkata", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.AR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Security is the most important part in data communication system, where more\nrandomization in secret keys increases the security as well as complexity of\nthe cryptography algorithms. As a result in recent dates these algorithms are\ncompensating with enormous memory spaces and large execution time on hardware\nplatform. Field programmable gate arrays (FPGAs), provide one of the major\nalternative in hardware platform scenario due to its reconfiguration nature,\nlow price and marketing speed. In FPGA based embedded system we can use\nembedded processor to execute particular algorithm with the inclusion of a real\ntime operating System (RTOS), where threads may reduce resource utilization and\ntime consumption. A process in the runtime is separated in different smaller\ntasks which are executed by the scheduler to meet the real time dead line using\nRTOS. In this paper we demonstrate the design and implementation of a 128-bit\nAdvanced Encryption Standard (AES) both symmetric key encryption and decryption\nalgorithm by developing suitable hardware and software design on Xilinx\nSpartan- 3E (XC3S500E-FG320) device using an Xilkernel RTOS, the implementation\nhas been tested successfully The system is optimized in terms of execution\nspeed and hardware utilization.\n", "versions": [{"version": "v1", "created": "Thu, 10 May 2012 04:04:45 GMT"}], "update_date": "2012-05-11", "authors_parsed": [["Paul", "Rourab", ""], ["Saha", "Sangeet", ""], ["Sau", "Suman", ""], ["Chakrabarti", "Amlan", ""]]}, {"id": "1205.2428", "submitter": "Fran\\c{c}ois Leduc-Primeau", "authors": "Fran\\c{c}ois Leduc-Primeau and Saied Hemati and Shie Mannor and Warren\n  J. Gross", "title": "Relaxed Half-Stochastic Belief Propagation", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.AR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Low-density parity-check codes are attractive for high throughput\napplications because of their low decoding complexity per bit, but also because\nall the codeword bits can be decoded in parallel. However, achieving this in a\ncircuit implementation is complicated by the number of wires required to\nexchange messages between processing nodes. Decoding algorithms that exchange\nbinary messages are interesting for fully-parallel implementations because they\ncan reduce the number and the length of the wires, and increase logic density.\nThis paper introduces the Relaxed Half-Stochastic (RHS) decoding algorithm, a\nbinary message belief propagation (BP) algorithm that achieves a coding gain\ncomparable to the best known BP algorithms that use real-valued messages. We\nderive the RHS algorithm by starting from the well-known Sum-Product algorithm,\nand then derive a low-complexity version suitable for circuit implementation.\nWe present extensive simulation results on two standardized codes having\ndifferent rates and constructions, including low bit error rate results. These\nsimulations show that RHS can be an advantageous replacement for the existing\nstate-of-the-art decoding algorithms when targeting fully-parallel\nimplementations.\n", "versions": [{"version": "v1", "created": "Fri, 11 May 2012 05:06:47 GMT"}], "update_date": "2012-05-14", "authors_parsed": [["Leduc-Primeau", "Fran\u00e7ois", ""], ["Hemati", "Saied", ""], ["Mannor", "Shie", ""], ["Gross", "Warren J.", ""]]}, {"id": "1205.4967", "submitter": "Ahmad Lashgar", "authors": "Ahmad Lashgar, Amirali Baniasadi, Ahmad Khonsari", "title": "Investigating Warp Size Impact in GPUs", "comments": "7 pages, 7 figures, 2 tables, Technical Report", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.AR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  There are a number of design decisions that impact a GPU's performance. Among\nsuch decisions deciding the right warp size can deeply influence the rest of\nthe design. Small warps reduce the performance penalty associated with branch\ndivergence at the expense of a reduction in memory coalescing. Large warps\nenhance memory coalescing significantly but also increase branch divergence.\nThis leaves designers with two choices: use a small warps and invest in finding\nnew solutions to enhance coalescing or use large warps and address branch\ndivergence employing effective control-flow solutions. In this work our goal is\nto investigate the answer to this question. We analyze warp size impact on\nmemory coalescing and branch divergence. We use our findings to study two\nmachines: a GPU using small warps but equipped with excellent memory coalescing\n(SW+) and a GPU using large warps but employing an MIMD engine immune from\ncontrol-flow costs (LW+). Our evaluations show that building\ncoalescing-enhanced small warp GPUs is a better approach compared to pursuing a\ncontrol-flow enhanced large warp GPU.\n", "versions": [{"version": "v1", "created": "Tue, 22 May 2012 16:26:23 GMT"}], "update_date": "2012-05-23", "authors_parsed": [["Lashgar", "Ahmad", ""], ["Baniasadi", "Amirali", ""], ["Khonsari", "Ahmad", ""]]}]