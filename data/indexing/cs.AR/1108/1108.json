[{"id": "1108.3970", "submitter": "Hrishikesh Sharma", "authors": "Hrishikesh Sharma and Sachin Patkar", "title": "A Design Methodology for Folded, Pipelined Architectures in VLSI\n  Applications using Projective Space Lattices", "comments": "Submitted to Elsevier Journal of Microprocessors and Microsystems:\n  Embedded Hardware Design", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.AR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Semi-parallel, or folded, VLSI architectures are used whenever hardware\nresources need to be saved at design time. Most recent applications that are\nbased on Projective Geometry (PG) based balanced bipartite graph also fall in\nthis category. In this paper, we provide a high-level, top-down design\nmethodology to design optimal semi-parallel architectures for applications,\nwhose Data Flow Graph (DFG) is based on PG bipartite graph. Such applications\nhave been found e.g. in error-control coding and matrix computations. Unlike\nmany other folding schemes, the topology of connections between physical\nelements does not change in this methodology. Another advantage is the ease of\nimplementation. To lessen the throughput loss due to folding, we also\nincorporate a multi-tier pipelining strategy in the design methodology. The\ndesign methodology has been verified by implementing a synthesis tool in C++,\nwhich has been verified as well. The tool is publicly available. Further, a\ncomplete decoder was manually protototyped before the synthesis tool design, to\nverify all the algorithms evolved in this paper, towards various steps of\nrefinement. Another specific high-performance design of an LDPC decoder based\non this methodology was worked out in past, and has been patented as well.\n", "versions": [{"version": "v1", "created": "Fri, 19 Aug 2011 14:32:32 GMT"}, {"version": "v2", "created": "Sat, 4 Aug 2012 07:51:13 GMT"}], "update_date": "2012-08-07", "authors_parsed": [["Sharma", "Hrishikesh", ""], ["Patkar", "Sachin", ""]]}, {"id": "1108.5497", "submitter": "Ifat Jahangir", "authors": "Ifat Jahangir, Anindya Das and Masud Hasan", "title": "Facile Algebraic Representation of a Novel Quaternary Logic", "comments": "Pre-print copy, final version can be found here:\n  http://www.ijcseonline.org/archive_issue.php?pub_id=35", "journal-ref": "International Journal of Computer Sciences and Engineering, Vol.4,\n  Issue.5, pp.1-15, 2016", "doi": null, "report-no": null, "categories": "cs.AR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In this work, a novel quaternary algebra has been proposed that can be used\nto implement an arbitrary quaternary logic function in more than one systematic\nways. The proposed logic has evolved from and is closely related to the Boolean\nalgebra for binary domain; yet it does not lack the benefits of a higher-radix\nsystem. It offers seamless integration of the binary logic functions and\nexpressions through a set of transforms and allows any binary logic\nsimplification technique to be applied in quaternary domain. Since physical\nrealization of the operators defined in this logic has recently been reported,\nit has become very important to have a well-defined algebra that will\nfacilitate the algebraic manipulation of the novel quaternary logic and aid in\ndesigning various complex logic circuits. Therefore, based on our earlier\nworks, here we describe the complete algebraic representation of this logic for\nthe first time. The efficacy of the logic has been shown by designing and\ncomparing several common logic circuits with existing designs in both binary\nand quaternary domain.\n", "versions": [{"version": "v1", "created": "Sun, 28 Aug 2011 08:07:09 GMT"}, {"version": "v2", "created": "Tue, 8 Nov 2011 20:24:14 GMT"}, {"version": "v3", "created": "Tue, 19 Dec 2017 19:25:24 GMT"}], "update_date": "2017-12-21", "authors_parsed": [["Jahangir", "Ifat", ""], ["Das", "Anindya", ""], ["Hasan", "Masud", ""]]}]