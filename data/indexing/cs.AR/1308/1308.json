[{"id": "1308.0090", "submitter": "Alex James Dr", "authors": "A. P. James and L.R.V.J. Francis and D. Kumar", "title": "Resistive Threshold Logic", "comments": "Memristors, Brain inspired logic circuits. IEEE Transactions on Very\n  Large Scale Integration (VLSI) Systems, 2013", "journal-ref": null, "doi": "10.1109/TVLSI.2012.2232946", "report-no": null, "categories": "cs.ET cs.AR", "license": "http://creativecommons.org/licenses/by/3.0/", "abstract": "  We report a resistance based threshold logic family useful for mimicking\nbrain like large variable logic functions in VLSI. A universal Boolean logic\ncell based on an analog resistive divider and threshold logic circuit is\npresented. The resistive divider is implemented using memristors and provides\noutput voltage as a summation of weighted product of input voltages. The output\nof resistive divider is converted into a binary value by a threshold operation\nimplemented by CMOS inverter and/or Opamp. An universal cell structure is\npresented to decrease the overall implementation complexity and number of\ncomponents. When the number of input variables become very high, the proposed\ncell offers advantages of smaller area and design simplicity in comparison with\nCMOS based logic circuits.\n", "versions": [{"version": "v1", "created": "Thu, 1 Aug 2013 04:17:30 GMT"}], "update_date": "2013-08-03", "authors_parsed": [["James", "A. P.", ""], ["Francis", "L. R. V. J.", ""], ["Kumar", "D.", ""]]}, {"id": "1308.0840", "submitter": "Goutam Paul", "authors": "Goutam Paul, Anupam Chattopadhyay and Chander Chandak", "title": "Designing Parity Preserving Reversible Circuits", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.AR cs.ET", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Making a reversible circuit fault-tolerant is much more difficult than\nclassical circuit and there have been only a few works in the area of\nparity-preserving reversible logic design. Moreover, all of these designs are\nad hoc, based on some pre-defined parity preserving reversible gates as\nbuilding blocks. In this paper, we for the first time propose a novel and\nsystematic approach towards parity preserving reversible circuits design. We\nprovide some related theoretical results and give two algorithms, one from\nreversible specification to parity preserving reversible specification and\nanother from irreversible specification to parity preserving reversible\nspecification. We also evaluate the effectiveness of our approach by extensive\nexperimental results.\n", "versions": [{"version": "v1", "created": "Sun, 4 Aug 2013 19:06:44 GMT"}], "update_date": "2013-08-06", "authors_parsed": [["Paul", "Goutam", ""], ["Chattopadhyay", "Anupam", ""], ["Chandak", "Chander", ""]]}, {"id": "1308.1419", "submitter": "Crist\\'obal A. Navarro", "authors": "Cristobal A. Navarro, Nancy Hitschfeld", "title": "Improving the GPU space of computation under triangular domain problems", "comments": "6 pages, 9 Figures", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DC cs.AR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  There is a stage in the GPU computing pipeline where a grid of thread-blocks\nis mapped to the problem domain. Normally, this grid is a k-dimensional\nbounding box that covers a k-dimensional problem no matter its shape. Threads\nthat fall inside the problem domain perform computations, otherwise they are\ndiscarded at runtime. For problems with non-square geometry, this is not always\nthe best idea because part of the space of computation is executed without any\npractical use. Two- dimensional triangular domain problems, alias td-problems,\nare a particular case of interest. Problems such as the Euclidean distance map,\nLU decomposition, collision detection and simula- tions over triangular tiled\ndomains are all td-problems and they appear frequently in many areas of\nscience. In this work, we propose an improved GPU mapping function g(lambda),\nthat maps any lambda block to a unique location (i, j) in the triangular\ndomain. The mapping is based on the properties of the lower triangular matrix\nand it works at a block level, thus not compromising thread organization within\na block. The theoretical improvement from using g(lambda) is upper bounded as I\n< 2 and the number of wasted blocks is reduced from O(n^2) to O(n). We compare\nour strategy with other proposed methods; the upper-triangular mapping (UTM),\nthe rectangular box (RB) and the recursive partition (REC). Our experimental\nresults on Nvidias Kepler GPU architecture show that g(lambda) is between 12%\nand 15% faster than the bounding box (BB) strategy. When compared to the other\nstrategies, our mapping runs significantly faster than UTM and it is as fast as\nRB in practical use, with the advantage that thread organization is not\ncompromised, as in RB. This work also contributes at presenting, for the first\ntime, a fair comparison of all existing strategies running the same experiments\nunder the same hardware.\n", "versions": [{"version": "v1", "created": "Tue, 6 Aug 2013 20:44:35 GMT"}], "update_date": "2015-08-27", "authors_parsed": [["Navarro", "Cristobal A.", ""], ["Hitschfeld", "Nancy", ""]]}, {"id": "1308.3123", "submitter": "Volker Weinberg", "authors": "Volker Weinberg and Momme Allalen", "title": "First experiences with the Intel MIC architecture at LRZ", "comments": "4 pages, 3 figures", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.PF cs.AR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  With the rapidly growing demand for computing power new accelerator based\narchitectures have entered the world of high performance computing since around\n5 years. In particular GPGPUs have recently become very popular, however\nprogramming GPGPUs using programming languages like CUDA or OpenCL is\ncumbersome and error-prone. Trying to overcome these difficulties, Intel\ndeveloped their own Many Integrated Core (MIC) architecture which can be\nprogrammed using standard parallel programming techniques like OpenMP and MPI.\nIn the beginning of 2013, the first production-level cards named Intel Xeon Phi\ncame on the market. LRZ has been considered by Intel as a leading research\ncentre for evaluating coprocessors based on the MIC architecture since 2010\nunder strict NDA. Since the Intel Xeon Phi is now generally available, we can\nshare our experience on programming Intel's new MIC architecture.\n", "versions": [{"version": "v1", "created": "Wed, 14 Aug 2013 13:46:37 GMT"}], "update_date": "2013-08-16", "authors_parsed": [["Weinberg", "Volker", ""], ["Allalen", "Momme", ""]]}, {"id": "1308.4169", "submitter": "Mrigank Sharad", "authors": "Mrigank Sharad, Deliang Fan and Kaushik Roy", "title": "Ultra-low Energy, High Performance and Programmable Magnetic Threshold\n  Logic", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.ET cond-mat.dis-nn cs.AR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We propose magnetic threshold-logic (MTL) design based on non-volatile\nspin-torque switches. A threshold logic gate (TLG) performs summation of\nmultiple inputs multiplied by a fixed set of weights and compares the sum with\na threshold. MTL employs resistive states of magnetic tunnel junctions as\nprogrammable input weights, while, a low-voltage domain-wall shift based\nspin-torque switch is used for thresholding operation. The resulting MTL gate\nacts as a low-power, configurable logic unit and can be used to build fully\npipelined, high-performance programmable computing blocks. Multiple stages in\nsuch a MTL design can be connected using energy-efficient ultralow swing\nprogrammable interconnect networks based on resistive switches. Owing to\nmemory-based compact logic and interconnect design and low-voltage, high-speed\nspintorque based threshold operation, MTL can achieve more than two orders of\nmagnitude improvement in energy-delay product as compared to look-up table\nbased CMOS FPGA.\n", "versions": [{"version": "v1", "created": "Thu, 8 Aug 2013 14:29:58 GMT"}], "update_date": "2013-08-21", "authors_parsed": [["Sharad", "Mrigank", ""], ["Fan", "Deliang", ""], ["Roy", "Kaushik", ""]]}, {"id": "1308.4672", "submitter": "Mrigank Sharad", "authors": "Mrigank Sharad, Deliang Fan and Kaushik Roy", "title": "Ultra-low Energy, High-Performance Dynamic Resistive Threshold Logic", "comments": "arXiv admin note: text overlap with arXiv:1308.4169", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.ET cond-mat.dis-nn cs.AR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We propose dynamic resistive threshold-logic (DRTL) design based on\nnon-volatile resistive memory. A threshold logic gate (TLG) performs summation\nof multiple inputs multiplied by a fixed set of weights and compares the sum\nwith a threshold. DRTL employs resistive memory elements to implement the\nweights and the thresholds, while a compact dynamic CMOS latch is used for the\ncomparison operation. The resulting DRTL gate acts as a low-power, configurable\ndynamic logic unit and can be used to build fully pipelined, high-performance\nprogrammable computing blocks. Multiple stages in such a DRTL design can be\nconnected using energy-efficient low swing programmable interconnect networks\nbased on resistive switches. Owing to memory-based compact logic and\ninterconnect design and highspeed dynamic-pipelined operation, DRTL can achieve\nmore than two orders of magnitude improvement in energy-delay product as\ncompared to look-up table based CMOS FPGA.\n", "versions": [{"version": "v1", "created": "Thu, 8 Aug 2013 15:29:45 GMT"}], "update_date": "2013-08-22", "authors_parsed": [["Sharad", "Mrigank", ""], ["Fan", "Deliang", ""], ["Roy", "Kaushik", ""]]}, {"id": "1308.6021", "submitter": "Hooman Jarollahi", "authors": "Hooman Jarollahi, Naoya Onizawa, Warren J. Gross", "title": "Selective Decoding in Associative Memories Based on Sparse-Clustered\n  Networks", "comments": "4 pages, Accepted in IEEE Global SIP 2013 conference", "journal-ref": null, "doi": "10.1109/GlobalSIP.2013.6737140", "report-no": null, "categories": "cs.AR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Associative memories are structures that can retrieve previously stored\ninformation given a partial input pattern instead of an explicit address as in\nindexed memories. A few hardware approaches have recently been introduced for a\nnew family of associative memories based on Sparse-Clustered Networks (SCN)\nthat show attractive features. These architectures are suitable for\nimplementations with low retrieval latency, but are limited to small networks\nthat store a few hundred data entries. In this paper, a new hardware\narchitecture of SCNs is proposed that features a new data-storage technique as\nwell as a method we refer to as Selective Decoding (SD-SCN). The SD-SCN has\nbeen implemented using a similar FPGA used in the previous efforts and achieves\ntwo orders of magnitude higher capacity, with no error-performance penalty but\nwith the cost of few extra clock cycles per data access.\n", "versions": [{"version": "v1", "created": "Wed, 28 Aug 2013 00:37:56 GMT"}], "update_date": "2016-11-15", "authors_parsed": [["Jarollahi", "Hooman", ""], ["Onizawa", "Naoya", ""], ["Gross", "Warren J.", ""]]}]