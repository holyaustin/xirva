[{"id": "0910.0505", "submitter": "Imran Haque", "authors": "Imran S. Haque and Vijay S. Pande", "title": "Hard Data on Soft Errors: A Large-Scale Assessment of Real-World Error\n  Rates in GPGPU", "comments": "10 pages, 5 figures. For associated code and binaries, see\n  https://simtk.org/home/memtest . Poster version to be presented at\n  Supercomputing 2009. Version 1 of submission contained erroneous analysis of\n  transaction coalescing on GT200", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.AR cs.GR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Graphics processing units (GPUs) are gaining widespread use in computational\nchemistry and other scientific simulation contexts because of their huge\nperformance advantages relative to conventional CPUs. However, the reliability\nof GPUs in error-intolerant applications is largely unproven. In particular, a\nlack of error checking and correcting (ECC) capability in the memory subsystems\nof graphics cards has been cited as a hindrance to the acceptance of GPUs as\nhigh-performance coprocessors, but the impact of this design has not been\npreviously quantified.\n  In this article we present MemtestG80, our software for assessing memory\nerror rates on NVIDIA G80 and GT200-architecture-based graphics cards.\nFurthermore, we present the results of a large-scale assessment of GPU error\nrate, conducted by running MemtestG80 on over 20,000 hosts on the Folding@home\ndistributed computing network. Our control experiments on consumer-grade and\ndedicated-GPGPU hardware in a controlled environment found no errors. However,\nour survey over cards on Folding@home finds that, in their installed\nenvironments, two-thirds of tested GPUs exhibit a detectable, pattern-sensitive\nrate of memory soft errors. We demonstrate that these errors persist after\ncontrolling for overclocking and environmental proxies for temperature, but\ndepend strongly on board architecture.\n", "versions": [{"version": "v1", "created": "Sat, 3 Oct 2009 02:04:22 GMT"}, {"version": "v2", "created": "Sat, 14 Nov 2009 04:14:30 GMT"}], "update_date": "2009-11-14", "authors_parsed": [["Haque", "Imran S.", ""], ["Pande", "Vijay S.", ""]]}, {"id": "0910.3427", "submitter": "Ernst Martin Witte", "authors": "Ernst Martin Witte, Filippo Borlenghi, Gerd Ascheid, Rainer Leupers,\n  Heinrich Meyr", "title": "A Scalable VLSI Architecture for Soft-Input Soft-Output Depth-First\n  Sphere Decoding", "comments": "Accepted for IEEE Transactions on Circuits and Systems II Express\n  Briefs, May 2010. This draft from April 2010 will not be updated any more.\n  Please refer to IEEE Xplore for the final version. *) The final publication\n  will appear with the modified title \"A Scalable VLSI Architecture for\n  Soft-Input Soft-Output Single Tree-Search Sphere Decoding\"", "journal-ref": "IEEE Transactions on Circuits and Systems-Part II: Express Briefs,\n  vol. 57, no. 9, pp. 706-710, Sep 2010", "doi": "10.1109/TCSII.2010.2056014", "report-no": null, "categories": "cs.AR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Multiple-input multiple-output (MIMO) wireless transmission imposes huge\nchallenges on the design of efficient hardware architectures for iterative\nreceivers. A major challenge is soft-input soft-output (SISO) MIMO demapping,\noften approached by sphere decoding (SD). In this paper, we introduce the - to\nour best knowledge - first VLSI architecture for SISO SD applying a single\ntree-search approach. Compared with a soft-output-only base architecture\nsimilar to the one proposed by Studer et al. in IEEE J-SAC 2008, the\narchitectural modifications for soft input still allow a one-node-per-cycle\nexecution. For a 4x4 16-QAM system, the area increases by 57% and the operating\nfrequency degrades by 34% only.\n", "versions": [{"version": "v1", "created": "Sun, 18 Oct 2009 21:51:55 GMT"}, {"version": "v2", "created": "Mon, 26 Oct 2009 17:03:44 GMT"}, {"version": "v3", "created": "Tue, 6 Apr 2010 11:55:31 GMT"}, {"version": "v4", "created": "Mon, 7 Jun 2010 16:47:05 GMT"}], "update_date": "2015-03-13", "authors_parsed": [["Witte", "Ernst Martin", ""], ["Borlenghi", "Filippo", ""], ["Ascheid", "Gerd", ""], ["Leupers", "Rainer", ""], ["Meyr", "Heinrich", ""]]}, {"id": "0910.3736", "submitter": "Bingbing Xia", "authors": "Bingbing Xia, Fei Qiao, Huazhong Yang, and Hui Wang", "title": "A Fault-tolerant Structure for Reliable Multi-core Systems Based on\n  Hardware-Software Co-design", "comments": "7 pages, 5 figures", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.AR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  To cope with the soft errors and make full use of the multi-core system, this\npaper gives an efficient fault-tolerant hardware and software co-designed\narchitecture for multi-core systems. And with a not large number of test\npatterns, it will use less than 33% hardware resources compared with the\ntraditional hardware redundancy (TMR) and it will take less than 50% time\ncompared with the traditional software redundancy (time redundant).Therefore,\nit will be a good choice for the fault-tolerant architecture for the future\nhigh-reliable multi-core systems.\n", "versions": [{"version": "v1", "created": "Tue, 20 Oct 2009 04:01:51 GMT"}], "update_date": "2016-09-08", "authors_parsed": [["Xia", "Bingbing", ""], ["Qiao", "Fei", ""], ["Yang", "Huazhong", ""], ["Wang", "Hui", ""]]}, {"id": "0910.4052", "submitter": "Andrei    Yafimau", "authors": "Andrei I. Yafimau", "title": "Virtual-Threading: Advanced General Purpose Processors Architecture", "comments": "56 pages, 5 PNG figures", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.AR cs.OS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The paper describes the new computers architecture, the main features of\nwhich has been claimed in the Russian Federation patent 2312388 and in the US\npatent application 11/991331. This architecture is intended to effective\nsupport of the General Purpose Parallel Computing (GPPC), the essence of which\nis extremely frequent switching of threads between states of activity and\nstates of viewed in the paper the algorithmic latency. To emphasize the same\nimpact of the architectural latency and the algorithmic latency upon GPPC, is\nintroduced the new notion of the generalized latency and is defined its\nquantitative measure - the Generalized Latency Tolerance (GLT). It is shown\nthat a well suited for GPPC implementation architecture should have high level\nof GLT and is described such architecture, which is called the Virtual-Threaded\nMachine. This architecture originates a processor virtualization in the\ndirection of activities virtualization, which is orthogonal to the well-known\ndirection of memory virtualization. The key elements of the architecture are 1)\nthe distributed fine grain representation of the architectural register file,\nwhich elements are hardware swapped through levels of a microarchitectural\nmemory, 2) the prioritized fine grain direct hardware multiprogramming, 3) the\naccess controlled virtual addressing and 4) the hardware driven semaphores. The\ncomposition of these features lets to introduce new styles of operating system\n(OS) programming, which is free of interruptions, and of applied programming\nwith a very rare using the OS services.\n", "versions": [{"version": "v1", "created": "Wed, 21 Oct 2009 11:31:14 GMT"}], "update_date": "2009-10-22", "authors_parsed": [["Yafimau", "Andrei I.", ""]]}, {"id": "0910.4865", "submitter": "Jan Treibig", "authors": "Jan Treibig, Georg Hager, Gerhard Wellein", "title": "Multi-core architectures: Complexities of performance prediction and the\n  impact of cache topology", "comments": "18 pages", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.PF cs.AR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The balance metric is a simple approach to estimate the performance of\nbandwidth-limited loop kernels. However, applying the method to in-cache\nsituations and modern multi-core architectures yields unsatisfactory results.\nThis paper analyzes the in uence of cache hierarchy design on performance\npredictions for bandwidth-limited loop kernels on current mainstream\nprocessors. We present a diagnostic model with improved predictive power,\ncorrecting the limitations of the simple balance metric. The importance of code\nexecution overhead even in bandwidth-bound situations is emphasized. Finally we\nanalyze the impact of synchronization overhead on multi-threaded performance\nwith a special emphasis on the in uence of cache topology.\n", "versions": [{"version": "v1", "created": "Mon, 26 Oct 2009 12:48:02 GMT"}], "update_date": "2009-10-27", "authors_parsed": [["Treibig", "Jan", ""], ["Hager", "Georg", ""], ["Wellein", "Gerhard", ""]]}]