[{"id": "1601.00894", "submitter": "Daniel Bates", "authors": "Daniel Bates, Alex Chadwick and Robert Mullins", "title": "Configurable memory systems for embedded many-core processors", "comments": "Presented at HIP3ES, 2016", "journal-ref": null, "doi": null, "report-no": "HIP3ES/2016/2", "categories": "cs.AR cs.DC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The memory system of a modern embedded processor consumes a large fraction of\ntotal system energy. We explore a range of different configuration options and\nshow that a reconfigurable design can make better use of the resources\navailable to it than any fixed implementation, and provide large improvements\nin both performance and energy consumption. Reconfigurability becomes\nincreasingly useful as resources become more constrained, so is particularly\nrelevant in the embedded space.\n  For an optimised architectural configuration, we show that a configurable\ncache system performs an average of 20% (maximum 70%) better than the best\nfixed implementation when two programs are competing for the same resources,\nand reduces cache miss rate by an average of 70% (maximum 90%). We then present\na case study of AES encryption and decryption, and find that a custom memory\nconfiguration can almost double performance, with further benefits being\nachieved by specialising the task of each core when parallelising the program.\n", "versions": [{"version": "v1", "created": "Tue, 5 Jan 2016 16:29:17 GMT"}, {"version": "v2", "created": "Thu, 7 Jan 2016 12:12:42 GMT"}], "update_date": "2016-01-08", "authors_parsed": [["Bates", "Daniel", ""], ["Chadwick", "Alex", ""], ["Mullins", "Robert", ""]]}, {"id": "1601.01463", "submitter": "Ajay Agrawal", "authors": "Ajay Agrawal and R. S. Gamad", "title": "Design of a Low-Power 1.65 Gbps Data Channel for HDMI Transmitter", "comments": "TMDS, HDMI, USB, Gbps, data-dependent jitter, supply current, UMC180,\n  low-power consumption, single serial clock", "journal-ref": "International Journal of VLSI Design & Communication Systems\n  (VLSICS), December 2015, Volume 6, Number 6", "doi": "10.5121/vlsic.2015.6603", "report-no": null, "categories": "cs.AR", "license": "http://creativecommons.org/licenses/by/4.0/", "abstract": "  This paper presents a design of low power data channel for application in\nHigh Definition Multimedia Interface (HDMI) Transmitter circuit. The input is\n10 bit parallel data and output is serial data at 1.65 Gbps. This circuit uses\nonly a single frequency of serial clock input. All other timing signals are\nderived within the circuit from the serial clock. This design has dedicated\nlines to disable and enable all its channels within two pixel-clock periods\nonly. A pair of disable and enable functions performed immediately after\npower-on of the circuit serves as the reset function. The presented design is\nimmune to data-dependent switching spikes in supply current and pushes them in\nthe range of serial frequency and its multiples. Thus filtering requirements\nare relaxed. The output stage uses a bias voltage of 2.8 volts for a receiver\npull-up voltage of 3.3 volts. The reported data channel is designed using UMC\n180 nm CMOS Technology. The design is modifiable for other inter-board serial\ninterfaces like USB and LAN with different number of bits at the parallel\ninput.\n", "versions": [{"version": "v1", "created": "Thu, 7 Jan 2016 10:12:25 GMT"}], "update_date": "2016-01-08", "authors_parsed": [["Agrawal", "Ajay", ""], ["Gamad", "R. S.", ""]]}, {"id": "1601.01722", "submitter": "Alexandra Jimborean", "authors": "Jonatan Waern, Per Ekemark, Konstantinos Koukos, Stefanos Kaxiras,\n  Alexandra Jimborean", "title": "Profiling-Assisted Decoupled Access-Execute", "comments": "Presented at HIP3ES, 2016", "journal-ref": null, "doi": null, "report-no": "HIP3ES/2016/1", "categories": "cs.AR cs.DC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  As energy efficiency became a critical factor in the embedded systems domain,\ndynamic voltage and frequency scaling (DVFS) techniques have emerged as means\nto control the system's power and energy efficiency. Additionally, due to the\ncompact design, thermal issues become prominent. State of the art work promotes\nsoftware decoupled access-execution (DAE) that statically generates code\namenable to DVFS techniques. The compiler builds memory-bound access phases,\ndesigned to prefetch data in the cache at low frequency, and compute-bound\nphases, that consume the data and perform computations at high frequency. This\nwork investigates techniques to find the optimal balance between lightweight\nand efficient access phases. A profiling step guides the selection of loads to\nbe prefetched in the access phase. For applications whose behavior vary\nsignificantly with respect to the input data, the profiling can be performed\nonline, accompanied by just-in-time compilation. We evaluated the benefits in\nenergy efficiency and performance for both static and dynamic code generation\nand showed that precise prefetching of critical loads can result in 20% energy\nimprovements, on average. DAE is particularly beneficial for embedded systems\nas by alternating access phases (executed at low frequency) and execute phases\n(at high frequency) DAE proactively reduces the temperature and therefore\nprevents thermal emergencies.\n", "versions": [{"version": "v1", "created": "Thu, 7 Jan 2016 22:43:43 GMT"}], "update_date": "2016-01-11", "authors_parsed": [["Waern", "Jonatan", ""], ["Ekemark", "Per", ""], ["Koukos", "Konstantinos", ""], ["Kaxiras", "Stefanos", ""], ["Jimborean", "Alexandra", ""]]}, {"id": "1601.06352", "submitter": "Kevin Chang", "authors": "Kevin Kai-Wei Chang, Donghyuk Lee, Zeshan Chishti, Alaa R. Alameldeen,\n  Chris Wilkerson, Yoongu Kim, Onur Mutlu", "title": "Reducing Performance Impact of DRAM Refresh by Parallelizing Refreshes\n  with Accesses", "comments": "3 pages, 3 figures", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.AR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Modern DRAM cells are periodically refreshed to prevent data loss due to\nleakage. Commodity DDR DRAM refreshes cells at the rank level. This degrades\nperformance significantly because it prevents an entire rank from serving\nmemory requests while being refreshed. DRAM designed for mobile platforms,\nLPDDR DRAM, supports an enhanced mode, called per-bank refresh, that refreshes\ncells at the bank level. This enables a bank to be accessed while another in\nthe same rank is being refreshed, alleviating part of the negative performance\nimpact of refreshes. However, there are two shortcomings of per-bank refresh.\nFirst, the per-bank refresh scheduling scheme does not exploit the full\npotential of overlapping refreshes with accesses across banks because it\nrestricts the banks to be refreshed in a sequential round-robin order. Second,\naccesses to a bank that is being refreshed have to wait.\n  To mitigate the negative performance impact of DRAM refresh, we propose two\ncomplementary mechanisms, DARP (Dynamic Access Refresh Parallelization) and\nSARP (Subarray Access Refresh Parallelization). The goal is to address the\ndrawbacks of per-bank refresh by building more efficient techniques to\nparallelize refreshes and accesses within DRAM. First, instead of issuing\nper-bank refreshes in a round-robin order, DARP issues per-bank refreshes to\nidle banks in an out-of-order manner. Furthermore, DARP schedules refreshes\nduring intervals when a batch of writes are draining to DRAM. Second, SARP\nexploits the existence of mostly-independent subarrays within a bank. With\nminor modifications to DRAM organization, it allows a bank to serve memory\naccesses to an idle subarray while another subarray is being refreshed.\nExtensive evaluations show that our mechanisms improve system performance and\nenergy efficiency compared to state-of-the-art refresh policies and the benefit\nincreases as DRAM density increases.\n", "versions": [{"version": "v1", "created": "Sun, 24 Jan 2016 07:25:02 GMT"}], "update_date": "2016-01-26", "authors_parsed": [["Chang", "Kevin Kai-Wei", ""], ["Lee", "Donghyuk", ""], ["Chishti", "Zeshan", ""], ["Alameldeen", "Alaa R.", ""], ["Wilkerson", "Chris", ""], ["Kim", "Yoongu", ""], ["Mutlu", "Onur", ""]]}, {"id": "1601.06903", "submitter": "Donghyuk Lee", "authors": "Donghyuk Lee, Yoongu Kim, Vivek Seshadri, Jamie Liu, Lavanya\n  Subramanian, Onur Mutlu", "title": "Tiered-Latency DRAM (TL-DRAM)", "comments": "This is a summary of the original paper, entitled \"Tiered-Latency\n  DRAM: A Low Latency and Low Cost DRAM Architecture\" which appears in HPCA\n  2013", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.AR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This paper summarizes the idea of Tiered-Latency DRAM, which was published in\nHPCA 2013. The key goal of TL-DRAM is to provide low DRAM latency at low cost,\na critical problem in modern memory systems. To this end, TL-DRAM introduces\nheterogeneity into the design of a DRAM subarray by segmenting the bitlines,\nthereby creating a low-latency, low-energy, low-capacity portion in the\nsubarray (called the near segment), which is close to the sense amplifiers, and\na high-latency, high-energy, high-capacity portion, which is farther away from\nthe sense amplifiers. Thus, DRAM becomes heterogeneous with a small portion\nhaving lower latency and a large portion having higher latency. Various\ntechniques can be employed to take advantage of the low-latency near segment\nand this new heterogeneous DRAM substrate, including hardware-based caching and\nsoftware based caching and memory allocation of frequently used data in the\nnear segment. Evaluations with simple such techniques show significant\nperformance and energy-efficiency benefits.\n", "versions": [{"version": "v1", "created": "Tue, 26 Jan 2016 06:36:03 GMT"}], "update_date": "2016-01-27", "authors_parsed": [["Lee", "Donghyuk", ""], ["Kim", "Yoongu", ""], ["Seshadri", "Vivek", ""], ["Liu", "Jamie", ""], ["Subramanian", "Lavanya", ""], ["Mutlu", "Onur", ""]]}]