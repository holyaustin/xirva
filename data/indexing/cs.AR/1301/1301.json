[{"id": "1301.0051", "submitter": "Licheng Chen", "authors": "Licheng Chen, Tianyue Lu, Yanan Wang, Mingyu Chen, Yuan Ruan, Zehan\n  Cui, Yongbing Huang, Mingyang Chen, Jiutian Zhang and Yungang Bao", "title": "MIMS: Towards a Message Interface based Memory System", "comments": null, "journal-ref": "Journal of Computer Science and Technology (JCST), 2014, V29(2):\n  255-272", "doi": "10.1007/s11390-014-1428-7", "report-no": null, "categories": "cs.AR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Memory system is often the main bottleneck in chipmultiprocessor (CMP)\nsystems in terms of latency, bandwidth and efficiency, and recently\nadditionally facing capacity and power problems in an era of big data. A lot of\nresearch works have been done to address part of these problems, such as\nphotonics technology for bandwidth, 3D stacking for capacity, and NVM for power\nas well as many micro-architecture level innovations. Many of them need a\nmodification of current memory architecture, since the decades-old synchronous\nmemory architecture (SDRAM) has become an obstacle to adopt those advances.\nHowever, to the best of our knowledge, none of them is able to provide a\nuniversal memory interface that is scalable enough to cover all these problems.\n  In this paper, we argue that a message-based interface should be adopted to\nreplace the traditional bus-based interface in memory system. A novel message\ninterface based memory system (MIMS) is proposed. The key innovation of MIMS is\nthat processor and memory system communicate through a universal and flexible\nmessage interface. Each message packet could contain multiple memory requests\nor commands along with various semantic information. The memory system is more\nintelligent and active by equipping with a local buffer scheduler, which is\nresponsible to process packet, schedule memory requests, and execute specific\ncommands with the help of semantic information. The experimental results by\nsimulator show that, with accurate granularity message, the MIMS would improve\nperformance by 53.21%, while reducing energy delay product (EDP) by 55.90%, the\neffective bandwidth utilization is improving by 62.42%. Furthermore, combining\nmultiple requests in a packet would reduce link overhead and provide\nopportunity for address compression.\n", "versions": [{"version": "v1", "created": "Tue, 1 Jan 2013 03:19:24 GMT"}], "update_date": "2014-04-10", "authors_parsed": [["Chen", "Licheng", ""], ["Lu", "Tianyue", ""], ["Wang", "Yanan", ""], ["Chen", "Mingyu", ""], ["Ruan", "Yuan", ""], ["Cui", "Zehan", ""], ["Huang", "Yongbing", ""], ["Chen", "Mingyang", ""], ["Zhang", "Jiutian", ""], ["Bao", "Yungang", ""]]}, {"id": "1301.1465", "submitter": "Carlo Condo", "authors": "Carlo Condo and Amer Baghdadi and Guido Masera", "title": "A joint communication and application simulator for NoC-based SoCs", "comments": "Withdrawn, due to extended and revised version being published", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.AR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  NoCs have become a widespread paradigm in the system-on-chip design world,\nnot only for multi-purpose SoCs, but also for application-specific ICs. The\ncommon approach in the NoC design world is to separate the design of the\ninterconnection from the design of the processing elements: this is well suited\nfor a large number of developments, but the need for joint application and NoC\ndesign is not uncommon, especially in the application specific case. The\ncorrelation between processing and communication tasks can be strong, and\nseparate or trace-based simulations fall often short of the desired precision.\nIn this work, the OMNET++ based JANoCS simulator is presented: concurrent\nsimulation of processing and communication allow cycle-accurate evaluation of\nthe system. Two cases of study are presented, showing both the need for joint\nsimulations and the effectiveness of JANoCS.\n", "versions": [{"version": "v1", "created": "Tue, 8 Jan 2013 09:59:28 GMT"}, {"version": "v2", "created": "Fri, 31 May 2013 11:09:16 GMT"}], "update_date": "2013-06-03", "authors_parsed": [["Condo", "Carlo", ""], ["Baghdadi", "Amer", ""], ["Masera", "Guido", ""]]}, {"id": "1301.3281", "submitter": "Marcos Sanchez-Elez", "authors": "Marcos Sanchez-Elez and Sara Roman", "title": "Reconfiguration Strategies for Online Hardware Multitasking in Embedded\n  Systems", "comments": "Computer Science & Engineering: An International Journal (CSEIJ),\n  Vol.2, No.6, December 2012", "journal-ref": null, "doi": "10.5121/cseij.2012.2601", "report-no": null, "categories": "cs.AR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  An intensive use of reconfigurable hardware is expected in future embedded\nsystems. This means that the system has to decide which tasks are more suitable\nfor hardware execution. In order to make an efficient use of the FPGA it is\nconvenient to choose one that allows hardware multitasking, which is\nimplemented by using partial dynamic reconfiguration. One of the challenges for\nhardware multitasking in embedded systems is the online management of the only\nreconfiguration port of present FPGA devices. This paper presents different\nonline reconfiguration scheduling strategies which assign the reconfiguration\ninterface resource using different criteria: workload distribution or task\ndeadline. The online scheduling strategies presented take efficient and fast\ndecisions based on the information available at each moment. Experiments have\nbeen made in order to analyze the performance and convenience of these\nreconfiguration strategies.\n", "versions": [{"version": "v1", "created": "Tue, 15 Jan 2013 09:51:33 GMT"}], "update_date": "2013-01-16", "authors_parsed": [["Sanchez-Elez", "Marcos", ""], ["Roman", "Sara", ""]]}]