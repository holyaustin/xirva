[{"id": "1403.1928", "submitter": "Haryono Haryono", "authors": "Haryono, Jazi Eko Istiyanto, Agus Harjoko, Agfianto Eko Putra", "title": "Five Modular Redundancy with Mitigation Technique to Recover the Error\n  Module", "comments": "6 Pages", "journal-ref": "Haryono, Istiyanto, J.E., Harjoko, A., Putra, A.E., 2014,\n  International Journal of advanced studies in Computer Science and Engineering\n  IJASCSE, Volume 3, Issue 2, 2014", "doi": null, "report-no": null, "categories": "cs.AR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Hazard radiation can lead the system fault therefore Fault Tolerance is\nrequired. Fault Tolerant is a system, which is designed to keep operations\nrunning, despite the degradation in the specific module is happening. Many\nfault tolerances have been developed to handle the problem, to find the most\nrobust and efficient in the possible technology. This paper will present the\nFive Modular Redundancy (FMR) with Mitigation Technique to Recover the Error\nModule. With Dynamic Partial Reconfiguration technology that have already\navailable today, such fault tolerance technique can be implemented\nsuccessfully. The project showed the robustness of the system is increased and\nmodule which is error can be recovered immediately.\n", "versions": [{"version": "v1", "created": "Sat, 8 Mar 2014 04:21:39 GMT"}], "update_date": "2014-03-11", "authors_parsed": [["Haryono", "", ""], ["Istiyanto", "Jazi Eko", ""], ["Harjoko", "Agus", ""], ["Putra", "Agfianto Eko", ""]]}, {"id": "1403.2686", "submitter": "Vandana Maheshwari", "authors": "Vandana Maheshwari", "title": "Development of SyReC based expandable reversible logic circuits", "comments": "arXiv admin note: text overlap with arXiv:1110.2574 by other authors", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.AR", "license": "http://creativecommons.org/licenses/by/3.0/", "abstract": "  Reversible computing is gaining high interest from researchers due to its\nvarious promises. One of the prominent advantages perceived from reversible\nlogic is that of reduced power dissipation with many reversible gates at hand,\ndesigning a reversible circuit (combinational) has received due attention and\nachievement. A proposed language for description of reversible circuit, namely\nSyReC, is also in place. What remain are the software tools which would help in\nreversible circuit synthesis through simulation. Beginning with the smallest\nreversible circuit realizations the SyReC statements and expressions, we employ\na hierarchal approach to develop a complete reversible circuit, entirely from\nits SyReC code. We implement this as a software tool. The tool allows a user to\nexpand a reversible circuit of choice in terms of bit width of its inputs. The\nbackground approach of expansion of a reversible circuit has also been proposed\nas a part of this dissertation. Also, a user can use the tool to observe the\neffect of expansion on incurred costs, in terms of increase in number of lines,\nnumber of gates and quantum cost. The importance of observing the change in\ncosts with respect to scale of expansion is important not only from analysis\npoint of view, but also because the cost depends on the approach used for\nexpansion. This dissertation also proposes a reversible circuit design for\nelevator controller (combinational) and the related costs. The aim is to\nemphasize use of the proposed approach is designing customized circuits.\n", "versions": [{"version": "v1", "created": "Tue, 11 Mar 2014 18:49:18 GMT"}], "update_date": "2014-03-12", "authors_parsed": [["Maheshwari", "Vandana", ""]]}, {"id": "1403.2785", "submitter": "Aras Pirbadian", "authors": "Aras Pirbadian, Muhammad S. Khairy, Ahmed M. Eltawil and Fadi J.\n  Kurdahi", "title": "State Dependent Statistical Timing Model for Voltage Scaled Circuits", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.AR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This paper presents a novel statistical state-dependent timing model for\nvoltage over scaled (VoS) logic circuits that accurately and rapidly finds the\ntiming distribution of output bits. Using this model erroneous VoS circuits can\nbe represented as error-free circuits combined with an error-injector. A case\nstudy of a two point DFT unit employing the proposed model is presented and\ncompared to HSPICE circuit simulation. Results show an accurate match, with\nsignificant speedup gains.\n", "versions": [{"version": "v1", "created": "Wed, 12 Mar 2014 01:26:16 GMT"}], "update_date": "2014-03-13", "authors_parsed": [["Pirbadian", "Aras", ""], ["Khairy", "Muhammad S.", ""], ["Eltawil", "Ahmed M.", ""], ["Kurdahi", "Fadi J.", ""]]}, {"id": "1403.3759", "submitter": "Guohui Wang", "authors": "Guohui Wang, Hao Shen, Yang Sun, Joseph R. Cavallaro, Aida Vosoughi\n  and Yuanbin Guo", "title": "Parallel Interleaver Design for a High Throughput HSPA+/LTE\n  Multi-Standard Turbo Decoder", "comments": "14 pages, 15 figures. Accepted for publication by IEEE Transactions\n  on Circuits and Systems I: Regular Papers", "journal-ref": null, "doi": "10.1109/TCSI.2014.2309810", "report-no": null, "categories": "cs.IT cs.AR cs.DC math.IT", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  To meet the evolving data rate requirements of emerging wireless\ncommunication technologies, many parallel architectures have been proposed to\nimplement high throughput turbo decoders. However, concurrent memory\nreading/writing in parallel turbo decoding architectures leads to severe memory\nconflict problem, which has become a major bottleneck for high throughput turbo\ndecoders. In this paper, we propose a flexible and efficient VLSI architecture\nto solve the memory conflict problem for highly parallel turbo decoders\ntargeting multi-standard 3G/4G wireless communication systems. To demonstrate\nthe effectiveness of the proposed parallel interleaver architecture, we\nimplemented an HSPA+/LTE/LTE-Advanced multi-standard turbo decoder with a 45nm\nCMOS technology. The implemented turbo decoder consists of 16 Radix-4 MAP\ndecoder cores, and the chip core area is 2.43 mm^2. When clocked at 600 MHz,\nthis turbo decoder can achieve a maximum decoding throughput of 826 Mbps in the\nHSPA+ mode and 1.67 Gbps in the LTE/LTE-Advanced mode, exceeding the peak data\nrate requirements for both standards.\n", "versions": [{"version": "v1", "created": "Sat, 15 Mar 2014 06:23:28 GMT"}, {"version": "v2", "created": "Sun, 23 Mar 2014 06:44:39 GMT"}, {"version": "v3", "created": "Wed, 26 Mar 2014 04:48:54 GMT"}], "update_date": "2014-03-27", "authors_parsed": [["Wang", "Guohui", ""], ["Shen", "Hao", ""], ["Sun", "Yang", ""], ["Cavallaro", "Joseph R.", ""], ["Vosoughi", "Aida", ""], ["Guo", "Yuanbin", ""]]}, {"id": "1403.4554", "submitter": "Mohammad Amin Taherkhani", "authors": "Fazel Sharifi, Saba Amanollahi, Mohammad Amin Taherkhani and Omid\n  Hashemipour", "title": "A Flexible Design for Optimization of Hardware Architecture in\n  Distributed Arithmetic based FIR Filters", "comments": null, "journal-ref": "RadioElectronics & Informatics 4 (2012) 25-30", "doi": null, "report-no": null, "categories": "cs.AR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  FIR filters are used in many performance/power critical applications such as\nmobile communication devices, analogue to digital converters and digital signal\nprocessing applications. Design of appropriate FIR filters usually causes the\norder of filter to be increased. Synthesis and tape-out of high-order FIR\nfilters with reasonable delay, area and power has become an important challenge\nfor hardware designers. In many cases the complexity of high-order filters\ncauses the constraints of the total design could not be satisfied. In this\npaper, efficient hardware architecture is proposed for distributed arithmetic\n(DA) based FIR filters. The architecture is based on optimized combination of\nLook-up Tables (LUTs) and compressors. The optimized system level solution is\nobtained from a set of dynamic programming optimization algorithms. The\nexperiments show the proposed design educed the delay cost between 16%-62.5% in\ncomparison of previous optimized structures for DA-based architectures.\n", "versions": [{"version": "v1", "created": "Tue, 18 Mar 2014 18:02:25 GMT"}], "update_date": "2014-03-19", "authors_parsed": [["Sharifi", "Fazel", ""], ["Amanollahi", "Saba", ""], ["Taherkhani", "Mohammad Amin", ""], ["Hashemipour", "Omid", ""]]}, {"id": "1403.6632", "submitter": "Nikolaos Kavvadias PhD", "authors": "Nikolaos Kavvadias and Spiridon Nikolaidis", "title": "Design space exploration tools for the ByoRISC configurable processor\n  family", "comments": "12 pages, 14 figures, 7 tables. Unpublished paper on ByoRISC, an\n  extensible RISC with MIMO CIs that can outperform most mid-range VLIWs.\n  Unfortunately Prof. Jorg Henkel destroyed the potential of this submission by\n  using immoral tactics (neglecting his conflict of interest, changing\n  reviewers accepting the paper, and requesting impossible additions for the\n  average lifetime of an Earthling", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.AR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In this paper, the ByoRISC (Build your own RISC) configurable\napplication-specific instruction-set processor (ASIP) family is presented.\nByoRISCs, as vendor-independent cores, provide extensive architectural\nparameters over a baseline processor, which can be customized by\napplication-specific hardware extensions (ASHEs). Such extensions realize\nmulti-input multi-output (MIMO) custom instructions with local state and\nload/store accesses to the data memory. ByoRISCs incorporate a true multi-port\nregister file, zero-overhead custom instruction decoding, and scalable data\nforwarding mechanisms. Given these design decisions, ByoRISCs provide a unique\ncombination of features that allow their use as architectural testbeds and the\nseamless and rapid development of new high-performance ASIPs.\n  The performance characteristics of ByoRISCs, implemented as\nvendor-independent cores, have been evaluated for both ASIC and FPGA\nimplementations, and it is proved that they provide a viable solution in\nFPGA-based system-on-a-chip design. A case study of an image processing\npipeline is also presented to highlight the process of utilizing a ByoRISC\ncustom processor. A peak performance speedup of up to 8.5$\\times$ can be\nobserved, whereas an average performance speedup of 4.4$\\times$ on Xilinx\nVirtex-4 targets is achieved. In addition, ByoRISC outperforms an experimental\nVLIW architecture named VEX even in its 16-wide configuration for a number of\ndata-intensive application kernels.\n", "versions": [{"version": "v1", "created": "Wed, 26 Mar 2014 11:24:19 GMT"}], "update_date": "2014-03-27", "authors_parsed": [["Kavvadias", "Nikolaos", ""], ["Nikolaidis", "Spiridon", ""]]}, {"id": "1403.7291", "submitter": "Roshan Ragel", "authors": "R. G. Ragel, Swarnalatha Radhakrishnan and Angelo Ambrose", "title": "Instruction-set Selection for Multi-application based ASIP Design: An\n  Instruction-level Study", "comments": null, "journal-ref": "Information and Automation for Sustainability (ICIAfS), 2012 IEEE\n  6th International Conference on, 27-29 Sept 2012, pp 141-146, Beijing", "doi": "10.1109/ICIAFS.2012.6419895", "report-no": null, "categories": "cs.AR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Efficiency in embedded systems is paramount to achieve high performance while\nconsuming less area and power. Processors in embedded systems have to be\ndesigned carefully to achieve such design constraints. Application Specific\nInstruction set Processors (ASIPs) exploit the nature of applications to design\nan optimal instruction set. Despite being not general to execute any\napplication, ASIPs are highly preferred in the embedded systems industry where\nthe devices are produced to satisfy a certain type of application domain/s\n(either intra-domain or inter-domain). Typically, ASIPs are designed from a\nbase-processor and functionalities are added for applications. This paper\nstudies the multi-application ASIPs and their instruction sets, extensively\nanalysing the instructions for inter-domain and intra-domain designs. Metrics\nanalysed are the reusable instructions and the extra cost to add a certain\napplication. A wide range of applications from various application benchmarks\n(MiBench, MediaBench and SPEC2006) and domains are analysed for two different\narchitectures (ARM-Thumb and PISA). Our study shows that the intra-domain\napplications contain larger number of common instructions, whereas the\ninter-domain applications have very less common instructions, regardless of the\narchitecture (and therefore the ISA).\n", "versions": [{"version": "v1", "created": "Fri, 28 Mar 2014 07:35:09 GMT"}], "update_date": "2014-03-31", "authors_parsed": [["Ragel", "R. G.", ""], ["Radhakrishnan", "Swarnalatha", ""], ["Ambrose", "Angelo", ""]]}, {"id": "1403.7299", "submitter": "Roshan Ragel", "authors": "I. B. Nawinne, M. S. Wickramasinghe, R. G. Ragel, and S. Radhakrishnan", "title": "Heterogeneous processor pipeline for a product cipher application", "comments": null, "journal-ref": "Industrial and Information Systems (ICIIS), 2011 6th IEEE\n  International Conference on, 16-19 Aug 2011, pp. 32 - 37, Kandy", "doi": "10.1109/ICIINFS.2011.6038036", "report-no": null, "categories": "cs.AR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Processing data received as a stream is a task commonly performed by modern\nembedded devices, in a wide range of applications such as multimedia\n(encoding/decoding/ playing media), networking (switching and routing), digital\nsecurity, scientific data processing, etc. Such processing normally tends to be\ncalculation intensive and therefore requiring significant processing power.\nTherefore, hardware acceleration methods to increase the performance of such\napplications constitute an important area of study. In this paper, we present\nan evaluation of one such method to process streaming data, namely\nmulti-processor pipeline architecture. The hardware is based on a\nMultiple-Processor System on Chip (MPSoC), using a data encryption algorithm as\na case study. The algorithm is partitioned on a coarse grained level and mapped\non to an MPSoC with five processor cores in a pipeline, using specifically\nconfigured Xtensa LX3 cores. The system is then selectively optimized by\nstrengthening and pruning the resources of each processor core. The optimized\nsystem is evaluated and compared against an optimal single-processor System on\nChip (SoC) for the same application. The multiple-processor pipeline system for\ndata encryption algorithms used was observed to provide significant speed ups,\nup to 4.45 times that of the single-processor system, which is close to the\nideal speed up from a five-stage pipeline.\n", "versions": [{"version": "v1", "created": "Fri, 28 Mar 2014 08:13:20 GMT"}], "update_date": "2014-03-31", "authors_parsed": [["Nawinne", "I. B.", ""], ["Wickramasinghe", "M. S.", ""], ["Ragel", "R. G.", ""], ["Radhakrishnan", "S.", ""]]}, {"id": "1403.7380", "submitter": "Nikolaos Kavvadias", "authors": "Nikolaos Kavvadias", "title": "Generating and evaluating application-specific hardware extensions", "comments": "11 pages, 15 figures, 5 tables. An unpublished journal paper\n  presenting the YARDstick custom instruction generation environment", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.AR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Modern platform-based design involves the application-specific extension of\nembedded processors to fit customer requirements. To accomplish this task, the\npossibilities offered by recent custom/extensible processors for tuning their\ninstruction set and microarchitecture to the applications of interest have to\nbe exploited. A significant factor often determining the success of this\nprocess is the utomation available in application analysis and custom\ninstruction generation.\n  In this paper we present YARDstick, a design automation tool for custom\nprocessor development flows that focuses on generating and evaluating\napplication-specific hardware extensions. YARDstick is a building block for\nASIP development, integrating application analysis, custom instruction\ngeneration and selection with user-defined compiler intermediate\nrepresentations. In a YARDstick-enabled environment, practical issues in\ntraditional ASIP design are confronted efficiently; the exploration\ninfrastructure is liberated from compiler and simulator idiosyncrasies, since\nthe ASIP designer is empowered with the freedom of specifying the target\narchitectures of choice and adding new implementations of analyses and custom\ninstruction generation/selection methods. To illustrate the capabilities of the\nYARDstick approach, we present interesting exploration scenarios: quantifying\nthe effect of machine-dependent compiler optimizations and the selection of the\ntarget architecture in terms of operation set and memory model on custom\ninstruction generation/selection under different input/output constraints.\n", "versions": [{"version": "v1", "created": "Fri, 28 Mar 2014 14:06:17 GMT"}], "update_date": "2014-03-31", "authors_parsed": [["Kavvadias", "Nikolaos", ""]]}]