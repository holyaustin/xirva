[{"id": "1002.0939", "submitter": "EPTCS", "authors": "Stefan Marr (Vrije Universiteit Brussel), Michael Haupt (Hasso\n  Plattner Institute, University of Potsdam), Stijn Timbermont (Vrije\n  Universiteit Brussel), Bram Adams (Queen's University), Theo D'Hondt (Vrije\n  Universiteit Brussel), Pascal Costanza (Vrije Universiteit Brussel), Wolfgang\n  De Meuter (Vrije Universiteit Brussel)", "title": "Virtual Machine Support for Many-Core Architectures: Decoupling Abstract\n  from Concrete Concurrency Models", "comments": null, "journal-ref": "EPTCS 17, 2010, pp. 63-77", "doi": "10.4204/EPTCS.17.6", "report-no": null, "categories": "cs.DC cs.AR cs.PL cs.SE", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The upcoming many-core architectures require software developers to exploit\nconcurrency to utilize available computational power. Today's high-level\nlanguage virtual machines (VMs), which are a cornerstone of software\ndevelopment, do not provide sufficient abstraction for concurrency concepts. We\nanalyze concrete and abstract concurrency models and identify the challenges\nthey impose for VMs. To provide sufficient concurrency support in VMs, we\npropose to integrate concurrency operations into VM instruction sets.\n  Since there will always be VMs optimized for special purposes, our goal is to\ndevelop a methodology to design instruction sets with concurrency support.\nTherefore, we also propose a list of trade-offs that have to be investigated to\nadvise the design of such instruction sets.\n  As a first experiment, we implemented one instruction set extension for\nshared memory and one for non-shared memory concurrency. From our experimental\nresults, we derived a list of requirements for a full-grown experimental\nenvironment for further research.\n", "versions": [{"version": "v1", "created": "Thu, 4 Feb 2010 09:48:53 GMT"}], "update_date": "2010-02-05", "authors_parsed": [["Marr", "Stefan", "", "Vrije Universiteit Brussel"], ["Haupt", "Michael", "", "Hasso\n  Plattner Institute, University of Potsdam"], ["Timbermont", "Stijn", "", "Vrije\n  Universiteit Brussel"], ["Adams", "Bram", "", "Queen's University"], ["D'Hondt", "Theo", "", "Vrije\n  Universiteit Brussel"], ["Costanza", "Pascal", "", "Vrije Universiteit Brussel"], ["De Meuter", "Wolfgang", "", "Vrije Universiteit Brussel"]]}, {"id": "1002.1881", "submitter": "Dominique Houzet", "authors": "Linlin Zhang (LAHC), Virginie Fresse (LAHC), Mohammed Khalid (RCIM),\n  Dominique Houzet (GIPSA-lab), Anne-Claire Legrand (LAHC)", "title": "Evaluation and Design Space Exploration of a Time-Division Multiplexed\n  NoC on FPGA for Image Analysis Applications", "comments": null, "journal-ref": "Eurasip Journal on Embedded Systems 2010 (2010) 542035", "doi": null, "report-no": null, "categories": "cs.AR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The aim of this paper is to present an adaptable Fat Tree NoC architecture\nfor Field Programmable Gate Array (FPGA) designed for image analysis\napplications. Traditional NoCs (Network on Chip) are not optimal for dataflow\napplications with large amount of data. On the opposite, point to point\ncommunications are designed from the algorithm requirements but they are\nexpensives in terms of resource and wire. We propose a dedicated communication\narchitecture for image analysis algorithms. This communication mechanism is a\ngeneric NoC infrastructure dedicated to dataflow image processing applications,\nmixing circuit-switching and packet-switching communications. The complete\narchitecture integrates two dedicated communication architectures and reusable\nIP blocks. Communications are based on the NoC concept to support the high\nbandwidth required for a large number and type of data.\n", "versions": [{"version": "v1", "created": "Tue, 9 Feb 2010 15:21:20 GMT"}], "update_date": "2010-02-10", "authors_parsed": [["Zhang", "Linlin", "", "LAHC"], ["Fresse", "Virginie", "", "LAHC"], ["Khalid", "Mohammed", "", "RCIM"], ["Houzet", "Dominique", "", "GIPSA-lab"], ["Legrand", "Anne-Claire", "", "LAHC"]]}, {"id": "1002.1953", "submitter": "Rdv Ijcsis", "authors": "Dr. R. Shashikumar, C. N. Vijay Kumar, M. Nagendrakumar, C. S.\n  Hemanthkumar", "title": "Ahb Compatible DDR Sdram Controller Ip Core for Arm Based Soc", "comments": "IEEE format, International Journal of Computer Science and\n  Information Security, IJCSIS January 2010, ISSN 1947 5500,\n  http://sites.google.com/site/ijcsis/", "journal-ref": "International Journal of Computer Science and Information\n  Security, IJCSIS, Vol. 7, No. 1, pp. 77-85, January 2010, USA", "doi": null, "report-no": "Journal of Computer Science, ISSN 1947 5500", "categories": "cs.AR cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  DDR SDRAM is similar in function to the regular SDRAM but doubles the\nbandwidth of the memory by transferring data on both edges of the clock cycles.\nDDR SDRAM most commonly used in various embedded application like networking,\nimage or video processing, Laptops ete. Now a days many applications needs more\nand more cheap and fast memory. Especially in the field of signal processing,\nrequires significant amount of memory. The most used type of dynamic memory for\nthat purpose is DDR SDRAM. For FPGA design the IC manufacturers are providing\ncommercial memory controller IP cores working only on their products. Main\ndisadvantage is the lack of memory access optimization for random memory access\npatterns. The data path part of those controllers can be used free of charge.\nThis work propose an architecture of a DDR SDRAM controller, which takes\nadvantage of those available and well tested data paths and can be used for any\nFPGA device or ASIC design.(5). In most of the SOC design, DDR SDRAM is\ncommonly used. ARM processor is widely used in SOCs; so that we focused to\nimplement AHB compatible DDR SDRAM controller suitable for ARM based SOC\ndesign.\n", "versions": [{"version": "v1", "created": "Tue, 9 Feb 2010 19:47:34 GMT"}], "update_date": "2010-02-10", "authors_parsed": [["Shashikumar", "Dr. R.", ""], ["Kumar", "C. N. Vijay", ""], ["Nagendrakumar", "M.", ""], ["Hemanthkumar", "C. S.", ""]]}, {"id": "1002.3990", "submitter": "Cyrille Chavet", "authors": "Cyrille Chavet (Lab-Sticc, ST Microelectronics), Philippe Coussy\n  (Lab-Sticc), Eric Martin (Lab-Sticc), Pascal Urard (ST Microelectronics)", "title": "Static Address Generation Easing: a Design Methodology for Parallel\n  Interleaver Architectures", "comments": "4 pages", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.AR cs.IT math.IT", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  For high throughput applications, turbo-like iterative decoders are\nimplemented with parallel architectures. However, to be efficient parallel\narchitectures require to avoid collision accesses i.e. concurrent read/write\naccesses should not target the same memory block. This consideration applies to\nthe two main classes of turbo-like codes which are Low Density Parity Check\n(LDPC) and Turbo-Codes. In this paper we propose a methodology which finds a\ncollision-free mapping of the variables in the memory banks and which optimizes\nthe resulting interleaving architecture. Finally, we show through a pedagogical\nexample the interest of our approach compared to state-of-the-art techniques.\n", "versions": [{"version": "v1", "created": "Sun, 21 Feb 2010 18:51:31 GMT"}], "update_date": "2010-02-23", "authors_parsed": [["Chavet", "Cyrille", "", "Lab-Sticc, ST Microelectronics"], ["Coussy", "Philippe", "", "Lab-Sticc"], ["Martin", "Eric", "", "Lab-Sticc"], ["Urard", "Pascal", "", "ST Microelectronics"]]}]