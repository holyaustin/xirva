[{"id": "1106.2568", "submitter": "Yungang Bao", "authors": "Yungang Bao, Jinyong Zhang, Yan Zhu, Dan Tang, Yuan Ruan, Mingyu Chen,\n  Jianping Fan", "title": "HMTT: A Hybrid Hardware/Software Tracing System for Bridging Memory\n  Trace's Semantic Gap", "comments": "16 papges, an extension version of ACM SIGMETRICS'08 paper", "journal-ref": null, "doi": null, "report-no": "CAS-ICT-TECH-REPORT-20090327", "categories": "cs.AR cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Memory trace analysis is an important technology for architecture research,\nsystem software (i.e., OS, compiler) optimization, and application performance\nimprovements. Hardware-snooping is an effective and efficient approach to\nmonitor and collect memory traces. Compared with software-based approaches,\nmemory traces collected by hardware-based approaches are usually lack of\nsemantic information, such as process/function/loop identifiers, virtual\naddress and I/O access. In this paper we propose a hybrid hardware/software\nmechanism which is able to collect memory reference trace as well as semantic\ninformation. Based on this mechanism, we designed and implemented a prototype\nsystem called HMTT (Hybrid Memory Trace Tool) which adopts a DIMMsnooping\nmechanism to snoop on memory bus and a software-controlled tracing mechanism to\ninject semantic information into normal memory trace. To the best of our\nknowledge, the HMTT system is the first hardware tracing system capable of\ncorrelating memory trace with high-level events. Comprehensive validations and\nevaluations show that the HMTT system has both hardware's (e.g., no distortion\nor pollution) and software's advantages (e.g., flexibility and more\ninformation).\n", "versions": [{"version": "v1", "created": "Mon, 13 Jun 2011 22:29:08 GMT"}], "update_date": "2011-06-15", "authors_parsed": [["Bao", "Yungang", ""], ["Zhang", "Jinyong", ""], ["Zhu", "Yan", ""], ["Tang", "Dan", ""], ["Ruan", "Yuan", ""], ["Chen", "Mingyu", ""], ["Fan", "Jianping", ""]]}, {"id": "1106.2593", "submitter": "Oleg Mazonka", "authors": "Oleg Mazonka and Alex Kolodin", "title": "A Simple Multi-Processor Computer Based on Subleq", "comments": "24 pages", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DC cs.AR cs.PL", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Subleq (Subtract and Branch on result Less than or Equal to zero) is both an\ninstruction set and a programming language for One Instruction Set Computer\n(OISC). We describe a hardware implementation of an array of 28 one-instruction\nSubleq processors on a low-cost FPGA board. Our test results demonstrate that\ncomputational power of our Subleq OISC multi-processor is comparable to that of\nCPU of a modern personal computer. Additionally, we provide implementation\ndetails of our complier from a C-style language to Subleq.\n", "versions": [{"version": "v1", "created": "Tue, 14 Jun 2011 01:26:41 GMT"}], "update_date": "2011-06-15", "authors_parsed": [["Mazonka", "Oleg", ""], ["Kolodin", "Alex", ""]]}, {"id": "1106.3677", "submitter": "Wajeb Gharibi", "authors": "Diana Bodean, Ghenadie Bodean, Wajeb Gharibi", "title": "Pseudo-Ring Testing Schemes and Algorithms of RAM Built-In and Embedded\n  Self-Testing", "comments": "4 pages", "journal-ref": "14 th IEEE Symposium on Design and Diagnostics of Electronic\n  Circuits and Systems, April 13-15, 2011, Cottbus, Germany", "doi": null, "report-no": null, "categories": "cs.AR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Scan and ring schemes of the pseudo-ring memory selftesting are investigated.\nBoth schemes are based on emulation of the linear or nonlinear feedback shift\nregister by memory itself. Peculiarities of the pseudo-ring schemes\nimplementation for multi-port and embedded memories, and for register file are\ndescribed. It is shown that only small additional logic is required and allows\nmicrocontrollers at-speed testing. Also, in this article,are given the a\nposteriori values of some type of memories faults coverage when pseudo-ring\ntesting schemes are applied.\n", "versions": [{"version": "v1", "created": "Sat, 18 Jun 2011 18:44:38 GMT"}], "update_date": "2011-06-21", "authors_parsed": [["Bodean", "Diana", ""], ["Bodean", "Ghenadie", ""], ["Gharibi", "Wajeb", ""]]}, {"id": "1106.3681", "submitter": "Wajeb Gharibi", "authors": "Svetlana Chumachenko, Wajeb Gharibi, Anna Hahanova, Aleksey Sushanov", "title": "SoC Software Components Diagnosis Technology", "comments": "4 pages", "journal-ref": "Proceedings of IEEE, East-West Design & Test, Symposium\n  (EWDTS'08),Lviv, Ukraine, October 9 - 12, 2008", "doi": "10.1109/EWDTS.2008.5580135", "report-no": null, "categories": "cs.AR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  A novel approach to evaluation of hardware and software testability,\nrepresented in the form of register transfer graph, is proposed. Instances of\nmaking of software graph models for their subsequent testing and diagnosis are\nshown.\n", "versions": [{"version": "v1", "created": "Sat, 18 Jun 2011 19:07:44 GMT"}], "update_date": "2016-11-17", "authors_parsed": [["Chumachenko", "Svetlana", ""], ["Gharibi", "Wajeb", ""], ["Hahanova", "Anna", ""], ["Sushanov", "Aleksey", ""]]}]