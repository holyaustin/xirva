[{"id": "1001.2262", "submitter": "Rdv Ijcsis", "authors": "A. Z. Jooya, M. Analoui", "title": "Classifying Application Phases in Asymmetric Chip Multiprocessors", "comments": "6 pages IEEE format, International Journal of Computer Science and\n  Information Security, IJCSIS December 2009, ISSN 1947 5500,\n  http://sites.google.com/site/ijcsis/", "journal-ref": "International Journal of Computer Science and Information\n  Security, IJCSIS, Vol. 6, No. 3, pp. 165-170, December 2009, USA", "doi": null, "report-no": "Volume 6, No. 3, ISSN 1947 5500", "categories": "cs.DC cs.AR cs.PF", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In present study, in order to improve the performance and reduce the amount\nof power which is dissipated in heterogeneous multicore processors, the ability\nof detecting the program execution phases is investigated. The programs\nexecution intervals have been classified in different phases based on their\nthroughput and the utilization of the cores. The results of implementing the\nphase detection technique are investigated on a single core processor and also\non a multicore processor. To minimize the profiling overhead, an algorithm for\nthe dynamic adjustment of the profiling intervals is presented. It is based on\nthe behavior of the program and reduces the profiling overhead more than three\nfold. The results are obtained from executing multiprocessor benchmarks on a\ngiven processor. In order to show the program phases clearly, throughput and\nutilization of execution intervals are presented on a scatter plot. The results\nare presented for both fixed and variable intervals.\n", "versions": [{"version": "v1", "created": "Wed, 13 Jan 2010 18:47:44 GMT"}], "update_date": "2010-01-14", "authors_parsed": [["Jooya", "A. Z.", ""], ["Analoui", "M.", ""]]}, {"id": "1001.3716", "submitter": "T.R. Gopalakrishnan Nair", "authors": "Vaidehi. M., T.R. Gopalakrishnan Nair", "title": "A Multicore Processor based Real-Time System for Automobile management\n  application", "comments": "9 pages, 4 figures", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.AR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In this paper we propose an Intelligent Management System which is capable of\nmanaging the automobile functions using the rigorous real-time principles and a\nmulticore processor in order to realize higher efficiency and safety for the\nvehicle. It depicts how various automobile functionalities can be fine grained\nand treated to fit in real time concepts. It also shows how the modern\nmulticore processors can be of good use in organizing vast amounts of\ncorrelated functions to be executed in real-time with excellent time\ncommitments. The modeling of the automobile tasks with real time commitments,\norganizing appropriate scheduling for various real time tasks and the usage of\na multicore processor enables the system to realize higher efficiency and offer\nbetter safety levels to the vehicle. The industry available real time operating\nsystem is used for scheduling various tasks and jobs on the multicore\nprocessor.\n", "versions": [{"version": "v1", "created": "Thu, 21 Jan 2010 04:34:07 GMT"}], "update_date": "2016-09-08", "authors_parsed": [["M.", "Vaidehi.", ""], ["Nair", "T. R. Gopalakrishnan", ""]]}, {"id": "1001.3781", "submitter": "T.R. Gopalakrishnan Nair", "authors": "T.R. Gopalakrishnan Nair, R. Selva rani, H.K. Krutthika", "title": "An Architectural Approach for Decoding and Distributing Functions in\n  FPUs in a Functional Processor System", "comments": "6 pages, 5 figures", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.AR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The main goal of this research is to develop the concepts of a revolutionary\nprocessor system called Functional Processor System. The fairly novel work\ncarried out in this proposal concentrates on decoding of function pipelines and\ndistributing it in FPUs as a part of scheduling approach. As the functional\nprograms are super-level programs that entails requirements only at functional\nlevel, decoding of functions and distribution of functions in the heterogeneous\nfunctional processor units are a challenge. We explored the possibilities of\nsegregation of the functions from the application program and distributing the\nfunctions on the relevant FPUs by using address mapping techniques. Here we\npursue the perception of feeding the functions into the processor farm rather\nthan the processor fetching the instructions or functions and executing it.\nThis work is carried out at theoretical levels and it requires a long way to go\nin the realization of this work in hardware perhaps with a large industrial\nteam with a pragmatic time frame.\n", "versions": [{"version": "v1", "created": "Thu, 21 Jan 2010 11:31:11 GMT"}], "update_date": "2016-09-08", "authors_parsed": [["Nair", "T. R. Gopalakrishnan", ""], ["rani", "R. Selva", ""], ["Krutthika", "H. K.", ""]]}, {"id": "1001.4493", "submitter": "Sandor P. Fekete", "authors": "Josef Angermeier, Sandor P. Fekete, Tom Kamphans, Nils Schweer,\n  Juergen Teich", "title": "Maintaining Virtual Areas on FPGAs using Strip Packing with Delays", "comments": "9 pages, 10 figures, 1 table, Latex, to appear in 17th Reconfigurable\n  Architectures Workshop (RAW 2010)", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.AR cs.DS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Every year, the computing resources available on dynamically partially\nreconfigurable devices increase enormously. In the near future, we expect many\napplications to run on a single reconfigurable device. In this paper, we\npresent a concept for multitasking on dynamically partially reconfigurable\nsystems called virtual area management. We explain its advantages, show its\nchallenges, and discuss possible solutions. Furthermore, we investigate one\nproblem in more detail: Packing modules with time-varying resource requests.\nThis problem from the reconfigurable computing field results in a completely\nnew optimization problem not tackled before. ILP-based and heuristic approaches\nare compared in an experimental study and the drawbacks and benefits discussed.\n", "versions": [{"version": "v1", "created": "Mon, 25 Jan 2010 17:36:32 GMT"}], "update_date": "2010-01-26", "authors_parsed": [["Angermeier", "Josef", ""], ["Fekete", "Sandor P.", ""], ["Kamphans", "Tom", ""], ["Schweer", "Nils", ""], ["Teich", "Juergen", ""]]}, {"id": "1001.4694", "submitter": "Maurizio Martina", "authors": "Maurizio Martina, Guido Masera", "title": "VLSI Architectures for WIMAX Channel Decoders", "comments": "To appear in the book \"WIMAX, New Developments\", M. Upena, D. Dalal,\n  Y. Kosta (Ed.), ISBN978-953-7619-53-4", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.AR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This chapter describes the main architectures proposed in the literature to\nimplement the channel decoders required by the WiMax standard, namely\nconvolutional codes, turbo codes (both block and convolutional) and LDPC. Then\nit shows a complete design of a convolutional turbo code encoder/decoder system\nfor WiMax.\n", "versions": [{"version": "v1", "created": "Tue, 26 Jan 2010 14:11:18 GMT"}], "update_date": "2010-01-27", "authors_parsed": [["Martina", "Maurizio", ""], ["Masera", "Guido", ""]]}]