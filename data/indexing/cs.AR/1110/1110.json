[{"id": "1110.1393", "submitter": "Dmitri Strukov B", "authors": "Fabien Alibart, Ligang Gao, Brian Hoskins, and Dmitri Strukov", "title": "High-Precision Tuning of State for Memristive Devices by Adaptable\n  Variation-Tolerant Algorithm", "comments": "20 pages, 6 figures", "journal-ref": "Nanotechnology, vol. 23, art. 075201, 2012", "doi": "10.1088/0957-4484/23/7/075201", "report-no": null, "categories": "cond-mat.mtrl-sci cs.AR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Using memristive properties common for the titanium dioxide thin film\ndevices, we designed a simple write algorithm to tune device conductance at a\nspecific bias point to 1% relative accuracy (which is roughly equivalent to\n7-bit precision) within its dynamic range even in the presence of large\nvariations in switching behavior. The high precision state is nonvolatile and\nthe results are likely to be sustained for nanoscale memristive devices because\nof the inherent filamentary nature of the resistive switching. The proposed\nfunctionality of memristive devices is especially attractive for analog\ncomputing with low precision data. As one representative example we demonstrate\nhybrid circuitry consisting of CMOS summing amplifier and two memristive\ndevices to perform analog multiply and accumulate computation, which is a\ntypical bottleneck operation in information processing.\n", "versions": [{"version": "v1", "created": "Thu, 6 Oct 2011 20:55:19 GMT"}], "update_date": "2015-05-30", "authors_parsed": [["Alibart", "Fabien", ""], ["Gao", "Ligang", ""], ["Hoskins", "Brian", ""], ["Strukov", "Dmitri", ""]]}, {"id": "1110.1549", "submitter": "Sunil", "authors": "Sunil Gavaskar Reddy and Rajendra prasad", "title": "Power comparison of CMOS and adiabatic full adder circuit", "comments": "11pages", "journal-ref": "International Journal of VLSI design & Communication Systems\n  (VLSICS) Vol.2, No.3, September 2011", "doi": "10.5121/vlsic.2011.2306", "report-no": null, "categories": "cs.AR", "license": "http://creativecommons.org/licenses/by-nc-sa/3.0/", "abstract": "  Full adders are important components in applications such as digital signal\nprocessors (DSP) architectures and microprocessors. Apart from the basic\naddition adders also used in performing useful operations such as subtraction,\nmultiplication, division, address calculation, etc. In most of these systems\nthe adder lies in the critical path that determines the overall performance of\nthe system. In this paper conventional complementary metal oxide semiconductor\n(CMOS) and adiabatic adder circuits are analyzed in terms of power and\ntransistor count using 0.18UM technology.\n", "versions": [{"version": "v1", "created": "Fri, 7 Oct 2011 14:40:51 GMT"}], "update_date": "2011-10-10", "authors_parsed": [["Reddy", "Sunil Gavaskar", ""], ["prasad", "Rajendra", ""]]}, {"id": "1110.3281", "submitter": "Ramkumar Balasubramanian", "authors": "B.Ramkumar, V.Sreedeep and Harish M Kittur", "title": "Faster Energy Efficient Dadda Based Baugh-Wooley Multipliers", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.AR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In this work faster Baugh-Wooley multiplication has been achieved by using a\ncombination of two design techniques: partition of the partial products into\ntwo parts for independent parallel column compression and acceleration of the\nfinal addition using a hybrid adder proposed in this work. Based on the\nproposed techniques 8, 16, 32 and 64-bit Dadda based Baugh-Wooley multipliers\nhas been developed and compared with the regular Baugh-Wooley multiplier. The\nperformance of the proposed multiplier is analyzed by evaluating the delay,\narea and power, with 180 nm process technologies on interconnect and layout\nusing industry standard design and layout tools. The result analysis shows that\nthe 64-bit proposed multiplier is as much as 26.9% faster than the regular\nBaugh-Wooley multiplier and requires only 2.21% more power. Also the\npower-delay product of the proposed design is significantly lower than that of\nthe regular Baugh-Wooley multiplier.\n", "versions": [{"version": "v1", "created": "Fri, 14 Oct 2011 17:52:39 GMT"}, {"version": "v2", "created": "Fri, 3 Feb 2012 09:24:19 GMT"}, {"version": "v3", "created": "Fri, 2 Mar 2012 13:55:38 GMT"}, {"version": "v4", "created": "Thu, 26 Apr 2012 11:52:33 GMT"}], "update_date": "2015-03-13", "authors_parsed": [["Ramkumar", "B.", ""], ["Sreedeep", "V.", ""], ["Kittur", "Harish M", ""]]}, {"id": "1110.3376", "submitter": "Harish M Kittur", "authors": "V. Sreedeep, B. Ramkumar and Harish M Kittur", "title": "Faster and Low Power Twin Precision Multiplier", "comments": "5 pages, 10 figures and 5 tables", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.AR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In this work faster unsigned multiplication has been achieved by using a\ncombination of High Performance Multiplication [HPM] column reduction technique\nand implementing a N-bit multiplier using 4 N/2-bit multipliers (recursive\nmultiplication) and acceleration of the final addition using a hybrid adder.\nLow power has been achieved by using clock gating technique. Based on the\nproposed technique 16 and 32-bit multipliers are developed. The performance of\nthe proposed multiplier is analyzed by evaluating the delay, area and power,\nwith TCBNPHP 90 nm process technology on interconnect and layout using Cadence\nNC launch, RTL compiler and ENCOUNTER tools. The results show that the 32-bit\nproposed multiplier is as much as 22% faster, occupies only 3% more area and\nconsumes 30% lesser power with respect to the recently reported twin precision\nmultiplier.\n", "versions": [{"version": "v1", "created": "Sat, 15 Oct 2011 03:54:27 GMT"}, {"version": "v2", "created": "Wed, 19 Oct 2011 06:45:18 GMT"}], "update_date": "2011-10-20", "authors_parsed": [["Sreedeep", "V.", ""], ["Ramkumar", "B.", ""], ["Kittur", "Harish M", ""]]}, {"id": "1110.3535", "submitter": "Balaji Venu", "authors": "Balaji Venu", "title": "Multi-core processors - An overview", "comments": "6 pages, Best Literature review", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.AR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Microprocessors have revolutionized the world we live in and continuous\nefforts are being made to manufacture not only faster chips but also smarter\nones. A number of techniques such as data level parallelism, instruction level\nparallelism and hyper threading (Intel's HT) already exists which have\ndramatically improved the performance of microprocessor cores. This paper\nbriefs on evolution of multi-core processors followed by introducing the\ntechnology and its advantages in today's world. The paper concludes by\ndetailing on the challenges currently faced by multi-core processors and how\nthe industry is trying to address these issues.\n", "versions": [{"version": "v1", "created": "Sun, 16 Oct 2011 22:48:56 GMT"}], "update_date": "2011-10-18", "authors_parsed": [["Venu", "Balaji", ""]]}, {"id": "1110.3584", "submitter": "Harish M Kittur", "authors": "Ramkumar B. and Harish M. Kittur", "title": "Optimal Final Carry Propagate Adder Design for Parallel Multipliers", "comments": "7 pages, 7 figures, 2 tables, Submitted 0n 26 August 2011 to IEEE\n  Transactions on VLSI Systems", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.AR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Based on the ASIC layout level simulation of 7 types of adder structures each\nof four different sizes, i.e. a total of 28 adders, we propose expressions for\nthe width of each of the three regions of the final Carry Propagate Adder (CPA)\nto be used in parallel multipliers. We also propose the types of adders to be\nused in each region that would lead to the optimal performance of the hybrid\nfinal adders in parallel multipliers. This work evaluates the complete\nperformance of the analyzed designs in terms of delay, area, power through\ncustom design and layout in 0.18 um CMOS process technology.\n", "versions": [{"version": "v1", "created": "Mon, 17 Oct 2011 06:16:05 GMT"}], "update_date": "2011-10-18", "authors_parsed": [["B.", "Ramkumar", ""], ["Kittur", "Harish M.", ""]]}, {"id": "1110.3655", "submitter": "Jorge Silva L", "authors": "Jorge Luiz e Silva and Joelmir Jose Lopes and Bruno de Abreu Silva and\n  Antonio Carlos Fernandes da Silva", "title": "Accelerating Algorithms using a Dataflow Graph in a Reconfigurable\n  System", "comments": "13 pages, 8 figures, 1 listing, 1 algorithm, 1 Table", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.AR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In this paper, the acceleration of algorithms using a design of a field\nprogrammable gate array (FPGA) as a prototype of a static dataflow architecture\nis discussed. The static dataflow architecture using operators interconnected\nby parallel buses was implemented. Accelerating algorithms using a dataflow\ngraph in a reconfigurable system shows the potential for high computation\nrates. The results of benchmarks implemented using the static dataflow\narchitecture are reported at the end of this paper.\n", "versions": [{"version": "v1", "created": "Mon, 17 Oct 2011 13:00:10 GMT"}], "update_date": "2015-03-13", "authors_parsed": [["Silva", "Jorge Luiz e", ""], ["Lopes", "Joelmir Jose", ""], ["Silva", "Bruno de Abreu", ""], ["da Silva", "Antonio Carlos Fernandes", ""]]}, {"id": "1110.4675", "submitter": "EPTCS", "authors": "Peter-Michael Seidel (Advanced Micro Devices)", "title": "Formal Verification of an Iterative Low-Power x86 Floating-Point\n  Multiplier with Redundant Feedback", "comments": "In Proceedings ACL2 2011, arXiv:1110.4473", "journal-ref": "EPTCS 70, 2011, pp. 70-83", "doi": "10.4204/EPTCS.70.6", "report-no": null, "categories": "cs.LO cs.AR cs.MS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We present the formal verification of a low-power x86 floating-point\nmultiplier. The multiplier operates iteratively and feeds back intermediate\nresults in redundant representation. It supports x87 and SSE instructions in\nvarious precisions and can block the issuing of new instructions. The design\nhas been optimized for low-power operation and has not been constrained by the\nformal verification effort. Additional improvements for the implementation were\nidentified through formal verification. The formal verification of the design\nalso incorporates the implementation of clock-gating and control logic. The\ncore of the verification effort was based on ACL2 theorem proving.\nAdditionally, model checking has been used to verify some properties of the\nfloating-point scheduler that are relevant for the correct operation of the\nunit.\n", "versions": [{"version": "v1", "created": "Fri, 21 Oct 2011 00:45:53 GMT"}], "update_date": "2011-10-24", "authors_parsed": [["Seidel", "Peter-Michael", "", "Advanced Micro Devices"]]}, {"id": "1110.6865", "submitter": "Maxim Vashkevich", "authors": "Maxim Vashkevich, Marek Parfieniuk and Alexander Petrovsky", "title": "FPGA implementation of short critical path CORDIC-based approximation of\n  the eight-point DCT", "comments": "4 pages, 5 figures", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.AR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This paper presents an efficient approach for multiplierless implementation\nfor eight-point DCT approximation, which based on coordinate rotation digital\ncomputer (CORDIC) algorithm. The main design objective is to make critical path\nof corresponding circuits shorter and reduce the combinational delay of\nproposed scheme.\n", "versions": [{"version": "v1", "created": "Mon, 31 Oct 2011 17:13:25 GMT"}], "update_date": "2011-11-01", "authors_parsed": [["Vashkevich", "Maxim", ""], ["Parfieniuk", "Marek", ""], ["Petrovsky", "Alexander", ""]]}]