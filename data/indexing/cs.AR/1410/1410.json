[{"id": "1410.1267", "submitter": "Alex James Dr", "authors": "Akshay Kumar Maan, Dinesh Sasi Kumar, Sherin Sugathan, and Alex\n  Pappachen James", "title": "Memristive Threshold Logic Circuit Design of Fast Moving Object\n  Detection", "comments": "To be published in IEEE Transactions on Very Large Scale Integration\n  (VLSI) Systems", "journal-ref": null, "doi": "10.1109/TVLSI.2014.2359801", "report-no": null, "categories": "cs.CV cs.AR cs.ET", "license": "http://creativecommons.org/licenses/by-nc-sa/3.0/", "abstract": "  Real-time detection of moving objects involves memorisation of features in\nthe template image and their comparison with those in the test image. At high\nsampling rates, such techniques face the problems of high algorithmic\ncomplexity and component delays. We present a new resistive switching based\nthreshold logic cell which encodes the pixels of a template image. The cell\ncomprises a voltage divider circuit that programs the resistances of the\nmemristors arranged in a single node threshold logic network and the output is\nencoded as a binary value using a CMOS inverter gate. When a test image is\napplied to the template-programmed cell, a mismatch in the respective pixels is\nseen as a change in the output voltage of the cell. The proposed cell when\ncompared with CMOS equivalent implementation shows improved performance in\narea, leakage power, power dissipation and delay.\n", "versions": [{"version": "v1", "created": "Mon, 6 Oct 2014 06:52:57 GMT"}], "update_date": "2014-10-07", "authors_parsed": [["Maan", "Akshay Kumar", ""], ["Kumar", "Dinesh Sasi", ""], ["Sugathan", "Sherin", ""], ["James", "Alex Pappachen", ""]]}, {"id": "1410.4460", "submitter": "Mani Bastani Parizi", "authors": "Alexios Balatsoukas-Stimming, Mani Bastani Parizi, Andreas Burg", "title": "On Metric Sorting for Successive Cancellation List Decoding of Polar\n  Codes", "comments": "To be presented in 2015 IEEE International Symposium on Circuits and\n  Systems (ISCAS'2015)", "journal-ref": null, "doi": "10.1109/ISCAS.2015.7169066", "report-no": null, "categories": "cs.AR cs.IT math.IT", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We focus on the metric sorter unit of successive cancellation list decoders\nfor polar codes, which lies on the critical path in all current hardware\nimplementations of the decoder. We review existing metric sorter architectures\nand we propose two new architectures that exploit the structure of the path\nmetrics in a log-likelihood ratio based formulation of successive cancellation\nlist decoding. Our synthesis results show that, for the list size of $L=32$,\nour first proposed sorter is $14\\%$ faster and $45\\%$ smaller than existing\nsorters, while for smaller list sizes, our second sorter has a higher delay in\nreturn for up to $36\\%$ reduction in the area.\n", "versions": [{"version": "v1", "created": "Thu, 16 Oct 2014 15:07:54 GMT"}, {"version": "v2", "created": "Mon, 26 Jan 2015 21:05:54 GMT"}], "update_date": "2016-02-15", "authors_parsed": [["Balatsoukas-Stimming", "Alexios", ""], ["Parizi", "Mani Bastani", ""], ["Burg", "Andreas", ""]]}, {"id": "1410.7560", "submitter": "Rourab Paul", "authors": "Rourab Paul, Amlan Chakrabarti, and Ranjan Ghosh", "title": "Multi Core SSL/TLS Security Processor Architecture Prototype Design with\n  automated Preferential Algorithm in FPGA", "comments": "This is Manuscript", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.AR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In this paper a pipelined architecture of a high speed network security\nprocessor (NSP) for SSL,TLS protocol is implemented on a system on chip (SOC)\nwhere hardware information of all encryption, hashing and key exchange\nalgorithms are stored in flash memory in terms of bit files, in contrary to\nrelated works where all are actually implemented in hardware. The NSP finds\napplications in e-commerce, virtual private network (VPN) and in other fields\nthat require data confidentiality. The motivation of the present work is to\ndynamically execute applications with stipulated throughput within budgeted\nhardware resource and power. A preferential algorithm choosing an appropriate\ncipher suite is proposed, which is based on Efficient System Index (ESI) budget\ncomprising of power, throughput and resource given by the user. The bit files\nof the chosen security algorithms are downloaded from the flash memory to the\npartial region of field programmable gate array (FPGA). The proposed SOC\ncontrols data communication between an application running in a system through\na PCI and the Ethernet interface of a network. Partial configuration feature is\nused in ISE14.4 suite with ZYNQ 7z020-clg484 FPGA platform. The performances\n", "versions": [{"version": "v1", "created": "Tue, 28 Oct 2014 09:11:21 GMT"}], "update_date": "2016-11-25", "authors_parsed": [["Paul", "Rourab", ""], ["Chakrabarti", "Amlan", ""], ["Ghosh", "Ranjan", ""]]}, {"id": "1410.8772", "submitter": "Anish Varghese", "authors": "Anish Varghese, Bob Edwards, Gaurav Mitra and Alistair P. Rendell", "title": "Programming the Adapteva Epiphany 64-core Network-on-chip Coprocessor", "comments": "14 pages, submitted to IJHPCA Journal special edition", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.AR cs.DC cs.MS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In the construction of exascale computing systems energy efficiency and power\nconsumption are two of the major challenges. Low-power high performance\nembedded systems are of increasing interest as building blocks for large scale\nhigh- performance systems. However, extracting maximum performance out of such\nsystems presents many challenges. Various aspects from the hardware\narchitecture to the programming models used need to be explored. The Epiphany\narchitecture integrates low-power RISC cores on a 2D mesh network and promises\nup to 70 GFLOPS/Watt of processing efficiency. However, with just 32 KB of\nmemory per eCore for storing both data and code, and only low level inter-core\ncommunication support, programming the Epiphany system presents several\nchallenges. In this paper we evaluate the performance of the Epiphany system\nfor a variety of basic compute and communication operations. Guided by this\ndata we explore strategies for implementing scientific applications on memory\nconstrained low-powered devices such as the Epiphany. With future systems\nexpected to house thousands of cores in a single chip, the merits of such\narchitectures as a path to exascale is compared to other competing systems.\n", "versions": [{"version": "v1", "created": "Thu, 30 Oct 2014 08:29:11 GMT"}], "update_date": "2014-11-03", "authors_parsed": [["Varghese", "Anish", ""], ["Edwards", "Bob", ""], ["Mitra", "Gaurav", ""], ["Rendell", "Alistair P.", ""]]}]