[{"id": "1303.2175", "submitter": "Keivan Navi", "authors": "Samira Shirinabadi Farahani, Ronak Zarhoun, Mohammad Hossein Moaiyeri\n  and Keivan Navi", "title": "An efficient cntfet-based 7-input minority gate", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.AR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Complementary metal oxide semiconductor technology (CMOS) has been faced\ncritical challenges in nano-scale regime. CNTFET (Carbon Nanotube Field effect\ntransistor) technology is a promising alternative for CMOS technology. In this\npaper, we proposed a novel 7-input minority gate in CNTFET technology that has\nonly 9 CNTFETs. Minority function is utilized in the voting systems for\ndecision making and also it is used in data mining. This proposed 7-input\nminority gate is utilized less fewer transistors than the conventional CMOS\nmethod which utilizes many transistors for implementing sum of products. By\nmeans of this proposed 7-input minority gate, a 4-input NAND gate can be\nimplemented, which gets better the conventional design in terms of delay and\nenergy efficiency and has much more deriving power at its output.\n", "versions": [{"version": "v1", "created": "Sat, 9 Mar 2013 06:57:21 GMT"}], "update_date": "2013-03-12", "authors_parsed": [["Farahani", "Samira Shirinabadi", ""], ["Zarhoun", "Ronak", ""], ["Moaiyeri", "Mohammad Hossein", ""], ["Navi", "Keivan", ""]]}, {"id": "1303.4892", "submitter": "Raphael kena Poss", "authors": "Raphael Poss", "title": "On whether and how D-RISC and Microgrids can be kept relevant\n  (self-assessment report)", "comments": "45 pages, 5 figures, 2 tables", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.AR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This report lays flat my personal views on D-RISC and Microgrids as of March\n2013. It reflects the opinions and insights that I have gained from working on\nthis project during the period 2008-2013. This report is structed in two parts:\ndeconstruction and reconstruction. In the deconstruction phase, I review what I\nbelieve are the fundamental motivation and goals of the D-RISC/Microgrids\nenterprise, and identify what I judge are shortcomings: that the project did\nnot deliver on its expectations, that fundamental questions are left\nunanswered, and that its original motivation may not even be relevant in\nscientific research any more in this day and age. In the reconstruction phase,\nI start by identifying the merits of the current D-RISC/Microgrids technology\nand know-how taken at face value, re-motivate its existence from a different\nangle, and suggest new, relevant research questions that could justify\ncontinued scientific investment.\n", "versions": [{"version": "v1", "created": "Wed, 20 Mar 2013 10:17:54 GMT"}], "update_date": "2013-03-21", "authors_parsed": [["Poss", "Raphael", ""]]}, {"id": "1303.4949", "submitter": "Claudia Picardi", "authors": "Fabio Varesano", "title": "FreeIMU: An Open Hardware Framework for Orientation and Motion Sensing", "comments": "10 pages, 1 figure", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.ET cs.AR cs.HC", "license": "http://creativecommons.org/licenses/by/3.0/", "abstract": "  Orientation and Motion Sensing are widely implemented on various consumer\nproducts, such as mobile phones, tablets and cameras as they enable immediate\ninteraction with virtual information. The prototyping phase of any orientation\nand motion sensing capable device is however a quite difficult process as it\nmay involve complex hardware designing, math algorithms and programming.\n  In this paper, we present FreeIMU, an Open Hardware Framework for prototyping\norientation and motion sensing capable devices. The framework consists in a\nsmall circuit board containing various sensors and a software library, built on\ntop of the Arduino platform. Both the hardware and library are released under\nopen licences and supported by an active community allowing to be implemented\ninto research and commercial projects.\n", "versions": [{"version": "v1", "created": "Wed, 20 Mar 2013 14:25:14 GMT"}], "update_date": "2013-03-21", "authors_parsed": [["Varesano", "Fabio", ""]]}, {"id": "1303.5762", "submitter": "Emna Kallel Laadhar", "authors": "Emna Kallel, Yassine Aoudni, Mohamed Abid", "title": "Object-oriented approach to Rapid Custom Instruction design", "comments": "IEEE 2012", "journal-ref": null, "doi": "10.1109/FTFC.2012.6231733", "report-no": null, "categories": "cs.AR", "license": "http://creativecommons.org/licenses/publicdomain/", "abstract": "  Due to continuous evolution of Systems-on-Chip (SoC), the complexity of their\ndesign and development has augmented exponentially. To deal with the\never-growing complexity of such embedded systems, we introduce, in this paper,\nan object-oriented approach to rapid SoC design using auto-generation of\nhardware custom instructions to simplify and accelerate the SoC design process.\nIn our approach, a Data Flow Graph (DFG) is adopted as a representation of the\narithmetic operation to convert it to a custom instruction. Then VHDL code will\nbe automatically generated. The input C code is automatically updated for\ncalling the new hardware components. To prove the effectiveness of the proposed\napproach, a Java source code framework named Automatic Custom Architecture\ngenerator (ACAgen) is developed. Experimental results on 3D sample application\nvalidate our approach and demonstrate how the proposed framework facilitates\nand accelerates the SoC design process at low costs.\n", "versions": [{"version": "v1", "created": "Thu, 21 Mar 2013 22:53:24 GMT"}], "update_date": "2016-11-15", "authors_parsed": [["Kallel", "Emna", ""], ["Aoudni", "Yassine", ""], ["Abid", "Mohamed", ""]]}, {"id": "1303.6849", "submitter": "Qi Shen", "authors": "Qi Shen, Lei Zhao, Shubin Liu, Shengkai Liao, Binxiang Qi, Xueye Hu,\n  Chengzhi Peng, Qi An", "title": "A Fast Improved Fat Tree Encoder for Wave Union TDC in an FPGA", "comments": "Submitted to \"Chinese Physics C\"", "journal-ref": null, "doi": "10.1088/1674-1137/37/10/106102", "report-no": null, "categories": "physics.ins-det cs.AR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Up to the present, the wave union method can achieve the best timing\nperformance in FPGA based TDC designs. However, it should be guaranteed in such\na structure that the non-thermometer code to binary code (NTH2B) encoding\nprocess should be finished within just one system clock cycle. So the\nimplementation of the NTH2B encoder is quite challenging considering the high\nspeed requirement. Besides, the high resolution wave union TDC also demands the\nencoder to convert an ultra-wide input code to a binary code. We present a fast\nimproved fat tree encoder (IFTE) to fulfill such requirements, in which bubble\nerror suppression is also integrated. With this encoder scheme, a wave union\nTDC with 7.7 ps RMS and 3.8 ps effective bin size was implemented in an FPGA\nfrom Xilinx Virtex 5 family. An encoding time of 8.33 ns was achieved for a\n276-bit non-thermometer code to a 9-bit binary code conversion. We conducted a\nseries of tests on the oscillating period of the wave union launcher, as well\nas the overall performance of the TDC; test results indicate that the IFTE\nworks well. In fact, in the implementation of this encoder, no manual routing\nor special constrains were required; therefore, this IFTE structure could also\nbe further applied in other delay chain based FPGA TDCs.\n", "versions": [{"version": "v1", "created": "Wed, 27 Mar 2013 14:56:33 GMT"}], "update_date": "2015-06-15", "authors_parsed": [["Shen", "Qi", ""], ["Zhao", "Lei", ""], ["Liu", "Shubin", ""], ["Liao", "Shengkai", ""], ["Qi", "Binxiang", ""], ["Hu", "Xueye", ""], ["Peng", "Chengzhi", ""], ["An", "Qi", ""]]}, {"id": "1303.7127", "submitter": "Alexios Balatsoukas-Stimming", "authors": "A. Balatsoukas-Stimming, A. J. Raymond, W. J. Gross, and A. Burg", "title": "Hardware Architecture for List SC Decoding of Polar Codes", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.IT cs.AR math.IT", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We present a hardware architecture and algorithmic improvements for list SC\ndecoding of polar codes. More specifically, we show how to completely avoid\ncopying of the likelihoods, which is algorithmically the most cumbersome part\nof list SC decoding. The hardware architecture was synthesized for a\nblocklength of N = 1024 bits and list sizes L = 2, 4 using a UMC 90nm VLSI\ntechnology. The resulting decoder can achieve a coded throughput of 181 Mbps at\na frequency of 459 MHz.\n", "versions": [{"version": "v1", "created": "Thu, 28 Mar 2013 14:04:54 GMT"}, {"version": "v2", "created": "Fri, 14 Jun 2013 14:51:17 GMT"}, {"version": "v3", "created": "Thu, 27 Feb 2014 15:53:10 GMT"}], "update_date": "2014-02-28", "authors_parsed": [["Balatsoukas-Stimming", "A.", ""], ["Raymond", "A. J.", ""], ["Gross", "W. J.", ""], ["Burg", "A.", ""]]}]