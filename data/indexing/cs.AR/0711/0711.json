[{"id": "0711.0838", "submitter": "Kees Middelburg", "authors": "J. A. Bergstra, C. A. Middelburg", "title": "On the operating unit size of load/store architectures", "comments": "23 pages; minor errors corrected, explanations added, references\n  replaced", "journal-ref": "Mathematical Structures in Computer Science, 20(3):395--417, 2010", "doi": "10.1017/S0960129509990314", "report-no": "PRG0703", "categories": "cs.AR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We introduce a strict version of the concept of a load/store instruction set\narchitecture in the setting of Maurer machines. We take the view that\ntransformations on the states of a Maurer machine are achieved by applying\nthreads as considered in thread algebra to the Maurer machine. We study how the\ntransformations on the states of the main memory of a strict load/store\ninstruction set architecture that can be achieved by applying threads depend on\nthe operating unit size, the cardinality of the instruction set, and the\nmaximal number of states of the threads.\n", "versions": [{"version": "v1", "created": "Tue, 6 Nov 2007 11:16:34 GMT"}, {"version": "v2", "created": "Tue, 25 Nov 2008 08:46:40 GMT"}], "update_date": "2010-05-12", "authors_parsed": [["Bergstra", "J. A.", ""], ["Middelburg", "C. A.", ""]]}, {"id": "0711.2383", "submitter": "Barbara Cerato", "authors": "Barbara Cerato, Guido Masera and Emanuele Viterbo", "title": "Decoding the Golden Code: a VLSI design", "comments": "25 pages, 10 figures", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.AR", "license": null, "abstract": "  The recently proposed Golden code is an optimal space-time block code for 2 X\n2 multiple-input multiple-output (MIMO) systems. The aim of this work is the\ndesign of a VLSI decoder for a MIMO system coded with the Golden code. The\narchitecture is based on a rearrangement of the sphere decoding algorithm that\nachieves maximum-likelihood (ML) decoding performance. Compared to other\napproaces, the proposed solution exhibits an inherent flexibility in terms of\nmodulation schemes QAM modulation size and this makes our architecture\nparticularly suitable for adaptive modulation schemes.\n", "versions": [{"version": "v1", "created": "Thu, 15 Nov 2007 11:55:30 GMT"}], "update_date": "2007-11-16", "authors_parsed": [["Cerato", "Barbara", ""], ["Masera", "Guido", ""], ["Viterbo", "Emanuele", ""]]}, {"id": "0711.2671", "submitter": "Himanshu Thapliyal", "authors": "Himanshu Thapliyal, Hamid R. Arabnia, Rajnish Bajpai, Kamal K. Sharma", "title": "Combined Integer and Variable Precision (CIVP) Floating Point\n  Multiplication Architecture for FPGAs", "comments": "Published in Proceedings of the 2007 International Conference on\n  Parallel and Distributed Processing Techniques and Applications (PDPTA'07),\n  Las Vegas, U.S.A, June 2007, Volume 1, pp. 449-450.(CSREA Press)", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.AR", "license": null, "abstract": "  In this paper, we propose an architecture/methodology for making FPGAs\nsuitable for integer as well as variable precision floating point\nmultiplication. The proposed work will of great importance in applications\nwhich requires variable precision floating point multiplication such as\nmulti-media processing applications. In the proposed architecture/methodology,\nwe propose the replacement of existing 18x18 bit and 25x18 bit dedicated\nmultipliers in FPGAs with dedicated 24x24 bit and 24x9 bit multipliers,\nrespectively. We have proved that our approach of providing the dedicated 24x24\nbit and 24x9 bit multipliers in FPGAs will make them efficient for performing\ninteger as well as single precision, double precision, and Quadruple precision\nfloating point multiplications.\n", "versions": [{"version": "v1", "created": "Fri, 16 Nov 2007 20:18:32 GMT"}], "update_date": "2007-11-19", "authors_parsed": [["Thapliyal", "Himanshu", ""], ["Arabnia", "Hamid R.", ""], ["Bajpai", "Rajnish", ""], ["Sharma", "Kamal K.", ""]]}, {"id": "0711.2674", "submitter": "Himanshu Thapliyal", "authors": "Himanshu Thapliyal, Hamid R. Arabnia, Rajnish Bajpai, Kamal K. Sharma", "title": "Partial Reversible Gates(PRG) for Reversible BCD Arithmetic", "comments": "Published in Proceedings of the 2007 International Conference on\n  Computer Design(CDES'07), Las Vegas, U.S.A, June 2007, pp. 90-91(CSREA Press)", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.AR", "license": null, "abstract": "  IEEE 754r is the ongoing revision to the IEEE 754 floating point standard and\na major enhancement to the standard is the addition of decimal format.\nFurthermore, in the recent years reversible logic has emerged as a promising\ncomputing paradigm having its applications in low power CMOS, quantum\ncomputing, nanotechnology, and optical computing. The major goal in reversible\nlogic is to minimize the number of reversible gates and garbage outputs. Thus,\nthis paper proposes the novel concept of partial reversible gates that will\nsatisfy the reversibility criteria for specific cases in BCD arithmetic. The\npartial reversible gate is proposed to minimize the number of reversible gates\nand garbage outputs, while designing the reversible BCD arithmetic circuits.\n", "versions": [{"version": "v1", "created": "Fri, 16 Nov 2007 20:25:20 GMT"}], "update_date": "2007-11-19", "authors_parsed": [["Thapliyal", "Himanshu", ""], ["Arabnia", "Hamid R.", ""], ["Bajpai", "Rajnish", ""], ["Sharma", "Kamal K.", ""]]}]