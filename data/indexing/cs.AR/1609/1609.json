[{"id": "1609.00306", "submitter": "Milad Hashemi", "authors": "Milad Hashemi", "title": "On-Chip Mechanisms to Reduce Effective Memory Access Latency", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.AR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This dissertation develops hardware that automatically reduces the effective\nlatency of accessing memory in both single-core and multi-core systems. To\naccomplish this, the dissertation shows that all last level cache misses can be\nseparated into two categories: dependent cache misses and independent cache\nmisses. Independent cache misses have all of the source data that is required\nto generate the address of the memory access available on-chip, while dependent\ncache misses depend on data that is located off-chip. This dissertation\nproposes that dependent cache misses are accelerated by migrating the\ndependence chain that generates the address of the memory access to the memory\ncontroller for execution. Independent cache misses are accelerated using a new\nmode for runahead execution that only executes filtered dependence chains. With\nthese mechanisms, this dissertation demonstrates a 62% increase in performance\nand a 19% decrease in effective memory access latency for a quad-core processor\non a set of high memory intensity workloads.\n", "versions": [{"version": "v1", "created": "Thu, 1 Sep 2016 16:32:54 GMT"}], "update_date": "2016-09-02", "authors_parsed": [["Hashemi", "Milad", ""]]}, {"id": "1609.01585", "submitter": "Aleksandr Cariow", "authors": "Aleksandr Cariow and Galina Cariowa", "title": "A Hardware-Efficient Approach to Computing the Rotation Matrix from a\n  Quaternion", "comments": "5 pages, 5 figures", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.AR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In this paper, we have proposed a novel VLSI-oriented approach to computing\nthe rotation matrix entries from the quaternion coefficients. The advantage of\nthis approach is the complete elimination of multiplications and replacing them\nby less costly squarings. Our approach uses Logan's identity, which proposes to\nreplace the calculation of the product of two numbers on summing the squares\nvia the Binomial Theorem. Replacing multiplications by squarings implies\nreducing power consumption as well as decreases hardware circuit complexity.\n", "versions": [{"version": "v1", "created": "Tue, 6 Sep 2016 14:54:26 GMT"}], "update_date": "2016-09-07", "authors_parsed": [["Cariow", "Aleksandr", ""], ["Cariowa", "Galina", ""]]}, {"id": "1609.02067", "submitter": "Gennady Pekhimenko", "authors": "Gennady Pekhimenko", "title": "Practical Data Compression for Modern Memory Hierarchies", "comments": "PhD Thesis", "journal-ref": null, "doi": null, "report-no": "CMU-CS-16-116", "categories": "cs.AR cs.OS", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In this thesis, we describe a new, practical approach to integrating\nhardware-based data compression within the memory hierarchy, including on-chip\ncaches, main memory, and both on-chip and off-chip interconnects. This new\napproach is fast, simple, and effective in saving storage space. A key insight\nin our approach is that access time (including decompression latency) is\ncritical in modern memory hierarchies. By combining inexpensive hardware\nsupport with modest OS support, our holistic approach to compression achieves\nsubstantial improvements in performance and energy efficiency across the memory\nhierarchy. Using this new approach, we make several major contributions in this\nthesis. First, we propose a new compression algorithm, Base-Delta-Immediate\nCompression (BDI), that achieves high compression ratio with very low\ncompression/decompression latency. BDI exploits the existing low dynamic range\nof values present in many cache lines to compress them to smaller sizes using\nBase+Delta encoding. Second, we observe that the compressed size of a cache\nblock can be indicative of its reuse. We use this observation to develop a new\ncache insertion policy for compressed caches, the Size-based Insertion Policy\n(SIP), which uses the size of a compressed block as one of the metrics to\npredict its potential future reuse. Third, we propose a new main memory\ncompression framework, Linearly Compressed Pages (LCP), that significantly\nreduces the complexity and power cost of supporting main memory compression. We\ndemonstrate that any compression algorithm can be adapted to fit the\nrequirements of LCP, and that LCP can be efficiently integrated with the\nexisting cache compression designs, avoiding extra compression/decompression.\n", "versions": [{"version": "v1", "created": "Wed, 7 Sep 2016 16:53:40 GMT"}], "update_date": "2016-09-08", "authors_parsed": [["Pekhimenko", "Gennady", ""]]}, {"id": "1609.03897", "submitter": "Reza Faghih Mirzaee", "authors": "Reza Faghih Mirzaee, Niloofar Farahani", "title": "Design of a Ternary Edge-Triggered D Flip-Flap-Flop for Multiple-Valued\n  Sequential Logic", "comments": "9 Pages, 7 Figures, 5 Tables", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.AR", "license": "http://creativecommons.org/licenses/by-nc-sa/4.0/", "abstract": "  Development of large computerized systems requires both combinational and\nsequential circuits. Registers and counters are two important examples of\nsequential circuits, which are widely used in practical applications like CPUs.\nThe basic element of sequential logic is Flip-Flop, which stores an input value\nand returns two outputs (Q and Q_bar). This paper presents an innovative\nternary D Flip-Flap-Flop, which offers circuit designers to customize their\ndesign by eliminating one of the outputs if it is not required. This unique\nfeature of the new design leads to considerable power reduction in comparison\nwith the previously presented structures. The proposed design is simulated and\ntested by HSPICE and 45 nm CMOS technology.\n", "versions": [{"version": "v1", "created": "Tue, 13 Sep 2016 15:33:06 GMT"}, {"version": "v2", "created": "Thu, 9 Mar 2017 18:33:06 GMT"}, {"version": "v3", "created": "Fri, 10 Mar 2017 16:15:21 GMT"}], "update_date": "2017-03-13", "authors_parsed": [["Mirzaee", "Reza Faghih", ""], ["Farahani", "Niloofar", ""]]}, {"id": "1609.04569", "submitter": "Masoom Nazari", "authors": "Masoom Nazari, Mina Zolfy Lighvan, Ziaeddin Daie Koozekonani, Ali\n  Sadeghi", "title": "FPGA Implementation of a Novel Image Steganography for Hiding Images", "comments": "please withdraw this paper because of crucial equation error in Table\n  1", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.AR cs.DC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  As the complexity of current data flow systems and according infrastructure\nnetworks increases, the security of data transition through such platforms\nbecomes more important. Thus, different areas of steganography turn to one of\nthe most challengeable topics of current researches. In this paper a novel\nmethod is presented to hide an image into the host image and Hardware/Software\ndesign is proposed to implement our stagenography system on FPGA- DE2 70 Altera\nboard. The size of the secret image is quadrant of the host image. Host image\nworks as a cipher key to completely distort and encrypt the secret image using\nXOR operand. Each pixel of the secret image is composed of 8 bits (4 bit-pair)\nin which each bit-pair is distorted by XORing it with two LSB bits of the host\nimage and putting the results in the location of two LSB bits of host image.\nThe experimental results show the effectiveness of the proposed method compared\nto the most recently proposed algorithms by considering that the obtained\ninformation entropy for encrypt image is approximately equal to 8.\n", "versions": [{"version": "v1", "created": "Thu, 15 Sep 2016 10:50:45 GMT"}, {"version": "v2", "created": "Thu, 29 Sep 2016 05:38:07 GMT"}, {"version": "v3", "created": "Sat, 1 Oct 2016 15:00:39 GMT"}], "update_date": "2016-10-04", "authors_parsed": [["Nazari", "Masoom", ""], ["Lighvan", "Mina Zolfy", ""], ["Koozekonani", "Ziaeddin Daie", ""], ["Sadeghi", "Ali", ""]]}, {"id": "1609.04913", "submitter": "Macauley Coggins", "authors": "Macauley Coggins", "title": "Design of an Optoelectronic State Machine with integrated BDD based\n  Optical logic", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.AR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In this paper I demonstrate a novel design for an optoelectronic State\nMachine which replaces input/output forming logic found in conventional state\nmachines with BDD based optical logic while still using solid state memory in\nthe form of flip-flops in order to store states. This type of logic makes use\nof waveguides and ring resonators to create binary switches. These switches in\nturn can be used to create combinational logic which can be used as\ninput/output forming logic for a state machine. Replacing conventional\ncombinational logic with BDD based optical logic allows for a faster range of\nstate machines that can certainly outperform conventional state machines as\npropagation delays within the logic described are in the order of picoseconds\nas opposed to nanoseconds in digital logic.\n", "versions": [{"version": "v1", "created": "Fri, 16 Sep 2016 06:13:37 GMT"}], "update_date": "2016-09-19", "authors_parsed": [["Coggins", "Macauley", ""]]}, {"id": "1609.07234", "submitter": "Hasan Hassan", "authors": "Hasan Hassan", "title": "Reducing DRAM Access Latency by Exploiting DRAM Leakage Characteristics\n  and Common Access Patterns", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.AR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  DRAM-based memory is a critical factor that creates a bottleneck on the\nsystem performance since the processor speed largely outperforms the DRAM\nlatency. In this thesis, we develop a low-cost mechanism, called ChargeCache,\nwhich enables faster access to recently-accessed rows in DRAM, with no\nmodifications to DRAM chips. Our mechanism is based on the key observation that\na recently-accessed row has more charge and thus the following access to the\nsame row can be performed faster. To exploit this observation, we propose to\ntrack the addresses of recently-accessed rows in a table in the memory\ncontroller. If a later DRAM request hits in that table, the memory controller\nuses lower timing parameters, leading to reduced DRAM latency. Row addresses\nare removed from the table after a specified duration to ensure rows that have\nleaked too much charge are not accessed with lower latency. We evaluate\nChargeCache on a wide variety of workloads and show that it provides\nsignificant performance and energy benefits for both single-core and multi-core\nsystems.\n", "versions": [{"version": "v1", "created": "Fri, 23 Sep 2016 05:31:18 GMT"}], "update_date": "2016-09-26", "authors_parsed": [["Hassan", "Hasan", ""]]}, {"id": "1609.08192", "submitter": "Sumit Darak Dr", "authors": "Sasha Garg and S. J. Darak", "title": "FPGA Implementation of High Speed Reconfigurable Filter Bank for\n  Multi-standard Wireless Communication Receivers", "comments": "20th IEEE VLSI Design and Test Symposium (VDAT-2016)", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.IT cs.AR math.IT", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In next generation wireless communication system, wireless transceivers\nshould be able to handle wideband input signals compromising of multiple\ncommunication standards.Such multi-standard wireless communication receivers\n(MWCRs) need filter bank to extract the desired signal of interest from\nwideband input spectrum and bring it to the baseband for further signal\nprocessing tasks such as spectrum sensing, modulation\nclassification,demodulation etc.In MWCRs,rather any wireless receivers,\nmodulated filter banks, such as Discrete Fourier Transform Filter Banks\n(DFTFB), are preferred due to their advantages such as lower area, delay and\npower requirements. To support multi-standard operation, reconfigurable DFTFB\n(RDFTFB) was proposed by integrating DFTFB with the coefficient decimation\nmethod. In this paper, an efficient high speed implementation of RDFTFB on\nVirtex-7 field programmable gate arrays (FPGA) has been proposed.The proposed\napproach minimizes the critical path delay between clocked registers thereby\nleading to significant improvement in the maximum operating frequency of the\nRDFTFB. Numerically, the proposed implementation leads to 89.7% improvement in\nthe maximum frequency at which RDFTFB can be clocked.Furthermore,proposed\nimplementation leads to 18.5% reduction in the dynamic power consumption.\n", "versions": [{"version": "v1", "created": "Thu, 15 Sep 2016 10:30:00 GMT"}], "update_date": "2016-09-28", "authors_parsed": [["Garg", "Sasha", ""], ["Darak", "S. J.", ""]]}, {"id": "1609.08681", "submitter": "Sumanta Chaudhuri Dr.", "authors": "Sumanta Chaudhuri, Tarik Graba and Yves Mathieu", "title": "Multi-Valued Routing Tracks for FPGAs in 28nm FDSOI Technology", "comments": "The paper contains anonymous reviews at the end. 11 pages", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.AR cs.ET", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In this paper we present quaternary and ternary routing tracks for FPGAs, and\ntheir implementation in 28nm FDSOI technology. We discuss the transistor level\ndesign of multi-valued repeaters, multiplexers and translators, and specific\nfeatures of FDSOI technology which make it possible. Next we compare the\nmulti-valued routing architectures with equivalent single driver two-valued\nrouting architectures. We show that for long tracks, it is possible to achieve\nupto 3x reduction in dynamic switching energy, upto 2x reduction in routing\nwire area and 10% reduction in area dedicated to routing resources. The\nmulti-valued tracks are slightly more susceptible to process variation. We\npresent a layout method for multivalued standard cells and determine the layout\noverhead.We conclude with various usage scenarios of these tracks.\n", "versions": [{"version": "v1", "created": "Tue, 27 Sep 2016 21:56:17 GMT"}], "update_date": "2016-09-29", "authors_parsed": [["Chaudhuri", "Sumanta", ""], ["Graba", "Tarik", ""], ["Mathieu", "Yves", ""]]}]