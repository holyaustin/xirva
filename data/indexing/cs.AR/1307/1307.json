[{"id": "1307.0100", "submitter": "Konstantin Solnushkin S", "authors": "Konstantin S. Solnushkin and Yuichi Tsujita", "title": "Marrying Many-core Accelerators and InfiniBand for a New Commodity\n  Processor", "comments": "5 pages, 4 figures. The work was presented at one of the workshops at\n  the International Conference on Computational Science (ICCS 2013) in\n  Barcelona, Spain. However, due to prolonged deadlines, papers from this\n  workshop didn't get into conference proceedings; we rectify this by\n  submitting the paper to arXiv.org", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.DC cs.AR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  During the last 15 years, the supercomputing industry has been using\nmass-produced, off-the-shelf components to build cluster computers. Such\ncomponents are not perfect for HPC purposes, but are cheap due to effect of\nscale in their production. The coming exa-scale era changes the landscape:\nexa-scale computers will contain components in quantities large enough to\njustify their custom development and production.\n  We propose a new heterogeneous processor, equipped with a network controller\nand designed specifically for HPC. We then show how it can be used for\nenterprise computing market, guaranteeing its widespread adoption and therefore\nlow production costs.\n", "versions": [{"version": "v1", "created": "Sat, 29 Jun 2013 13:07:10 GMT"}], "update_date": "2013-07-02", "authors_parsed": [["Solnushkin", "Konstantin S.", ""], ["Tsujita", "Yuichi", ""]]}, {"id": "1307.3324", "submitter": "Laxmi Kumre", "authors": "Laxmi Kumre, Ajay Somkuwar, Ganga Agnihotri", "title": "Power efficient carry propagate adder", "comments": "10 Pages, 10 figures", "journal-ref": "International Journal of VLSI design & Communication Systems\n  (VLSICS) Vol.4, No.3, June 2013", "doi": null, "report-no": null, "categories": "cs.AR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Here we describe the design details and performance of proposed Carry\nPropagate Adder based on GDI technique. GDI technique is power efficient\ntechnique for designing digital circuit that consumes less power as compare to\nmost commonly used CMOS technique. GDI also has an advantage of minimum\npropagation delay, minimum area required and less complexity for designing any\ndigital circuit. We designed Carry Propagate Adder using GDI technique and\ncompared its performance with CMOS technique in terms of area, delay and power\ndissipation. Circuit designed using CADENCE EDA tool and simulated using\nSPECTRE VIRTUOSO tool at 0.18m technology. Comparative performance result shows\nthat Carry Propagate Adder using GDI technique dissipated 55.6% less power as\ncompare to Carry Propagate Adder using CMOS technique.\n", "versions": [{"version": "v1", "created": "Fri, 12 Jul 2013 04:57:14 GMT"}], "update_date": "2013-07-15", "authors_parsed": [["Kumre", "Laxmi", ""], ["Somkuwar", "Ajay", ""], ["Agnihotri", "Ganga", ""]]}, {"id": "1307.3690", "submitter": "Rakshith Saligram", "authors": "Rakshith Saligram, Shrihari Shridhar Hegde, Shashidhar A Kulkarni,\n  H.R.Bhagyalakshmi and M.K. Venkatesha", "title": "Design of Parity Preserving Logic Based Fault Tolerant Reversible\n  Arithmetic Logic Unit", "comments": "15 pages, 20 Figures, 8 Tables, Iinternational Journal of VLSI Design\n  and Communication Systems, June 2013", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.AR cs.ET", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Reversible Logic is gaining significant consideration as the potential logic\ndesign style for implementation in modern nanotechnology and quantum computing\nwith minimal impact on physical entropy .Fault Tolerant reversible logic is one\nclass of reversible logic that maintain the parity of the input and the\noutputs. Significant contributions have been made in the literature towards the\ndesign of fault tolerant reversible logic gate structures and arithmetic units,\nhowever, there are not many efforts directed towards the design of fault\ntolerant reversible ALUs. Arithmetic Logic Unit (ALU) is the prime performing\nunit in any computing device and it has to be made fault tolerant. In this\npaper we aim to design one such fault tolerant reversible ALU that is\nconstructed using parity preserving reversible logic gates. The designed ALU\ncan generate up to seven Arithmetic operations and four logical operations.\n", "versions": [{"version": "v1", "created": "Sun, 14 Jul 2013 03:31:10 GMT"}], "update_date": "2013-07-16", "authors_parsed": [["Saligram", "Rakshith", ""], ["Hegde", "Shrihari Shridhar", ""], ["Kulkarni", "Shashidhar A", ""], ["Bhagyalakshmi", "H. R.", ""], ["Venkatesha", "M. K.", ""]]}, {"id": "1307.3853", "submitter": "Leonid Yavits", "authors": "Leonid Yavits, Amir Morad, Ran Ginosar", "title": "Thermal analysis of 3D associative processor", "comments": "arXiv admin note: text overlap with arXiv:1306.3109", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.AR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Thermal density and hot spots limit three-dimensional (3D) implementation of\nmassively-parallel SIMD processors and prohibit stacking DRAM dies above them.\nThis study proposes replacing SIMD by an Associative Processor (AP). AP\nexhibits close to uniform thermal distribution with reduced hot spots.\nAdditionally, AP may outperform SIMD processor when the data set size is\nsufficiently large, while dissipating less power. Comparative performance and\nthermal analysis supported by simulation confirm that AP might be preferable\nover SIMD for 3D implementation of large scale massively parallel processing\nengines combined with 3D DRAM integration.\n", "versions": [{"version": "v1", "created": "Mon, 15 Jul 2013 08:44:19 GMT"}], "update_date": "2013-07-16", "authors_parsed": [["Yavits", "Leonid", ""], ["Morad", "Amir", ""], ["Ginosar", "Ran", ""]]}, {"id": "1307.6406", "submitter": "Bijay Paikaray", "authors": "Bijay Paikaray", "title": "Relative Performance of a Multi-level Cache with Last-Level Cache\n  Replacement: An Analytic Review", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.AR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Current day processors employ multi-level cache hierarchy with one or two\nlevels of private caches and a shared last-level cache (LLC). An efficient\ncache replacement policy at LLC is essential for reducing the off-chip memory\ntransfer as well as conflict for memory bandwidth. Cache replacement techniques\nfor inclusive LLCs may not be efficient for multilevel cache as it can be\nshared by enormous applications with varying access behavior, running\nsimultaneously. One application may dominate another by flooding of cache\nrequests and evicting the useful data of the other application. From the\nperformance point of view, an exclusive LLC make the replacement policies more\ndemanding, as compared to an inclusive LLC. This paper analyzes some of the\nexisting replacement techniques on the LLC with their performance assessment.\n", "versions": [{"version": "v1", "created": "Wed, 24 Jul 2013 13:09:43 GMT"}], "update_date": "2013-07-25", "authors_parsed": [["Paikaray", "Bijay", ""]]}, {"id": "1307.7154", "submitter": "Gabi Sarkis", "authors": "Gabi Sarkis, Pascal Giard, Alexander Vardy, Claude Thibeault, and\n  Warren J. Gross", "title": "Fast Polar Decoders: Algorithm and Implementation", "comments": "Submitted to the IEEE Journal on Selected Areas in Communications\n  (JSAC) on May 15th, 2013. 11 pages, 7 figures, 6 tables", "journal-ref": "IEEE Journal on Selected Areas in Communications, vol. 32, no. 5,\n  May 2014, pp. 946-957", "doi": "10.1109/JSAC.2014.140514", "report-no": null, "categories": "cs.AR cs.IT math.IT", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Polar codes provably achieve the symmetric capacity of a memoryless channel\nwhile having an explicit construction. This work aims to increase the\nthroughput of polar decoder hardware by an order of magnitude relative to the\nstate of the art successive-cancellation decoder. We present an algorithm,\narchitecture, and FPGA implementation of a gigabit-per-second polar decoder.\n", "versions": [{"version": "v1", "created": "Fri, 26 Jul 2013 20:07:04 GMT"}, {"version": "v2", "created": "Mon, 9 Dec 2013 23:38:49 GMT"}], "update_date": "2015-05-20", "authors_parsed": [["Sarkis", "Gabi", ""], ["Giard", "Pascal", ""], ["Vardy", "Alexander", ""], ["Thibeault", "Claude", ""], ["Gross", "Warren J.", ""]]}, {"id": "1307.8319", "submitter": "Ilya Zhbannikov", "authors": "Ilya Y. Zhbannikov and Gregory W. Donohoe", "title": "Allocating the chains of consecutive additions for optimal fixed-point\n  data path synthesis", "comments": null, "journal-ref": "2012 IEEE 55th International Midwest Symposium on Circuits and\n  Systems (MWSCAS)", "doi": "10.1109/MWSCAS.2012.6292184", "report-no": null, "categories": "cs.AR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Minimization of computational errors in the fixed-point data path is often\ndifficult task. Many signal processing algorithms use chains of consecutive\nadditions. The analyzing technique that can be applied to fixed-point data path\nsynthesis has been proposed. This technique takes advantage of allocating the\nchains of consecutive additions in order to predict growing width of the data\npath and minimize the design complexity and computational errors.\n", "versions": [{"version": "v1", "created": "Wed, 31 Jul 2013 13:40:40 GMT"}], "update_date": "2013-08-01", "authors_parsed": [["Zhbannikov", "Ilya Y.", ""], ["Donohoe", "Gregory W.", ""]]}, {"id": "1307.8401", "submitter": "Ilya Zhbannikov", "authors": "Ilya Y. Zhbannikov and Gregory W. Donohoe", "title": "FpSynt: a fixed-point datapath synthesis tool for embedded systems", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.AR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Digital mobile systems must function with low power, small size and weight,\nand low cost. High-performance desktop microprocessors, with built-in floating\npoint hardware, are not suitable in these cases. For embedded systems, it can\nbe advantageous to implement these calculations with fixed point arithmetic\ninstead. We present an automated fixed-point data path synthesis tool FpSynt\nfor designing embedded applications in fixed-point domain with sufficient\naccuracy for most applications. FpSynt is available under the GNU General\nPublic License from the following GitHub repository:\nhttp://github.com/izhbannikov/FPSYNT\n", "versions": [{"version": "v1", "created": "Wed, 31 Jul 2013 17:45:54 GMT"}], "update_date": "2013-08-01", "authors_parsed": [["Zhbannikov", "Ilya Y.", ""], ["Donohoe", "Gregory W.", ""]]}]