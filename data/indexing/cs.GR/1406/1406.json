[{"id": "1406.5431", "submitter": "Kenshi Takayama", "authors": "Kenshi Takayama, Alec Jacobson, Ladislav Kavan, Olga Sorkine-Hornung", "title": "Consistently Orienting Facets in Polygon Meshes by Minimizing the\n  Dirichlet Energy of Generalized Winding Numbers", "comments": "6 pages, 4 figures", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.GR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Jacobson et al. [JKSH13] hypothesized that the local coherency of the\ngeneralized winding number function could be used to correctly determine\nconsistent facet orientations in polygon meshes. We report on an approach to\nconsistently orienting facets in polygon meshes by minimizing the Dirichlet\nenergy of generalized winding numbers. While the energy can be concisely\nformulated and efficiently computed, we found that this approach is\nfundamentally flawed and is unfortunately not applicable for most handmade\nmeshes shared on popular mesh repositories such as Google 3D Warehouse.\n", "versions": [{"version": "v1", "created": "Fri, 20 Jun 2014 15:34:06 GMT"}, {"version": "v2", "created": "Mon, 23 Jun 2014 12:03:12 GMT"}], "update_date": "2014-06-24", "authors_parsed": [["Takayama", "Kenshi", ""], ["Jacobson", "Alec", ""], ["Kavan", "Ladislav", ""], ["Sorkine-Hornung", "Olga", ""]]}, {"id": "1406.6786", "submitter": "Eric Mootz", "authors": "Eric Mootz", "title": "3D Texture Coordinates on Polygon Mesh Sequences", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.GR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  A method for creating 3D texture coordinates for a sequence of polygon meshes\nwith changing topology and vertex motion vectors.\n", "versions": [{"version": "v1", "created": "Thu, 26 Jun 2014 07:02:33 GMT"}, {"version": "v2", "created": "Fri, 27 Jun 2014 07:51:43 GMT"}], "update_date": "2014-06-30", "authors_parsed": [["Mootz", "Eric", ""]]}, {"id": "1406.7025", "submitter": "Emilio Vital Brazil", "authors": "Emilio Vital Brazil", "title": "DASS: Detail Aware Sketch-Based Surface Modeling", "comments": null, "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.GR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We present a sketch-based modeling system suitable for detail editing, based\non a multilevel representation for surfaces. The main advantage of this\nrepresentation allowing for the control of local (details) and global changes\nof the model. We used an adaptive mesh (4-8 mesh) and developed a label theory\nto construct a manifold structure, which is responsible for controlling local\nediting of the model. The overall shape and global modifications are defined by\na variational implicit surface (Hermite RBF). Our system assembles the manifold\nstructures to allow the user to add details without changing the overall shape,\nas well as edit the overall shape while repositioning details coherently.\n", "versions": [{"version": "v1", "created": "Thu, 26 Jun 2014 20:50:34 GMT"}], "update_date": "2014-06-30", "authors_parsed": [["Brazil", "Emilio Vital", ""]]}, {"id": "1406.7338", "submitter": "Li-Yi Wei", "authors": "Li-Yi Wei and Marc Levoy", "title": "Order-Independent Texture Synthesis", "comments": "This is a combination of Stanford Computer Science Department\n  Technical Report 2002-01 and a subsequent submission to SIGGRAPH 2003", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.GR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Search-based texture synthesis algorithms are sensitive to the order in which\ntexture samples are generated; different synthesis orders yield different\ntextures. Unfortunately, most polygon rasterizers and ray tracers do not\nguarantee the order with which surfaces are sampled. To circumvent this\nproblem, textures are synthesized beforehand at some maximum resolution and\nrendered using texture mapping.\n  We describe a search-based texture synthesis algorithm in which samples can\nbe generated in arbitrary order, yet the resulting texture remains identical.\nThe key to our algorithm is a pyramidal representation in which each texture\nsample depends only on a fixed number of neighboring samples at each level of\nthe pyramid. The bottom (coarsest) level of the pyramid consists of a noise\nimage, which is small and predetermined. When a sample is requested by the\nrenderer, all samples on which it depends are generated at once. Using this\napproach, samples can be generated in any order. To make the algorithm\nefficient, we propose storing texture samples and their dependents in a\npyramidal cache. Although the first few samples are expensive to generate,\nthere is substantial reuse, so subsequent samples cost less. Fortunately, most\nrendering algorithms exhibit good coherence, so cache reuse is high.\n", "versions": [{"version": "v1", "created": "Sat, 28 Jun 2014 00:47:30 GMT"}], "update_date": "2014-07-01", "authors_parsed": [["Wei", "Li-Yi", ""], ["Levoy", "Marc", ""]]}]