[{"id": "0912.2706", "submitter": "Sergey Andreyev", "authors": "Sergey Andreyev", "title": "On the theory of moveable objects", "comments": "30 pages, 12 figures", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.HC cs.GR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  User-driven applications belong to the new type of programs, in which users\nget the full control of WHAT, WHEN, and HOW must appear on the screen. Such\nprograms can exist only if the screen view is organized not according with the\npredetermined scenario, written by the developers, but if any screen object can\nbe moved, resized, and reconfigured by any user at any moment. This article\ndescribes the algorithm, by which an object of an arbitrary shape can be turned\ninto moveable and resizable. It also explains some rules of such design and the\ntechnique, which can be useful in many cases. Both the individual movements of\nobjects and their synchronous movements are analysed. After discussing the\nindividually moveable controls, different types of groups are analysed and the\narbitrary grouping of controls is considered.\n", "versions": [{"version": "v1", "created": "Mon, 14 Dec 2009 19:00:29 GMT"}, {"version": "v2", "created": "Thu, 21 Jan 2010 15:32:07 GMT"}], "update_date": "2010-01-21", "authors_parsed": [["Andreyev", "Sergey", ""]]}, {"id": "0912.3923", "submitter": "William Jackson", "authors": "Nagaraj V. Dharwadkar, B. B. Amberker", "title": "Secure Watermarking Scheme for Color Image Using Intensity of Pixel and\n  LSB Substitution", "comments": null, "journal-ref": "Journal of Computing, Volume 1, Issue 1, pp 1-6, December 2009", "doi": null, "report-no": null, "categories": "cs.GR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In this paper a novel spatial domain LSB based watermarking scheme for color\nImages is proposed. The proposed scheme is of type blind and invisible\nwatermarking. Our scheme introduces the concept of storing variable number of\nbits in each pixel based on the actual color value of pixel. Equal or higher\nthe color value of channels with respect to intensity of pixel stores higher\nnumber of watermark bits. The Red, Green and Blue channel of the color image\nhas been used for watermark embedding. The watermark is embedded into selected\nchannels of pixel. The proposed method supports high watermark embedding\ncapacity, which is equivalent to the size of cover image. The security of\nwatermark is preserved by permuting the watermark bits using secret key. The\nproposed scheme is found robust to various image processing operations such as\nimage compression, blurring, salt and pepper noise, filtering and cropping.\n", "versions": [{"version": "v1", "created": "Sat, 19 Dec 2009 18:47:39 GMT"}], "update_date": "2009-12-22", "authors_parsed": [["Dharwadkar", "Nagaraj V.", ""], ["Amberker", "B. B.", ""]]}, {"id": "0912.5380", "submitter": "Darko Dimitrov", "authors": "Darko Dimitrov, Mathias Holst, Christian Knauer, Klaus Kriegel", "title": "Computing Principal Components Dynamically", "comments": "32 pages, 4 figures", "journal-ref": null, "doi": null, "report-no": null, "categories": "cs.GR cs.CG", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  In this paper we present closed-form solutions for efficiently updating the\nprincipal components of a set of $n$ points, when $m$ points are added or\ndeleted from the point set. For both operations performed on a discrete point\nset in $\\mathbb{R}^d$, we can compute the new principal components in $O(m)$\ntime for fixed $d$. This is a significant improvement over the commonly used\napproach of recomputing the principal components from scratch, which takes\n$O(n+m)$ time. An important application of the above result is the dynamical\ncomputation of bounding boxes based on principal component analysis. PCA\nbounding boxes are very often used in many fields, among others in computer\ngraphics for collision detection and fast rendering. We have implemented and\nevaluated few algorithms for computing dynamically PCA bounding boxes in\n$\\mathbb{R}^3$. In addition, we present closed-form solutions for computing\ndynamically principal components of continuous point sets in $\\mathbb{R}^2$ and\n$\\mathbb{R}^3$. In both cases, discrete and continuous, to compute the new\nprincipal components, no additional data structures or storage are needed.\n", "versions": [{"version": "v1", "created": "Wed, 30 Dec 2009 18:07:56 GMT"}], "update_date": "2009-12-31", "authors_parsed": [["Dimitrov", "Darko", ""], ["Holst", "Mathias", ""], ["Knauer", "Christian", ""], ["Kriegel", "Klaus", ""]]}, {"id": "0912.5494", "submitter": "Serguei Mokhov", "authors": "Miao Song, Serguei A. Mokhov and Peter Grogono", "title": "Teaching Physical Based Animation via OpenGL Slides", "comments": "12 pages; 7 figures; the poster is presented at C32SE'09 and the\n  paper at CISSE'09 at http://conference.cisse2009.org/proceedings.aspx ; there\n  are an executable demo and its source code", "journal-ref": null, "doi": "10.1007/978-90-481-9112-3_82 10.1145/1557626.1557647", "report-no": null, "categories": "cs.GR cs.HC", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  This work expands further our earlier poster presentation and integration of\nthe OpenGL Slides Framework (OGLSF) - to make presentations with real-time\nanimated graphics where each slide is a scene with tidgets - and physical based\nanimation of elastic two-, three-layer softbody objects. The whole project is\nvery interactive, and serves dual purpose - delivering the teaching material in\na classroom setting with real running animated examples as well as releasing\nthe source code to the students to show how the actual working things are made.\n", "versions": [{"version": "v1", "created": "Wed, 30 Dec 2009 17:53:18 GMT"}], "update_date": "2010-07-06", "authors_parsed": [["Song", "Miao", ""], ["Mokhov", "Serguei A.", ""], ["Grogono", "Peter", ""]]}]