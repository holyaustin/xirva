[{"id": "1107.0690", "submitter": "Emilio Ferrara", "authors": "Salvatore Catanese, Emilio Ferrara, Giacomo Fiumara, Francesco Pagano", "title": "A Framework for Designing 3D Virtual Environments", "comments": "12 pages, 1 figure, Proceedings of the 4th International ICST\n  Conference On Intelligent Technologies For Interactive Entertainment, 2011", "journal-ref": "Lecture Notes of the Institute for Computer Sciences, Social\n  Informatics and Telecommunications Engineering Volume 78, 2012, pp 209-218", "doi": "10.1007/978-3-642-30214-5_23", "report-no": null, "categories": "cs.GR cs.MM", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  The process of design and development of virtual environments can be\nsupported by tools and frameworks, to save time in technical aspects and\nfocusing on the content. In this paper we present an academic framework which\nprovides several levels of abstraction to ease this work. It includes\nstate-of-the-art components we devised or integrated adopting open-source\nsolutions in order to face specific problems. Its architecture is modular and\ncustomizable, the code is open-source.\n", "versions": [{"version": "v1", "created": "Mon, 4 Jul 2011 17:51:00 GMT"}], "update_date": "2013-06-06", "authors_parsed": [["Catanese", "Salvatore", ""], ["Ferrara", "Emilio", ""], ["Fiumara", "Giacomo", ""], ["Pagano", "Francesco", ""]]}, {"id": "1107.1525", "submitter": "Robert Cloud", "authors": "R. L. Cloud, M. L. Curry, H. L. Ward, A. Skjellum, P. Bangalore", "title": "Accelerating Lossless Data Compression with GPUs", "comments": "peer reviewed and published in undergraduate research journal Inquiro\n  in 2009 after Summer work in 2009", "journal-ref": "Inquiro, Volume 3, 2009, p. 26 - 29", "doi": null, "report-no": null, "categories": "cs.IT cs.GR cs.PF math.IT", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Huffman compression is a statistical, lossless, data compression algorithm\nthat compresses data by assigning variable length codes to symbols, with the\nmore frequently appearing symbols given shorter codes than the less. This work\nis a modification of the Huffman algorithm which permits uncompressed data to\nbe decomposed into indepen- dently compressible and decompressible blocks,\nallowing for concurrent compression and decompression on multiple processors.\nWe create implementations of this modified algorithm on a current NVIDIA GPU\nusing the CUDA API as well as on a current Intel chip and the performance\nresults are compared, showing favorable GPU performance for nearly all tests.\nLastly, we discuss the necessity for high performance data compression in\ntoday's supercomputing ecosystem.\n", "versions": [{"version": "v1", "created": "Tue, 21 Jun 2011 22:55:02 GMT"}], "update_date": "2011-07-11", "authors_parsed": [["Cloud", "R. L.", ""], ["Curry", "M. L.", ""], ["Ward", "H. L.", ""], ["Skjellum", "A.", ""], ["Bangalore", "P.", ""]]}, {"id": "1107.2715", "submitter": "Fr\\'ed\\'eric  Vogt Mr.", "authors": "Fr\\'ed\\'eric Vogt and Alexander Y. Wagner", "title": "Stereo pairs in Astrophysics", "comments": "Accepted for Publication in Astrophysics & Space Science, 16pp, 10\n  figures", "journal-ref": null, "doi": "10.1007/s10509-011-0801-z", "report-no": null, "categories": "astro-ph.IM cs.GR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Stereoscopic visualization is seldom used in Astrophysical publications and\npresentations compared to other scientific fields, e.g., Biochemistry, where it\nhas been recognized as a valuable tool for decades. We put forth the view that\nstereo pairs can be a useful tool for the Astrophysics community in\ncommunicating a truer representation of astrophysical data. Here, we review the\nmain theoretical aspects of stereoscopy, and present a tutorial to easily\ncreate stereo pairs using Python. We then describe how stereo pairs provide a\nway to incorporate 3D data in 2D publications of standard journals. We\nillustrate the use of stereo pairs with one conceptual and two Astrophysical\nscience examples: an integral field spectroscopy study of a supernova remnant,\nand numerical simulations of a relativistic AGN jet. We also use these examples\nto make the case that stereo pairs are not merely an ostentatious way to\npresent data, but an enhancement in the communication of scientific results in\npublications because they provide the reader with a realistic view of\nmulti-dimensional data, be it of observational or theoretical nature. In\nrecognition of the ongoing 3D expansion in the commercial sector, we advocate\nan increased use of stereo pairs in Astrophysics publications and presentations\nas a first step towards new interactive and multi-dimensional publication\nmethods.\n", "versions": [{"version": "v1", "created": "Thu, 14 Jul 2011 02:42:12 GMT"}], "update_date": "2015-05-28", "authors_parsed": [["Vogt", "Fr\u00e9d\u00e9ric", ""], ["Wagner", "Alexander Y.", ""]]}, {"id": "1107.3013", "submitter": "Thouis Jones", "authors": "Thouis R. Jones and David R. Karger", "title": "Linear-Time Poisson-Disk Patterns", "comments": "4 pages, 2 figures", "journal-ref": null, "doi": "10.1080/2151237X.2011.617173", "report-no": null, "categories": "cs.GR", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  We present an algorithm for generating Poisson-disc patterns taking O(N) time\nto generate $N$ points. The method is based on a grid of regions which can\ncontain no more than one point in the final pattern, and uses an explicit model\nof point arrival times under a uniform Poisson process.\n", "versions": [{"version": "v1", "created": "Fri, 15 Jul 2011 08:58:09 GMT"}], "update_date": "2013-03-29", "authors_parsed": [["Jones", "Thouis R.", ""], ["Karger", "David R.", ""]]}, {"id": "1107.3680", "submitter": "Raj Kishen Moloo Mr", "authors": "Raj Kishen Moloo, Muhammad Ajmal Sheik Dawood, Abu Salmaan Auleear", "title": "3-Phase Recognition Approach to Pseudo 3D Building Generation from 2D\n  Floor Plan", "comments": "15 pages,12 figures, 2 tables, International Journal of Computer\n  Graphics & Animation (IJCGA) Vol.1, No.2, June 2011", "journal-ref": "International Journal of Computer Graphics & Animation (IJCGA)\n  Vol.1, No.2, June 2011", "doi": null, "report-no": null, "categories": "cs.GR cs.CV", "license": "http://arxiv.org/licenses/nonexclusive-distrib/1.0/", "abstract": "  Nowadays three dimension (3D) architectural visualisation has become a\npowerful tool in the conceptualisation, design and presentation of\narchitectural products in the construction industry, providing realistic\ninteraction and walkthrough on engineering products. Traditional ways of\nimplementing 3D models involves the use of specialised 3D authoring tools along\nwith skilled 3D designers with blueprints of the model and this is a slow and\nlaborious process. The aim of this paper is to automate this process by simply\nanalyzing the blueprint document and generating the 3D scene automatically. For\nthis purpose we have devised a 3-Phase recognition approach to pseudo 3D\nbuilding generation from 2D floor plan and developed a software accordingly.\nOur 3-phased 3D building system has been implemented using C, C++ and OpenCV\nlibrary [24] for the Image Processing module; The Save Module generated an XML\nfile for storing the processed floor plan objects attributes; while the\nIrrlitch [14] game engine was used to implement the Interactive 3D module.\nThough still at its infancy, our proposed system gave commendable results. We\ntested our system on 6 floor plans with complexities ranging from low to high\nand the results seems to be very promising with an average processing time of\naround 3s and a 3D generation in 4s. In addition the system provides an\ninteractive walk-though and allows users to modify components.\n", "versions": [{"version": "v1", "created": "Tue, 19 Jul 2011 10:50:31 GMT"}], "update_date": "2011-07-20", "authors_parsed": [["Moloo", "Raj Kishen", ""], ["Dawood", "Muhammad Ajmal Sheik", ""], ["Auleear", "Abu Salmaan", ""]]}]